(() => {
  var __create = Object.create;
  var __defProp = Object.defineProperty;
  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __getProtoOf = Object.getPrototypeOf;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __markAsModule = (target) => __defProp(target, "__esModule", {value: true});
  var __commonJS = (cb, mod) => function __require() {
    return mod || (0, cb[Object.keys(cb)[0]])((mod = {exports: {}}).exports, mod), mod.exports;
  };
  var __reExport = (target, module, desc) => {
    if (module && typeof module === "object" || typeof module === "function") {
      for (let key of __getOwnPropNames(module))
        if (!__hasOwnProp.call(target, key) && key !== "default")
          __defProp(target, key, {get: () => module[key], enumerable: !(desc = __getOwnPropDesc(module, key)) || desc.enumerable});
    }
    return target;
  };
  var __toModule = (module) => {
    return __reExport(__markAsModule(__defProp(module != null ? __create(__getProtoOf(module)) : {}, "default", module && module.__esModule && "default" in module ? {get: () => module.default, enumerable: true} : {value: module, enumerable: true})), module);
  };

  // node_modules/jquery/dist/jquery.js
  var require_jquery = __commonJS({
    "node_modules/jquery/dist/jquery.js"(exports, module) {
      (function(global2, factory) {
        "use strict";
        if (typeof module === "object" && typeof module.exports === "object") {
          module.exports = global2.document ? factory(global2, true) : function(w2) {
            if (!w2.document) {
              throw new Error("jQuery requires a window with a document");
            }
            return factory(w2);
          };
        } else {
          factory(global2);
        }
      })(typeof window !== "undefined" ? window : exports, function(window2, noGlobal) {
        "use strict";
        var arr = [];
        var getProto = Object.getPrototypeOf;
        var slice = arr.slice;
        var flat = arr.flat ? function(array) {
          return arr.flat.call(array);
        } : function(array) {
          return arr.concat.apply([], array);
        };
        var push = arr.push;
        var indexOf = arr.indexOf;
        var class2type = {};
        var toString = class2type.toString;
        var hasOwn = class2type.hasOwnProperty;
        var fnToString = hasOwn.toString;
        var ObjectFunctionString = fnToString.call(Object);
        var support = {};
        var isFunction = function isFunction2(obj) {
          return typeof obj === "function" && typeof obj.nodeType !== "number" && typeof obj.item !== "function";
        };
        var isWindow = function isWindow2(obj) {
          return obj != null && obj === obj.window;
        };
        var document2 = window2.document;
        var preservedScriptAttributes = {
          type: true,
          src: true,
          nonce: true,
          noModule: true
        };
        function DOMEval(code, node, doc) {
          doc = doc || document2;
          var i2, val, script = doc.createElement("script");
          script.text = code;
          if (node) {
            for (i2 in preservedScriptAttributes) {
              val = node[i2] || node.getAttribute && node.getAttribute(i2);
              if (val) {
                script.setAttribute(i2, val);
              }
            }
          }
          doc.head.appendChild(script).parentNode.removeChild(script);
        }
        function toType(obj) {
          if (obj == null) {
            return obj + "";
          }
          return typeof obj === "object" || typeof obj === "function" ? class2type[toString.call(obj)] || "object" : typeof obj;
        }
        var version = "3.6.1", jQuery2 = function(selector, context) {
          return new jQuery2.fn.init(selector, context);
        };
        jQuery2.fn = jQuery2.prototype = {
          jquery: version,
          constructor: jQuery2,
          length: 0,
          toArray: function() {
            return slice.call(this);
          },
          get: function(num) {
            if (num == null) {
              return slice.call(this);
            }
            return num < 0 ? this[num + this.length] : this[num];
          },
          pushStack: function(elems) {
            var ret = jQuery2.merge(this.constructor(), elems);
            ret.prevObject = this;
            return ret;
          },
          each: function(callback) {
            return jQuery2.each(this, callback);
          },
          map: function(callback) {
            return this.pushStack(jQuery2.map(this, function(elem, i2) {
              return callback.call(elem, i2, elem);
            }));
          },
          slice: function() {
            return this.pushStack(slice.apply(this, arguments));
          },
          first: function() {
            return this.eq(0);
          },
          last: function() {
            return this.eq(-1);
          },
          even: function() {
            return this.pushStack(jQuery2.grep(this, function(_elem, i2) {
              return (i2 + 1) % 2;
            }));
          },
          odd: function() {
            return this.pushStack(jQuery2.grep(this, function(_elem, i2) {
              return i2 % 2;
            }));
          },
          eq: function(i2) {
            var len = this.length, j = +i2 + (i2 < 0 ? len : 0);
            return this.pushStack(j >= 0 && j < len ? [this[j]] : []);
          },
          end: function() {
            return this.prevObject || this.constructor();
          },
          push,
          sort: arr.sort,
          splice: arr.splice
        };
        jQuery2.extend = jQuery2.fn.extend = function() {
          var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {}, i2 = 1, length = arguments.length, deep = false;
          if (typeof target === "boolean") {
            deep = target;
            target = arguments[i2] || {};
            i2++;
          }
          if (typeof target !== "object" && !isFunction(target)) {
            target = {};
          }
          if (i2 === length) {
            target = this;
            i2--;
          }
          for (; i2 < length; i2++) {
            if ((options = arguments[i2]) != null) {
              for (name in options) {
                copy = options[name];
                if (name === "__proto__" || target === copy) {
                  continue;
                }
                if (deep && copy && (jQuery2.isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {
                  src = target[name];
                  if (copyIsArray && !Array.isArray(src)) {
                    clone = [];
                  } else if (!copyIsArray && !jQuery2.isPlainObject(src)) {
                    clone = {};
                  } else {
                    clone = src;
                  }
                  copyIsArray = false;
                  target[name] = jQuery2.extend(deep, clone, copy);
                } else if (copy !== void 0) {
                  target[name] = copy;
                }
              }
            }
          }
          return target;
        };
        jQuery2.extend({
          expando: "jQuery" + (version + Math.random()).replace(/\D/g, ""),
          isReady: true,
          error: function(msg) {
            throw new Error(msg);
          },
          noop: function() {
          },
          isPlainObject: function(obj) {
            var proto, Ctor;
            if (!obj || toString.call(obj) !== "[object Object]") {
              return false;
            }
            proto = getProto(obj);
            if (!proto) {
              return true;
            }
            Ctor = hasOwn.call(proto, "constructor") && proto.constructor;
            return typeof Ctor === "function" && fnToString.call(Ctor) === ObjectFunctionString;
          },
          isEmptyObject: function(obj) {
            var name;
            for (name in obj) {
              return false;
            }
            return true;
          },
          globalEval: function(code, options, doc) {
            DOMEval(code, {nonce: options && options.nonce}, doc);
          },
          each: function(obj, callback) {
            var length, i2 = 0;
            if (isArrayLike(obj)) {
              length = obj.length;
              for (; i2 < length; i2++) {
                if (callback.call(obj[i2], i2, obj[i2]) === false) {
                  break;
                }
              }
            } else {
              for (i2 in obj) {
                if (callback.call(obj[i2], i2, obj[i2]) === false) {
                  break;
                }
              }
            }
            return obj;
          },
          makeArray: function(arr2, results) {
            var ret = results || [];
            if (arr2 != null) {
              if (isArrayLike(Object(arr2))) {
                jQuery2.merge(ret, typeof arr2 === "string" ? [arr2] : arr2);
              } else {
                push.call(ret, arr2);
              }
            }
            return ret;
          },
          inArray: function(elem, arr2, i2) {
            return arr2 == null ? -1 : indexOf.call(arr2, elem, i2);
          },
          merge: function(first, second) {
            var len = +second.length, j = 0, i2 = first.length;
            for (; j < len; j++) {
              first[i2++] = second[j];
            }
            first.length = i2;
            return first;
          },
          grep: function(elems, callback, invert) {
            var callbackInverse, matches = [], i2 = 0, length = elems.length, callbackExpect = !invert;
            for (; i2 < length; i2++) {
              callbackInverse = !callback(elems[i2], i2);
              if (callbackInverse !== callbackExpect) {
                matches.push(elems[i2]);
              }
            }
            return matches;
          },
          map: function(elems, callback, arg) {
            var length, value, i2 = 0, ret = [];
            if (isArrayLike(elems)) {
              length = elems.length;
              for (; i2 < length; i2++) {
                value = callback(elems[i2], i2, arg);
                if (value != null) {
                  ret.push(value);
                }
              }
            } else {
              for (i2 in elems) {
                value = callback(elems[i2], i2, arg);
                if (value != null) {
                  ret.push(value);
                }
              }
            }
            return flat(ret);
          },
          guid: 1,
          support
        });
        if (typeof Symbol === "function") {
          jQuery2.fn[Symbol.iterator] = arr[Symbol.iterator];
        }
        jQuery2.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function(_i, name) {
          class2type["[object " + name + "]"] = name.toLowerCase();
        });
        function isArrayLike(obj) {
          var length = !!obj && "length" in obj && obj.length, type = toType(obj);
          if (isFunction(obj) || isWindow(obj)) {
            return false;
          }
          return type === "array" || length === 0 || typeof length === "number" && length > 0 && length - 1 in obj;
        }
        var Sizzle = function(window3) {
          var i2, support2, Expr, getText, isXML, tokenize, compile, select, outermostContext, sortInput, hasDuplicate, setDocument, document3, docElem, documentIsHTML, rbuggyQSA, rbuggyMatches, matches, contains, expando = "sizzle" + 1 * new Date(), preferredDoc = window3.document, dirruns = 0, done = 0, classCache = createCache(), tokenCache = createCache(), compilerCache = createCache(), nonnativeSelectorCache = createCache(), sortOrder = function(a3, b2) {
            if (a3 === b2) {
              hasDuplicate = true;
            }
            return 0;
          }, hasOwn2 = {}.hasOwnProperty, arr2 = [], pop = arr2.pop, pushNative = arr2.push, push2 = arr2.push, slice2 = arr2.slice, indexOf2 = function(list, elem) {
            var i3 = 0, len = list.length;
            for (; i3 < len; i3++) {
              if (list[i3] === elem) {
                return i3;
              }
            }
            return -1;
          }, booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped", whitespace2 = "[\\x20\\t\\r\\n\\f]", identifier = "(?:\\\\[\\da-fA-F]{1,6}" + whitespace2 + "?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+", attributes = "\\[" + whitespace2 + "*(" + identifier + ")(?:" + whitespace2 + "*([*^$|!~]?=)" + whitespace2 + `*(?:'((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)"|(` + identifier + "))|)" + whitespace2 + "*\\]", pseudos = ":(" + identifier + `)(?:\\((('((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)")|((?:\\\\.|[^\\\\()[\\]]|` + attributes + ")*)|.*)\\)|)", rwhitespace = new RegExp(whitespace2 + "+", "g"), rtrim2 = new RegExp("^" + whitespace2 + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace2 + "+$", "g"), rcomma = new RegExp("^" + whitespace2 + "*," + whitespace2 + "*"), rcombinators = new RegExp("^" + whitespace2 + "*([>+~]|" + whitespace2 + ")" + whitespace2 + "*"), rdescend = new RegExp(whitespace2 + "|>"), rpseudo = new RegExp(pseudos), ridentifier = new RegExp("^" + identifier + "$"), matchExpr = {
            "ID": new RegExp("^#(" + identifier + ")"),
            "CLASS": new RegExp("^\\.(" + identifier + ")"),
            "TAG": new RegExp("^(" + identifier + "|[*])"),
            "ATTR": new RegExp("^" + attributes),
            "PSEUDO": new RegExp("^" + pseudos),
            "CHILD": new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace2 + "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace2 + "*(?:([+-]|)" + whitespace2 + "*(\\d+)|))" + whitespace2 + "*\\)|)", "i"),
            "bool": new RegExp("^(?:" + booleans + ")$", "i"),
            "needsContext": new RegExp("^" + whitespace2 + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace2 + "*((?:-\\d)?\\d*)" + whitespace2 + "*\\)|)(?=[^-]|$)", "i")
          }, rhtml2 = /HTML$/i, rinputs = /^(?:input|select|textarea|button)$/i, rheader = /^h\d$/i, rnative = /^[^{]+\{\s*\[native \w/, rquickExpr2 = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, rsibling = /[+~]/, runescape = new RegExp("\\\\[\\da-fA-F]{1,6}" + whitespace2 + "?|\\\\([^\\r\\n\\f])", "g"), funescape = function(escape, nonHex) {
            var high = "0x" + escape.slice(1) - 65536;
            return nonHex ? nonHex : high < 0 ? String.fromCharCode(high + 65536) : String.fromCharCode(high >> 10 | 55296, high & 1023 | 56320);
          }, rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g, fcssescape = function(ch, asCodePoint) {
            if (asCodePoint) {
              if (ch === "\0") {
                return "\uFFFD";
              }
              return ch.slice(0, -1) + "\\" + ch.charCodeAt(ch.length - 1).toString(16) + " ";
            }
            return "\\" + ch;
          }, unloadHandler = function() {
            setDocument();
          }, inDisabledFieldset = addCombinator(function(elem) {
            return elem.disabled === true && elem.nodeName.toLowerCase() === "fieldset";
          }, {dir: "parentNode", next: "legend"});
          try {
            push2.apply(arr2 = slice2.call(preferredDoc.childNodes), preferredDoc.childNodes);
            arr2[preferredDoc.childNodes.length].nodeType;
          } catch (e2) {
            push2 = {
              apply: arr2.length ? function(target, els) {
                pushNative.apply(target, slice2.call(els));
              } : function(target, els) {
                var j = target.length, i3 = 0;
                while (target[j++] = els[i3++]) {
                }
                target.length = j - 1;
              }
            };
          }
          function Sizzle2(selector, context, results, seed) {
            var m3, i3, elem, nid, match2, groups, newSelector, newContext = context && context.ownerDocument, nodeType = context ? context.nodeType : 9;
            results = results || [];
            if (typeof selector !== "string" || !selector || nodeType !== 1 && nodeType !== 9 && nodeType !== 11) {
              return results;
            }
            if (!seed) {
              setDocument(context);
              context = context || document3;
              if (documentIsHTML) {
                if (nodeType !== 11 && (match2 = rquickExpr2.exec(selector))) {
                  if (m3 = match2[1]) {
                    if (nodeType === 9) {
                      if (elem = context.getElementById(m3)) {
                        if (elem.id === m3) {
                          results.push(elem);
                          return results;
                        }
                      } else {
                        return results;
                      }
                    } else {
                      if (newContext && (elem = newContext.getElementById(m3)) && contains(context, elem) && elem.id === m3) {
                        results.push(elem);
                        return results;
                      }
                    }
                  } else if (match2[2]) {
                    push2.apply(results, context.getElementsByTagName(selector));
                    return results;
                  } else if ((m3 = match2[3]) && support2.getElementsByClassName && context.getElementsByClassName) {
                    push2.apply(results, context.getElementsByClassName(m3));
                    return results;
                  }
                }
                if (support2.qsa && !nonnativeSelectorCache[selector + " "] && (!rbuggyQSA || !rbuggyQSA.test(selector)) && (nodeType !== 1 || context.nodeName.toLowerCase() !== "object")) {
                  newSelector = selector;
                  newContext = context;
                  if (nodeType === 1 && (rdescend.test(selector) || rcombinators.test(selector))) {
                    newContext = rsibling.test(selector) && testContext(context.parentNode) || context;
                    if (newContext !== context || !support2.scope) {
                      if (nid = context.getAttribute("id")) {
                        nid = nid.replace(rcssescape, fcssescape);
                      } else {
                        context.setAttribute("id", nid = expando);
                      }
                    }
                    groups = tokenize(selector);
                    i3 = groups.length;
                    while (i3--) {
                      groups[i3] = (nid ? "#" + nid : ":scope") + " " + toSelector(groups[i3]);
                    }
                    newSelector = groups.join(",");
                  }
                  try {
                    push2.apply(results, newContext.querySelectorAll(newSelector));
                    return results;
                  } catch (qsaError) {
                    nonnativeSelectorCache(selector, true);
                  } finally {
                    if (nid === expando) {
                      context.removeAttribute("id");
                    }
                  }
                }
              }
            }
            return select(selector.replace(rtrim2, "$1"), context, results, seed);
          }
          function createCache() {
            var keys = [];
            function cache(key, value) {
              if (keys.push(key + " ") > Expr.cacheLength) {
                delete cache[keys.shift()];
              }
              return cache[key + " "] = value;
            }
            return cache;
          }
          function markFunction(fn) {
            fn[expando] = true;
            return fn;
          }
          function assert(fn) {
            var el = document3.createElement("fieldset");
            try {
              return !!fn(el);
            } catch (e2) {
              return false;
            } finally {
              if (el.parentNode) {
                el.parentNode.removeChild(el);
              }
              el = null;
            }
          }
          function addHandle(attrs, handler) {
            var arr3 = attrs.split("|"), i3 = arr3.length;
            while (i3--) {
              Expr.attrHandle[arr3[i3]] = handler;
            }
          }
          function siblingCheck(a3, b2) {
            var cur = b2 && a3, diff = cur && a3.nodeType === 1 && b2.nodeType === 1 && a3.sourceIndex - b2.sourceIndex;
            if (diff) {
              return diff;
            }
            if (cur) {
              while (cur = cur.nextSibling) {
                if (cur === b2) {
                  return -1;
                }
              }
            }
            return a3 ? 1 : -1;
          }
          function createInputPseudo(type) {
            return function(elem) {
              var name = elem.nodeName.toLowerCase();
              return name === "input" && elem.type === type;
            };
          }
          function createButtonPseudo(type) {
            return function(elem) {
              var name = elem.nodeName.toLowerCase();
              return (name === "input" || name === "button") && elem.type === type;
            };
          }
          function createDisabledPseudo(disabled) {
            return function(elem) {
              if ("form" in elem) {
                if (elem.parentNode && elem.disabled === false) {
                  if ("label" in elem) {
                    if ("label" in elem.parentNode) {
                      return elem.parentNode.disabled === disabled;
                    } else {
                      return elem.disabled === disabled;
                    }
                  }
                  return elem.isDisabled === disabled || elem.isDisabled !== !disabled && inDisabledFieldset(elem) === disabled;
                }
                return elem.disabled === disabled;
              } else if ("label" in elem) {
                return elem.disabled === disabled;
              }
              return false;
            };
          }
          function createPositionalPseudo(fn) {
            return markFunction(function(argument) {
              argument = +argument;
              return markFunction(function(seed, matches2) {
                var j, matchIndexes = fn([], seed.length, argument), i3 = matchIndexes.length;
                while (i3--) {
                  if (seed[j = matchIndexes[i3]]) {
                    seed[j] = !(matches2[j] = seed[j]);
                  }
                }
              });
            });
          }
          function testContext(context) {
            return context && typeof context.getElementsByTagName !== "undefined" && context;
          }
          support2 = Sizzle2.support = {};
          isXML = Sizzle2.isXML = function(elem) {
            var namespace = elem && elem.namespaceURI, docElem2 = elem && (elem.ownerDocument || elem).documentElement;
            return !rhtml2.test(namespace || docElem2 && docElem2.nodeName || "HTML");
          };
          setDocument = Sizzle2.setDocument = function(node) {
            var hasCompare, subWindow, doc = node ? node.ownerDocument || node : preferredDoc;
            if (doc == document3 || doc.nodeType !== 9 || !doc.documentElement) {
              return document3;
            }
            document3 = doc;
            docElem = document3.documentElement;
            documentIsHTML = !isXML(document3);
            if (preferredDoc != document3 && (subWindow = document3.defaultView) && subWindow.top !== subWindow) {
              if (subWindow.addEventListener) {
                subWindow.addEventListener("unload", unloadHandler, false);
              } else if (subWindow.attachEvent) {
                subWindow.attachEvent("onunload", unloadHandler);
              }
            }
            support2.scope = assert(function(el) {
              docElem.appendChild(el).appendChild(document3.createElement("div"));
              return typeof el.querySelectorAll !== "undefined" && !el.querySelectorAll(":scope fieldset div").length;
            });
            support2.attributes = assert(function(el) {
              el.className = "i";
              return !el.getAttribute("className");
            });
            support2.getElementsByTagName = assert(function(el) {
              el.appendChild(document3.createComment(""));
              return !el.getElementsByTagName("*").length;
            });
            support2.getElementsByClassName = rnative.test(document3.getElementsByClassName);
            support2.getById = assert(function(el) {
              docElem.appendChild(el).id = expando;
              return !document3.getElementsByName || !document3.getElementsByName(expando).length;
            });
            if (support2.getById) {
              Expr.filter["ID"] = function(id) {
                var attrId = id.replace(runescape, funescape);
                return function(elem) {
                  return elem.getAttribute("id") === attrId;
                };
              };
              Expr.find["ID"] = function(id, context) {
                if (typeof context.getElementById !== "undefined" && documentIsHTML) {
                  var elem = context.getElementById(id);
                  return elem ? [elem] : [];
                }
              };
            } else {
              Expr.filter["ID"] = function(id) {
                var attrId = id.replace(runescape, funescape);
                return function(elem) {
                  var node2 = typeof elem.getAttributeNode !== "undefined" && elem.getAttributeNode("id");
                  return node2 && node2.value === attrId;
                };
              };
              Expr.find["ID"] = function(id, context) {
                if (typeof context.getElementById !== "undefined" && documentIsHTML) {
                  var node2, i3, elems, elem = context.getElementById(id);
                  if (elem) {
                    node2 = elem.getAttributeNode("id");
                    if (node2 && node2.value === id) {
                      return [elem];
                    }
                    elems = context.getElementsByName(id);
                    i3 = 0;
                    while (elem = elems[i3++]) {
                      node2 = elem.getAttributeNode("id");
                      if (node2 && node2.value === id) {
                        return [elem];
                      }
                    }
                  }
                  return [];
                }
              };
            }
            Expr.find["TAG"] = support2.getElementsByTagName ? function(tag, context) {
              if (typeof context.getElementsByTagName !== "undefined") {
                return context.getElementsByTagName(tag);
              } else if (support2.qsa) {
                return context.querySelectorAll(tag);
              }
            } : function(tag, context) {
              var elem, tmp = [], i3 = 0, results = context.getElementsByTagName(tag);
              if (tag === "*") {
                while (elem = results[i3++]) {
                  if (elem.nodeType === 1) {
                    tmp.push(elem);
                  }
                }
                return tmp;
              }
              return results;
            };
            Expr.find["CLASS"] = support2.getElementsByClassName && function(className, context) {
              if (typeof context.getElementsByClassName !== "undefined" && documentIsHTML) {
                return context.getElementsByClassName(className);
              }
            };
            rbuggyMatches = [];
            rbuggyQSA = [];
            if (support2.qsa = rnative.test(document3.querySelectorAll)) {
              assert(function(el) {
                var input;
                docElem.appendChild(el).innerHTML = "<a id='" + expando + "'></a><select id='" + expando + "-\r\\' msallowcapture=''><option selected=''></option></select>";
                if (el.querySelectorAll("[msallowcapture^='']").length) {
                  rbuggyQSA.push("[*^$]=" + whitespace2 + `*(?:''|"")`);
                }
                if (!el.querySelectorAll("[selected]").length) {
                  rbuggyQSA.push("\\[" + whitespace2 + "*(?:value|" + booleans + ")");
                }
                if (!el.querySelectorAll("[id~=" + expando + "-]").length) {
                  rbuggyQSA.push("~=");
                }
                input = document3.createElement("input");
                input.setAttribute("name", "");
                el.appendChild(input);
                if (!el.querySelectorAll("[name='']").length) {
                  rbuggyQSA.push("\\[" + whitespace2 + "*name" + whitespace2 + "*=" + whitespace2 + `*(?:''|"")`);
                }
                if (!el.querySelectorAll(":checked").length) {
                  rbuggyQSA.push(":checked");
                }
                if (!el.querySelectorAll("a#" + expando + "+*").length) {
                  rbuggyQSA.push(".#.+[+~]");
                }
                el.querySelectorAll("\\\f");
                rbuggyQSA.push("[\\r\\n\\f]");
              });
              assert(function(el) {
                el.innerHTML = "<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";
                var input = document3.createElement("input");
                input.setAttribute("type", "hidden");
                el.appendChild(input).setAttribute("name", "D");
                if (el.querySelectorAll("[name=d]").length) {
                  rbuggyQSA.push("name" + whitespace2 + "*[*^$|!~]?=");
                }
                if (el.querySelectorAll(":enabled").length !== 2) {
                  rbuggyQSA.push(":enabled", ":disabled");
                }
                docElem.appendChild(el).disabled = true;
                if (el.querySelectorAll(":disabled").length !== 2) {
                  rbuggyQSA.push(":enabled", ":disabled");
                }
                el.querySelectorAll("*,:x");
                rbuggyQSA.push(",.*:");
              });
            }
            if (support2.matchesSelector = rnative.test(matches = docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)) {
              assert(function(el) {
                support2.disconnectedMatch = matches.call(el, "*");
                matches.call(el, "[s!='']:x");
                rbuggyMatches.push("!=", pseudos);
              });
            }
            rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join("|"));
            rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join("|"));
            hasCompare = rnative.test(docElem.compareDocumentPosition);
            contains = hasCompare || rnative.test(docElem.contains) ? function(a3, b2) {
              var adown = a3.nodeType === 9 ? a3.documentElement : a3, bup = b2 && b2.parentNode;
              return a3 === bup || !!(bup && bup.nodeType === 1 && (adown.contains ? adown.contains(bup) : a3.compareDocumentPosition && a3.compareDocumentPosition(bup) & 16));
            } : function(a3, b2) {
              if (b2) {
                while (b2 = b2.parentNode) {
                  if (b2 === a3) {
                    return true;
                  }
                }
              }
              return false;
            };
            sortOrder = hasCompare ? function(a3, b2) {
              if (a3 === b2) {
                hasDuplicate = true;
                return 0;
              }
              var compare = !a3.compareDocumentPosition - !b2.compareDocumentPosition;
              if (compare) {
                return compare;
              }
              compare = (a3.ownerDocument || a3) == (b2.ownerDocument || b2) ? a3.compareDocumentPosition(b2) : 1;
              if (compare & 1 || !support2.sortDetached && b2.compareDocumentPosition(a3) === compare) {
                if (a3 == document3 || a3.ownerDocument == preferredDoc && contains(preferredDoc, a3)) {
                  return -1;
                }
                if (b2 == document3 || b2.ownerDocument == preferredDoc && contains(preferredDoc, b2)) {
                  return 1;
                }
                return sortInput ? indexOf2(sortInput, a3) - indexOf2(sortInput, b2) : 0;
              }
              return compare & 4 ? -1 : 1;
            } : function(a3, b2) {
              if (a3 === b2) {
                hasDuplicate = true;
                return 0;
              }
              var cur, i3 = 0, aup = a3.parentNode, bup = b2.parentNode, ap = [a3], bp = [b2];
              if (!aup || !bup) {
                return a3 == document3 ? -1 : b2 == document3 ? 1 : aup ? -1 : bup ? 1 : sortInput ? indexOf2(sortInput, a3) - indexOf2(sortInput, b2) : 0;
              } else if (aup === bup) {
                return siblingCheck(a3, b2);
              }
              cur = a3;
              while (cur = cur.parentNode) {
                ap.unshift(cur);
              }
              cur = b2;
              while (cur = cur.parentNode) {
                bp.unshift(cur);
              }
              while (ap[i3] === bp[i3]) {
                i3++;
              }
              return i3 ? siblingCheck(ap[i3], bp[i3]) : ap[i3] == preferredDoc ? -1 : bp[i3] == preferredDoc ? 1 : 0;
            };
            return document3;
          };
          Sizzle2.matches = function(expr, elements) {
            return Sizzle2(expr, null, null, elements);
          };
          Sizzle2.matchesSelector = function(elem, expr) {
            setDocument(elem);
            if (support2.matchesSelector && documentIsHTML && !nonnativeSelectorCache[expr + " "] && (!rbuggyMatches || !rbuggyMatches.test(expr)) && (!rbuggyQSA || !rbuggyQSA.test(expr))) {
              try {
                var ret = matches.call(elem, expr);
                if (ret || support2.disconnectedMatch || elem.document && elem.document.nodeType !== 11) {
                  return ret;
                }
              } catch (e2) {
                nonnativeSelectorCache(expr, true);
              }
            }
            return Sizzle2(expr, document3, null, [elem]).length > 0;
          };
          Sizzle2.contains = function(context, elem) {
            if ((context.ownerDocument || context) != document3) {
              setDocument(context);
            }
            return contains(context, elem);
          };
          Sizzle2.attr = function(elem, name) {
            if ((elem.ownerDocument || elem) != document3) {
              setDocument(elem);
            }
            var fn = Expr.attrHandle[name.toLowerCase()], val = fn && hasOwn2.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : void 0;
            return val !== void 0 ? val : support2.attributes || !documentIsHTML ? elem.getAttribute(name) : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;
          };
          Sizzle2.escape = function(sel) {
            return (sel + "").replace(rcssescape, fcssescape);
          };
          Sizzle2.error = function(msg) {
            throw new Error("Syntax error, unrecognized expression: " + msg);
          };
          Sizzle2.uniqueSort = function(results) {
            var elem, duplicates = [], j = 0, i3 = 0;
            hasDuplicate = !support2.detectDuplicates;
            sortInput = !support2.sortStable && results.slice(0);
            results.sort(sortOrder);
            if (hasDuplicate) {
              while (elem = results[i3++]) {
                if (elem === results[i3]) {
                  j = duplicates.push(i3);
                }
              }
              while (j--) {
                results.splice(duplicates[j], 1);
              }
            }
            sortInput = null;
            return results;
          };
          getText = Sizzle2.getText = function(elem) {
            var node, ret = "", i3 = 0, nodeType = elem.nodeType;
            if (!nodeType) {
              while (node = elem[i3++]) {
                ret += getText(node);
              }
            } else if (nodeType === 1 || nodeType === 9 || nodeType === 11) {
              if (typeof elem.textContent === "string") {
                return elem.textContent;
              } else {
                for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
                  ret += getText(elem);
                }
              }
            } else if (nodeType === 3 || nodeType === 4) {
              return elem.nodeValue;
            }
            return ret;
          };
          Expr = Sizzle2.selectors = {
            cacheLength: 50,
            createPseudo: markFunction,
            match: matchExpr,
            attrHandle: {},
            find: {},
            relative: {
              ">": {dir: "parentNode", first: true},
              " ": {dir: "parentNode"},
              "+": {dir: "previousSibling", first: true},
              "~": {dir: "previousSibling"}
            },
            preFilter: {
              "ATTR": function(match2) {
                match2[1] = match2[1].replace(runescape, funescape);
                match2[3] = (match2[3] || match2[4] || match2[5] || "").replace(runescape, funescape);
                if (match2[2] === "~=") {
                  match2[3] = " " + match2[3] + " ";
                }
                return match2.slice(0, 4);
              },
              "CHILD": function(match2) {
                match2[1] = match2[1].toLowerCase();
                if (match2[1].slice(0, 3) === "nth") {
                  if (!match2[3]) {
                    Sizzle2.error(match2[0]);
                  }
                  match2[4] = +(match2[4] ? match2[5] + (match2[6] || 1) : 2 * (match2[3] === "even" || match2[3] === "odd"));
                  match2[5] = +(match2[7] + match2[8] || match2[3] === "odd");
                } else if (match2[3]) {
                  Sizzle2.error(match2[0]);
                }
                return match2;
              },
              "PSEUDO": function(match2) {
                var excess, unquoted = !match2[6] && match2[2];
                if (matchExpr["CHILD"].test(match2[0])) {
                  return null;
                }
                if (match2[3]) {
                  match2[2] = match2[4] || match2[5] || "";
                } else if (unquoted && rpseudo.test(unquoted) && (excess = tokenize(unquoted, true)) && (excess = unquoted.indexOf(")", unquoted.length - excess) - unquoted.length)) {
                  match2[0] = match2[0].slice(0, excess);
                  match2[2] = unquoted.slice(0, excess);
                }
                return match2.slice(0, 3);
              }
            },
            filter: {
              "TAG": function(nodeNameSelector) {
                var nodeName2 = nodeNameSelector.replace(runescape, funescape).toLowerCase();
                return nodeNameSelector === "*" ? function() {
                  return true;
                } : function(elem) {
                  return elem.nodeName && elem.nodeName.toLowerCase() === nodeName2;
                };
              },
              "CLASS": function(className) {
                var pattern = classCache[className + " "];
                return pattern || (pattern = new RegExp("(^|" + whitespace2 + ")" + className + "(" + whitespace2 + "|$)")) && classCache(className, function(elem) {
                  return pattern.test(typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "");
                });
              },
              "ATTR": function(name, operator, check) {
                return function(elem) {
                  var result = Sizzle2.attr(elem, name);
                  if (result == null) {
                    return operator === "!=";
                  }
                  if (!operator) {
                    return true;
                  }
                  result += "";
                  return operator === "=" ? result === check : operator === "!=" ? result !== check : operator === "^=" ? check && result.indexOf(check) === 0 : operator === "*=" ? check && result.indexOf(check) > -1 : operator === "$=" ? check && result.slice(-check.length) === check : operator === "~=" ? (" " + result.replace(rwhitespace, " ") + " ").indexOf(check) > -1 : operator === "|=" ? result === check || result.slice(0, check.length + 1) === check + "-" : false;
                };
              },
              "CHILD": function(type, what, _argument, first, last) {
                var simple = type.slice(0, 3) !== "nth", forward = type.slice(-4) !== "last", ofType = what === "of-type";
                return first === 1 && last === 0 ? function(elem) {
                  return !!elem.parentNode;
                } : function(elem, _context, xml) {
                  var cache, uniqueCache, outerCache, node, nodeIndex, start, dir2 = simple !== forward ? "nextSibling" : "previousSibling", parent = elem.parentNode, name = ofType && elem.nodeName.toLowerCase(), useCache = !xml && !ofType, diff = false;
                  if (parent) {
                    if (simple) {
                      while (dir2) {
                        node = elem;
                        while (node = node[dir2]) {
                          if (ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) {
                            return false;
                          }
                        }
                        start = dir2 = type === "only" && !start && "nextSibling";
                      }
                      return true;
                    }
                    start = [forward ? parent.firstChild : parent.lastChild];
                    if (forward && useCache) {
                      node = parent;
                      outerCache = node[expando] || (node[expando] = {});
                      uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});
                      cache = uniqueCache[type] || [];
                      nodeIndex = cache[0] === dirruns && cache[1];
                      diff = nodeIndex && cache[2];
                      node = nodeIndex && parent.childNodes[nodeIndex];
                      while (node = ++nodeIndex && node && node[dir2] || (diff = nodeIndex = 0) || start.pop()) {
                        if (node.nodeType === 1 && ++diff && node === elem) {
                          uniqueCache[type] = [dirruns, nodeIndex, diff];
                          break;
                        }
                      }
                    } else {
                      if (useCache) {
                        node = elem;
                        outerCache = node[expando] || (node[expando] = {});
                        uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});
                        cache = uniqueCache[type] || [];
                        nodeIndex = cache[0] === dirruns && cache[1];
                        diff = nodeIndex;
                      }
                      if (diff === false) {
                        while (node = ++nodeIndex && node && node[dir2] || (diff = nodeIndex = 0) || start.pop()) {
                          if ((ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) && ++diff) {
                            if (useCache) {
                              outerCache = node[expando] || (node[expando] = {});
                              uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});
                              uniqueCache[type] = [dirruns, diff];
                            }
                            if (node === elem) {
                              break;
                            }
                          }
                        }
                      }
                    }
                    diff -= last;
                    return diff === first || diff % first === 0 && diff / first >= 0;
                  }
                };
              },
              "PSEUDO": function(pseudo, argument) {
                var args, fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle2.error("unsupported pseudo: " + pseudo);
                if (fn[expando]) {
                  return fn(argument);
                }
                if (fn.length > 1) {
                  args = [pseudo, pseudo, "", argument];
                  return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function(seed, matches2) {
                    var idx, matched = fn(seed, argument), i3 = matched.length;
                    while (i3--) {
                      idx = indexOf2(seed, matched[i3]);
                      seed[idx] = !(matches2[idx] = matched[i3]);
                    }
                  }) : function(elem) {
                    return fn(elem, 0, args);
                  };
                }
                return fn;
              }
            },
            pseudos: {
              "not": markFunction(function(selector) {
                var input = [], results = [], matcher = compile(selector.replace(rtrim2, "$1"));
                return matcher[expando] ? markFunction(function(seed, matches2, _context, xml) {
                  var elem, unmatched = matcher(seed, null, xml, []), i3 = seed.length;
                  while (i3--) {
                    if (elem = unmatched[i3]) {
                      seed[i3] = !(matches2[i3] = elem);
                    }
                  }
                }) : function(elem, _context, xml) {
                  input[0] = elem;
                  matcher(input, null, xml, results);
                  input[0] = null;
                  return !results.pop();
                };
              }),
              "has": markFunction(function(selector) {
                return function(elem) {
                  return Sizzle2(selector, elem).length > 0;
                };
              }),
              "contains": markFunction(function(text) {
                text = text.replace(runescape, funescape);
                return function(elem) {
                  return (elem.textContent || getText(elem)).indexOf(text) > -1;
                };
              }),
              "lang": markFunction(function(lang2) {
                if (!ridentifier.test(lang2 || "")) {
                  Sizzle2.error("unsupported lang: " + lang2);
                }
                lang2 = lang2.replace(runescape, funescape).toLowerCase();
                return function(elem) {
                  var elemLang;
                  do {
                    if (elemLang = documentIsHTML ? elem.lang : elem.getAttribute("xml:lang") || elem.getAttribute("lang")) {
                      elemLang = elemLang.toLowerCase();
                      return elemLang === lang2 || elemLang.indexOf(lang2 + "-") === 0;
                    }
                  } while ((elem = elem.parentNode) && elem.nodeType === 1);
                  return false;
                };
              }),
              "target": function(elem) {
                var hash = window3.location && window3.location.hash;
                return hash && hash.slice(1) === elem.id;
              },
              "root": function(elem) {
                return elem === docElem;
              },
              "focus": function(elem) {
                return elem === document3.activeElement && (!document3.hasFocus || document3.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
              },
              "enabled": createDisabledPseudo(false),
              "disabled": createDisabledPseudo(true),
              "checked": function(elem) {
                var nodeName2 = elem.nodeName.toLowerCase();
                return nodeName2 === "input" && !!elem.checked || nodeName2 === "option" && !!elem.selected;
              },
              "selected": function(elem) {
                if (elem.parentNode) {
                  elem.parentNode.selectedIndex;
                }
                return elem.selected === true;
              },
              "empty": function(elem) {
                for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
                  if (elem.nodeType < 6) {
                    return false;
                  }
                }
                return true;
              },
              "parent": function(elem) {
                return !Expr.pseudos["empty"](elem);
              },
              "header": function(elem) {
                return rheader.test(elem.nodeName);
              },
              "input": function(elem) {
                return rinputs.test(elem.nodeName);
              },
              "button": function(elem) {
                var name = elem.nodeName.toLowerCase();
                return name === "input" && elem.type === "button" || name === "button";
              },
              "text": function(elem) {
                var attr;
                return elem.nodeName.toLowerCase() === "input" && elem.type === "text" && ((attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text");
              },
              "first": createPositionalPseudo(function() {
                return [0];
              }),
              "last": createPositionalPseudo(function(_matchIndexes, length) {
                return [length - 1];
              }),
              "eq": createPositionalPseudo(function(_matchIndexes, length, argument) {
                return [argument < 0 ? argument + length : argument];
              }),
              "even": createPositionalPseudo(function(matchIndexes, length) {
                var i3 = 0;
                for (; i3 < length; i3 += 2) {
                  matchIndexes.push(i3);
                }
                return matchIndexes;
              }),
              "odd": createPositionalPseudo(function(matchIndexes, length) {
                var i3 = 1;
                for (; i3 < length; i3 += 2) {
                  matchIndexes.push(i3);
                }
                return matchIndexes;
              }),
              "lt": createPositionalPseudo(function(matchIndexes, length, argument) {
                var i3 = argument < 0 ? argument + length : argument > length ? length : argument;
                for (; --i3 >= 0; ) {
                  matchIndexes.push(i3);
                }
                return matchIndexes;
              }),
              "gt": createPositionalPseudo(function(matchIndexes, length, argument) {
                var i3 = argument < 0 ? argument + length : argument;
                for (; ++i3 < length; ) {
                  matchIndexes.push(i3);
                }
                return matchIndexes;
              })
            }
          };
          Expr.pseudos["nth"] = Expr.pseudos["eq"];
          for (i2 in {radio: true, checkbox: true, file: true, password: true, image: true}) {
            Expr.pseudos[i2] = createInputPseudo(i2);
          }
          for (i2 in {submit: true, reset: true}) {
            Expr.pseudos[i2] = createButtonPseudo(i2);
          }
          function setFilters() {
          }
          setFilters.prototype = Expr.filters = Expr.pseudos;
          Expr.setFilters = new setFilters();
          tokenize = Sizzle2.tokenize = function(selector, parseOnly) {
            var matched, match2, tokens, type, soFar, groups, preFilters, cached = tokenCache[selector + " "];
            if (cached) {
              return parseOnly ? 0 : cached.slice(0);
            }
            soFar = selector;
            groups = [];
            preFilters = Expr.preFilter;
            while (soFar) {
              if (!matched || (match2 = rcomma.exec(soFar))) {
                if (match2) {
                  soFar = soFar.slice(match2[0].length) || soFar;
                }
                groups.push(tokens = []);
              }
              matched = false;
              if (match2 = rcombinators.exec(soFar)) {
                matched = match2.shift();
                tokens.push({
                  value: matched,
                  type: match2[0].replace(rtrim2, " ")
                });
                soFar = soFar.slice(matched.length);
              }
              for (type in Expr.filter) {
                if ((match2 = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match2 = preFilters[type](match2)))) {
                  matched = match2.shift();
                  tokens.push({
                    value: matched,
                    type,
                    matches: match2
                  });
                  soFar = soFar.slice(matched.length);
                }
              }
              if (!matched) {
                break;
              }
            }
            return parseOnly ? soFar.length : soFar ? Sizzle2.error(selector) : tokenCache(selector, groups).slice(0);
          };
          function toSelector(tokens) {
            var i3 = 0, len = tokens.length, selector = "";
            for (; i3 < len; i3++) {
              selector += tokens[i3].value;
            }
            return selector;
          }
          function addCombinator(matcher, combinator, base) {
            var dir2 = combinator.dir, skip = combinator.next, key = skip || dir2, checkNonElements = base && key === "parentNode", doneName = done++;
            return combinator.first ? function(elem, context, xml) {
              while (elem = elem[dir2]) {
                if (elem.nodeType === 1 || checkNonElements) {
                  return matcher(elem, context, xml);
                }
              }
              return false;
            } : function(elem, context, xml) {
              var oldCache, uniqueCache, outerCache, newCache = [dirruns, doneName];
              if (xml) {
                while (elem = elem[dir2]) {
                  if (elem.nodeType === 1 || checkNonElements) {
                    if (matcher(elem, context, xml)) {
                      return true;
                    }
                  }
                }
              } else {
                while (elem = elem[dir2]) {
                  if (elem.nodeType === 1 || checkNonElements) {
                    outerCache = elem[expando] || (elem[expando] = {});
                    uniqueCache = outerCache[elem.uniqueID] || (outerCache[elem.uniqueID] = {});
                    if (skip && skip === elem.nodeName.toLowerCase()) {
                      elem = elem[dir2] || elem;
                    } else if ((oldCache = uniqueCache[key]) && oldCache[0] === dirruns && oldCache[1] === doneName) {
                      return newCache[2] = oldCache[2];
                    } else {
                      uniqueCache[key] = newCache;
                      if (newCache[2] = matcher(elem, context, xml)) {
                        return true;
                      }
                    }
                  }
                }
              }
              return false;
            };
          }
          function elementMatcher(matchers) {
            return matchers.length > 1 ? function(elem, context, xml) {
              var i3 = matchers.length;
              while (i3--) {
                if (!matchers[i3](elem, context, xml)) {
                  return false;
                }
              }
              return true;
            } : matchers[0];
          }
          function multipleContexts(selector, contexts, results) {
            var i3 = 0, len = contexts.length;
            for (; i3 < len; i3++) {
              Sizzle2(selector, contexts[i3], results);
            }
            return results;
          }
          function condense(unmatched, map, filter, context, xml) {
            var elem, newUnmatched = [], i3 = 0, len = unmatched.length, mapped = map != null;
            for (; i3 < len; i3++) {
              if (elem = unmatched[i3]) {
                if (!filter || filter(elem, context, xml)) {
                  newUnmatched.push(elem);
                  if (mapped) {
                    map.push(i3);
                  }
                }
              }
            }
            return newUnmatched;
          }
          function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {
            if (postFilter && !postFilter[expando]) {
              postFilter = setMatcher(postFilter);
            }
            if (postFinder && !postFinder[expando]) {
              postFinder = setMatcher(postFinder, postSelector);
            }
            return markFunction(function(seed, results, context, xml) {
              var temp, i3, elem, preMap = [], postMap = [], preexisting = results.length, elems = seed || multipleContexts(selector || "*", context.nodeType ? [context] : context, []), matcherIn = preFilter && (seed || !selector) ? condense(elems, preMap, preFilter, context, xml) : elems, matcherOut = matcher ? postFinder || (seed ? preFilter : preexisting || postFilter) ? [] : results : matcherIn;
              if (matcher) {
                matcher(matcherIn, matcherOut, context, xml);
              }
              if (postFilter) {
                temp = condense(matcherOut, postMap);
                postFilter(temp, [], context, xml);
                i3 = temp.length;
                while (i3--) {
                  if (elem = temp[i3]) {
                    matcherOut[postMap[i3]] = !(matcherIn[postMap[i3]] = elem);
                  }
                }
              }
              if (seed) {
                if (postFinder || preFilter) {
                  if (postFinder) {
                    temp = [];
                    i3 = matcherOut.length;
                    while (i3--) {
                      if (elem = matcherOut[i3]) {
                        temp.push(matcherIn[i3] = elem);
                      }
                    }
                    postFinder(null, matcherOut = [], temp, xml);
                  }
                  i3 = matcherOut.length;
                  while (i3--) {
                    if ((elem = matcherOut[i3]) && (temp = postFinder ? indexOf2(seed, elem) : preMap[i3]) > -1) {
                      seed[temp] = !(results[temp] = elem);
                    }
                  }
                }
              } else {
                matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut);
                if (postFinder) {
                  postFinder(null, results, matcherOut, xml);
                } else {
                  push2.apply(results, matcherOut);
                }
              }
            });
          }
          function matcherFromTokens(tokens) {
            var checkContext, matcher, j, len = tokens.length, leadingRelative = Expr.relative[tokens[0].type], implicitRelative = leadingRelative || Expr.relative[" "], i3 = leadingRelative ? 1 : 0, matchContext = addCombinator(function(elem) {
              return elem === checkContext;
            }, implicitRelative, true), matchAnyContext = addCombinator(function(elem) {
              return indexOf2(checkContext, elem) > -1;
            }, implicitRelative, true), matchers = [function(elem, context, xml) {
              var ret = !leadingRelative && (xml || context !== outermostContext) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml));
              checkContext = null;
              return ret;
            }];
            for (; i3 < len; i3++) {
              if (matcher = Expr.relative[tokens[i3].type]) {
                matchers = [addCombinator(elementMatcher(matchers), matcher)];
              } else {
                matcher = Expr.filter[tokens[i3].type].apply(null, tokens[i3].matches);
                if (matcher[expando]) {
                  j = ++i3;
                  for (; j < len; j++) {
                    if (Expr.relative[tokens[j].type]) {
                      break;
                    }
                  }
                  return setMatcher(i3 > 1 && elementMatcher(matchers), i3 > 1 && toSelector(tokens.slice(0, i3 - 1).concat({value: tokens[i3 - 2].type === " " ? "*" : ""})).replace(rtrim2, "$1"), matcher, i3 < j && matcherFromTokens(tokens.slice(i3, j)), j < len && matcherFromTokens(tokens = tokens.slice(j)), j < len && toSelector(tokens));
                }
                matchers.push(matcher);
              }
            }
            return elementMatcher(matchers);
          }
          function matcherFromGroupMatchers(elementMatchers, setMatchers) {
            var bySet = setMatchers.length > 0, byElement = elementMatchers.length > 0, superMatcher = function(seed, context, xml, results, outermost) {
              var elem, j, matcher, matchedCount = 0, i3 = "0", unmatched = seed && [], setMatched = [], contextBackup = outermostContext, elems = seed || byElement && Expr.find["TAG"]("*", outermost), dirrunsUnique = dirruns += contextBackup == null ? 1 : Math.random() || 0.1, len = elems.length;
              if (outermost) {
                outermostContext = context == document3 || context || outermost;
              }
              for (; i3 !== len && (elem = elems[i3]) != null; i3++) {
                if (byElement && elem) {
                  j = 0;
                  if (!context && elem.ownerDocument != document3) {
                    setDocument(elem);
                    xml = !documentIsHTML;
                  }
                  while (matcher = elementMatchers[j++]) {
                    if (matcher(elem, context || document3, xml)) {
                      results.push(elem);
                      break;
                    }
                  }
                  if (outermost) {
                    dirruns = dirrunsUnique;
                  }
                }
                if (bySet) {
                  if (elem = !matcher && elem) {
                    matchedCount--;
                  }
                  if (seed) {
                    unmatched.push(elem);
                  }
                }
              }
              matchedCount += i3;
              if (bySet && i3 !== matchedCount) {
                j = 0;
                while (matcher = setMatchers[j++]) {
                  matcher(unmatched, setMatched, context, xml);
                }
                if (seed) {
                  if (matchedCount > 0) {
                    while (i3--) {
                      if (!(unmatched[i3] || setMatched[i3])) {
                        setMatched[i3] = pop.call(results);
                      }
                    }
                  }
                  setMatched = condense(setMatched);
                }
                push2.apply(results, setMatched);
                if (outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1) {
                  Sizzle2.uniqueSort(results);
                }
              }
              if (outermost) {
                dirruns = dirrunsUnique;
                outermostContext = contextBackup;
              }
              return unmatched;
            };
            return bySet ? markFunction(superMatcher) : superMatcher;
          }
          compile = Sizzle2.compile = function(selector, match2) {
            var i3, setMatchers = [], elementMatchers = [], cached = compilerCache[selector + " "];
            if (!cached) {
              if (!match2) {
                match2 = tokenize(selector);
              }
              i3 = match2.length;
              while (i3--) {
                cached = matcherFromTokens(match2[i3]);
                if (cached[expando]) {
                  setMatchers.push(cached);
                } else {
                  elementMatchers.push(cached);
                }
              }
              cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers));
              cached.selector = selector;
            }
            return cached;
          };
          select = Sizzle2.select = function(selector, context, results, seed) {
            var i3, tokens, token, type, find, compiled = typeof selector === "function" && selector, match2 = !seed && tokenize(selector = compiled.selector || selector);
            results = results || [];
            if (match2.length === 1) {
              tokens = match2[0] = match2[0].slice(0);
              if (tokens.length > 2 && (token = tokens[0]).type === "ID" && context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]) {
                context = (Expr.find["ID"](token.matches[0].replace(runescape, funescape), context) || [])[0];
                if (!context) {
                  return results;
                } else if (compiled) {
                  context = context.parentNode;
                }
                selector = selector.slice(tokens.shift().value.length);
              }
              i3 = matchExpr["needsContext"].test(selector) ? 0 : tokens.length;
              while (i3--) {
                token = tokens[i3];
                if (Expr.relative[type = token.type]) {
                  break;
                }
                if (find = Expr.find[type]) {
                  if (seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context)) {
                    tokens.splice(i3, 1);
                    selector = seed.length && toSelector(tokens);
                    if (!selector) {
                      push2.apply(results, seed);
                      return results;
                    }
                    break;
                  }
                }
              }
            }
            (compiled || compile(selector, match2))(seed, context, !documentIsHTML, results, !context || rsibling.test(selector) && testContext(context.parentNode) || context);
            return results;
          };
          support2.sortStable = expando.split("").sort(sortOrder).join("") === expando;
          support2.detectDuplicates = !!hasDuplicate;
          setDocument();
          support2.sortDetached = assert(function(el) {
            return el.compareDocumentPosition(document3.createElement("fieldset")) & 1;
          });
          if (!assert(function(el) {
            el.innerHTML = "<a href='#'></a>";
            return el.firstChild.getAttribute("href") === "#";
          })) {
            addHandle("type|href|height|width", function(elem, name, isXML2) {
              if (!isXML2) {
                return elem.getAttribute(name, name.toLowerCase() === "type" ? 1 : 2);
              }
            });
          }
          if (!support2.attributes || !assert(function(el) {
            el.innerHTML = "<input/>";
            el.firstChild.setAttribute("value", "");
            return el.firstChild.getAttribute("value") === "";
          })) {
            addHandle("value", function(elem, _name, isXML2) {
              if (!isXML2 && elem.nodeName.toLowerCase() === "input") {
                return elem.defaultValue;
              }
            });
          }
          if (!assert(function(el) {
            return el.getAttribute("disabled") == null;
          })) {
            addHandle(booleans, function(elem, name, isXML2) {
              var val;
              if (!isXML2) {
                return elem[name] === true ? name.toLowerCase() : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;
              }
            });
          }
          return Sizzle2;
        }(window2);
        jQuery2.find = Sizzle;
        jQuery2.expr = Sizzle.selectors;
        jQuery2.expr[":"] = jQuery2.expr.pseudos;
        jQuery2.uniqueSort = jQuery2.unique = Sizzle.uniqueSort;
        jQuery2.text = Sizzle.getText;
        jQuery2.isXMLDoc = Sizzle.isXML;
        jQuery2.contains = Sizzle.contains;
        jQuery2.escapeSelector = Sizzle.escape;
        var dir = function(elem, dir2, until) {
          var matched = [], truncate = until !== void 0;
          while ((elem = elem[dir2]) && elem.nodeType !== 9) {
            if (elem.nodeType === 1) {
              if (truncate && jQuery2(elem).is(until)) {
                break;
              }
              matched.push(elem);
            }
          }
          return matched;
        };
        var siblings = function(n, elem) {
          var matched = [];
          for (; n; n = n.nextSibling) {
            if (n.nodeType === 1 && n !== elem) {
              matched.push(n);
            }
          }
          return matched;
        };
        var rneedsContext = jQuery2.expr.match.needsContext;
        function nodeName(elem, name) {
          return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
        }
        var rsingleTag = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;
        function winnow(elements, qualifier, not) {
          if (isFunction(qualifier)) {
            return jQuery2.grep(elements, function(elem, i2) {
              return !!qualifier.call(elem, i2, elem) !== not;
            });
          }
          if (qualifier.nodeType) {
            return jQuery2.grep(elements, function(elem) {
              return elem === qualifier !== not;
            });
          }
          if (typeof qualifier !== "string") {
            return jQuery2.grep(elements, function(elem) {
              return indexOf.call(qualifier, elem) > -1 !== not;
            });
          }
          return jQuery2.filter(qualifier, elements, not);
        }
        jQuery2.filter = function(expr, elems, not) {
          var elem = elems[0];
          if (not) {
            expr = ":not(" + expr + ")";
          }
          if (elems.length === 1 && elem.nodeType === 1) {
            return jQuery2.find.matchesSelector(elem, expr) ? [elem] : [];
          }
          return jQuery2.find.matches(expr, jQuery2.grep(elems, function(elem2) {
            return elem2.nodeType === 1;
          }));
        };
        jQuery2.fn.extend({
          find: function(selector) {
            var i2, ret, len = this.length, self2 = this;
            if (typeof selector !== "string") {
              return this.pushStack(jQuery2(selector).filter(function() {
                for (i2 = 0; i2 < len; i2++) {
                  if (jQuery2.contains(self2[i2], this)) {
                    return true;
                  }
                }
              }));
            }
            ret = this.pushStack([]);
            for (i2 = 0; i2 < len; i2++) {
              jQuery2.find(selector, self2[i2], ret);
            }
            return len > 1 ? jQuery2.uniqueSort(ret) : ret;
          },
          filter: function(selector) {
            return this.pushStack(winnow(this, selector || [], false));
          },
          not: function(selector) {
            return this.pushStack(winnow(this, selector || [], true));
          },
          is: function(selector) {
            return !!winnow(this, typeof selector === "string" && rneedsContext.test(selector) ? jQuery2(selector) : selector || [], false).length;
          }
        });
        var rootjQuery, rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/, init = jQuery2.fn.init = function(selector, context, root) {
          var match2, elem;
          if (!selector) {
            return this;
          }
          root = root || rootjQuery;
          if (typeof selector === "string") {
            if (selector[0] === "<" && selector[selector.length - 1] === ">" && selector.length >= 3) {
              match2 = [null, selector, null];
            } else {
              match2 = rquickExpr.exec(selector);
            }
            if (match2 && (match2[1] || !context)) {
              if (match2[1]) {
                context = context instanceof jQuery2 ? context[0] : context;
                jQuery2.merge(this, jQuery2.parseHTML(match2[1], context && context.nodeType ? context.ownerDocument || context : document2, true));
                if (rsingleTag.test(match2[1]) && jQuery2.isPlainObject(context)) {
                  for (match2 in context) {
                    if (isFunction(this[match2])) {
                      this[match2](context[match2]);
                    } else {
                      this.attr(match2, context[match2]);
                    }
                  }
                }
                return this;
              } else {
                elem = document2.getElementById(match2[2]);
                if (elem) {
                  this[0] = elem;
                  this.length = 1;
                }
                return this;
              }
            } else if (!context || context.jquery) {
              return (context || root).find(selector);
            } else {
              return this.constructor(context).find(selector);
            }
          } else if (selector.nodeType) {
            this[0] = selector;
            this.length = 1;
            return this;
          } else if (isFunction(selector)) {
            return root.ready !== void 0 ? root.ready(selector) : selector(jQuery2);
          }
          return jQuery2.makeArray(selector, this);
        };
        init.prototype = jQuery2.fn;
        rootjQuery = jQuery2(document2);
        var rparentsprev = /^(?:parents|prev(?:Until|All))/, guaranteedUnique = {
          children: true,
          contents: true,
          next: true,
          prev: true
        };
        jQuery2.fn.extend({
          has: function(target) {
            var targets = jQuery2(target, this), l = targets.length;
            return this.filter(function() {
              var i2 = 0;
              for (; i2 < l; i2++) {
                if (jQuery2.contains(this, targets[i2])) {
                  return true;
                }
              }
            });
          },
          closest: function(selectors, context) {
            var cur, i2 = 0, l = this.length, matched = [], targets = typeof selectors !== "string" && jQuery2(selectors);
            if (!rneedsContext.test(selectors)) {
              for (; i2 < l; i2++) {
                for (cur = this[i2]; cur && cur !== context; cur = cur.parentNode) {
                  if (cur.nodeType < 11 && (targets ? targets.index(cur) > -1 : cur.nodeType === 1 && jQuery2.find.matchesSelector(cur, selectors))) {
                    matched.push(cur);
                    break;
                  }
                }
              }
            }
            return this.pushStack(matched.length > 1 ? jQuery2.uniqueSort(matched) : matched);
          },
          index: function(elem) {
            if (!elem) {
              return this[0] && this[0].parentNode ? this.first().prevAll().length : -1;
            }
            if (typeof elem === "string") {
              return indexOf.call(jQuery2(elem), this[0]);
            }
            return indexOf.call(this, elem.jquery ? elem[0] : elem);
          },
          add: function(selector, context) {
            return this.pushStack(jQuery2.uniqueSort(jQuery2.merge(this.get(), jQuery2(selector, context))));
          },
          addBack: function(selector) {
            return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector));
          }
        });
        function sibling(cur, dir2) {
          while ((cur = cur[dir2]) && cur.nodeType !== 1) {
          }
          return cur;
        }
        jQuery2.each({
          parent: function(elem) {
            var parent = elem.parentNode;
            return parent && parent.nodeType !== 11 ? parent : null;
          },
          parents: function(elem) {
            return dir(elem, "parentNode");
          },
          parentsUntil: function(elem, _i, until) {
            return dir(elem, "parentNode", until);
          },
          next: function(elem) {
            return sibling(elem, "nextSibling");
          },
          prev: function(elem) {
            return sibling(elem, "previousSibling");
          },
          nextAll: function(elem) {
            return dir(elem, "nextSibling");
          },
          prevAll: function(elem) {
            return dir(elem, "previousSibling");
          },
          nextUntil: function(elem, _i, until) {
            return dir(elem, "nextSibling", until);
          },
          prevUntil: function(elem, _i, until) {
            return dir(elem, "previousSibling", until);
          },
          siblings: function(elem) {
            return siblings((elem.parentNode || {}).firstChild, elem);
          },
          children: function(elem) {
            return siblings(elem.firstChild);
          },
          contents: function(elem) {
            if (elem.contentDocument != null && getProto(elem.contentDocument)) {
              return elem.contentDocument;
            }
            if (nodeName(elem, "template")) {
              elem = elem.content || elem;
            }
            return jQuery2.merge([], elem.childNodes);
          }
        }, function(name, fn) {
          jQuery2.fn[name] = function(until, selector) {
            var matched = jQuery2.map(this, fn, until);
            if (name.slice(-5) !== "Until") {
              selector = until;
            }
            if (selector && typeof selector === "string") {
              matched = jQuery2.filter(selector, matched);
            }
            if (this.length > 1) {
              if (!guaranteedUnique[name]) {
                jQuery2.uniqueSort(matched);
              }
              if (rparentsprev.test(name)) {
                matched.reverse();
              }
            }
            return this.pushStack(matched);
          };
        });
        var rnothtmlwhite = /[^\x20\t\r\n\f]+/g;
        function createOptions(options) {
          var object = {};
          jQuery2.each(options.match(rnothtmlwhite) || [], function(_, flag) {
            object[flag] = true;
          });
          return object;
        }
        jQuery2.Callbacks = function(options) {
          options = typeof options === "string" ? createOptions(options) : jQuery2.extend({}, options);
          var firing, memory, fired, locked, list = [], queue = [], firingIndex = -1, fire = function() {
            locked = locked || options.once;
            fired = firing = true;
            for (; queue.length; firingIndex = -1) {
              memory = queue.shift();
              while (++firingIndex < list.length) {
                if (list[firingIndex].apply(memory[0], memory[1]) === false && options.stopOnFalse) {
                  firingIndex = list.length;
                  memory = false;
                }
              }
            }
            if (!options.memory) {
              memory = false;
            }
            firing = false;
            if (locked) {
              if (memory) {
                list = [];
              } else {
                list = "";
              }
            }
          }, self2 = {
            add: function() {
              if (list) {
                if (memory && !firing) {
                  firingIndex = list.length - 1;
                  queue.push(memory);
                }
                (function add(args) {
                  jQuery2.each(args, function(_, arg) {
                    if (isFunction(arg)) {
                      if (!options.unique || !self2.has(arg)) {
                        list.push(arg);
                      }
                    } else if (arg && arg.length && toType(arg) !== "string") {
                      add(arg);
                    }
                  });
                })(arguments);
                if (memory && !firing) {
                  fire();
                }
              }
              return this;
            },
            remove: function() {
              jQuery2.each(arguments, function(_, arg) {
                var index;
                while ((index = jQuery2.inArray(arg, list, index)) > -1) {
                  list.splice(index, 1);
                  if (index <= firingIndex) {
                    firingIndex--;
                  }
                }
              });
              return this;
            },
            has: function(fn) {
              return fn ? jQuery2.inArray(fn, list) > -1 : list.length > 0;
            },
            empty: function() {
              if (list) {
                list = [];
              }
              return this;
            },
            disable: function() {
              locked = queue = [];
              list = memory = "";
              return this;
            },
            disabled: function() {
              return !list;
            },
            lock: function() {
              locked = queue = [];
              if (!memory && !firing) {
                list = memory = "";
              }
              return this;
            },
            locked: function() {
              return !!locked;
            },
            fireWith: function(context, args) {
              if (!locked) {
                args = args || [];
                args = [context, args.slice ? args.slice() : args];
                queue.push(args);
                if (!firing) {
                  fire();
                }
              }
              return this;
            },
            fire: function() {
              self2.fireWith(this, arguments);
              return this;
            },
            fired: function() {
              return !!fired;
            }
          };
          return self2;
        };
        function Identity(v) {
          return v;
        }
        function Thrower(ex) {
          throw ex;
        }
        function adoptValue(value, resolve, reject, noValue) {
          var method;
          try {
            if (value && isFunction(method = value.promise)) {
              method.call(value).done(resolve).fail(reject);
            } else if (value && isFunction(method = value.then)) {
              method.call(value, resolve, reject);
            } else {
              resolve.apply(void 0, [value].slice(noValue));
            }
          } catch (value2) {
            reject.apply(void 0, [value2]);
          }
        }
        jQuery2.extend({
          Deferred: function(func) {
            var tuples = [
              [
                "notify",
                "progress",
                jQuery2.Callbacks("memory"),
                jQuery2.Callbacks("memory"),
                2
              ],
              [
                "resolve",
                "done",
                jQuery2.Callbacks("once memory"),
                jQuery2.Callbacks("once memory"),
                0,
                "resolved"
              ],
              [
                "reject",
                "fail",
                jQuery2.Callbacks("once memory"),
                jQuery2.Callbacks("once memory"),
                1,
                "rejected"
              ]
            ], state = "pending", promise = {
              state: function() {
                return state;
              },
              always: function() {
                deferred.done(arguments).fail(arguments);
                return this;
              },
              "catch": function(fn) {
                return promise.then(null, fn);
              },
              pipe: function() {
                var fns = arguments;
                return jQuery2.Deferred(function(newDefer) {
                  jQuery2.each(tuples, function(_i, tuple) {
                    var fn = isFunction(fns[tuple[4]]) && fns[tuple[4]];
                    deferred[tuple[1]](function() {
                      var returned = fn && fn.apply(this, arguments);
                      if (returned && isFunction(returned.promise)) {
                        returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject);
                      } else {
                        newDefer[tuple[0] + "With"](this, fn ? [returned] : arguments);
                      }
                    });
                  });
                  fns = null;
                }).promise();
              },
              then: function(onFulfilled, onRejected, onProgress) {
                var maxDepth = 0;
                function resolve(depth, deferred2, handler, special) {
                  return function() {
                    var that = this, args = arguments, mightThrow = function() {
                      var returned, then;
                      if (depth < maxDepth) {
                        return;
                      }
                      returned = handler.apply(that, args);
                      if (returned === deferred2.promise()) {
                        throw new TypeError("Thenable self-resolution");
                      }
                      then = returned && (typeof returned === "object" || typeof returned === "function") && returned.then;
                      if (isFunction(then)) {
                        if (special) {
                          then.call(returned, resolve(maxDepth, deferred2, Identity, special), resolve(maxDepth, deferred2, Thrower, special));
                        } else {
                          maxDepth++;
                          then.call(returned, resolve(maxDepth, deferred2, Identity, special), resolve(maxDepth, deferred2, Thrower, special), resolve(maxDepth, deferred2, Identity, deferred2.notifyWith));
                        }
                      } else {
                        if (handler !== Identity) {
                          that = void 0;
                          args = [returned];
                        }
                        (special || deferred2.resolveWith)(that, args);
                      }
                    }, process2 = special ? mightThrow : function() {
                      try {
                        mightThrow();
                      } catch (e2) {
                        if (jQuery2.Deferred.exceptionHook) {
                          jQuery2.Deferred.exceptionHook(e2, process2.stackTrace);
                        }
                        if (depth + 1 >= maxDepth) {
                          if (handler !== Thrower) {
                            that = void 0;
                            args = [e2];
                          }
                          deferred2.rejectWith(that, args);
                        }
                      }
                    };
                    if (depth) {
                      process2();
                    } else {
                      if (jQuery2.Deferred.getStackHook) {
                        process2.stackTrace = jQuery2.Deferred.getStackHook();
                      }
                      window2.setTimeout(process2);
                    }
                  };
                }
                return jQuery2.Deferred(function(newDefer) {
                  tuples[0][3].add(resolve(0, newDefer, isFunction(onProgress) ? onProgress : Identity, newDefer.notifyWith));
                  tuples[1][3].add(resolve(0, newDefer, isFunction(onFulfilled) ? onFulfilled : Identity));
                  tuples[2][3].add(resolve(0, newDefer, isFunction(onRejected) ? onRejected : Thrower));
                }).promise();
              },
              promise: function(obj) {
                return obj != null ? jQuery2.extend(obj, promise) : promise;
              }
            }, deferred = {};
            jQuery2.each(tuples, function(i2, tuple) {
              var list = tuple[2], stateString = tuple[5];
              promise[tuple[1]] = list.add;
              if (stateString) {
                list.add(function() {
                  state = stateString;
                }, tuples[3 - i2][2].disable, tuples[3 - i2][3].disable, tuples[0][2].lock, tuples[0][3].lock);
              }
              list.add(tuple[3].fire);
              deferred[tuple[0]] = function() {
                deferred[tuple[0] + "With"](this === deferred ? void 0 : this, arguments);
                return this;
              };
              deferred[tuple[0] + "With"] = list.fireWith;
            });
            promise.promise(deferred);
            if (func) {
              func.call(deferred, deferred);
            }
            return deferred;
          },
          when: function(singleValue) {
            var remaining = arguments.length, i2 = remaining, resolveContexts = Array(i2), resolveValues = slice.call(arguments), primary = jQuery2.Deferred(), updateFunc = function(i3) {
              return function(value) {
                resolveContexts[i3] = this;
                resolveValues[i3] = arguments.length > 1 ? slice.call(arguments) : value;
                if (!--remaining) {
                  primary.resolveWith(resolveContexts, resolveValues);
                }
              };
            };
            if (remaining <= 1) {
              adoptValue(singleValue, primary.done(updateFunc(i2)).resolve, primary.reject, !remaining);
              if (primary.state() === "pending" || isFunction(resolveValues[i2] && resolveValues[i2].then)) {
                return primary.then();
              }
            }
            while (i2--) {
              adoptValue(resolveValues[i2], updateFunc(i2), primary.reject);
            }
            return primary.promise();
          }
        });
        var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
        jQuery2.Deferred.exceptionHook = function(error, stack) {
          if (window2.console && window2.console.warn && error && rerrorNames.test(error.name)) {
            window2.console.warn("jQuery.Deferred exception: " + error.message, error.stack, stack);
          }
        };
        jQuery2.readyException = function(error) {
          window2.setTimeout(function() {
            throw error;
          });
        };
        var readyList = jQuery2.Deferred();
        jQuery2.fn.ready = function(fn) {
          readyList.then(fn).catch(function(error) {
            jQuery2.readyException(error);
          });
          return this;
        };
        jQuery2.extend({
          isReady: false,
          readyWait: 1,
          ready: function(wait) {
            if (wait === true ? --jQuery2.readyWait : jQuery2.isReady) {
              return;
            }
            jQuery2.isReady = true;
            if (wait !== true && --jQuery2.readyWait > 0) {
              return;
            }
            readyList.resolveWith(document2, [jQuery2]);
          }
        });
        jQuery2.ready.then = readyList.then;
        function completed() {
          document2.removeEventListener("DOMContentLoaded", completed);
          window2.removeEventListener("load", completed);
          jQuery2.ready();
        }
        if (document2.readyState === "complete" || document2.readyState !== "loading" && !document2.documentElement.doScroll) {
          window2.setTimeout(jQuery2.ready);
        } else {
          document2.addEventListener("DOMContentLoaded", completed);
          window2.addEventListener("load", completed);
        }
        var access = function(elems, fn, key, value, chainable, emptyGet, raw) {
          var i2 = 0, len = elems.length, bulk = key == null;
          if (toType(key) === "object") {
            chainable = true;
            for (i2 in key) {
              access(elems, fn, i2, key[i2], true, emptyGet, raw);
            }
          } else if (value !== void 0) {
            chainable = true;
            if (!isFunction(value)) {
              raw = true;
            }
            if (bulk) {
              if (raw) {
                fn.call(elems, value);
                fn = null;
              } else {
                bulk = fn;
                fn = function(elem, _key, value2) {
                  return bulk.call(jQuery2(elem), value2);
                };
              }
            }
            if (fn) {
              for (; i2 < len; i2++) {
                fn(elems[i2], key, raw ? value : value.call(elems[i2], i2, fn(elems[i2], key)));
              }
            }
          }
          if (chainable) {
            return elems;
          }
          if (bulk) {
            return fn.call(elems);
          }
          return len ? fn(elems[0], key) : emptyGet;
        };
        var rmsPrefix = /^-ms-/, rdashAlpha = /-([a-z])/g;
        function fcamelCase(_all, letter) {
          return letter.toUpperCase();
        }
        function camelCase(string) {
          return string.replace(rmsPrefix, "ms-").replace(rdashAlpha, fcamelCase);
        }
        var acceptData = function(owner) {
          return owner.nodeType === 1 || owner.nodeType === 9 || !+owner.nodeType;
        };
        function Data() {
          this.expando = jQuery2.expando + Data.uid++;
        }
        Data.uid = 1;
        Data.prototype = {
          cache: function(owner) {
            var value = owner[this.expando];
            if (!value) {
              value = {};
              if (acceptData(owner)) {
                if (owner.nodeType) {
                  owner[this.expando] = value;
                } else {
                  Object.defineProperty(owner, this.expando, {
                    value,
                    configurable: true
                  });
                }
              }
            }
            return value;
          },
          set: function(owner, data, value) {
            var prop, cache = this.cache(owner);
            if (typeof data === "string") {
              cache[camelCase(data)] = value;
            } else {
              for (prop in data) {
                cache[camelCase(prop)] = data[prop];
              }
            }
            return cache;
          },
          get: function(owner, key) {
            return key === void 0 ? this.cache(owner) : owner[this.expando] && owner[this.expando][camelCase(key)];
          },
          access: function(owner, key, value) {
            if (key === void 0 || key && typeof key === "string" && value === void 0) {
              return this.get(owner, key);
            }
            this.set(owner, key, value);
            return value !== void 0 ? value : key;
          },
          remove: function(owner, key) {
            var i2, cache = owner[this.expando];
            if (cache === void 0) {
              return;
            }
            if (key !== void 0) {
              if (Array.isArray(key)) {
                key = key.map(camelCase);
              } else {
                key = camelCase(key);
                key = key in cache ? [key] : key.match(rnothtmlwhite) || [];
              }
              i2 = key.length;
              while (i2--) {
                delete cache[key[i2]];
              }
            }
            if (key === void 0 || jQuery2.isEmptyObject(cache)) {
              if (owner.nodeType) {
                owner[this.expando] = void 0;
              } else {
                delete owner[this.expando];
              }
            }
          },
          hasData: function(owner) {
            var cache = owner[this.expando];
            return cache !== void 0 && !jQuery2.isEmptyObject(cache);
          }
        };
        var dataPriv = new Data();
        var dataUser = new Data();
        var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/, rmultiDash = /[A-Z]/g;
        function getData(data) {
          if (data === "true") {
            return true;
          }
          if (data === "false") {
            return false;
          }
          if (data === "null") {
            return null;
          }
          if (data === +data + "") {
            return +data;
          }
          if (rbrace.test(data)) {
            return JSON.parse(data);
          }
          return data;
        }
        function dataAttr(elem, key, data) {
          var name;
          if (data === void 0 && elem.nodeType === 1) {
            name = "data-" + key.replace(rmultiDash, "-$&").toLowerCase();
            data = elem.getAttribute(name);
            if (typeof data === "string") {
              try {
                data = getData(data);
              } catch (e2) {
              }
              dataUser.set(elem, key, data);
            } else {
              data = void 0;
            }
          }
          return data;
        }
        jQuery2.extend({
          hasData: function(elem) {
            return dataUser.hasData(elem) || dataPriv.hasData(elem);
          },
          data: function(elem, name, data) {
            return dataUser.access(elem, name, data);
          },
          removeData: function(elem, name) {
            dataUser.remove(elem, name);
          },
          _data: function(elem, name, data) {
            return dataPriv.access(elem, name, data);
          },
          _removeData: function(elem, name) {
            dataPriv.remove(elem, name);
          }
        });
        jQuery2.fn.extend({
          data: function(key, value) {
            var i2, name, data, elem = this[0], attrs = elem && elem.attributes;
            if (key === void 0) {
              if (this.length) {
                data = dataUser.get(elem);
                if (elem.nodeType === 1 && !dataPriv.get(elem, "hasDataAttrs")) {
                  i2 = attrs.length;
                  while (i2--) {
                    if (attrs[i2]) {
                      name = attrs[i2].name;
                      if (name.indexOf("data-") === 0) {
                        name = camelCase(name.slice(5));
                        dataAttr(elem, name, data[name]);
                      }
                    }
                  }
                  dataPriv.set(elem, "hasDataAttrs", true);
                }
              }
              return data;
            }
            if (typeof key === "object") {
              return this.each(function() {
                dataUser.set(this, key);
              });
            }
            return access(this, function(value2) {
              var data2;
              if (elem && value2 === void 0) {
                data2 = dataUser.get(elem, key);
                if (data2 !== void 0) {
                  return data2;
                }
                data2 = dataAttr(elem, key);
                if (data2 !== void 0) {
                  return data2;
                }
                return;
              }
              this.each(function() {
                dataUser.set(this, key, value2);
              });
            }, null, value, arguments.length > 1, null, true);
          },
          removeData: function(key) {
            return this.each(function() {
              dataUser.remove(this, key);
            });
          }
        });
        jQuery2.extend({
          queue: function(elem, type, data) {
            var queue;
            if (elem) {
              type = (type || "fx") + "queue";
              queue = dataPriv.get(elem, type);
              if (data) {
                if (!queue || Array.isArray(data)) {
                  queue = dataPriv.access(elem, type, jQuery2.makeArray(data));
                } else {
                  queue.push(data);
                }
              }
              return queue || [];
            }
          },
          dequeue: function(elem, type) {
            type = type || "fx";
            var queue = jQuery2.queue(elem, type), startLength = queue.length, fn = queue.shift(), hooks = jQuery2._queueHooks(elem, type), next = function() {
              jQuery2.dequeue(elem, type);
            };
            if (fn === "inprogress") {
              fn = queue.shift();
              startLength--;
            }
            if (fn) {
              if (type === "fx") {
                queue.unshift("inprogress");
              }
              delete hooks.stop;
              fn.call(elem, next, hooks);
            }
            if (!startLength && hooks) {
              hooks.empty.fire();
            }
          },
          _queueHooks: function(elem, type) {
            var key = type + "queueHooks";
            return dataPriv.get(elem, key) || dataPriv.access(elem, key, {
              empty: jQuery2.Callbacks("once memory").add(function() {
                dataPriv.remove(elem, [type + "queue", key]);
              })
            });
          }
        });
        jQuery2.fn.extend({
          queue: function(type, data) {
            var setter = 2;
            if (typeof type !== "string") {
              data = type;
              type = "fx";
              setter--;
            }
            if (arguments.length < setter) {
              return jQuery2.queue(this[0], type);
            }
            return data === void 0 ? this : this.each(function() {
              var queue = jQuery2.queue(this, type, data);
              jQuery2._queueHooks(this, type);
              if (type === "fx" && queue[0] !== "inprogress") {
                jQuery2.dequeue(this, type);
              }
            });
          },
          dequeue: function(type) {
            return this.each(function() {
              jQuery2.dequeue(this, type);
            });
          },
          clearQueue: function(type) {
            return this.queue(type || "fx", []);
          },
          promise: function(type, obj) {
            var tmp, count = 1, defer = jQuery2.Deferred(), elements = this, i2 = this.length, resolve = function() {
              if (!--count) {
                defer.resolveWith(elements, [elements]);
              }
            };
            if (typeof type !== "string") {
              obj = type;
              type = void 0;
            }
            type = type || "fx";
            while (i2--) {
              tmp = dataPriv.get(elements[i2], type + "queueHooks");
              if (tmp && tmp.empty) {
                count++;
                tmp.empty.add(resolve);
              }
            }
            resolve();
            return defer.promise(obj);
          }
        });
        var pnum = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source;
        var rcssNum = new RegExp("^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i");
        var cssExpand = ["Top", "Right", "Bottom", "Left"];
        var documentElement = document2.documentElement;
        var isAttached = function(elem) {
          return jQuery2.contains(elem.ownerDocument, elem);
        }, composed = {composed: true};
        if (documentElement.getRootNode) {
          isAttached = function(elem) {
            return jQuery2.contains(elem.ownerDocument, elem) || elem.getRootNode(composed) === elem.ownerDocument;
          };
        }
        var isHiddenWithinTree = function(elem, el) {
          elem = el || elem;
          return elem.style.display === "none" || elem.style.display === "" && isAttached(elem) && jQuery2.css(elem, "display") === "none";
        };
        function adjustCSS(elem, prop, valueParts, tween) {
          var adjusted, scale, maxIterations = 20, currentValue = tween ? function() {
            return tween.cur();
          } : function() {
            return jQuery2.css(elem, prop, "");
          }, initial = currentValue(), unit = valueParts && valueParts[3] || (jQuery2.cssNumber[prop] ? "" : "px"), initialInUnit = elem.nodeType && (jQuery2.cssNumber[prop] || unit !== "px" && +initial) && rcssNum.exec(jQuery2.css(elem, prop));
          if (initialInUnit && initialInUnit[3] !== unit) {
            initial = initial / 2;
            unit = unit || initialInUnit[3];
            initialInUnit = +initial || 1;
            while (maxIterations--) {
              jQuery2.style(elem, prop, initialInUnit + unit);
              if ((1 - scale) * (1 - (scale = currentValue() / initial || 0.5)) <= 0) {
                maxIterations = 0;
              }
              initialInUnit = initialInUnit / scale;
            }
            initialInUnit = initialInUnit * 2;
            jQuery2.style(elem, prop, initialInUnit + unit);
            valueParts = valueParts || [];
          }
          if (valueParts) {
            initialInUnit = +initialInUnit || +initial || 0;
            adjusted = valueParts[1] ? initialInUnit + (valueParts[1] + 1) * valueParts[2] : +valueParts[2];
            if (tween) {
              tween.unit = unit;
              tween.start = initialInUnit;
              tween.end = adjusted;
            }
          }
          return adjusted;
        }
        var defaultDisplayMap = {};
        function getDefaultDisplay(elem) {
          var temp, doc = elem.ownerDocument, nodeName2 = elem.nodeName, display = defaultDisplayMap[nodeName2];
          if (display) {
            return display;
          }
          temp = doc.body.appendChild(doc.createElement(nodeName2));
          display = jQuery2.css(temp, "display");
          temp.parentNode.removeChild(temp);
          if (display === "none") {
            display = "block";
          }
          defaultDisplayMap[nodeName2] = display;
          return display;
        }
        function showHide(elements, show) {
          var display, elem, values = [], index = 0, length = elements.length;
          for (; index < length; index++) {
            elem = elements[index];
            if (!elem.style) {
              continue;
            }
            display = elem.style.display;
            if (show) {
              if (display === "none") {
                values[index] = dataPriv.get(elem, "display") || null;
                if (!values[index]) {
                  elem.style.display = "";
                }
              }
              if (elem.style.display === "" && isHiddenWithinTree(elem)) {
                values[index] = getDefaultDisplay(elem);
              }
            } else {
              if (display !== "none") {
                values[index] = "none";
                dataPriv.set(elem, "display", display);
              }
            }
          }
          for (index = 0; index < length; index++) {
            if (values[index] != null) {
              elements[index].style.display = values[index];
            }
          }
          return elements;
        }
        jQuery2.fn.extend({
          show: function() {
            return showHide(this, true);
          },
          hide: function() {
            return showHide(this);
          },
          toggle: function(state) {
            if (typeof state === "boolean") {
              return state ? this.show() : this.hide();
            }
            return this.each(function() {
              if (isHiddenWithinTree(this)) {
                jQuery2(this).show();
              } else {
                jQuery2(this).hide();
              }
            });
          }
        });
        var rcheckableType = /^(?:checkbox|radio)$/i;
        var rtagName = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i;
        var rscriptType = /^$|^module$|\/(?:java|ecma)script/i;
        (function() {
          var fragment = document2.createDocumentFragment(), div = fragment.appendChild(document2.createElement("div")), input = document2.createElement("input");
          input.setAttribute("type", "radio");
          input.setAttribute("checked", "checked");
          input.setAttribute("name", "t");
          div.appendChild(input);
          support.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked;
          div.innerHTML = "<textarea>x</textarea>";
          support.noCloneChecked = !!div.cloneNode(true).lastChild.defaultValue;
          div.innerHTML = "<option></option>";
          support.option = !!div.lastChild;
        })();
        var wrapMap = {
          thead: [1, "<table>", "</table>"],
          col: [2, "<table><colgroup>", "</colgroup></table>"],
          tr: [2, "<table><tbody>", "</tbody></table>"],
          td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
          _default: [0, "", ""]
        };
        wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
        wrapMap.th = wrapMap.td;
        if (!support.option) {
          wrapMap.optgroup = wrapMap.option = [1, "<select multiple='multiple'>", "</select>"];
        }
        function getAll(context, tag) {
          var ret;
          if (typeof context.getElementsByTagName !== "undefined") {
            ret = context.getElementsByTagName(tag || "*");
          } else if (typeof context.querySelectorAll !== "undefined") {
            ret = context.querySelectorAll(tag || "*");
          } else {
            ret = [];
          }
          if (tag === void 0 || tag && nodeName(context, tag)) {
            return jQuery2.merge([context], ret);
          }
          return ret;
        }
        function setGlobalEval(elems, refElements) {
          var i2 = 0, l = elems.length;
          for (; i2 < l; i2++) {
            dataPriv.set(elems[i2], "globalEval", !refElements || dataPriv.get(refElements[i2], "globalEval"));
          }
        }
        var rhtml = /<|&#?\w+;/;
        function buildFragment(elems, context, scripts, selection, ignored) {
          var elem, tmp, tag, wrap, attached, j, fragment = context.createDocumentFragment(), nodes = [], i2 = 0, l = elems.length;
          for (; i2 < l; i2++) {
            elem = elems[i2];
            if (elem || elem === 0) {
              if (toType(elem) === "object") {
                jQuery2.merge(nodes, elem.nodeType ? [elem] : elem);
              } else if (!rhtml.test(elem)) {
                nodes.push(context.createTextNode(elem));
              } else {
                tmp = tmp || fragment.appendChild(context.createElement("div"));
                tag = (rtagName.exec(elem) || ["", ""])[1].toLowerCase();
                wrap = wrapMap[tag] || wrapMap._default;
                tmp.innerHTML = wrap[1] + jQuery2.htmlPrefilter(elem) + wrap[2];
                j = wrap[0];
                while (j--) {
                  tmp = tmp.lastChild;
                }
                jQuery2.merge(nodes, tmp.childNodes);
                tmp = fragment.firstChild;
                tmp.textContent = "";
              }
            }
          }
          fragment.textContent = "";
          i2 = 0;
          while (elem = nodes[i2++]) {
            if (selection && jQuery2.inArray(elem, selection) > -1) {
              if (ignored) {
                ignored.push(elem);
              }
              continue;
            }
            attached = isAttached(elem);
            tmp = getAll(fragment.appendChild(elem), "script");
            if (attached) {
              setGlobalEval(tmp);
            }
            if (scripts) {
              j = 0;
              while (elem = tmp[j++]) {
                if (rscriptType.test(elem.type || "")) {
                  scripts.push(elem);
                }
              }
            }
          }
          return fragment;
        }
        var rtypenamespace = /^([^.]*)(?:\.(.+)|)/;
        function returnTrue() {
          return true;
        }
        function returnFalse() {
          return false;
        }
        function expectSync(elem, type) {
          return elem === safeActiveElement() === (type === "focus");
        }
        function safeActiveElement() {
          try {
            return document2.activeElement;
          } catch (err) {
          }
        }
        function on(elem, types, selector, data, fn, one) {
          var origFn, type;
          if (typeof types === "object") {
            if (typeof selector !== "string") {
              data = data || selector;
              selector = void 0;
            }
            for (type in types) {
              on(elem, type, selector, data, types[type], one);
            }
            return elem;
          }
          if (data == null && fn == null) {
            fn = selector;
            data = selector = void 0;
          } else if (fn == null) {
            if (typeof selector === "string") {
              fn = data;
              data = void 0;
            } else {
              fn = data;
              data = selector;
              selector = void 0;
            }
          }
          if (fn === false) {
            fn = returnFalse;
          } else if (!fn) {
            return elem;
          }
          if (one === 1) {
            origFn = fn;
            fn = function(event) {
              jQuery2().off(event);
              return origFn.apply(this, arguments);
            };
            fn.guid = origFn.guid || (origFn.guid = jQuery2.guid++);
          }
          return elem.each(function() {
            jQuery2.event.add(this, types, fn, data, selector);
          });
        }
        jQuery2.event = {
          global: {},
          add: function(elem, types, handler, data, selector) {
            var handleObjIn, eventHandle, tmp, events, t4, handleObj, special, handlers, type, namespaces, origType, elemData = dataPriv.get(elem);
            if (!acceptData(elem)) {
              return;
            }
            if (handler.handler) {
              handleObjIn = handler;
              handler = handleObjIn.handler;
              selector = handleObjIn.selector;
            }
            if (selector) {
              jQuery2.find.matchesSelector(documentElement, selector);
            }
            if (!handler.guid) {
              handler.guid = jQuery2.guid++;
            }
            if (!(events = elemData.events)) {
              events = elemData.events = Object.create(null);
            }
            if (!(eventHandle = elemData.handle)) {
              eventHandle = elemData.handle = function(e2) {
                return typeof jQuery2 !== "undefined" && jQuery2.event.triggered !== e2.type ? jQuery2.event.dispatch.apply(elem, arguments) : void 0;
              };
            }
            types = (types || "").match(rnothtmlwhite) || [""];
            t4 = types.length;
            while (t4--) {
              tmp = rtypenamespace.exec(types[t4]) || [];
              type = origType = tmp[1];
              namespaces = (tmp[2] || "").split(".").sort();
              if (!type) {
                continue;
              }
              special = jQuery2.event.special[type] || {};
              type = (selector ? special.delegateType : special.bindType) || type;
              special = jQuery2.event.special[type] || {};
              handleObj = jQuery2.extend({
                type,
                origType,
                data,
                handler,
                guid: handler.guid,
                selector,
                needsContext: selector && jQuery2.expr.match.needsContext.test(selector),
                namespace: namespaces.join(".")
              }, handleObjIn);
              if (!(handlers = events[type])) {
                handlers = events[type] = [];
                handlers.delegateCount = 0;
                if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {
                  if (elem.addEventListener) {
                    elem.addEventListener(type, eventHandle);
                  }
                }
              }
              if (special.add) {
                special.add.call(elem, handleObj);
                if (!handleObj.handler.guid) {
                  handleObj.handler.guid = handler.guid;
                }
              }
              if (selector) {
                handlers.splice(handlers.delegateCount++, 0, handleObj);
              } else {
                handlers.push(handleObj);
              }
              jQuery2.event.global[type] = true;
            }
          },
          remove: function(elem, types, handler, selector, mappedTypes) {
            var j, origCount, tmp, events, t4, handleObj, special, handlers, type, namespaces, origType, elemData = dataPriv.hasData(elem) && dataPriv.get(elem);
            if (!elemData || !(events = elemData.events)) {
              return;
            }
            types = (types || "").match(rnothtmlwhite) || [""];
            t4 = types.length;
            while (t4--) {
              tmp = rtypenamespace.exec(types[t4]) || [];
              type = origType = tmp[1];
              namespaces = (tmp[2] || "").split(".").sort();
              if (!type) {
                for (type in events) {
                  jQuery2.event.remove(elem, type + types[t4], handler, selector, true);
                }
                continue;
              }
              special = jQuery2.event.special[type] || {};
              type = (selector ? special.delegateType : special.bindType) || type;
              handlers = events[type] || [];
              tmp = tmp[2] && new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)");
              origCount = j = handlers.length;
              while (j--) {
                handleObj = handlers[j];
                if ((mappedTypes || origType === handleObj.origType) && (!handler || handler.guid === handleObj.guid) && (!tmp || tmp.test(handleObj.namespace)) && (!selector || selector === handleObj.selector || selector === "**" && handleObj.selector)) {
                  handlers.splice(j, 1);
                  if (handleObj.selector) {
                    handlers.delegateCount--;
                  }
                  if (special.remove) {
                    special.remove.call(elem, handleObj);
                  }
                }
              }
              if (origCount && !handlers.length) {
                if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === false) {
                  jQuery2.removeEvent(elem, type, elemData.handle);
                }
                delete events[type];
              }
            }
            if (jQuery2.isEmptyObject(events)) {
              dataPriv.remove(elem, "handle events");
            }
          },
          dispatch: function(nativeEvent) {
            var i2, j, ret, matched, handleObj, handlerQueue, args = new Array(arguments.length), event = jQuery2.event.fix(nativeEvent), handlers = (dataPriv.get(this, "events") || Object.create(null))[event.type] || [], special = jQuery2.event.special[event.type] || {};
            args[0] = event;
            for (i2 = 1; i2 < arguments.length; i2++) {
              args[i2] = arguments[i2];
            }
            event.delegateTarget = this;
            if (special.preDispatch && special.preDispatch.call(this, event) === false) {
              return;
            }
            handlerQueue = jQuery2.event.handlers.call(this, event, handlers);
            i2 = 0;
            while ((matched = handlerQueue[i2++]) && !event.isPropagationStopped()) {
              event.currentTarget = matched.elem;
              j = 0;
              while ((handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped()) {
                if (!event.rnamespace || handleObj.namespace === false || event.rnamespace.test(handleObj.namespace)) {
                  event.handleObj = handleObj;
                  event.data = handleObj.data;
                  ret = ((jQuery2.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args);
                  if (ret !== void 0) {
                    if ((event.result = ret) === false) {
                      event.preventDefault();
                      event.stopPropagation();
                    }
                  }
                }
              }
            }
            if (special.postDispatch) {
              special.postDispatch.call(this, event);
            }
            return event.result;
          },
          handlers: function(event, handlers) {
            var i2, handleObj, sel, matchedHandlers, matchedSelectors, handlerQueue = [], delegateCount = handlers.delegateCount, cur = event.target;
            if (delegateCount && cur.nodeType && !(event.type === "click" && event.button >= 1)) {
              for (; cur !== this; cur = cur.parentNode || this) {
                if (cur.nodeType === 1 && !(event.type === "click" && cur.disabled === true)) {
                  matchedHandlers = [];
                  matchedSelectors = {};
                  for (i2 = 0; i2 < delegateCount; i2++) {
                    handleObj = handlers[i2];
                    sel = handleObj.selector + " ";
                    if (matchedSelectors[sel] === void 0) {
                      matchedSelectors[sel] = handleObj.needsContext ? jQuery2(sel, this).index(cur) > -1 : jQuery2.find(sel, this, null, [cur]).length;
                    }
                    if (matchedSelectors[sel]) {
                      matchedHandlers.push(handleObj);
                    }
                  }
                  if (matchedHandlers.length) {
                    handlerQueue.push({elem: cur, handlers: matchedHandlers});
                  }
                }
              }
            }
            cur = this;
            if (delegateCount < handlers.length) {
              handlerQueue.push({elem: cur, handlers: handlers.slice(delegateCount)});
            }
            return handlerQueue;
          },
          addProp: function(name, hook) {
            Object.defineProperty(jQuery2.Event.prototype, name, {
              enumerable: true,
              configurable: true,
              get: isFunction(hook) ? function() {
                if (this.originalEvent) {
                  return hook(this.originalEvent);
                }
              } : function() {
                if (this.originalEvent) {
                  return this.originalEvent[name];
                }
              },
              set: function(value) {
                Object.defineProperty(this, name, {
                  enumerable: true,
                  configurable: true,
                  writable: true,
                  value
                });
              }
            });
          },
          fix: function(originalEvent) {
            return originalEvent[jQuery2.expando] ? originalEvent : new jQuery2.Event(originalEvent);
          },
          special: {
            load: {
              noBubble: true
            },
            click: {
              setup: function(data) {
                var el = this || data;
                if (rcheckableType.test(el.type) && el.click && nodeName(el, "input")) {
                  leverageNative(el, "click", returnTrue);
                }
                return false;
              },
              trigger: function(data) {
                var el = this || data;
                if (rcheckableType.test(el.type) && el.click && nodeName(el, "input")) {
                  leverageNative(el, "click");
                }
                return true;
              },
              _default: function(event) {
                var target = event.target;
                return rcheckableType.test(target.type) && target.click && nodeName(target, "input") && dataPriv.get(target, "click") || nodeName(target, "a");
              }
            },
            beforeunload: {
              postDispatch: function(event) {
                if (event.result !== void 0 && event.originalEvent) {
                  event.originalEvent.returnValue = event.result;
                }
              }
            }
          }
        };
        function leverageNative(el, type, expectSync2) {
          if (!expectSync2) {
            if (dataPriv.get(el, type) === void 0) {
              jQuery2.event.add(el, type, returnTrue);
            }
            return;
          }
          dataPriv.set(el, type, false);
          jQuery2.event.add(el, type, {
            namespace: false,
            handler: function(event) {
              var notAsync, result, saved = dataPriv.get(this, type);
              if (event.isTrigger & 1 && this[type]) {
                if (!saved.length) {
                  saved = slice.call(arguments);
                  dataPriv.set(this, type, saved);
                  notAsync = expectSync2(this, type);
                  this[type]();
                  result = dataPriv.get(this, type);
                  if (saved !== result || notAsync) {
                    dataPriv.set(this, type, false);
                  } else {
                    result = {};
                  }
                  if (saved !== result) {
                    event.stopImmediatePropagation();
                    event.preventDefault();
                    return result && result.value;
                  }
                } else if ((jQuery2.event.special[type] || {}).delegateType) {
                  event.stopPropagation();
                }
              } else if (saved.length) {
                dataPriv.set(this, type, {
                  value: jQuery2.event.trigger(jQuery2.extend(saved[0], jQuery2.Event.prototype), saved.slice(1), this)
                });
                event.stopImmediatePropagation();
              }
            }
          });
        }
        jQuery2.removeEvent = function(elem, type, handle) {
          if (elem.removeEventListener) {
            elem.removeEventListener(type, handle);
          }
        };
        jQuery2.Event = function(src, props) {
          if (!(this instanceof jQuery2.Event)) {
            return new jQuery2.Event(src, props);
          }
          if (src && src.type) {
            this.originalEvent = src;
            this.type = src.type;
            this.isDefaultPrevented = src.defaultPrevented || src.defaultPrevented === void 0 && src.returnValue === false ? returnTrue : returnFalse;
            this.target = src.target && src.target.nodeType === 3 ? src.target.parentNode : src.target;
            this.currentTarget = src.currentTarget;
            this.relatedTarget = src.relatedTarget;
          } else {
            this.type = src;
          }
          if (props) {
            jQuery2.extend(this, props);
          }
          this.timeStamp = src && src.timeStamp || Date.now();
          this[jQuery2.expando] = true;
        };
        jQuery2.Event.prototype = {
          constructor: jQuery2.Event,
          isDefaultPrevented: returnFalse,
          isPropagationStopped: returnFalse,
          isImmediatePropagationStopped: returnFalse,
          isSimulated: false,
          preventDefault: function() {
            var e2 = this.originalEvent;
            this.isDefaultPrevented = returnTrue;
            if (e2 && !this.isSimulated) {
              e2.preventDefault();
            }
          },
          stopPropagation: function() {
            var e2 = this.originalEvent;
            this.isPropagationStopped = returnTrue;
            if (e2 && !this.isSimulated) {
              e2.stopPropagation();
            }
          },
          stopImmediatePropagation: function() {
            var e2 = this.originalEvent;
            this.isImmediatePropagationStopped = returnTrue;
            if (e2 && !this.isSimulated) {
              e2.stopImmediatePropagation();
            }
            this.stopPropagation();
          }
        };
        jQuery2.each({
          altKey: true,
          bubbles: true,
          cancelable: true,
          changedTouches: true,
          ctrlKey: true,
          detail: true,
          eventPhase: true,
          metaKey: true,
          pageX: true,
          pageY: true,
          shiftKey: true,
          view: true,
          "char": true,
          code: true,
          charCode: true,
          key: true,
          keyCode: true,
          button: true,
          buttons: true,
          clientX: true,
          clientY: true,
          offsetX: true,
          offsetY: true,
          pointerId: true,
          pointerType: true,
          screenX: true,
          screenY: true,
          targetTouches: true,
          toElement: true,
          touches: true,
          which: true
        }, jQuery2.event.addProp);
        jQuery2.each({focus: "focusin", blur: "focusout"}, function(type, delegateType) {
          jQuery2.event.special[type] = {
            setup: function() {
              leverageNative(this, type, expectSync);
              return false;
            },
            trigger: function() {
              leverageNative(this, type);
              return true;
            },
            _default: function(event) {
              return dataPriv.get(event.target, type);
            },
            delegateType
          };
        });
        jQuery2.each({
          mouseenter: "mouseover",
          mouseleave: "mouseout",
          pointerenter: "pointerover",
          pointerleave: "pointerout"
        }, function(orig, fix) {
          jQuery2.event.special[orig] = {
            delegateType: fix,
            bindType: fix,
            handle: function(event) {
              var ret, target = this, related = event.relatedTarget, handleObj = event.handleObj;
              if (!related || related !== target && !jQuery2.contains(target, related)) {
                event.type = handleObj.origType;
                ret = handleObj.handler.apply(this, arguments);
                event.type = fix;
              }
              return ret;
            }
          };
        });
        jQuery2.fn.extend({
          on: function(types, selector, data, fn) {
            return on(this, types, selector, data, fn);
          },
          one: function(types, selector, data, fn) {
            return on(this, types, selector, data, fn, 1);
          },
          off: function(types, selector, fn) {
            var handleObj, type;
            if (types && types.preventDefault && types.handleObj) {
              handleObj = types.handleObj;
              jQuery2(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler);
              return this;
            }
            if (typeof types === "object") {
              for (type in types) {
                this.off(type, selector, types[type]);
              }
              return this;
            }
            if (selector === false || typeof selector === "function") {
              fn = selector;
              selector = void 0;
            }
            if (fn === false) {
              fn = returnFalse;
            }
            return this.each(function() {
              jQuery2.event.remove(this, types, fn, selector);
            });
          }
        });
        var rnoInnerhtml = /<script|<style|<link/i, rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i, rcleanScript = /^\s*<!\[CDATA\[|\]\]>\s*$/g;
        function manipulationTarget(elem, content) {
          if (nodeName(elem, "table") && nodeName(content.nodeType !== 11 ? content : content.firstChild, "tr")) {
            return jQuery2(elem).children("tbody")[0] || elem;
          }
          return elem;
        }
        function disableScript(elem) {
          elem.type = (elem.getAttribute("type") !== null) + "/" + elem.type;
          return elem;
        }
        function restoreScript(elem) {
          if ((elem.type || "").slice(0, 5) === "true/") {
            elem.type = elem.type.slice(5);
          } else {
            elem.removeAttribute("type");
          }
          return elem;
        }
        function cloneCopyEvent(src, dest) {
          var i2, l, type, pdataOld, udataOld, udataCur, events;
          if (dest.nodeType !== 1) {
            return;
          }
          if (dataPriv.hasData(src)) {
            pdataOld = dataPriv.get(src);
            events = pdataOld.events;
            if (events) {
              dataPriv.remove(dest, "handle events");
              for (type in events) {
                for (i2 = 0, l = events[type].length; i2 < l; i2++) {
                  jQuery2.event.add(dest, type, events[type][i2]);
                }
              }
            }
          }
          if (dataUser.hasData(src)) {
            udataOld = dataUser.access(src);
            udataCur = jQuery2.extend({}, udataOld);
            dataUser.set(dest, udataCur);
          }
        }
        function fixInput(src, dest) {
          var nodeName2 = dest.nodeName.toLowerCase();
          if (nodeName2 === "input" && rcheckableType.test(src.type)) {
            dest.checked = src.checked;
          } else if (nodeName2 === "input" || nodeName2 === "textarea") {
            dest.defaultValue = src.defaultValue;
          }
        }
        function domManip(collection, args, callback, ignored) {
          args = flat(args);
          var fragment, first, scripts, hasScripts, node, doc, i2 = 0, l = collection.length, iNoClone = l - 1, value = args[0], valueIsFunction = isFunction(value);
          if (valueIsFunction || l > 1 && typeof value === "string" && !support.checkClone && rchecked.test(value)) {
            return collection.each(function(index) {
              var self2 = collection.eq(index);
              if (valueIsFunction) {
                args[0] = value.call(this, index, self2.html());
              }
              domManip(self2, args, callback, ignored);
            });
          }
          if (l) {
            fragment = buildFragment(args, collection[0].ownerDocument, false, collection, ignored);
            first = fragment.firstChild;
            if (fragment.childNodes.length === 1) {
              fragment = first;
            }
            if (first || ignored) {
              scripts = jQuery2.map(getAll(fragment, "script"), disableScript);
              hasScripts = scripts.length;
              for (; i2 < l; i2++) {
                node = fragment;
                if (i2 !== iNoClone) {
                  node = jQuery2.clone(node, true, true);
                  if (hasScripts) {
                    jQuery2.merge(scripts, getAll(node, "script"));
                  }
                }
                callback.call(collection[i2], node, i2);
              }
              if (hasScripts) {
                doc = scripts[scripts.length - 1].ownerDocument;
                jQuery2.map(scripts, restoreScript);
                for (i2 = 0; i2 < hasScripts; i2++) {
                  node = scripts[i2];
                  if (rscriptType.test(node.type || "") && !dataPriv.access(node, "globalEval") && jQuery2.contains(doc, node)) {
                    if (node.src && (node.type || "").toLowerCase() !== "module") {
                      if (jQuery2._evalUrl && !node.noModule) {
                        jQuery2._evalUrl(node.src, {
                          nonce: node.nonce || node.getAttribute("nonce")
                        }, doc);
                      }
                    } else {
                      DOMEval(node.textContent.replace(rcleanScript, ""), node, doc);
                    }
                  }
                }
              }
            }
          }
          return collection;
        }
        function remove(elem, selector, keepData) {
          var node, nodes = selector ? jQuery2.filter(selector, elem) : elem, i2 = 0;
          for (; (node = nodes[i2]) != null; i2++) {
            if (!keepData && node.nodeType === 1) {
              jQuery2.cleanData(getAll(node));
            }
            if (node.parentNode) {
              if (keepData && isAttached(node)) {
                setGlobalEval(getAll(node, "script"));
              }
              node.parentNode.removeChild(node);
            }
          }
          return elem;
        }
        jQuery2.extend({
          htmlPrefilter: function(html) {
            return html;
          },
          clone: function(elem, dataAndEvents, deepDataAndEvents) {
            var i2, l, srcElements, destElements, clone = elem.cloneNode(true), inPage = isAttached(elem);
            if (!support.noCloneChecked && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery2.isXMLDoc(elem)) {
              destElements = getAll(clone);
              srcElements = getAll(elem);
              for (i2 = 0, l = srcElements.length; i2 < l; i2++) {
                fixInput(srcElements[i2], destElements[i2]);
              }
            }
            if (dataAndEvents) {
              if (deepDataAndEvents) {
                srcElements = srcElements || getAll(elem);
                destElements = destElements || getAll(clone);
                for (i2 = 0, l = srcElements.length; i2 < l; i2++) {
                  cloneCopyEvent(srcElements[i2], destElements[i2]);
                }
              } else {
                cloneCopyEvent(elem, clone);
              }
            }
            destElements = getAll(clone, "script");
            if (destElements.length > 0) {
              setGlobalEval(destElements, !inPage && getAll(elem, "script"));
            }
            return clone;
          },
          cleanData: function(elems) {
            var data, elem, type, special = jQuery2.event.special, i2 = 0;
            for (; (elem = elems[i2]) !== void 0; i2++) {
              if (acceptData(elem)) {
                if (data = elem[dataPriv.expando]) {
                  if (data.events) {
                    for (type in data.events) {
                      if (special[type]) {
                        jQuery2.event.remove(elem, type);
                      } else {
                        jQuery2.removeEvent(elem, type, data.handle);
                      }
                    }
                  }
                  elem[dataPriv.expando] = void 0;
                }
                if (elem[dataUser.expando]) {
                  elem[dataUser.expando] = void 0;
                }
              }
            }
          }
        });
        jQuery2.fn.extend({
          detach: function(selector) {
            return remove(this, selector, true);
          },
          remove: function(selector) {
            return remove(this, selector);
          },
          text: function(value) {
            return access(this, function(value2) {
              return value2 === void 0 ? jQuery2.text(this) : this.empty().each(function() {
                if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
                  this.textContent = value2;
                }
              });
            }, null, value, arguments.length);
          },
          append: function() {
            return domManip(this, arguments, function(elem) {
              if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
                var target = manipulationTarget(this, elem);
                target.appendChild(elem);
              }
            });
          },
          prepend: function() {
            return domManip(this, arguments, function(elem) {
              if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
                var target = manipulationTarget(this, elem);
                target.insertBefore(elem, target.firstChild);
              }
            });
          },
          before: function() {
            return domManip(this, arguments, function(elem) {
              if (this.parentNode) {
                this.parentNode.insertBefore(elem, this);
              }
            });
          },
          after: function() {
            return domManip(this, arguments, function(elem) {
              if (this.parentNode) {
                this.parentNode.insertBefore(elem, this.nextSibling);
              }
            });
          },
          empty: function() {
            var elem, i2 = 0;
            for (; (elem = this[i2]) != null; i2++) {
              if (elem.nodeType === 1) {
                jQuery2.cleanData(getAll(elem, false));
                elem.textContent = "";
              }
            }
            return this;
          },
          clone: function(dataAndEvents, deepDataAndEvents) {
            dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
            deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;
            return this.map(function() {
              return jQuery2.clone(this, dataAndEvents, deepDataAndEvents);
            });
          },
          html: function(value) {
            return access(this, function(value2) {
              var elem = this[0] || {}, i2 = 0, l = this.length;
              if (value2 === void 0 && elem.nodeType === 1) {
                return elem.innerHTML;
              }
              if (typeof value2 === "string" && !rnoInnerhtml.test(value2) && !wrapMap[(rtagName.exec(value2) || ["", ""])[1].toLowerCase()]) {
                value2 = jQuery2.htmlPrefilter(value2);
                try {
                  for (; i2 < l; i2++) {
                    elem = this[i2] || {};
                    if (elem.nodeType === 1) {
                      jQuery2.cleanData(getAll(elem, false));
                      elem.innerHTML = value2;
                    }
                  }
                  elem = 0;
                } catch (e2) {
                }
              }
              if (elem) {
                this.empty().append(value2);
              }
            }, null, value, arguments.length);
          },
          replaceWith: function() {
            var ignored = [];
            return domManip(this, arguments, function(elem) {
              var parent = this.parentNode;
              if (jQuery2.inArray(this, ignored) < 0) {
                jQuery2.cleanData(getAll(this));
                if (parent) {
                  parent.replaceChild(elem, this);
                }
              }
            }, ignored);
          }
        });
        jQuery2.each({
          appendTo: "append",
          prependTo: "prepend",
          insertBefore: "before",
          insertAfter: "after",
          replaceAll: "replaceWith"
        }, function(name, original) {
          jQuery2.fn[name] = function(selector) {
            var elems, ret = [], insert = jQuery2(selector), last = insert.length - 1, i2 = 0;
            for (; i2 <= last; i2++) {
              elems = i2 === last ? this : this.clone(true);
              jQuery2(insert[i2])[original](elems);
              push.apply(ret, elems.get());
            }
            return this.pushStack(ret);
          };
        });
        var rnumnonpx = new RegExp("^(" + pnum + ")(?!px)[a-z%]+$", "i");
        var rcustomProp = /^--/;
        var getStyles = function(elem) {
          var view = elem.ownerDocument.defaultView;
          if (!view || !view.opener) {
            view = window2;
          }
          return view.getComputedStyle(elem);
        };
        var swap = function(elem, options, callback) {
          var ret, name, old = {};
          for (name in options) {
            old[name] = elem.style[name];
            elem.style[name] = options[name];
          }
          ret = callback.call(elem);
          for (name in options) {
            elem.style[name] = old[name];
          }
          return ret;
        };
        var rboxStyle = new RegExp(cssExpand.join("|"), "i");
        var whitespace = "[\\x20\\t\\r\\n\\f]";
        var rtrimCSS = new RegExp("^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g");
        (function() {
          function computeStyleTests() {
            if (!div) {
              return;
            }
            container.style.cssText = "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0";
            div.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%";
            documentElement.appendChild(container).appendChild(div);
            var divStyle = window2.getComputedStyle(div);
            pixelPositionVal = divStyle.top !== "1%";
            reliableMarginLeftVal = roundPixelMeasures(divStyle.marginLeft) === 12;
            div.style.right = "60%";
            pixelBoxStylesVal = roundPixelMeasures(divStyle.right) === 36;
            boxSizingReliableVal = roundPixelMeasures(divStyle.width) === 36;
            div.style.position = "absolute";
            scrollboxSizeVal = roundPixelMeasures(div.offsetWidth / 3) === 12;
            documentElement.removeChild(container);
            div = null;
          }
          function roundPixelMeasures(measure) {
            return Math.round(parseFloat(measure));
          }
          var pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal, reliableTrDimensionsVal, reliableMarginLeftVal, container = document2.createElement("div"), div = document2.createElement("div");
          if (!div.style) {
            return;
          }
          div.style.backgroundClip = "content-box";
          div.cloneNode(true).style.backgroundClip = "";
          support.clearCloneStyle = div.style.backgroundClip === "content-box";
          jQuery2.extend(support, {
            boxSizingReliable: function() {
              computeStyleTests();
              return boxSizingReliableVal;
            },
            pixelBoxStyles: function() {
              computeStyleTests();
              return pixelBoxStylesVal;
            },
            pixelPosition: function() {
              computeStyleTests();
              return pixelPositionVal;
            },
            reliableMarginLeft: function() {
              computeStyleTests();
              return reliableMarginLeftVal;
            },
            scrollboxSize: function() {
              computeStyleTests();
              return scrollboxSizeVal;
            },
            reliableTrDimensions: function() {
              var table, tr, trChild, trStyle;
              if (reliableTrDimensionsVal == null) {
                table = document2.createElement("table");
                tr = document2.createElement("tr");
                trChild = document2.createElement("div");
                table.style.cssText = "position:absolute;left:-11111px;border-collapse:separate";
                tr.style.cssText = "border:1px solid";
                tr.style.height = "1px";
                trChild.style.height = "9px";
                trChild.style.display = "block";
                documentElement.appendChild(table).appendChild(tr).appendChild(trChild);
                trStyle = window2.getComputedStyle(tr);
                reliableTrDimensionsVal = parseInt(trStyle.height, 10) + parseInt(trStyle.borderTopWidth, 10) + parseInt(trStyle.borderBottomWidth, 10) === tr.offsetHeight;
                documentElement.removeChild(table);
              }
              return reliableTrDimensionsVal;
            }
          });
        })();
        function curCSS(elem, name, computed) {
          var width, minWidth, maxWidth, ret, isCustomProp = rcustomProp.test(name), style = elem.style;
          computed = computed || getStyles(elem);
          if (computed) {
            ret = computed.getPropertyValue(name) || computed[name];
            if (isCustomProp) {
              ret = ret.replace(rtrimCSS, "$1");
            }
            if (ret === "" && !isAttached(elem)) {
              ret = jQuery2.style(elem, name);
            }
            if (!support.pixelBoxStyles() && rnumnonpx.test(ret) && rboxStyle.test(name)) {
              width = style.width;
              minWidth = style.minWidth;
              maxWidth = style.maxWidth;
              style.minWidth = style.maxWidth = style.width = ret;
              ret = computed.width;
              style.width = width;
              style.minWidth = minWidth;
              style.maxWidth = maxWidth;
            }
          }
          return ret !== void 0 ? ret + "" : ret;
        }
        function addGetHookIf(conditionFn, hookFn) {
          return {
            get: function() {
              if (conditionFn()) {
                delete this.get;
                return;
              }
              return (this.get = hookFn).apply(this, arguments);
            }
          };
        }
        var cssPrefixes = ["Webkit", "Moz", "ms"], emptyStyle = document2.createElement("div").style, vendorProps = {};
        function vendorPropName(name) {
          var capName = name[0].toUpperCase() + name.slice(1), i2 = cssPrefixes.length;
          while (i2--) {
            name = cssPrefixes[i2] + capName;
            if (name in emptyStyle) {
              return name;
            }
          }
        }
        function finalPropName(name) {
          var final = jQuery2.cssProps[name] || vendorProps[name];
          if (final) {
            return final;
          }
          if (name in emptyStyle) {
            return name;
          }
          return vendorProps[name] = vendorPropName(name) || name;
        }
        var rdisplayswap = /^(none|table(?!-c[ea]).+)/, cssShow = {position: "absolute", visibility: "hidden", display: "block"}, cssNormalTransform = {
          letterSpacing: "0",
          fontWeight: "400"
        };
        function setPositiveNumber(_elem, value, subtract) {
          var matches = rcssNum.exec(value);
          return matches ? Math.max(0, matches[2] - (subtract || 0)) + (matches[3] || "px") : value;
        }
        function boxModelAdjustment(elem, dimension, box, isBorderBox, styles, computedVal) {
          var i2 = dimension === "width" ? 1 : 0, extra = 0, delta = 0;
          if (box === (isBorderBox ? "border" : "content")) {
            return 0;
          }
          for (; i2 < 4; i2 += 2) {
            if (box === "margin") {
              delta += jQuery2.css(elem, box + cssExpand[i2], true, styles);
            }
            if (!isBorderBox) {
              delta += jQuery2.css(elem, "padding" + cssExpand[i2], true, styles);
              if (box !== "padding") {
                delta += jQuery2.css(elem, "border" + cssExpand[i2] + "Width", true, styles);
              } else {
                extra += jQuery2.css(elem, "border" + cssExpand[i2] + "Width", true, styles);
              }
            } else {
              if (box === "content") {
                delta -= jQuery2.css(elem, "padding" + cssExpand[i2], true, styles);
              }
              if (box !== "margin") {
                delta -= jQuery2.css(elem, "border" + cssExpand[i2] + "Width", true, styles);
              }
            }
          }
          if (!isBorderBox && computedVal >= 0) {
            delta += Math.max(0, Math.ceil(elem["offset" + dimension[0].toUpperCase() + dimension.slice(1)] - computedVal - delta - extra - 0.5)) || 0;
          }
          return delta;
        }
        function getWidthOrHeight(elem, dimension, extra) {
          var styles = getStyles(elem), boxSizingNeeded = !support.boxSizingReliable() || extra, isBorderBox = boxSizingNeeded && jQuery2.css(elem, "boxSizing", false, styles) === "border-box", valueIsBorderBox = isBorderBox, val = curCSS(elem, dimension, styles), offsetProp = "offset" + dimension[0].toUpperCase() + dimension.slice(1);
          if (rnumnonpx.test(val)) {
            if (!extra) {
              return val;
            }
            val = "auto";
          }
          if ((!support.boxSizingReliable() && isBorderBox || !support.reliableTrDimensions() && nodeName(elem, "tr") || val === "auto" || !parseFloat(val) && jQuery2.css(elem, "display", false, styles) === "inline") && elem.getClientRects().length) {
            isBorderBox = jQuery2.css(elem, "boxSizing", false, styles) === "border-box";
            valueIsBorderBox = offsetProp in elem;
            if (valueIsBorderBox) {
              val = elem[offsetProp];
            }
          }
          val = parseFloat(val) || 0;
          return val + boxModelAdjustment(elem, dimension, extra || (isBorderBox ? "border" : "content"), valueIsBorderBox, styles, val) + "px";
        }
        jQuery2.extend({
          cssHooks: {
            opacity: {
              get: function(elem, computed) {
                if (computed) {
                  var ret = curCSS(elem, "opacity");
                  return ret === "" ? "1" : ret;
                }
              }
            }
          },
          cssNumber: {
            "animationIterationCount": true,
            "columnCount": true,
            "fillOpacity": true,
            "flexGrow": true,
            "flexShrink": true,
            "fontWeight": true,
            "gridArea": true,
            "gridColumn": true,
            "gridColumnEnd": true,
            "gridColumnStart": true,
            "gridRow": true,
            "gridRowEnd": true,
            "gridRowStart": true,
            "lineHeight": true,
            "opacity": true,
            "order": true,
            "orphans": true,
            "widows": true,
            "zIndex": true,
            "zoom": true
          },
          cssProps: {},
          style: function(elem, name, value, extra) {
            if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {
              return;
            }
            var ret, type, hooks, origName = camelCase(name), isCustomProp = rcustomProp.test(name), style = elem.style;
            if (!isCustomProp) {
              name = finalPropName(origName);
            }
            hooks = jQuery2.cssHooks[name] || jQuery2.cssHooks[origName];
            if (value !== void 0) {
              type = typeof value;
              if (type === "string" && (ret = rcssNum.exec(value)) && ret[1]) {
                value = adjustCSS(elem, name, ret);
                type = "number";
              }
              if (value == null || value !== value) {
                return;
              }
              if (type === "number" && !isCustomProp) {
                value += ret && ret[3] || (jQuery2.cssNumber[origName] ? "" : "px");
              }
              if (!support.clearCloneStyle && value === "" && name.indexOf("background") === 0) {
                style[name] = "inherit";
              }
              if (!hooks || !("set" in hooks) || (value = hooks.set(elem, value, extra)) !== void 0) {
                if (isCustomProp) {
                  style.setProperty(name, value);
                } else {
                  style[name] = value;
                }
              }
            } else {
              if (hooks && "get" in hooks && (ret = hooks.get(elem, false, extra)) !== void 0) {
                return ret;
              }
              return style[name];
            }
          },
          css: function(elem, name, extra, styles) {
            var val, num, hooks, origName = camelCase(name), isCustomProp = rcustomProp.test(name);
            if (!isCustomProp) {
              name = finalPropName(origName);
            }
            hooks = jQuery2.cssHooks[name] || jQuery2.cssHooks[origName];
            if (hooks && "get" in hooks) {
              val = hooks.get(elem, true, extra);
            }
            if (val === void 0) {
              val = curCSS(elem, name, styles);
            }
            if (val === "normal" && name in cssNormalTransform) {
              val = cssNormalTransform[name];
            }
            if (extra === "" || extra) {
              num = parseFloat(val);
              return extra === true || isFinite(num) ? num || 0 : val;
            }
            return val;
          }
        });
        jQuery2.each(["height", "width"], function(_i, dimension) {
          jQuery2.cssHooks[dimension] = {
            get: function(elem, computed, extra) {
              if (computed) {
                return rdisplayswap.test(jQuery2.css(elem, "display")) && (!elem.getClientRects().length || !elem.getBoundingClientRect().width) ? swap(elem, cssShow, function() {
                  return getWidthOrHeight(elem, dimension, extra);
                }) : getWidthOrHeight(elem, dimension, extra);
              }
            },
            set: function(elem, value, extra) {
              var matches, styles = getStyles(elem), scrollboxSizeBuggy = !support.scrollboxSize() && styles.position === "absolute", boxSizingNeeded = scrollboxSizeBuggy || extra, isBorderBox = boxSizingNeeded && jQuery2.css(elem, "boxSizing", false, styles) === "border-box", subtract = extra ? boxModelAdjustment(elem, dimension, extra, isBorderBox, styles) : 0;
              if (isBorderBox && scrollboxSizeBuggy) {
                subtract -= Math.ceil(elem["offset" + dimension[0].toUpperCase() + dimension.slice(1)] - parseFloat(styles[dimension]) - boxModelAdjustment(elem, dimension, "border", false, styles) - 0.5);
              }
              if (subtract && (matches = rcssNum.exec(value)) && (matches[3] || "px") !== "px") {
                elem.style[dimension] = value;
                value = jQuery2.css(elem, dimension);
              }
              return setPositiveNumber(elem, value, subtract);
            }
          };
        });
        jQuery2.cssHooks.marginLeft = addGetHookIf(support.reliableMarginLeft, function(elem, computed) {
          if (computed) {
            return (parseFloat(curCSS(elem, "marginLeft")) || elem.getBoundingClientRect().left - swap(elem, {marginLeft: 0}, function() {
              return elem.getBoundingClientRect().left;
            })) + "px";
          }
        });
        jQuery2.each({
          margin: "",
          padding: "",
          border: "Width"
        }, function(prefix, suffix) {
          jQuery2.cssHooks[prefix + suffix] = {
            expand: function(value) {
              var i2 = 0, expanded = {}, parts = typeof value === "string" ? value.split(" ") : [value];
              for (; i2 < 4; i2++) {
                expanded[prefix + cssExpand[i2] + suffix] = parts[i2] || parts[i2 - 2] || parts[0];
              }
              return expanded;
            }
          };
          if (prefix !== "margin") {
            jQuery2.cssHooks[prefix + suffix].set = setPositiveNumber;
          }
        });
        jQuery2.fn.extend({
          css: function(name, value) {
            return access(this, function(elem, name2, value2) {
              var styles, len, map = {}, i2 = 0;
              if (Array.isArray(name2)) {
                styles = getStyles(elem);
                len = name2.length;
                for (; i2 < len; i2++) {
                  map[name2[i2]] = jQuery2.css(elem, name2[i2], false, styles);
                }
                return map;
              }
              return value2 !== void 0 ? jQuery2.style(elem, name2, value2) : jQuery2.css(elem, name2);
            }, name, value, arguments.length > 1);
          }
        });
        function Tween(elem, options, prop, end, easing) {
          return new Tween.prototype.init(elem, options, prop, end, easing);
        }
        jQuery2.Tween = Tween;
        Tween.prototype = {
          constructor: Tween,
          init: function(elem, options, prop, end, easing, unit) {
            this.elem = elem;
            this.prop = prop;
            this.easing = easing || jQuery2.easing._default;
            this.options = options;
            this.start = this.now = this.cur();
            this.end = end;
            this.unit = unit || (jQuery2.cssNumber[prop] ? "" : "px");
          },
          cur: function() {
            var hooks = Tween.propHooks[this.prop];
            return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this);
          },
          run: function(percent) {
            var eased, hooks = Tween.propHooks[this.prop];
            if (this.options.duration) {
              this.pos = eased = jQuery2.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration);
            } else {
              this.pos = eased = percent;
            }
            this.now = (this.end - this.start) * eased + this.start;
            if (this.options.step) {
              this.options.step.call(this.elem, this.now, this);
            }
            if (hooks && hooks.set) {
              hooks.set(this);
            } else {
              Tween.propHooks._default.set(this);
            }
            return this;
          }
        };
        Tween.prototype.init.prototype = Tween.prototype;
        Tween.propHooks = {
          _default: {
            get: function(tween) {
              var result;
              if (tween.elem.nodeType !== 1 || tween.elem[tween.prop] != null && tween.elem.style[tween.prop] == null) {
                return tween.elem[tween.prop];
              }
              result = jQuery2.css(tween.elem, tween.prop, "");
              return !result || result === "auto" ? 0 : result;
            },
            set: function(tween) {
              if (jQuery2.fx.step[tween.prop]) {
                jQuery2.fx.step[tween.prop](tween);
              } else if (tween.elem.nodeType === 1 && (jQuery2.cssHooks[tween.prop] || tween.elem.style[finalPropName(tween.prop)] != null)) {
                jQuery2.style(tween.elem, tween.prop, tween.now + tween.unit);
              } else {
                tween.elem[tween.prop] = tween.now;
              }
            }
          }
        };
        Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
          set: function(tween) {
            if (tween.elem.nodeType && tween.elem.parentNode) {
              tween.elem[tween.prop] = tween.now;
            }
          }
        };
        jQuery2.easing = {
          linear: function(p) {
            return p;
          },
          swing: function(p) {
            return 0.5 - Math.cos(p * Math.PI) / 2;
          },
          _default: "swing"
        };
        jQuery2.fx = Tween.prototype.init;
        jQuery2.fx.step = {};
        var fxNow, inProgress, rfxtypes = /^(?:toggle|show|hide)$/, rrun = /queueHooks$/;
        function schedule() {
          if (inProgress) {
            if (document2.hidden === false && window2.requestAnimationFrame) {
              window2.requestAnimationFrame(schedule);
            } else {
              window2.setTimeout(schedule, jQuery2.fx.interval);
            }
            jQuery2.fx.tick();
          }
        }
        function createFxNow() {
          window2.setTimeout(function() {
            fxNow = void 0;
          });
          return fxNow = Date.now();
        }
        function genFx(type, includeWidth) {
          var which, i2 = 0, attrs = {height: type};
          includeWidth = includeWidth ? 1 : 0;
          for (; i2 < 4; i2 += 2 - includeWidth) {
            which = cssExpand[i2];
            attrs["margin" + which] = attrs["padding" + which] = type;
          }
          if (includeWidth) {
            attrs.opacity = attrs.width = type;
          }
          return attrs;
        }
        function createTween(value, prop, animation) {
          var tween, collection = (Animation.tweeners[prop] || []).concat(Animation.tweeners["*"]), index = 0, length = collection.length;
          for (; index < length; index++) {
            if (tween = collection[index].call(animation, prop, value)) {
              return tween;
            }
          }
        }
        function defaultPrefilter(elem, props, opts) {
          var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display, isBox = "width" in props || "height" in props, anim = this, orig = {}, style = elem.style, hidden = elem.nodeType && isHiddenWithinTree(elem), dataShow = dataPriv.get(elem, "fxshow");
          if (!opts.queue) {
            hooks = jQuery2._queueHooks(elem, "fx");
            if (hooks.unqueued == null) {
              hooks.unqueued = 0;
              oldfire = hooks.empty.fire;
              hooks.empty.fire = function() {
                if (!hooks.unqueued) {
                  oldfire();
                }
              };
            }
            hooks.unqueued++;
            anim.always(function() {
              anim.always(function() {
                hooks.unqueued--;
                if (!jQuery2.queue(elem, "fx").length) {
                  hooks.empty.fire();
                }
              });
            });
          }
          for (prop in props) {
            value = props[prop];
            if (rfxtypes.test(value)) {
              delete props[prop];
              toggle = toggle || value === "toggle";
              if (value === (hidden ? "hide" : "show")) {
                if (value === "show" && dataShow && dataShow[prop] !== void 0) {
                  hidden = true;
                } else {
                  continue;
                }
              }
              orig[prop] = dataShow && dataShow[prop] || jQuery2.style(elem, prop);
            }
          }
          propTween = !jQuery2.isEmptyObject(props);
          if (!propTween && jQuery2.isEmptyObject(orig)) {
            return;
          }
          if (isBox && elem.nodeType === 1) {
            opts.overflow = [style.overflow, style.overflowX, style.overflowY];
            restoreDisplay = dataShow && dataShow.display;
            if (restoreDisplay == null) {
              restoreDisplay = dataPriv.get(elem, "display");
            }
            display = jQuery2.css(elem, "display");
            if (display === "none") {
              if (restoreDisplay) {
                display = restoreDisplay;
              } else {
                showHide([elem], true);
                restoreDisplay = elem.style.display || restoreDisplay;
                display = jQuery2.css(elem, "display");
                showHide([elem]);
              }
            }
            if (display === "inline" || display === "inline-block" && restoreDisplay != null) {
              if (jQuery2.css(elem, "float") === "none") {
                if (!propTween) {
                  anim.done(function() {
                    style.display = restoreDisplay;
                  });
                  if (restoreDisplay == null) {
                    display = style.display;
                    restoreDisplay = display === "none" ? "" : display;
                  }
                }
                style.display = "inline-block";
              }
            }
          }
          if (opts.overflow) {
            style.overflow = "hidden";
            anim.always(function() {
              style.overflow = opts.overflow[0];
              style.overflowX = opts.overflow[1];
              style.overflowY = opts.overflow[2];
            });
          }
          propTween = false;
          for (prop in orig) {
            if (!propTween) {
              if (dataShow) {
                if ("hidden" in dataShow) {
                  hidden = dataShow.hidden;
                }
              } else {
                dataShow = dataPriv.access(elem, "fxshow", {display: restoreDisplay});
              }
              if (toggle) {
                dataShow.hidden = !hidden;
              }
              if (hidden) {
                showHide([elem], true);
              }
              anim.done(function() {
                if (!hidden) {
                  showHide([elem]);
                }
                dataPriv.remove(elem, "fxshow");
                for (prop in orig) {
                  jQuery2.style(elem, prop, orig[prop]);
                }
              });
            }
            propTween = createTween(hidden ? dataShow[prop] : 0, prop, anim);
            if (!(prop in dataShow)) {
              dataShow[prop] = propTween.start;
              if (hidden) {
                propTween.end = propTween.start;
                propTween.start = 0;
              }
            }
          }
        }
        function propFilter(props, specialEasing) {
          var index, name, easing, value, hooks;
          for (index in props) {
            name = camelCase(index);
            easing = specialEasing[name];
            value = props[index];
            if (Array.isArray(value)) {
              easing = value[1];
              value = props[index] = value[0];
            }
            if (index !== name) {
              props[name] = value;
              delete props[index];
            }
            hooks = jQuery2.cssHooks[name];
            if (hooks && "expand" in hooks) {
              value = hooks.expand(value);
              delete props[name];
              for (index in value) {
                if (!(index in props)) {
                  props[index] = value[index];
                  specialEasing[index] = easing;
                }
              }
            } else {
              specialEasing[name] = easing;
            }
          }
        }
        function Animation(elem, properties, options) {
          var result, stopped, index = 0, length = Animation.prefilters.length, deferred = jQuery2.Deferred().always(function() {
            delete tick.elem;
          }), tick = function() {
            if (stopped) {
              return false;
            }
            var currentTime = fxNow || createFxNow(), remaining = Math.max(0, animation.startTime + animation.duration - currentTime), temp = remaining / animation.duration || 0, percent = 1 - temp, index2 = 0, length2 = animation.tweens.length;
            for (; index2 < length2; index2++) {
              animation.tweens[index2].run(percent);
            }
            deferred.notifyWith(elem, [animation, percent, remaining]);
            if (percent < 1 && length2) {
              return remaining;
            }
            if (!length2) {
              deferred.notifyWith(elem, [animation, 1, 0]);
            }
            deferred.resolveWith(elem, [animation]);
            return false;
          }, animation = deferred.promise({
            elem,
            props: jQuery2.extend({}, properties),
            opts: jQuery2.extend(true, {
              specialEasing: {},
              easing: jQuery2.easing._default
            }, options),
            originalProperties: properties,
            originalOptions: options,
            startTime: fxNow || createFxNow(),
            duration: options.duration,
            tweens: [],
            createTween: function(prop, end) {
              var tween = jQuery2.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);
              animation.tweens.push(tween);
              return tween;
            },
            stop: function(gotoEnd) {
              var index2 = 0, length2 = gotoEnd ? animation.tweens.length : 0;
              if (stopped) {
                return this;
              }
              stopped = true;
              for (; index2 < length2; index2++) {
                animation.tweens[index2].run(1);
              }
              if (gotoEnd) {
                deferred.notifyWith(elem, [animation, 1, 0]);
                deferred.resolveWith(elem, [animation, gotoEnd]);
              } else {
                deferred.rejectWith(elem, [animation, gotoEnd]);
              }
              return this;
            }
          }), props = animation.props;
          propFilter(props, animation.opts.specialEasing);
          for (; index < length; index++) {
            result = Animation.prefilters[index].call(animation, elem, props, animation.opts);
            if (result) {
              if (isFunction(result.stop)) {
                jQuery2._queueHooks(animation.elem, animation.opts.queue).stop = result.stop.bind(result);
              }
              return result;
            }
          }
          jQuery2.map(props, createTween, animation);
          if (isFunction(animation.opts.start)) {
            animation.opts.start.call(elem, animation);
          }
          animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);
          jQuery2.fx.timer(jQuery2.extend(tick, {
            elem,
            anim: animation,
            queue: animation.opts.queue
          }));
          return animation;
        }
        jQuery2.Animation = jQuery2.extend(Animation, {
          tweeners: {
            "*": [function(prop, value) {
              var tween = this.createTween(prop, value);
              adjustCSS(tween.elem, prop, rcssNum.exec(value), tween);
              return tween;
            }]
          },
          tweener: function(props, callback) {
            if (isFunction(props)) {
              callback = props;
              props = ["*"];
            } else {
              props = props.match(rnothtmlwhite);
            }
            var prop, index = 0, length = props.length;
            for (; index < length; index++) {
              prop = props[index];
              Animation.tweeners[prop] = Animation.tweeners[prop] || [];
              Animation.tweeners[prop].unshift(callback);
            }
          },
          prefilters: [defaultPrefilter],
          prefilter: function(callback, prepend) {
            if (prepend) {
              Animation.prefilters.unshift(callback);
            } else {
              Animation.prefilters.push(callback);
            }
          }
        });
        jQuery2.speed = function(speed, easing, fn) {
          var opt = speed && typeof speed === "object" ? jQuery2.extend({}, speed) : {
            complete: fn || !fn && easing || isFunction(speed) && speed,
            duration: speed,
            easing: fn && easing || easing && !isFunction(easing) && easing
          };
          if (jQuery2.fx.off) {
            opt.duration = 0;
          } else {
            if (typeof opt.duration !== "number") {
              if (opt.duration in jQuery2.fx.speeds) {
                opt.duration = jQuery2.fx.speeds[opt.duration];
              } else {
                opt.duration = jQuery2.fx.speeds._default;
              }
            }
          }
          if (opt.queue == null || opt.queue === true) {
            opt.queue = "fx";
          }
          opt.old = opt.complete;
          opt.complete = function() {
            if (isFunction(opt.old)) {
              opt.old.call(this);
            }
            if (opt.queue) {
              jQuery2.dequeue(this, opt.queue);
            }
          };
          return opt;
        };
        jQuery2.fn.extend({
          fadeTo: function(speed, to, easing, callback) {
            return this.filter(isHiddenWithinTree).css("opacity", 0).show().end().animate({opacity: to}, speed, easing, callback);
          },
          animate: function(prop, speed, easing, callback) {
            var empty = jQuery2.isEmptyObject(prop), optall = jQuery2.speed(speed, easing, callback), doAnimation = function() {
              var anim = Animation(this, jQuery2.extend({}, prop), optall);
              if (empty || dataPriv.get(this, "finish")) {
                anim.stop(true);
              }
            };
            doAnimation.finish = doAnimation;
            return empty || optall.queue === false ? this.each(doAnimation) : this.queue(optall.queue, doAnimation);
          },
          stop: function(type, clearQueue, gotoEnd) {
            var stopQueue = function(hooks) {
              var stop = hooks.stop;
              delete hooks.stop;
              stop(gotoEnd);
            };
            if (typeof type !== "string") {
              gotoEnd = clearQueue;
              clearQueue = type;
              type = void 0;
            }
            if (clearQueue) {
              this.queue(type || "fx", []);
            }
            return this.each(function() {
              var dequeue = true, index = type != null && type + "queueHooks", timers = jQuery2.timers, data = dataPriv.get(this);
              if (index) {
                if (data[index] && data[index].stop) {
                  stopQueue(data[index]);
                }
              } else {
                for (index in data) {
                  if (data[index] && data[index].stop && rrun.test(index)) {
                    stopQueue(data[index]);
                  }
                }
              }
              for (index = timers.length; index--; ) {
                if (timers[index].elem === this && (type == null || timers[index].queue === type)) {
                  timers[index].anim.stop(gotoEnd);
                  dequeue = false;
                  timers.splice(index, 1);
                }
              }
              if (dequeue || !gotoEnd) {
                jQuery2.dequeue(this, type);
              }
            });
          },
          finish: function(type) {
            if (type !== false) {
              type = type || "fx";
            }
            return this.each(function() {
              var index, data = dataPriv.get(this), queue = data[type + "queue"], hooks = data[type + "queueHooks"], timers = jQuery2.timers, length = queue ? queue.length : 0;
              data.finish = true;
              jQuery2.queue(this, type, []);
              if (hooks && hooks.stop) {
                hooks.stop.call(this, true);
              }
              for (index = timers.length; index--; ) {
                if (timers[index].elem === this && timers[index].queue === type) {
                  timers[index].anim.stop(true);
                  timers.splice(index, 1);
                }
              }
              for (index = 0; index < length; index++) {
                if (queue[index] && queue[index].finish) {
                  queue[index].finish.call(this);
                }
              }
              delete data.finish;
            });
          }
        });
        jQuery2.each(["toggle", "show", "hide"], function(_i, name) {
          var cssFn = jQuery2.fn[name];
          jQuery2.fn[name] = function(speed, easing, callback) {
            return speed == null || typeof speed === "boolean" ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);
          };
        });
        jQuery2.each({
          slideDown: genFx("show"),
          slideUp: genFx("hide"),
          slideToggle: genFx("toggle"),
          fadeIn: {opacity: "show"},
          fadeOut: {opacity: "hide"},
          fadeToggle: {opacity: "toggle"}
        }, function(name, props) {
          jQuery2.fn[name] = function(speed, easing, callback) {
            return this.animate(props, speed, easing, callback);
          };
        });
        jQuery2.timers = [];
        jQuery2.fx.tick = function() {
          var timer, i2 = 0, timers = jQuery2.timers;
          fxNow = Date.now();
          for (; i2 < timers.length; i2++) {
            timer = timers[i2];
            if (!timer() && timers[i2] === timer) {
              timers.splice(i2--, 1);
            }
          }
          if (!timers.length) {
            jQuery2.fx.stop();
          }
          fxNow = void 0;
        };
        jQuery2.fx.timer = function(timer) {
          jQuery2.timers.push(timer);
          jQuery2.fx.start();
        };
        jQuery2.fx.interval = 13;
        jQuery2.fx.start = function() {
          if (inProgress) {
            return;
          }
          inProgress = true;
          schedule();
        };
        jQuery2.fx.stop = function() {
          inProgress = null;
        };
        jQuery2.fx.speeds = {
          slow: 600,
          fast: 200,
          _default: 400
        };
        jQuery2.fn.delay = function(time, type) {
          time = jQuery2.fx ? jQuery2.fx.speeds[time] || time : time;
          type = type || "fx";
          return this.queue(type, function(next, hooks) {
            var timeout = window2.setTimeout(next, time);
            hooks.stop = function() {
              window2.clearTimeout(timeout);
            };
          });
        };
        (function() {
          var input = document2.createElement("input"), select = document2.createElement("select"), opt = select.appendChild(document2.createElement("option"));
          input.type = "checkbox";
          support.checkOn = input.value !== "";
          support.optSelected = opt.selected;
          input = document2.createElement("input");
          input.value = "t";
          input.type = "radio";
          support.radioValue = input.value === "t";
        })();
        var boolHook, attrHandle = jQuery2.expr.attrHandle;
        jQuery2.fn.extend({
          attr: function(name, value) {
            return access(this, jQuery2.attr, name, value, arguments.length > 1);
          },
          removeAttr: function(name) {
            return this.each(function() {
              jQuery2.removeAttr(this, name);
            });
          }
        });
        jQuery2.extend({
          attr: function(elem, name, value) {
            var ret, hooks, nType = elem.nodeType;
            if (nType === 3 || nType === 8 || nType === 2) {
              return;
            }
            if (typeof elem.getAttribute === "undefined") {
              return jQuery2.prop(elem, name, value);
            }
            if (nType !== 1 || !jQuery2.isXMLDoc(elem)) {
              hooks = jQuery2.attrHooks[name.toLowerCase()] || (jQuery2.expr.match.bool.test(name) ? boolHook : void 0);
            }
            if (value !== void 0) {
              if (value === null) {
                jQuery2.removeAttr(elem, name);
                return;
              }
              if (hooks && "set" in hooks && (ret = hooks.set(elem, value, name)) !== void 0) {
                return ret;
              }
              elem.setAttribute(name, value + "");
              return value;
            }
            if (hooks && "get" in hooks && (ret = hooks.get(elem, name)) !== null) {
              return ret;
            }
            ret = jQuery2.find.attr(elem, name);
            return ret == null ? void 0 : ret;
          },
          attrHooks: {
            type: {
              set: function(elem, value) {
                if (!support.radioValue && value === "radio" && nodeName(elem, "input")) {
                  var val = elem.value;
                  elem.setAttribute("type", value);
                  if (val) {
                    elem.value = val;
                  }
                  return value;
                }
              }
            }
          },
          removeAttr: function(elem, value) {
            var name, i2 = 0, attrNames = value && value.match(rnothtmlwhite);
            if (attrNames && elem.nodeType === 1) {
              while (name = attrNames[i2++]) {
                elem.removeAttribute(name);
              }
            }
          }
        });
        boolHook = {
          set: function(elem, value, name) {
            if (value === false) {
              jQuery2.removeAttr(elem, name);
            } else {
              elem.setAttribute(name, name);
            }
            return name;
          }
        };
        jQuery2.each(jQuery2.expr.match.bool.source.match(/\w+/g), function(_i, name) {
          var getter = attrHandle[name] || jQuery2.find.attr;
          attrHandle[name] = function(elem, name2, isXML) {
            var ret, handle, lowercaseName = name2.toLowerCase();
            if (!isXML) {
              handle = attrHandle[lowercaseName];
              attrHandle[lowercaseName] = ret;
              ret = getter(elem, name2, isXML) != null ? lowercaseName : null;
              attrHandle[lowercaseName] = handle;
            }
            return ret;
          };
        });
        var rfocusable = /^(?:input|select|textarea|button)$/i, rclickable = /^(?:a|area)$/i;
        jQuery2.fn.extend({
          prop: function(name, value) {
            return access(this, jQuery2.prop, name, value, arguments.length > 1);
          },
          removeProp: function(name) {
            return this.each(function() {
              delete this[jQuery2.propFix[name] || name];
            });
          }
        });
        jQuery2.extend({
          prop: function(elem, name, value) {
            var ret, hooks, nType = elem.nodeType;
            if (nType === 3 || nType === 8 || nType === 2) {
              return;
            }
            if (nType !== 1 || !jQuery2.isXMLDoc(elem)) {
              name = jQuery2.propFix[name] || name;
              hooks = jQuery2.propHooks[name];
            }
            if (value !== void 0) {
              if (hooks && "set" in hooks && (ret = hooks.set(elem, value, name)) !== void 0) {
                return ret;
              }
              return elem[name] = value;
            }
            if (hooks && "get" in hooks && (ret = hooks.get(elem, name)) !== null) {
              return ret;
            }
            return elem[name];
          },
          propHooks: {
            tabIndex: {
              get: function(elem) {
                var tabindex = jQuery2.find.attr(elem, "tabindex");
                if (tabindex) {
                  return parseInt(tabindex, 10);
                }
                if (rfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href) {
                  return 0;
                }
                return -1;
              }
            }
          },
          propFix: {
            "for": "htmlFor",
            "class": "className"
          }
        });
        if (!support.optSelected) {
          jQuery2.propHooks.selected = {
            get: function(elem) {
              var parent = elem.parentNode;
              if (parent && parent.parentNode) {
                parent.parentNode.selectedIndex;
              }
              return null;
            },
            set: function(elem) {
              var parent = elem.parentNode;
              if (parent) {
                parent.selectedIndex;
                if (parent.parentNode) {
                  parent.parentNode.selectedIndex;
                }
              }
            }
          };
        }
        jQuery2.each([
          "tabIndex",
          "readOnly",
          "maxLength",
          "cellSpacing",
          "cellPadding",
          "rowSpan",
          "colSpan",
          "useMap",
          "frameBorder",
          "contentEditable"
        ], function() {
          jQuery2.propFix[this.toLowerCase()] = this;
        });
        function stripAndCollapse(value) {
          var tokens = value.match(rnothtmlwhite) || [];
          return tokens.join(" ");
        }
        function getClass(elem) {
          return elem.getAttribute && elem.getAttribute("class") || "";
        }
        function classesToArray(value) {
          if (Array.isArray(value)) {
            return value;
          }
          if (typeof value === "string") {
            return value.match(rnothtmlwhite) || [];
          }
          return [];
        }
        jQuery2.fn.extend({
          addClass: function(value) {
            var classNames, cur, curValue, className, i2, finalValue;
            if (isFunction(value)) {
              return this.each(function(j) {
                jQuery2(this).addClass(value.call(this, j, getClass(this)));
              });
            }
            classNames = classesToArray(value);
            if (classNames.length) {
              return this.each(function() {
                curValue = getClass(this);
                cur = this.nodeType === 1 && " " + stripAndCollapse(curValue) + " ";
                if (cur) {
                  for (i2 = 0; i2 < classNames.length; i2++) {
                    className = classNames[i2];
                    if (cur.indexOf(" " + className + " ") < 0) {
                      cur += className + " ";
                    }
                  }
                  finalValue = stripAndCollapse(cur);
                  if (curValue !== finalValue) {
                    this.setAttribute("class", finalValue);
                  }
                }
              });
            }
            return this;
          },
          removeClass: function(value) {
            var classNames, cur, curValue, className, i2, finalValue;
            if (isFunction(value)) {
              return this.each(function(j) {
                jQuery2(this).removeClass(value.call(this, j, getClass(this)));
              });
            }
            if (!arguments.length) {
              return this.attr("class", "");
            }
            classNames = classesToArray(value);
            if (classNames.length) {
              return this.each(function() {
                curValue = getClass(this);
                cur = this.nodeType === 1 && " " + stripAndCollapse(curValue) + " ";
                if (cur) {
                  for (i2 = 0; i2 < classNames.length; i2++) {
                    className = classNames[i2];
                    while (cur.indexOf(" " + className + " ") > -1) {
                      cur = cur.replace(" " + className + " ", " ");
                    }
                  }
                  finalValue = stripAndCollapse(cur);
                  if (curValue !== finalValue) {
                    this.setAttribute("class", finalValue);
                  }
                }
              });
            }
            return this;
          },
          toggleClass: function(value, stateVal) {
            var classNames, className, i2, self2, type = typeof value, isValidValue = type === "string" || Array.isArray(value);
            if (isFunction(value)) {
              return this.each(function(i3) {
                jQuery2(this).toggleClass(value.call(this, i3, getClass(this), stateVal), stateVal);
              });
            }
            if (typeof stateVal === "boolean" && isValidValue) {
              return stateVal ? this.addClass(value) : this.removeClass(value);
            }
            classNames = classesToArray(value);
            return this.each(function() {
              if (isValidValue) {
                self2 = jQuery2(this);
                for (i2 = 0; i2 < classNames.length; i2++) {
                  className = classNames[i2];
                  if (self2.hasClass(className)) {
                    self2.removeClass(className);
                  } else {
                    self2.addClass(className);
                  }
                }
              } else if (value === void 0 || type === "boolean") {
                className = getClass(this);
                if (className) {
                  dataPriv.set(this, "__className__", className);
                }
                if (this.setAttribute) {
                  this.setAttribute("class", className || value === false ? "" : dataPriv.get(this, "__className__") || "");
                }
              }
            });
          },
          hasClass: function(selector) {
            var className, elem, i2 = 0;
            className = " " + selector + " ";
            while (elem = this[i2++]) {
              if (elem.nodeType === 1 && (" " + stripAndCollapse(getClass(elem)) + " ").indexOf(className) > -1) {
                return true;
              }
            }
            return false;
          }
        });
        var rreturn = /\r/g;
        jQuery2.fn.extend({
          val: function(value) {
            var hooks, ret, valueIsFunction, elem = this[0];
            if (!arguments.length) {
              if (elem) {
                hooks = jQuery2.valHooks[elem.type] || jQuery2.valHooks[elem.nodeName.toLowerCase()];
                if (hooks && "get" in hooks && (ret = hooks.get(elem, "value")) !== void 0) {
                  return ret;
                }
                ret = elem.value;
                if (typeof ret === "string") {
                  return ret.replace(rreturn, "");
                }
                return ret == null ? "" : ret;
              }
              return;
            }
            valueIsFunction = isFunction(value);
            return this.each(function(i2) {
              var val;
              if (this.nodeType !== 1) {
                return;
              }
              if (valueIsFunction) {
                val = value.call(this, i2, jQuery2(this).val());
              } else {
                val = value;
              }
              if (val == null) {
                val = "";
              } else if (typeof val === "number") {
                val += "";
              } else if (Array.isArray(val)) {
                val = jQuery2.map(val, function(value2) {
                  return value2 == null ? "" : value2 + "";
                });
              }
              hooks = jQuery2.valHooks[this.type] || jQuery2.valHooks[this.nodeName.toLowerCase()];
              if (!hooks || !("set" in hooks) || hooks.set(this, val, "value") === void 0) {
                this.value = val;
              }
            });
          }
        });
        jQuery2.extend({
          valHooks: {
            option: {
              get: function(elem) {
                var val = jQuery2.find.attr(elem, "value");
                return val != null ? val : stripAndCollapse(jQuery2.text(elem));
              }
            },
            select: {
              get: function(elem) {
                var value, option, i2, options = elem.options, index = elem.selectedIndex, one = elem.type === "select-one", values = one ? null : [], max = one ? index + 1 : options.length;
                if (index < 0) {
                  i2 = max;
                } else {
                  i2 = one ? index : 0;
                }
                for (; i2 < max; i2++) {
                  option = options[i2];
                  if ((option.selected || i2 === index) && !option.disabled && (!option.parentNode.disabled || !nodeName(option.parentNode, "optgroup"))) {
                    value = jQuery2(option).val();
                    if (one) {
                      return value;
                    }
                    values.push(value);
                  }
                }
                return values;
              },
              set: function(elem, value) {
                var optionSet, option, options = elem.options, values = jQuery2.makeArray(value), i2 = options.length;
                while (i2--) {
                  option = options[i2];
                  if (option.selected = jQuery2.inArray(jQuery2.valHooks.option.get(option), values) > -1) {
                    optionSet = true;
                  }
                }
                if (!optionSet) {
                  elem.selectedIndex = -1;
                }
                return values;
              }
            }
          }
        });
        jQuery2.each(["radio", "checkbox"], function() {
          jQuery2.valHooks[this] = {
            set: function(elem, value) {
              if (Array.isArray(value)) {
                return elem.checked = jQuery2.inArray(jQuery2(elem).val(), value) > -1;
              }
            }
          };
          if (!support.checkOn) {
            jQuery2.valHooks[this].get = function(elem) {
              return elem.getAttribute("value") === null ? "on" : elem.value;
            };
          }
        });
        support.focusin = "onfocusin" in window2;
        var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/, stopPropagationCallback = function(e2) {
          e2.stopPropagation();
        };
        jQuery2.extend(jQuery2.event, {
          trigger: function(event, data, elem, onlyHandlers) {
            var i2, cur, tmp, bubbleType, ontype, handle, special, lastElement, eventPath = [elem || document2], type = hasOwn.call(event, "type") ? event.type : event, namespaces = hasOwn.call(event, "namespace") ? event.namespace.split(".") : [];
            cur = lastElement = tmp = elem = elem || document2;
            if (elem.nodeType === 3 || elem.nodeType === 8) {
              return;
            }
            if (rfocusMorph.test(type + jQuery2.event.triggered)) {
              return;
            }
            if (type.indexOf(".") > -1) {
              namespaces = type.split(".");
              type = namespaces.shift();
              namespaces.sort();
            }
            ontype = type.indexOf(":") < 0 && "on" + type;
            event = event[jQuery2.expando] ? event : new jQuery2.Event(type, typeof event === "object" && event);
            event.isTrigger = onlyHandlers ? 2 : 3;
            event.namespace = namespaces.join(".");
            event.rnamespace = event.namespace ? new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)") : null;
            event.result = void 0;
            if (!event.target) {
              event.target = elem;
            }
            data = data == null ? [event] : jQuery2.makeArray(data, [event]);
            special = jQuery2.event.special[type] || {};
            if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === false) {
              return;
            }
            if (!onlyHandlers && !special.noBubble && !isWindow(elem)) {
              bubbleType = special.delegateType || type;
              if (!rfocusMorph.test(bubbleType + type)) {
                cur = cur.parentNode;
              }
              for (; cur; cur = cur.parentNode) {
                eventPath.push(cur);
                tmp = cur;
              }
              if (tmp === (elem.ownerDocument || document2)) {
                eventPath.push(tmp.defaultView || tmp.parentWindow || window2);
              }
            }
            i2 = 0;
            while ((cur = eventPath[i2++]) && !event.isPropagationStopped()) {
              lastElement = cur;
              event.type = i2 > 1 ? bubbleType : special.bindType || type;
              handle = (dataPriv.get(cur, "events") || Object.create(null))[event.type] && dataPriv.get(cur, "handle");
              if (handle) {
                handle.apply(cur, data);
              }
              handle = ontype && cur[ontype];
              if (handle && handle.apply && acceptData(cur)) {
                event.result = handle.apply(cur, data);
                if (event.result === false) {
                  event.preventDefault();
                }
              }
            }
            event.type = type;
            if (!onlyHandlers && !event.isDefaultPrevented()) {
              if ((!special._default || special._default.apply(eventPath.pop(), data) === false) && acceptData(elem)) {
                if (ontype && isFunction(elem[type]) && !isWindow(elem)) {
                  tmp = elem[ontype];
                  if (tmp) {
                    elem[ontype] = null;
                  }
                  jQuery2.event.triggered = type;
                  if (event.isPropagationStopped()) {
                    lastElement.addEventListener(type, stopPropagationCallback);
                  }
                  elem[type]();
                  if (event.isPropagationStopped()) {
                    lastElement.removeEventListener(type, stopPropagationCallback);
                  }
                  jQuery2.event.triggered = void 0;
                  if (tmp) {
                    elem[ontype] = tmp;
                  }
                }
              }
            }
            return event.result;
          },
          simulate: function(type, elem, event) {
            var e2 = jQuery2.extend(new jQuery2.Event(), event, {
              type,
              isSimulated: true
            });
            jQuery2.event.trigger(e2, null, elem);
          }
        });
        jQuery2.fn.extend({
          trigger: function(type, data) {
            return this.each(function() {
              jQuery2.event.trigger(type, data, this);
            });
          },
          triggerHandler: function(type, data) {
            var elem = this[0];
            if (elem) {
              return jQuery2.event.trigger(type, data, elem, true);
            }
          }
        });
        if (!support.focusin) {
          jQuery2.each({focus: "focusin", blur: "focusout"}, function(orig, fix) {
            var handler = function(event) {
              jQuery2.event.simulate(fix, event.target, jQuery2.event.fix(event));
            };
            jQuery2.event.special[fix] = {
              setup: function() {
                var doc = this.ownerDocument || this.document || this, attaches = dataPriv.access(doc, fix);
                if (!attaches) {
                  doc.addEventListener(orig, handler, true);
                }
                dataPriv.access(doc, fix, (attaches || 0) + 1);
              },
              teardown: function() {
                var doc = this.ownerDocument || this.document || this, attaches = dataPriv.access(doc, fix) - 1;
                if (!attaches) {
                  doc.removeEventListener(orig, handler, true);
                  dataPriv.remove(doc, fix);
                } else {
                  dataPriv.access(doc, fix, attaches);
                }
              }
            };
          });
        }
        var location2 = window2.location;
        var nonce = {guid: Date.now()};
        var rquery = /\?/;
        jQuery2.parseXML = function(data) {
          var xml, parserErrorElem;
          if (!data || typeof data !== "string") {
            return null;
          }
          try {
            xml = new window2.DOMParser().parseFromString(data, "text/xml");
          } catch (e2) {
          }
          parserErrorElem = xml && xml.getElementsByTagName("parsererror")[0];
          if (!xml || parserErrorElem) {
            jQuery2.error("Invalid XML: " + (parserErrorElem ? jQuery2.map(parserErrorElem.childNodes, function(el) {
              return el.textContent;
            }).join("\n") : data));
          }
          return xml;
        };
        var rbracket = /\[\]$/, rCRLF = /\r?\n/g, rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i, rsubmittable = /^(?:input|select|textarea|keygen)/i;
        function buildParams(prefix, obj, traditional, add) {
          var name;
          if (Array.isArray(obj)) {
            jQuery2.each(obj, function(i2, v) {
              if (traditional || rbracket.test(prefix)) {
                add(prefix, v);
              } else {
                buildParams(prefix + "[" + (typeof v === "object" && v != null ? i2 : "") + "]", v, traditional, add);
              }
            });
          } else if (!traditional && toType(obj) === "object") {
            for (name in obj) {
              buildParams(prefix + "[" + name + "]", obj[name], traditional, add);
            }
          } else {
            add(prefix, obj);
          }
        }
        jQuery2.param = function(a3, traditional) {
          var prefix, s3 = [], add = function(key, valueOrFunction) {
            var value = isFunction(valueOrFunction) ? valueOrFunction() : valueOrFunction;
            s3[s3.length] = encodeURIComponent(key) + "=" + encodeURIComponent(value == null ? "" : value);
          };
          if (a3 == null) {
            return "";
          }
          if (Array.isArray(a3) || a3.jquery && !jQuery2.isPlainObject(a3)) {
            jQuery2.each(a3, function() {
              add(this.name, this.value);
            });
          } else {
            for (prefix in a3) {
              buildParams(prefix, a3[prefix], traditional, add);
            }
          }
          return s3.join("&");
        };
        jQuery2.fn.extend({
          serialize: function() {
            return jQuery2.param(this.serializeArray());
          },
          serializeArray: function() {
            return this.map(function() {
              var elements = jQuery2.prop(this, "elements");
              return elements ? jQuery2.makeArray(elements) : this;
            }).filter(function() {
              var type = this.type;
              return this.name && !jQuery2(this).is(":disabled") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));
            }).map(function(_i, elem) {
              var val = jQuery2(this).val();
              if (val == null) {
                return null;
              }
              if (Array.isArray(val)) {
                return jQuery2.map(val, function(val2) {
                  return {name: elem.name, value: val2.replace(rCRLF, "\r\n")};
                });
              }
              return {name: elem.name, value: val.replace(rCRLF, "\r\n")};
            }).get();
          }
        });
        var r20 = /%20/g, rhash = /#.*$/, rantiCache = /([?&])_=[^&]*/, rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg, rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/, rnoContent = /^(?:GET|HEAD)$/, rprotocol = /^\/\//, prefilters = {}, transports = {}, allTypes = "*/".concat("*"), originAnchor = document2.createElement("a");
        originAnchor.href = location2.href;
        function addToPrefiltersOrTransports(structure) {
          return function(dataTypeExpression, func) {
            if (typeof dataTypeExpression !== "string") {
              func = dataTypeExpression;
              dataTypeExpression = "*";
            }
            var dataType, i2 = 0, dataTypes = dataTypeExpression.toLowerCase().match(rnothtmlwhite) || [];
            if (isFunction(func)) {
              while (dataType = dataTypes[i2++]) {
                if (dataType[0] === "+") {
                  dataType = dataType.slice(1) || "*";
                  (structure[dataType] = structure[dataType] || []).unshift(func);
                } else {
                  (structure[dataType] = structure[dataType] || []).push(func);
                }
              }
            }
          };
        }
        function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {
          var inspected = {}, seekingTransport = structure === transports;
          function inspect(dataType) {
            var selected;
            inspected[dataType] = true;
            jQuery2.each(structure[dataType] || [], function(_, prefilterOrFactory) {
              var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);
              if (typeof dataTypeOrTransport === "string" && !seekingTransport && !inspected[dataTypeOrTransport]) {
                options.dataTypes.unshift(dataTypeOrTransport);
                inspect(dataTypeOrTransport);
                return false;
              } else if (seekingTransport) {
                return !(selected = dataTypeOrTransport);
              }
            });
            return selected;
          }
          return inspect(options.dataTypes[0]) || !inspected["*"] && inspect("*");
        }
        function ajaxExtend(target, src) {
          var key, deep, flatOptions = jQuery2.ajaxSettings.flatOptions || {};
          for (key in src) {
            if (src[key] !== void 0) {
              (flatOptions[key] ? target : deep || (deep = {}))[key] = src[key];
            }
          }
          if (deep) {
            jQuery2.extend(true, target, deep);
          }
          return target;
        }
        function ajaxHandleResponses(s3, jqXHR, responses) {
          var ct, type, finalDataType, firstDataType, contents = s3.contents, dataTypes = s3.dataTypes;
          while (dataTypes[0] === "*") {
            dataTypes.shift();
            if (ct === void 0) {
              ct = s3.mimeType || jqXHR.getResponseHeader("Content-Type");
            }
          }
          if (ct) {
            for (type in contents) {
              if (contents[type] && contents[type].test(ct)) {
                dataTypes.unshift(type);
                break;
              }
            }
          }
          if (dataTypes[0] in responses) {
            finalDataType = dataTypes[0];
          } else {
            for (type in responses) {
              if (!dataTypes[0] || s3.converters[type + " " + dataTypes[0]]) {
                finalDataType = type;
                break;
              }
              if (!firstDataType) {
                firstDataType = type;
              }
            }
            finalDataType = finalDataType || firstDataType;
          }
          if (finalDataType) {
            if (finalDataType !== dataTypes[0]) {
              dataTypes.unshift(finalDataType);
            }
            return responses[finalDataType];
          }
        }
        function ajaxConvert(s3, response, jqXHR, isSuccess) {
          var conv2, current, conv, tmp, prev, converters = {}, dataTypes = s3.dataTypes.slice();
          if (dataTypes[1]) {
            for (conv in s3.converters) {
              converters[conv.toLowerCase()] = s3.converters[conv];
            }
          }
          current = dataTypes.shift();
          while (current) {
            if (s3.responseFields[current]) {
              jqXHR[s3.responseFields[current]] = response;
            }
            if (!prev && isSuccess && s3.dataFilter) {
              response = s3.dataFilter(response, s3.dataType);
            }
            prev = current;
            current = dataTypes.shift();
            if (current) {
              if (current === "*") {
                current = prev;
              } else if (prev !== "*" && prev !== current) {
                conv = converters[prev + " " + current] || converters["* " + current];
                if (!conv) {
                  for (conv2 in converters) {
                    tmp = conv2.split(" ");
                    if (tmp[1] === current) {
                      conv = converters[prev + " " + tmp[0]] || converters["* " + tmp[0]];
                      if (conv) {
                        if (conv === true) {
                          conv = converters[conv2];
                        } else if (converters[conv2] !== true) {
                          current = tmp[0];
                          dataTypes.unshift(tmp[1]);
                        }
                        break;
                      }
                    }
                  }
                }
                if (conv !== true) {
                  if (conv && s3.throws) {
                    response = conv(response);
                  } else {
                    try {
                      response = conv(response);
                    } catch (e2) {
                      return {
                        state: "parsererror",
                        error: conv ? e2 : "No conversion from " + prev + " to " + current
                      };
                    }
                  }
                }
              }
            }
          }
          return {state: "success", data: response};
        }
        jQuery2.extend({
          active: 0,
          lastModified: {},
          etag: {},
          ajaxSettings: {
            url: location2.href,
            type: "GET",
            isLocal: rlocalProtocol.test(location2.protocol),
            global: true,
            processData: true,
            async: true,
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            accepts: {
              "*": allTypes,
              text: "text/plain",
              html: "text/html",
              xml: "application/xml, text/xml",
              json: "application/json, text/javascript"
            },
            contents: {
              xml: /\bxml\b/,
              html: /\bhtml/,
              json: /\bjson\b/
            },
            responseFields: {
              xml: "responseXML",
              text: "responseText",
              json: "responseJSON"
            },
            converters: {
              "* text": String,
              "text html": true,
              "text json": JSON.parse,
              "text xml": jQuery2.parseXML
            },
            flatOptions: {
              url: true,
              context: true
            }
          },
          ajaxSetup: function(target, settings) {
            return settings ? ajaxExtend(ajaxExtend(target, jQuery2.ajaxSettings), settings) : ajaxExtend(jQuery2.ajaxSettings, target);
          },
          ajaxPrefilter: addToPrefiltersOrTransports(prefilters),
          ajaxTransport: addToPrefiltersOrTransports(transports),
          ajax: function(url, options) {
            if (typeof url === "object") {
              options = url;
              url = void 0;
            }
            options = options || {};
            var transport, cacheURL, responseHeadersString, responseHeaders, timeoutTimer, urlAnchor, completed2, fireGlobals, i2, uncached, s3 = jQuery2.ajaxSetup({}, options), callbackContext = s3.context || s3, globalEventContext = s3.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery2(callbackContext) : jQuery2.event, deferred = jQuery2.Deferred(), completeDeferred = jQuery2.Callbacks("once memory"), statusCode = s3.statusCode || {}, requestHeaders = {}, requestHeadersNames = {}, strAbort = "canceled", jqXHR = {
              readyState: 0,
              getResponseHeader: function(key) {
                var match2;
                if (completed2) {
                  if (!responseHeaders) {
                    responseHeaders = {};
                    while (match2 = rheaders.exec(responseHeadersString)) {
                      responseHeaders[match2[1].toLowerCase() + " "] = (responseHeaders[match2[1].toLowerCase() + " "] || []).concat(match2[2]);
                    }
                  }
                  match2 = responseHeaders[key.toLowerCase() + " "];
                }
                return match2 == null ? null : match2.join(", ");
              },
              getAllResponseHeaders: function() {
                return completed2 ? responseHeadersString : null;
              },
              setRequestHeader: function(name, value) {
                if (completed2 == null) {
                  name = requestHeadersNames[name.toLowerCase()] = requestHeadersNames[name.toLowerCase()] || name;
                  requestHeaders[name] = value;
                }
                return this;
              },
              overrideMimeType: function(type) {
                if (completed2 == null) {
                  s3.mimeType = type;
                }
                return this;
              },
              statusCode: function(map) {
                var code;
                if (map) {
                  if (completed2) {
                    jqXHR.always(map[jqXHR.status]);
                  } else {
                    for (code in map) {
                      statusCode[code] = [statusCode[code], map[code]];
                    }
                  }
                }
                return this;
              },
              abort: function(statusText) {
                var finalText = statusText || strAbort;
                if (transport) {
                  transport.abort(finalText);
                }
                done(0, finalText);
                return this;
              }
            };
            deferred.promise(jqXHR);
            s3.url = ((url || s3.url || location2.href) + "").replace(rprotocol, location2.protocol + "//");
            s3.type = options.method || options.type || s3.method || s3.type;
            s3.dataTypes = (s3.dataType || "*").toLowerCase().match(rnothtmlwhite) || [""];
            if (s3.crossDomain == null) {
              urlAnchor = document2.createElement("a");
              try {
                urlAnchor.href = s3.url;
                urlAnchor.href = urlAnchor.href;
                s3.crossDomain = originAnchor.protocol + "//" + originAnchor.host !== urlAnchor.protocol + "//" + urlAnchor.host;
              } catch (e2) {
                s3.crossDomain = true;
              }
            }
            if (s3.data && s3.processData && typeof s3.data !== "string") {
              s3.data = jQuery2.param(s3.data, s3.traditional);
            }
            inspectPrefiltersOrTransports(prefilters, s3, options, jqXHR);
            if (completed2) {
              return jqXHR;
            }
            fireGlobals = jQuery2.event && s3.global;
            if (fireGlobals && jQuery2.active++ === 0) {
              jQuery2.event.trigger("ajaxStart");
            }
            s3.type = s3.type.toUpperCase();
            s3.hasContent = !rnoContent.test(s3.type);
            cacheURL = s3.url.replace(rhash, "");
            if (!s3.hasContent) {
              uncached = s3.url.slice(cacheURL.length);
              if (s3.data && (s3.processData || typeof s3.data === "string")) {
                cacheURL += (rquery.test(cacheURL) ? "&" : "?") + s3.data;
                delete s3.data;
              }
              if (s3.cache === false) {
                cacheURL = cacheURL.replace(rantiCache, "$1");
                uncached = (rquery.test(cacheURL) ? "&" : "?") + "_=" + nonce.guid++ + uncached;
              }
              s3.url = cacheURL + uncached;
            } else if (s3.data && s3.processData && (s3.contentType || "").indexOf("application/x-www-form-urlencoded") === 0) {
              s3.data = s3.data.replace(r20, "+");
            }
            if (s3.ifModified) {
              if (jQuery2.lastModified[cacheURL]) {
                jqXHR.setRequestHeader("If-Modified-Since", jQuery2.lastModified[cacheURL]);
              }
              if (jQuery2.etag[cacheURL]) {
                jqXHR.setRequestHeader("If-None-Match", jQuery2.etag[cacheURL]);
              }
            }
            if (s3.data && s3.hasContent && s3.contentType !== false || options.contentType) {
              jqXHR.setRequestHeader("Content-Type", s3.contentType);
            }
            jqXHR.setRequestHeader("Accept", s3.dataTypes[0] && s3.accepts[s3.dataTypes[0]] ? s3.accepts[s3.dataTypes[0]] + (s3.dataTypes[0] !== "*" ? ", " + allTypes + "; q=0.01" : "") : s3.accepts["*"]);
            for (i2 in s3.headers) {
              jqXHR.setRequestHeader(i2, s3.headers[i2]);
            }
            if (s3.beforeSend && (s3.beforeSend.call(callbackContext, jqXHR, s3) === false || completed2)) {
              return jqXHR.abort();
            }
            strAbort = "abort";
            completeDeferred.add(s3.complete);
            jqXHR.done(s3.success);
            jqXHR.fail(s3.error);
            transport = inspectPrefiltersOrTransports(transports, s3, options, jqXHR);
            if (!transport) {
              done(-1, "No Transport");
            } else {
              jqXHR.readyState = 1;
              if (fireGlobals) {
                globalEventContext.trigger("ajaxSend", [jqXHR, s3]);
              }
              if (completed2) {
                return jqXHR;
              }
              if (s3.async && s3.timeout > 0) {
                timeoutTimer = window2.setTimeout(function() {
                  jqXHR.abort("timeout");
                }, s3.timeout);
              }
              try {
                completed2 = false;
                transport.send(requestHeaders, done);
              } catch (e2) {
                if (completed2) {
                  throw e2;
                }
                done(-1, e2);
              }
            }
            function done(status, nativeStatusText, responses, headers) {
              var isSuccess, success, error, response, modified, statusText = nativeStatusText;
              if (completed2) {
                return;
              }
              completed2 = true;
              if (timeoutTimer) {
                window2.clearTimeout(timeoutTimer);
              }
              transport = void 0;
              responseHeadersString = headers || "";
              jqXHR.readyState = status > 0 ? 4 : 0;
              isSuccess = status >= 200 && status < 300 || status === 304;
              if (responses) {
                response = ajaxHandleResponses(s3, jqXHR, responses);
              }
              if (!isSuccess && jQuery2.inArray("script", s3.dataTypes) > -1 && jQuery2.inArray("json", s3.dataTypes) < 0) {
                s3.converters["text script"] = function() {
                };
              }
              response = ajaxConvert(s3, response, jqXHR, isSuccess);
              if (isSuccess) {
                if (s3.ifModified) {
                  modified = jqXHR.getResponseHeader("Last-Modified");
                  if (modified) {
                    jQuery2.lastModified[cacheURL] = modified;
                  }
                  modified = jqXHR.getResponseHeader("etag");
                  if (modified) {
                    jQuery2.etag[cacheURL] = modified;
                  }
                }
                if (status === 204 || s3.type === "HEAD") {
                  statusText = "nocontent";
                } else if (status === 304) {
                  statusText = "notmodified";
                } else {
                  statusText = response.state;
                  success = response.data;
                  error = response.error;
                  isSuccess = !error;
                }
              } else {
                error = statusText;
                if (status || !statusText) {
                  statusText = "error";
                  if (status < 0) {
                    status = 0;
                  }
                }
              }
              jqXHR.status = status;
              jqXHR.statusText = (nativeStatusText || statusText) + "";
              if (isSuccess) {
                deferred.resolveWith(callbackContext, [success, statusText, jqXHR]);
              } else {
                deferred.rejectWith(callbackContext, [jqXHR, statusText, error]);
              }
              jqXHR.statusCode(statusCode);
              statusCode = void 0;
              if (fireGlobals) {
                globalEventContext.trigger(isSuccess ? "ajaxSuccess" : "ajaxError", [jqXHR, s3, isSuccess ? success : error]);
              }
              completeDeferred.fireWith(callbackContext, [jqXHR, statusText]);
              if (fireGlobals) {
                globalEventContext.trigger("ajaxComplete", [jqXHR, s3]);
                if (!--jQuery2.active) {
                  jQuery2.event.trigger("ajaxStop");
                }
              }
            }
            return jqXHR;
          },
          getJSON: function(url, data, callback) {
            return jQuery2.get(url, data, callback, "json");
          },
          getScript: function(url, callback) {
            return jQuery2.get(url, void 0, callback, "script");
          }
        });
        jQuery2.each(["get", "post"], function(_i, method) {
          jQuery2[method] = function(url, data, callback, type) {
            if (isFunction(data)) {
              type = type || callback;
              callback = data;
              data = void 0;
            }
            return jQuery2.ajax(jQuery2.extend({
              url,
              type: method,
              dataType: type,
              data,
              success: callback
            }, jQuery2.isPlainObject(url) && url));
          };
        });
        jQuery2.ajaxPrefilter(function(s3) {
          var i2;
          for (i2 in s3.headers) {
            if (i2.toLowerCase() === "content-type") {
              s3.contentType = s3.headers[i2] || "";
            }
          }
        });
        jQuery2._evalUrl = function(url, options, doc) {
          return jQuery2.ajax({
            url,
            type: "GET",
            dataType: "script",
            cache: true,
            async: false,
            global: false,
            converters: {
              "text script": function() {
              }
            },
            dataFilter: function(response) {
              jQuery2.globalEval(response, options, doc);
            }
          });
        };
        jQuery2.fn.extend({
          wrapAll: function(html) {
            var wrap;
            if (this[0]) {
              if (isFunction(html)) {
                html = html.call(this[0]);
              }
              wrap = jQuery2(html, this[0].ownerDocument).eq(0).clone(true);
              if (this[0].parentNode) {
                wrap.insertBefore(this[0]);
              }
              wrap.map(function() {
                var elem = this;
                while (elem.firstElementChild) {
                  elem = elem.firstElementChild;
                }
                return elem;
              }).append(this);
            }
            return this;
          },
          wrapInner: function(html) {
            if (isFunction(html)) {
              return this.each(function(i2) {
                jQuery2(this).wrapInner(html.call(this, i2));
              });
            }
            return this.each(function() {
              var self2 = jQuery2(this), contents = self2.contents();
              if (contents.length) {
                contents.wrapAll(html);
              } else {
                self2.append(html);
              }
            });
          },
          wrap: function(html) {
            var htmlIsFunction = isFunction(html);
            return this.each(function(i2) {
              jQuery2(this).wrapAll(htmlIsFunction ? html.call(this, i2) : html);
            });
          },
          unwrap: function(selector) {
            this.parent(selector).not("body").each(function() {
              jQuery2(this).replaceWith(this.childNodes);
            });
            return this;
          }
        });
        jQuery2.expr.pseudos.hidden = function(elem) {
          return !jQuery2.expr.pseudos.visible(elem);
        };
        jQuery2.expr.pseudos.visible = function(elem) {
          return !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);
        };
        jQuery2.ajaxSettings.xhr = function() {
          try {
            return new window2.XMLHttpRequest();
          } catch (e2) {
          }
        };
        var xhrSuccessStatus = {
          0: 200,
          1223: 204
        }, xhrSupported = jQuery2.ajaxSettings.xhr();
        support.cors = !!xhrSupported && "withCredentials" in xhrSupported;
        support.ajax = xhrSupported = !!xhrSupported;
        jQuery2.ajaxTransport(function(options) {
          var callback, errorCallback;
          if (support.cors || xhrSupported && !options.crossDomain) {
            return {
              send: function(headers, complete) {
                var i2, xhr = options.xhr();
                xhr.open(options.type, options.url, options.async, options.username, options.password);
                if (options.xhrFields) {
                  for (i2 in options.xhrFields) {
                    xhr[i2] = options.xhrFields[i2];
                  }
                }
                if (options.mimeType && xhr.overrideMimeType) {
                  xhr.overrideMimeType(options.mimeType);
                }
                if (!options.crossDomain && !headers["X-Requested-With"]) {
                  headers["X-Requested-With"] = "XMLHttpRequest";
                }
                for (i2 in headers) {
                  xhr.setRequestHeader(i2, headers[i2]);
                }
                callback = function(type) {
                  return function() {
                    if (callback) {
                      callback = errorCallback = xhr.onload = xhr.onerror = xhr.onabort = xhr.ontimeout = xhr.onreadystatechange = null;
                      if (type === "abort") {
                        xhr.abort();
                      } else if (type === "error") {
                        if (typeof xhr.status !== "number") {
                          complete(0, "error");
                        } else {
                          complete(xhr.status, xhr.statusText);
                        }
                      } else {
                        complete(xhrSuccessStatus[xhr.status] || xhr.status, xhr.statusText, (xhr.responseType || "text") !== "text" || typeof xhr.responseText !== "string" ? {binary: xhr.response} : {text: xhr.responseText}, xhr.getAllResponseHeaders());
                      }
                    }
                  };
                };
                xhr.onload = callback();
                errorCallback = xhr.onerror = xhr.ontimeout = callback("error");
                if (xhr.onabort !== void 0) {
                  xhr.onabort = errorCallback;
                } else {
                  xhr.onreadystatechange = function() {
                    if (xhr.readyState === 4) {
                      window2.setTimeout(function() {
                        if (callback) {
                          errorCallback();
                        }
                      });
                    }
                  };
                }
                callback = callback("abort");
                try {
                  xhr.send(options.hasContent && options.data || null);
                } catch (e2) {
                  if (callback) {
                    throw e2;
                  }
                }
              },
              abort: function() {
                if (callback) {
                  callback();
                }
              }
            };
          }
        });
        jQuery2.ajaxPrefilter(function(s3) {
          if (s3.crossDomain) {
            s3.contents.script = false;
          }
        });
        jQuery2.ajaxSetup({
          accepts: {
            script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
          },
          contents: {
            script: /\b(?:java|ecma)script\b/
          },
          converters: {
            "text script": function(text) {
              jQuery2.globalEval(text);
              return text;
            }
          }
        });
        jQuery2.ajaxPrefilter("script", function(s3) {
          if (s3.cache === void 0) {
            s3.cache = false;
          }
          if (s3.crossDomain) {
            s3.type = "GET";
          }
        });
        jQuery2.ajaxTransport("script", function(s3) {
          if (s3.crossDomain || s3.scriptAttrs) {
            var script, callback;
            return {
              send: function(_, complete) {
                script = jQuery2("<script>").attr(s3.scriptAttrs || {}).prop({charset: s3.scriptCharset, src: s3.url}).on("load error", callback = function(evt) {
                  script.remove();
                  callback = null;
                  if (evt) {
                    complete(evt.type === "error" ? 404 : 200, evt.type);
                  }
                });
                document2.head.appendChild(script[0]);
              },
              abort: function() {
                if (callback) {
                  callback();
                }
              }
            };
          }
        });
        var oldCallbacks = [], rjsonp = /(=)\?(?=&|$)|\?\?/;
        jQuery2.ajaxSetup({
          jsonp: "callback",
          jsonpCallback: function() {
            var callback = oldCallbacks.pop() || jQuery2.expando + "_" + nonce.guid++;
            this[callback] = true;
            return callback;
          }
        });
        jQuery2.ajaxPrefilter("json jsonp", function(s3, originalSettings, jqXHR) {
          var callbackName, overwritten, responseContainer, jsonProp = s3.jsonp !== false && (rjsonp.test(s3.url) ? "url" : typeof s3.data === "string" && (s3.contentType || "").indexOf("application/x-www-form-urlencoded") === 0 && rjsonp.test(s3.data) && "data");
          if (jsonProp || s3.dataTypes[0] === "jsonp") {
            callbackName = s3.jsonpCallback = isFunction(s3.jsonpCallback) ? s3.jsonpCallback() : s3.jsonpCallback;
            if (jsonProp) {
              s3[jsonProp] = s3[jsonProp].replace(rjsonp, "$1" + callbackName);
            } else if (s3.jsonp !== false) {
              s3.url += (rquery.test(s3.url) ? "&" : "?") + s3.jsonp + "=" + callbackName;
            }
            s3.converters["script json"] = function() {
              if (!responseContainer) {
                jQuery2.error(callbackName + " was not called");
              }
              return responseContainer[0];
            };
            s3.dataTypes[0] = "json";
            overwritten = window2[callbackName];
            window2[callbackName] = function() {
              responseContainer = arguments;
            };
            jqXHR.always(function() {
              if (overwritten === void 0) {
                jQuery2(window2).removeProp(callbackName);
              } else {
                window2[callbackName] = overwritten;
              }
              if (s3[callbackName]) {
                s3.jsonpCallback = originalSettings.jsonpCallback;
                oldCallbacks.push(callbackName);
              }
              if (responseContainer && isFunction(overwritten)) {
                overwritten(responseContainer[0]);
              }
              responseContainer = overwritten = void 0;
            });
            return "script";
          }
        });
        support.createHTMLDocument = function() {
          var body = document2.implementation.createHTMLDocument("").body;
          body.innerHTML = "<form></form><form></form>";
          return body.childNodes.length === 2;
        }();
        jQuery2.parseHTML = function(data, context, keepScripts) {
          if (typeof data !== "string") {
            return [];
          }
          if (typeof context === "boolean") {
            keepScripts = context;
            context = false;
          }
          var base, parsed, scripts;
          if (!context) {
            if (support.createHTMLDocument) {
              context = document2.implementation.createHTMLDocument("");
              base = context.createElement("base");
              base.href = document2.location.href;
              context.head.appendChild(base);
            } else {
              context = document2;
            }
          }
          parsed = rsingleTag.exec(data);
          scripts = !keepScripts && [];
          if (parsed) {
            return [context.createElement(parsed[1])];
          }
          parsed = buildFragment([data], context, scripts);
          if (scripts && scripts.length) {
            jQuery2(scripts).remove();
          }
          return jQuery2.merge([], parsed.childNodes);
        };
        jQuery2.fn.load = function(url, params, callback) {
          var selector, type, response, self2 = this, off = url.indexOf(" ");
          if (off > -1) {
            selector = stripAndCollapse(url.slice(off));
            url = url.slice(0, off);
          }
          if (isFunction(params)) {
            callback = params;
            params = void 0;
          } else if (params && typeof params === "object") {
            type = "POST";
          }
          if (self2.length > 0) {
            jQuery2.ajax({
              url,
              type: type || "GET",
              dataType: "html",
              data: params
            }).done(function(responseText) {
              response = arguments;
              self2.html(selector ? jQuery2("<div>").append(jQuery2.parseHTML(responseText)).find(selector) : responseText);
            }).always(callback && function(jqXHR, status) {
              self2.each(function() {
                callback.apply(this, response || [jqXHR.responseText, status, jqXHR]);
              });
            });
          }
          return this;
        };
        jQuery2.expr.pseudos.animated = function(elem) {
          return jQuery2.grep(jQuery2.timers, function(fn) {
            return elem === fn.elem;
          }).length;
        };
        jQuery2.offset = {
          setOffset: function(elem, options, i2) {
            var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition, position = jQuery2.css(elem, "position"), curElem = jQuery2(elem), props = {};
            if (position === "static") {
              elem.style.position = "relative";
            }
            curOffset = curElem.offset();
            curCSSTop = jQuery2.css(elem, "top");
            curCSSLeft = jQuery2.css(elem, "left");
            calculatePosition = (position === "absolute" || position === "fixed") && (curCSSTop + curCSSLeft).indexOf("auto") > -1;
            if (calculatePosition) {
              curPosition = curElem.position();
              curTop = curPosition.top;
              curLeft = curPosition.left;
            } else {
              curTop = parseFloat(curCSSTop) || 0;
              curLeft = parseFloat(curCSSLeft) || 0;
            }
            if (isFunction(options)) {
              options = options.call(elem, i2, jQuery2.extend({}, curOffset));
            }
            if (options.top != null) {
              props.top = options.top - curOffset.top + curTop;
            }
            if (options.left != null) {
              props.left = options.left - curOffset.left + curLeft;
            }
            if ("using" in options) {
              options.using.call(elem, props);
            } else {
              curElem.css(props);
            }
          }
        };
        jQuery2.fn.extend({
          offset: function(options) {
            if (arguments.length) {
              return options === void 0 ? this : this.each(function(i2) {
                jQuery2.offset.setOffset(this, options, i2);
              });
            }
            var rect, win, elem = this[0];
            if (!elem) {
              return;
            }
            if (!elem.getClientRects().length) {
              return {top: 0, left: 0};
            }
            rect = elem.getBoundingClientRect();
            win = elem.ownerDocument.defaultView;
            return {
              top: rect.top + win.pageYOffset,
              left: rect.left + win.pageXOffset
            };
          },
          position: function() {
            if (!this[0]) {
              return;
            }
            var offsetParent, offset, doc, elem = this[0], parentOffset = {top: 0, left: 0};
            if (jQuery2.css(elem, "position") === "fixed") {
              offset = elem.getBoundingClientRect();
            } else {
              offset = this.offset();
              doc = elem.ownerDocument;
              offsetParent = elem.offsetParent || doc.documentElement;
              while (offsetParent && (offsetParent === doc.body || offsetParent === doc.documentElement) && jQuery2.css(offsetParent, "position") === "static") {
                offsetParent = offsetParent.parentNode;
              }
              if (offsetParent && offsetParent !== elem && offsetParent.nodeType === 1) {
                parentOffset = jQuery2(offsetParent).offset();
                parentOffset.top += jQuery2.css(offsetParent, "borderTopWidth", true);
                parentOffset.left += jQuery2.css(offsetParent, "borderLeftWidth", true);
              }
            }
            return {
              top: offset.top - parentOffset.top - jQuery2.css(elem, "marginTop", true),
              left: offset.left - parentOffset.left - jQuery2.css(elem, "marginLeft", true)
            };
          },
          offsetParent: function() {
            return this.map(function() {
              var offsetParent = this.offsetParent;
              while (offsetParent && jQuery2.css(offsetParent, "position") === "static") {
                offsetParent = offsetParent.offsetParent;
              }
              return offsetParent || documentElement;
            });
          }
        });
        jQuery2.each({scrollLeft: "pageXOffset", scrollTop: "pageYOffset"}, function(method, prop) {
          var top = prop === "pageYOffset";
          jQuery2.fn[method] = function(val) {
            return access(this, function(elem, method2, val2) {
              var win;
              if (isWindow(elem)) {
                win = elem;
              } else if (elem.nodeType === 9) {
                win = elem.defaultView;
              }
              if (val2 === void 0) {
                return win ? win[prop] : elem[method2];
              }
              if (win) {
                win.scrollTo(!top ? val2 : win.pageXOffset, top ? val2 : win.pageYOffset);
              } else {
                elem[method2] = val2;
              }
            }, method, val, arguments.length);
          };
        });
        jQuery2.each(["top", "left"], function(_i, prop) {
          jQuery2.cssHooks[prop] = addGetHookIf(support.pixelPosition, function(elem, computed) {
            if (computed) {
              computed = curCSS(elem, prop);
              return rnumnonpx.test(computed) ? jQuery2(elem).position()[prop] + "px" : computed;
            }
          });
        });
        jQuery2.each({Height: "height", Width: "width"}, function(name, type) {
          jQuery2.each({
            padding: "inner" + name,
            content: type,
            "": "outer" + name
          }, function(defaultExtra, funcName) {
            jQuery2.fn[funcName] = function(margin, value) {
              var chainable = arguments.length && (defaultExtra || typeof margin !== "boolean"), extra = defaultExtra || (margin === true || value === true ? "margin" : "border");
              return access(this, function(elem, type2, value2) {
                var doc;
                if (isWindow(elem)) {
                  return funcName.indexOf("outer") === 0 ? elem["inner" + name] : elem.document.documentElement["client" + name];
                }
                if (elem.nodeType === 9) {
                  doc = elem.documentElement;
                  return Math.max(elem.body["scroll" + name], doc["scroll" + name], elem.body["offset" + name], doc["offset" + name], doc["client" + name]);
                }
                return value2 === void 0 ? jQuery2.css(elem, type2, extra) : jQuery2.style(elem, type2, value2, extra);
              }, type, chainable ? margin : void 0, chainable);
            };
          });
        });
        jQuery2.each([
          "ajaxStart",
          "ajaxStop",
          "ajaxComplete",
          "ajaxError",
          "ajaxSuccess",
          "ajaxSend"
        ], function(_i, type) {
          jQuery2.fn[type] = function(fn) {
            return this.on(type, fn);
          };
        });
        jQuery2.fn.extend({
          bind: function(types, data, fn) {
            return this.on(types, null, data, fn);
          },
          unbind: function(types, fn) {
            return this.off(types, null, fn);
          },
          delegate: function(selector, types, data, fn) {
            return this.on(types, selector, data, fn);
          },
          undelegate: function(selector, types, fn) {
            return arguments.length === 1 ? this.off(selector, "**") : this.off(types, selector || "**", fn);
          },
          hover: function(fnOver, fnOut) {
            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);
          }
        });
        jQuery2.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), function(_i, name) {
          jQuery2.fn[name] = function(data, fn) {
            return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);
          };
        });
        var rtrim = /^[\s\uFEFF\xA0]+|([^\s\uFEFF\xA0])[\s\uFEFF\xA0]+$/g;
        jQuery2.proxy = function(fn, context) {
          var tmp, args, proxy;
          if (typeof context === "string") {
            tmp = fn[context];
            context = fn;
            fn = tmp;
          }
          if (!isFunction(fn)) {
            return void 0;
          }
          args = slice.call(arguments, 2);
          proxy = function() {
            return fn.apply(context || this, args.concat(slice.call(arguments)));
          };
          proxy.guid = fn.guid = fn.guid || jQuery2.guid++;
          return proxy;
        };
        jQuery2.holdReady = function(hold) {
          if (hold) {
            jQuery2.readyWait++;
          } else {
            jQuery2.ready(true);
          }
        };
        jQuery2.isArray = Array.isArray;
        jQuery2.parseJSON = JSON.parse;
        jQuery2.nodeName = nodeName;
        jQuery2.isFunction = isFunction;
        jQuery2.isWindow = isWindow;
        jQuery2.camelCase = camelCase;
        jQuery2.type = toType;
        jQuery2.now = Date.now;
        jQuery2.isNumeric = function(obj) {
          var type = jQuery2.type(obj);
          return (type === "number" || type === "string") && !isNaN(obj - parseFloat(obj));
        };
        jQuery2.trim = function(text) {
          return text == null ? "" : (text + "").replace(rtrim, "$1");
        };
        if (typeof define === "function" && define.amd) {
          define("jquery", [], function() {
            return jQuery2;
          });
        }
        var _jQuery = window2.jQuery, _$ = window2.$;
        jQuery2.noConflict = function(deep) {
          if (window2.$ === jQuery2) {
            window2.$ = _$;
          }
          if (deep && window2.jQuery === jQuery2) {
            window2.jQuery = _jQuery;
          }
          return jQuery2;
        };
        if (typeof noGlobal === "undefined") {
          window2.jQuery = window2.$ = jQuery2;
        }
        return jQuery2;
      });
    }
  });

  // node_modules/jquery-confirm/dist/jquery-confirm.min.js
  var require_jquery_confirm_min = __commonJS({
    "node_modules/jquery-confirm/dist/jquery-confirm.min.js"(exports, module) {
      (function(factory) {
        if (typeof define === "function" && define.amd) {
          define(["jquery"], factory);
        } else {
          if (typeof module === "object" && module.exports) {
            module.exports = function(root, jQuery2) {
              if (jQuery2 === void 0) {
                if (typeof window !== "undefined") {
                  jQuery2 = require_jquery();
                } else {
                  jQuery2 = require_jquery()(root);
                }
              }
              factory(jQuery2);
              return jQuery2;
            };
          } else {
            factory(jQuery);
          }
        }
      })(function($3) {
        var w2 = window;
        $3.fn.confirm = function(options, option2) {
          if (typeof options === "undefined") {
            options = {};
          }
          if (typeof options === "string") {
            options = {content: options, title: option2 ? option2 : false};
          }
          $3(this).each(function() {
            var $this = $3(this);
            if ($this.attr("jc-attached")) {
              console.warn("jConfirm has already been attached to this element ", $this[0]);
              return;
            }
            $this.on("click", function(e2) {
              e2.preventDefault();
              var jcOption = $3.extend({}, options);
              if ($this.attr("data-title")) {
                jcOption.title = $this.attr("data-title");
              }
              if ($this.attr("data-content")) {
                jcOption.content = $this.attr("data-content");
              }
              if (typeof jcOption.buttons === "undefined") {
                jcOption.buttons = {};
              }
              jcOption["$target"] = $this;
              if ($this.attr("href") && Object.keys(jcOption.buttons).length === 0) {
                var buttons = $3.extend(true, {}, w2.jconfirm.pluginDefaults.defaultButtons, (w2.jconfirm.defaults || {}).defaultButtons || {});
                var firstBtn = Object.keys(buttons)[0];
                jcOption.buttons = buttons;
                jcOption.buttons[firstBtn].action = function() {
                  location.href = $this.attr("href");
                };
              }
              jcOption.closeIcon = false;
              var instance = $3.confirm(jcOption);
            });
            $this.attr("jc-attached", true);
          });
          return $3(this);
        };
        $3.confirm = function(options, option2) {
          if (typeof options === "undefined") {
            options = {};
          }
          if (typeof options === "string") {
            options = {content: options, title: option2 ? option2 : false};
          }
          var putDefaultButtons = !(options.buttons === false);
          if (typeof options.buttons !== "object") {
            options.buttons = {};
          }
          if (Object.keys(options.buttons).length === 0 && putDefaultButtons) {
            var buttons = $3.extend(true, {}, w2.jconfirm.pluginDefaults.defaultButtons, (w2.jconfirm.defaults || {}).defaultButtons || {});
            options.buttons = buttons;
          }
          return w2.jconfirm(options);
        };
        $3.alert = function(options, option2) {
          if (typeof options === "undefined") {
            options = {};
          }
          if (typeof options === "string") {
            options = {content: options, title: option2 ? option2 : false};
          }
          var putDefaultButtons = !(options.buttons === false);
          if (typeof options.buttons !== "object") {
            options.buttons = {};
          }
          if (Object.keys(options.buttons).length === 0 && putDefaultButtons) {
            var buttons = $3.extend(true, {}, w2.jconfirm.pluginDefaults.defaultButtons, (w2.jconfirm.defaults || {}).defaultButtons || {});
            var firstBtn = Object.keys(buttons)[0];
            options.buttons[firstBtn] = buttons[firstBtn];
          }
          return w2.jconfirm(options);
        };
        $3.dialog = function(options, option2) {
          if (typeof options === "undefined") {
            options = {};
          }
          if (typeof options === "string") {
            options = {content: options, title: option2 ? option2 : false, closeIcon: function() {
            }};
          }
          options.buttons = {};
          if (typeof options.closeIcon === "undefined") {
            options.closeIcon = function() {
            };
          }
          options.confirmKeys = [13];
          return w2.jconfirm(options);
        };
        w2.jconfirm = function(options) {
          if (typeof options === "undefined") {
            options = {};
          }
          var pluginOptions = $3.extend(true, {}, w2.jconfirm.pluginDefaults);
          if (w2.jconfirm.defaults) {
            pluginOptions = $3.extend(true, pluginOptions, w2.jconfirm.defaults);
          }
          pluginOptions = $3.extend(true, {}, pluginOptions, options);
          var instance = new w2.Jconfirm(pluginOptions);
          w2.jconfirm.instances.push(instance);
          return instance;
        };
        w2.Jconfirm = function(options) {
          $3.extend(this, options);
          this._init();
        };
        w2.Jconfirm.prototype = {_init: function() {
          var that = this;
          if (!w2.jconfirm.instances.length) {
            w2.jconfirm.lastFocused = $3("body").find(":focus");
          }
          this._id = Math.round(Math.random() * 99999);
          this.contentParsed = $3(document.createElement("div"));
          if (!this.lazyOpen) {
            setTimeout(function() {
              that.open();
            }, 0);
          }
        }, _buildHTML: function() {
          var that = this;
          this._parseAnimation(this.animation, "o");
          this._parseAnimation(this.closeAnimation, "c");
          this._parseBgDismissAnimation(this.backgroundDismissAnimation);
          this._parseColumnClass(this.columnClass);
          this._parseTheme(this.theme);
          this._parseType(this.type);
          var template = $3(this.template);
          template.find(".jconfirm-box").addClass(this.animationParsed).addClass(this.backgroundDismissAnimationParsed).addClass(this.typeParsed);
          if (this.typeAnimated) {
            template.find(".jconfirm-box").addClass("jconfirm-type-animated");
          }
          if (this.useBootstrap) {
            template.find(".jc-bs3-row").addClass(this.bootstrapClasses.row);
            template.find(".jc-bs3-row").addClass("justify-content-md-center justify-content-sm-center justify-content-xs-center justify-content-lg-center");
            template.find(".jconfirm-box-container").addClass(this.columnClassParsed);
            if (this.containerFluid) {
              template.find(".jc-bs3-container").addClass(this.bootstrapClasses.containerFluid);
            } else {
              template.find(".jc-bs3-container").addClass(this.bootstrapClasses.container);
            }
          } else {
            template.find(".jconfirm-box").css("width", this.boxWidth);
          }
          if (this.titleClass) {
            template.find(".jconfirm-title-c").addClass(this.titleClass);
          }
          template.addClass(this.themeParsed);
          var ariaLabel = "jconfirm-box" + this._id;
          template.find(".jconfirm-box").attr("aria-labelledby", ariaLabel).attr("tabindex", -1);
          template.find(".jconfirm-content").attr("id", ariaLabel);
          if (this.bgOpacity !== null) {
            template.find(".jconfirm-bg").css("opacity", this.bgOpacity);
          }
          if (this.rtl) {
            template.addClass("jconfirm-rtl");
          }
          this.$el = template.appendTo(this.container);
          this.$jconfirmBoxContainer = this.$el.find(".jconfirm-box-container");
          this.$jconfirmBox = this.$body = this.$el.find(".jconfirm-box");
          this.$jconfirmBg = this.$el.find(".jconfirm-bg");
          this.$title = this.$el.find(".jconfirm-title");
          this.$titleContainer = this.$el.find(".jconfirm-title-c");
          this.$content = this.$el.find("div.jconfirm-content");
          this.$contentPane = this.$el.find(".jconfirm-content-pane");
          this.$icon = this.$el.find(".jconfirm-icon-c");
          this.$closeIcon = this.$el.find(".jconfirm-closeIcon");
          this.$holder = this.$el.find(".jconfirm-holder");
          this.$btnc = this.$el.find(".jconfirm-buttons");
          this.$scrollPane = this.$el.find(".jconfirm-scrollpane");
          that.setStartingPoint();
          this._contentReady = $3.Deferred();
          this._modalReady = $3.Deferred();
          this.$holder.css({"padding-top": this.offsetTop, "padding-bottom": this.offsetBottom});
          this.setTitle();
          this.setIcon();
          this._setButtons();
          this._parseContent();
          this.initDraggable();
          if (this.isAjax) {
            this.showLoading(false);
          }
          $3.when(this._contentReady, this._modalReady).then(function() {
            if (that.isAjaxLoading) {
              setTimeout(function() {
                that.isAjaxLoading = false;
                that.setContent();
                that.setTitle();
                that.setIcon();
                setTimeout(function() {
                  that.hideLoading(false);
                  that._updateContentMaxHeight();
                }, 100);
                if (typeof that.onContentReady === "function") {
                  that.onContentReady();
                }
              }, 50);
            } else {
              that._updateContentMaxHeight();
              that.setTitle();
              that.setIcon();
              if (typeof that.onContentReady === "function") {
                that.onContentReady();
              }
            }
            if (that.autoClose) {
              that._startCountDown();
            }
          }).then(function() {
            that._watchContent();
          });
          if (this.animation === "none") {
            this.animationSpeed = 1;
            this.animationBounce = 1;
          }
          this.$body.css(this._getCSS(this.animationSpeed, this.animationBounce));
          this.$contentPane.css(this._getCSS(this.animationSpeed, 1));
          this.$jconfirmBg.css(this._getCSS(this.animationSpeed, 1));
          this.$jconfirmBoxContainer.css(this._getCSS(this.animationSpeed, 1));
        }, _typePrefix: "jconfirm-type-", typeParsed: "", _parseType: function(type) {
          this.typeParsed = this._typePrefix + type;
        }, setType: function(type) {
          var oldClass = this.typeParsed;
          this._parseType(type);
          this.$jconfirmBox.removeClass(oldClass).addClass(this.typeParsed);
        }, themeParsed: "", _themePrefix: "jconfirm-", setTheme: function(theme) {
          var previous = this.theme;
          this.theme = theme || this.theme;
          this._parseTheme(this.theme);
          if (previous) {
            this.$el.removeClass(previous);
          }
          this.$el.addClass(this.themeParsed);
          this.theme = theme;
        }, _parseTheme: function(theme) {
          var that = this;
          theme = theme.split(",");
          $3.each(theme, function(k2, a3) {
            if (a3.indexOf(that._themePrefix) === -1) {
              theme[k2] = that._themePrefix + $3.trim(a3);
            }
          });
          this.themeParsed = theme.join(" ").toLowerCase();
        }, backgroundDismissAnimationParsed: "", _bgDismissPrefix: "jconfirm-hilight-", _parseBgDismissAnimation: function(bgDismissAnimation) {
          var animation = bgDismissAnimation.split(",");
          var that = this;
          $3.each(animation, function(k2, a3) {
            if (a3.indexOf(that._bgDismissPrefix) === -1) {
              animation[k2] = that._bgDismissPrefix + $3.trim(a3);
            }
          });
          this.backgroundDismissAnimationParsed = animation.join(" ").toLowerCase();
        }, animationParsed: "", closeAnimationParsed: "", _animationPrefix: "jconfirm-animation-", setAnimation: function(animation) {
          this.animation = animation || this.animation;
          this._parseAnimation(this.animation, "o");
        }, _parseAnimation: function(animation, which) {
          which = which || "o";
          var animations = animation.split(",");
          var that = this;
          $3.each(animations, function(k2, a3) {
            if (a3.indexOf(that._animationPrefix) === -1) {
              animations[k2] = that._animationPrefix + $3.trim(a3);
            }
          });
          var a_string = animations.join(" ").toLowerCase();
          if (which === "o") {
            this.animationParsed = a_string;
          } else {
            this.closeAnimationParsed = a_string;
          }
          return a_string;
        }, setCloseAnimation: function(closeAnimation) {
          this.closeAnimation = closeAnimation || this.closeAnimation;
          this._parseAnimation(this.closeAnimation, "c");
        }, setAnimationSpeed: function(speed) {
          this.animationSpeed = speed || this.animationSpeed;
        }, columnClassParsed: "", setColumnClass: function(colClass) {
          if (!this.useBootstrap) {
            console.warn("cannot set columnClass, useBootstrap is set to false");
            return;
          }
          this.columnClass = colClass || this.columnClass;
          this._parseColumnClass(this.columnClass);
          this.$jconfirmBoxContainer.addClass(this.columnClassParsed);
        }, _updateContentMaxHeight: function() {
          var height = $3(window).height() - (this.$jconfirmBox.outerHeight() - this.$contentPane.outerHeight()) - (this.offsetTop + this.offsetBottom);
          this.$contentPane.css({"max-height": height + "px"});
        }, setBoxWidth: function(width) {
          if (this.useBootstrap) {
            console.warn("cannot set boxWidth, useBootstrap is set to true");
            return;
          }
          this.boxWidth = width;
          this.$jconfirmBox.css("width", width);
        }, _parseColumnClass: function(colClass) {
          colClass = colClass.toLowerCase();
          var p;
          switch (colClass) {
            case "xl":
            case "xlarge":
              p = "col-md-12";
              break;
            case "l":
            case "large":
              p = "col-md-8 col-md-offset-2";
              break;
            case "m":
            case "medium":
              p = "col-md-6 col-md-offset-3";
              break;
            case "s":
            case "small":
              p = "col-md-4 col-md-offset-4";
              break;
            case "xs":
            case "xsmall":
              p = "col-md-2 col-md-offset-5";
              break;
            default:
              p = colClass;
          }
          this.columnClassParsed = p;
        }, initDraggable: function() {
          var that = this;
          var $t = this.$titleContainer;
          this.resetDrag();
          if (this.draggable) {
            $t.on("mousedown", function(e2) {
              $t.addClass("jconfirm-hand");
              that.mouseX = e2.clientX;
              that.mouseY = e2.clientY;
              that.isDrag = true;
            });
            $3(window).on("mousemove." + this._id, function(e2) {
              if (that.isDrag) {
                that.movingX = e2.clientX - that.mouseX + that.initialX;
                that.movingY = e2.clientY - that.mouseY + that.initialY;
                that.setDrag();
              }
            });
            $3(window).on("mouseup." + this._id, function() {
              $t.removeClass("jconfirm-hand");
              if (that.isDrag) {
                that.isDrag = false;
                that.initialX = that.movingX;
                that.initialY = that.movingY;
              }
            });
          }
        }, resetDrag: function() {
          this.isDrag = false;
          this.initialX = 0;
          this.initialY = 0;
          this.movingX = 0;
          this.movingY = 0;
          this.mouseX = 0;
          this.mouseY = 0;
          this.$jconfirmBoxContainer.css("transform", "translate(" + 0 + "px, " + 0 + "px)");
        }, setDrag: function() {
          if (!this.draggable) {
            return;
          }
          this.alignMiddle = false;
          var boxWidth = this.$jconfirmBox.outerWidth();
          var boxHeight = this.$jconfirmBox.outerHeight();
          var windowWidth = $3(window).width();
          var windowHeight = $3(window).height();
          var that = this;
          var dragUpdate = 1;
          if (that.movingX % dragUpdate === 0 || that.movingY % dragUpdate === 0) {
            if (that.dragWindowBorder) {
              var leftDistance = windowWidth / 2 - boxWidth / 2;
              var topDistance = windowHeight / 2 - boxHeight / 2;
              topDistance -= that.dragWindowGap;
              leftDistance -= that.dragWindowGap;
              if (leftDistance + that.movingX < 0) {
                that.movingX = -leftDistance;
              } else {
                if (leftDistance - that.movingX < 0) {
                  that.movingX = leftDistance;
                }
              }
              if (topDistance + that.movingY < 0) {
                that.movingY = -topDistance;
              } else {
                if (topDistance - that.movingY < 0) {
                  that.movingY = topDistance;
                }
              }
            }
            that.$jconfirmBoxContainer.css("transform", "translate(" + that.movingX + "px, " + that.movingY + "px)");
          }
        }, _scrollTop: function() {
          if (typeof pageYOffset !== "undefined") {
            return pageYOffset;
          } else {
            var B2 = document.body;
            var D2 = document.documentElement;
            D2 = D2.clientHeight ? D2 : B2;
            return D2.scrollTop;
          }
        }, _watchContent: function() {
          var that = this;
          if (this._timer) {
            clearInterval(this._timer);
          }
          var prevContentHeight = 0;
          this._timer = setInterval(function() {
            if (that.smoothContent) {
              var contentHeight = that.$content.outerHeight() || 0;
              if (contentHeight !== prevContentHeight) {
                prevContentHeight = contentHeight;
              }
              var wh = $3(window).height();
              var total = that.offsetTop + that.offsetBottom + that.$jconfirmBox.height() - that.$contentPane.height() + that.$content.height();
              if (total < wh) {
                that.$contentPane.addClass("no-scroll");
              } else {
                that.$contentPane.removeClass("no-scroll");
              }
            }
          }, this.watchInterval);
        }, _overflowClass: "jconfirm-overflow", _hilightAnimating: false, highlight: function() {
          this.hiLightModal();
        }, hiLightModal: function() {
          var that = this;
          if (this._hilightAnimating) {
            return;
          }
          that.$body.addClass("hilight");
          var duration = parseFloat(that.$body.css("animation-duration")) || 2;
          this._hilightAnimating = true;
          setTimeout(function() {
            that._hilightAnimating = false;
            that.$body.removeClass("hilight");
          }, duration * 1e3);
        }, _bindEvents: function() {
          var that = this;
          this.boxClicked = false;
          this.$scrollPane.click(function(e2) {
            if (!that.boxClicked) {
              var buttonName = false;
              var shouldClose = false;
              var str;
              if (typeof that.backgroundDismiss === "function") {
                str = that.backgroundDismiss();
              } else {
                str = that.backgroundDismiss;
              }
              if (typeof str === "string" && typeof that.buttons[str] !== "undefined") {
                buttonName = str;
                shouldClose = false;
              } else {
                if (typeof str === "undefined" || !!str === true) {
                  shouldClose = true;
                } else {
                  shouldClose = false;
                }
              }
              if (buttonName) {
                var btnResponse = that.buttons[buttonName].action.apply(that);
                shouldClose = typeof btnResponse === "undefined" || !!btnResponse;
              }
              if (shouldClose) {
                that.close();
              } else {
                that.hiLightModal();
              }
            }
            that.boxClicked = false;
          });
          this.$jconfirmBox.click(function(e2) {
            that.boxClicked = true;
          });
          var isKeyDown = false;
          $3(window).on("jcKeyDown." + that._id, function(e2) {
            if (!isKeyDown) {
              isKeyDown = true;
            }
          });
          $3(window).on("keyup." + that._id, function(e2) {
            if (isKeyDown) {
              that.reactOnKey(e2);
              isKeyDown = false;
            }
          });
          $3(window).on("resize." + this._id, function() {
            that._updateContentMaxHeight();
            setTimeout(function() {
              that.resetDrag();
            }, 100);
          });
        }, _cubic_bezier: "0.36, 0.55, 0.19", _getCSS: function(speed, bounce) {
          return {"-webkit-transition-duration": speed / 1e3 + "s", "transition-duration": speed / 1e3 + "s", "-webkit-transition-timing-function": "cubic-bezier(" + this._cubic_bezier + ", " + bounce + ")", "transition-timing-function": "cubic-bezier(" + this._cubic_bezier + ", " + bounce + ")"};
        }, _setButtons: function() {
          var that = this;
          var total_buttons = 0;
          if (typeof this.buttons !== "object") {
            this.buttons = {};
          }
          $3.each(this.buttons, function(key, button) {
            total_buttons += 1;
            if (typeof button === "function") {
              that.buttons[key] = button = {action: button};
            }
            that.buttons[key].text = button.text || key;
            that.buttons[key].btnClass = button.btnClass || "btn-default";
            that.buttons[key].action = button.action || function() {
            };
            that.buttons[key].keys = button.keys || [];
            that.buttons[key].isHidden = button.isHidden || false;
            that.buttons[key].isDisabled = button.isDisabled || false;
            $3.each(that.buttons[key].keys, function(i2, a3) {
              that.buttons[key].keys[i2] = a3.toLowerCase();
            });
            var button_element = $3('<button type="button" class="btn"></button>').html(that.buttons[key].text).addClass(that.buttons[key].btnClass).prop("disabled", that.buttons[key].isDisabled).css("display", that.buttons[key].isHidden ? "none" : "").click(function(e2) {
              e2.preventDefault();
              var res = that.buttons[key].action.apply(that, [that.buttons[key]]);
              that.onAction.apply(that, [key, that.buttons[key]]);
              that._stopCountDown();
              if (typeof res === "undefined" || res) {
                that.close();
              }
            });
            that.buttons[key].el = button_element;
            that.buttons[key].setText = function(text) {
              button_element.html(text);
            };
            that.buttons[key].addClass = function(className) {
              button_element.addClass(className);
            };
            that.buttons[key].removeClass = function(className) {
              button_element.removeClass(className);
            };
            that.buttons[key].disable = function() {
              that.buttons[key].isDisabled = true;
              button_element.prop("disabled", true);
            };
            that.buttons[key].enable = function() {
              that.buttons[key].isDisabled = false;
              button_element.prop("disabled", false);
            };
            that.buttons[key].show = function() {
              that.buttons[key].isHidden = false;
              button_element.css("display", "");
            };
            that.buttons[key].hide = function() {
              that.buttons[key].isHidden = true;
              button_element.css("display", "none");
            };
            that["$_" + key] = that["$$" + key] = button_element;
            that.$btnc.append(button_element);
          });
          if (total_buttons === 0) {
            this.$btnc.hide();
          }
          if (this.closeIcon === null && total_buttons === 0) {
            this.closeIcon = true;
          }
          if (this.closeIcon) {
            if (this.closeIconClass) {
              var closeHtml = '<i class="' + this.closeIconClass + '"></i>';
              this.$closeIcon.html(closeHtml);
            }
            this.$closeIcon.click(function(e2) {
              e2.preventDefault();
              var buttonName = false;
              var shouldClose = false;
              var str;
              if (typeof that.closeIcon === "function") {
                str = that.closeIcon();
              } else {
                str = that.closeIcon;
              }
              if (typeof str === "string" && typeof that.buttons[str] !== "undefined") {
                buttonName = str;
                shouldClose = false;
              } else {
                if (typeof str === "undefined" || !!str === true) {
                  shouldClose = true;
                } else {
                  shouldClose = false;
                }
              }
              if (buttonName) {
                var btnResponse = that.buttons[buttonName].action.apply(that);
                shouldClose = typeof btnResponse === "undefined" || !!btnResponse;
              }
              if (shouldClose) {
                that.close();
              }
            });
            this.$closeIcon.show();
          } else {
            this.$closeIcon.hide();
          }
        }, setTitle: function(string, force) {
          force = force || false;
          if (typeof string !== "undefined") {
            if (typeof string === "string") {
              this.title = string;
            } else {
              if (typeof string === "function") {
                if (typeof string.promise === "function") {
                  console.error("Promise was returned from title function, this is not supported.");
                }
                var response = string();
                if (typeof response === "string") {
                  this.title = response;
                } else {
                  this.title = false;
                }
              } else {
                this.title = false;
              }
            }
          }
          if (this.isAjaxLoading && !force) {
            return;
          }
          this.$title.html(this.title || "");
          this.updateTitleContainer();
        }, setIcon: function(iconClass, force) {
          force = force || false;
          if (typeof iconClass !== "undefined") {
            if (typeof iconClass === "string") {
              this.icon = iconClass;
            } else {
              if (typeof iconClass === "function") {
                var response = iconClass();
                if (typeof response === "string") {
                  this.icon = response;
                } else {
                  this.icon = false;
                }
              } else {
                this.icon = false;
              }
            }
          }
          if (this.isAjaxLoading && !force) {
            return;
          }
          this.$icon.html(this.icon ? '<i class="' + this.icon + '"></i>' : "");
          this.updateTitleContainer();
        }, updateTitleContainer: function() {
          if (!this.title && !this.icon) {
            this.$titleContainer.hide();
          } else {
            this.$titleContainer.show();
          }
        }, setContentPrepend: function(content, force) {
          if (!content) {
            return;
          }
          this.contentParsed.prepend(content);
        }, setContentAppend: function(content) {
          if (!content) {
            return;
          }
          this.contentParsed.append(content);
        }, setContent: function(content, force) {
          force = !!force;
          var that = this;
          if (content) {
            this.contentParsed.html("").append(content);
          }
          if (this.isAjaxLoading && !force) {
            return;
          }
          this.$content.html("");
          this.$content.append(this.contentParsed);
          setTimeout(function() {
            that.$body.find("input[autofocus]:visible:first").focus();
          }, 100);
        }, loadingSpinner: false, showLoading: function(disableButtons) {
          this.loadingSpinner = true;
          this.$jconfirmBox.addClass("loading");
          if (disableButtons) {
            this.$btnc.find("button").prop("disabled", true);
          }
        }, hideLoading: function(enableButtons) {
          this.loadingSpinner = false;
          this.$jconfirmBox.removeClass("loading");
          if (enableButtons) {
            this.$btnc.find("button").prop("disabled", false);
          }
        }, ajaxResponse: false, contentParsed: "", isAjax: false, isAjaxLoading: false, _parseContent: function() {
          var that = this;
          var e2 = "&nbsp;";
          if (typeof this.content === "function") {
            var res = this.content.apply(this);
            if (typeof res === "string") {
              this.content = res;
            } else {
              if (typeof res === "object" && typeof res.always === "function") {
                this.isAjax = true;
                this.isAjaxLoading = true;
                res.always(function(data, status, xhr) {
                  that.ajaxResponse = {data, status, xhr};
                  that._contentReady.resolve(data, status, xhr);
                  if (typeof that.contentLoaded === "function") {
                    that.contentLoaded(data, status, xhr);
                  }
                });
                this.content = e2;
              } else {
                this.content = e2;
              }
            }
          }
          if (typeof this.content === "string" && this.content.substr(0, 4).toLowerCase() === "url:") {
            this.isAjax = true;
            this.isAjaxLoading = true;
            var u2 = this.content.substring(4, this.content.length);
            $3.get(u2).done(function(html) {
              that.contentParsed.html(html);
            }).always(function(data, status, xhr) {
              that.ajaxResponse = {data, status, xhr};
              that._contentReady.resolve(data, status, xhr);
              if (typeof that.contentLoaded === "function") {
                that.contentLoaded(data, status, xhr);
              }
            });
          }
          if (!this.content) {
            this.content = e2;
          }
          if (!this.isAjax) {
            this.contentParsed.html(this.content);
            this.setContent();
            that._contentReady.resolve();
          }
        }, _stopCountDown: function() {
          clearInterval(this.autoCloseInterval);
          if (this.$cd) {
            this.$cd.remove();
          }
        }, _startCountDown: function() {
          var that = this;
          var opt = this.autoClose.split("|");
          if (opt.length !== 2) {
            console.error("Invalid option for autoClose. example 'close|10000'");
            return false;
          }
          var button_key = opt[0];
          var time = parseInt(opt[1]);
          if (typeof this.buttons[button_key] === "undefined") {
            console.error("Invalid button key '" + button_key + "' for autoClose");
            return false;
          }
          var seconds = Math.ceil(time / 1e3);
          this.$cd = $3('<span class="countdown"> (' + seconds + ")</span>").appendTo(this["$_" + button_key]);
          this.autoCloseInterval = setInterval(function() {
            that.$cd.html(" (" + (seconds -= 1) + ") ");
            if (seconds <= 0) {
              that["$$" + button_key].trigger("click");
              that._stopCountDown();
            }
          }, 1e3);
        }, _getKey: function(key) {
          switch (key) {
            case 192:
              return "tilde";
            case 13:
              return "enter";
            case 16:
              return "shift";
            case 9:
              return "tab";
            case 20:
              return "capslock";
            case 17:
              return "ctrl";
            case 91:
              return "win";
            case 18:
              return "alt";
            case 27:
              return "esc";
            case 32:
              return "space";
          }
          var initial = String.fromCharCode(key);
          if (/^[A-z0-9]+$/.test(initial)) {
            return initial.toLowerCase();
          } else {
            return false;
          }
        }, reactOnKey: function(e2) {
          var that = this;
          var a3 = $3(".jconfirm");
          if (a3.eq(a3.length - 1)[0] !== this.$el[0]) {
            return false;
          }
          var key = e2.which;
          if (this.$content.find(":input").is(":focus") && /13|32/.test(key)) {
            return false;
          }
          var keyChar = this._getKey(key);
          if (keyChar === "esc" && this.escapeKey) {
            if (this.escapeKey === true) {
              this.$scrollPane.trigger("click");
            } else {
              if (typeof this.escapeKey === "string" || typeof this.escapeKey === "function") {
                var buttonKey;
                if (typeof this.escapeKey === "function") {
                  buttonKey = this.escapeKey();
                } else {
                  buttonKey = this.escapeKey;
                }
                if (buttonKey) {
                  if (typeof this.buttons[buttonKey] === "undefined") {
                    console.warn("Invalid escapeKey, no buttons found with key " + buttonKey);
                  } else {
                    this["$_" + buttonKey].trigger("click");
                  }
                }
              }
            }
          }
          $3.each(this.buttons, function(key2, button) {
            if (button.keys.indexOf(keyChar) !== -1) {
              that["$_" + key2].trigger("click");
            }
          });
        }, setDialogCenter: function() {
          console.info("setDialogCenter is deprecated, dialogs are centered with CSS3 tables");
        }, _unwatchContent: function() {
          clearInterval(this._timer);
        }, close: function(onClosePayload) {
          var that = this;
          if (typeof this.onClose === "function") {
            this.onClose(onClosePayload);
          }
          this._unwatchContent();
          $3(window).unbind("resize." + this._id);
          $3(window).unbind("keyup." + this._id);
          $3(window).unbind("jcKeyDown." + this._id);
          if (this.draggable) {
            $3(window).unbind("mousemove." + this._id);
            $3(window).unbind("mouseup." + this._id);
            this.$titleContainer.unbind("mousedown");
          }
          that.$el.removeClass(that.loadedClass);
          $3("body").removeClass("jconfirm-no-scroll-" + that._id);
          that.$jconfirmBoxContainer.removeClass("jconfirm-no-transition");
          setTimeout(function() {
            that.$body.addClass(that.closeAnimationParsed);
            that.$jconfirmBg.addClass("jconfirm-bg-h");
            var closeTimer = that.closeAnimation === "none" ? 1 : that.animationSpeed;
            setTimeout(function() {
              that.$el.remove();
              var l = w2.jconfirm.instances;
              var i2 = w2.jconfirm.instances.length - 1;
              for (i2; i2 >= 0; i2--) {
                if (w2.jconfirm.instances[i2]._id === that._id) {
                  w2.jconfirm.instances.splice(i2, 1);
                }
              }
              if (!w2.jconfirm.instances.length) {
                if (that.scrollToPreviousElement && w2.jconfirm.lastFocused && w2.jconfirm.lastFocused.length && $3.contains(document, w2.jconfirm.lastFocused[0])) {
                  var $lf = w2.jconfirm.lastFocused;
                  if (that.scrollToPreviousElementAnimate) {
                    var st = $3(window).scrollTop();
                    var ot = w2.jconfirm.lastFocused.offset().top;
                    var wh = $3(window).height();
                    if (!(ot > st && ot < st + wh)) {
                      var scrollTo = ot - Math.round(wh / 3);
                      $3("html, body").animate({scrollTop: scrollTo}, that.animationSpeed, "swing", function() {
                        $lf.focus();
                      });
                    } else {
                      $lf.focus();
                    }
                  } else {
                    $lf.focus();
                  }
                  w2.jconfirm.lastFocused = false;
                }
              }
              if (typeof that.onDestroy === "function") {
                that.onDestroy();
              }
            }, closeTimer * 0.4);
          }, 50);
          return true;
        }, open: function() {
          if (this.isOpen()) {
            return false;
          }
          this._buildHTML();
          this._bindEvents();
          this._open();
          return true;
        }, setStartingPoint: function() {
          var el = false;
          if (this.animateFromElement !== true && this.animateFromElement) {
            el = this.animateFromElement;
            w2.jconfirm.lastClicked = false;
          } else {
            if (w2.jconfirm.lastClicked && this.animateFromElement === true) {
              el = w2.jconfirm.lastClicked;
              w2.jconfirm.lastClicked = false;
            } else {
              return false;
            }
          }
          if (!el) {
            return false;
          }
          var offset = el.offset();
          var iTop = el.outerHeight() / 2;
          var iLeft = el.outerWidth() / 2;
          iTop -= this.$jconfirmBox.outerHeight() / 2;
          iLeft -= this.$jconfirmBox.outerWidth() / 2;
          var sourceTop = offset.top + iTop;
          sourceTop = sourceTop - this._scrollTop();
          var sourceLeft = offset.left + iLeft;
          var wh = $3(window).height() / 2;
          var ww = $3(window).width() / 2;
          var targetH = wh - this.$jconfirmBox.outerHeight() / 2;
          var targetW = ww - this.$jconfirmBox.outerWidth() / 2;
          sourceTop -= targetH;
          sourceLeft -= targetW;
          if (Math.abs(sourceTop) > wh || Math.abs(sourceLeft) > ww) {
            return false;
          }
          this.$jconfirmBoxContainer.css("transform", "translate(" + sourceLeft + "px, " + sourceTop + "px)");
        }, _open: function() {
          var that = this;
          if (typeof that.onOpenBefore === "function") {
            that.onOpenBefore();
          }
          this.$body.removeClass(this.animationParsed);
          this.$jconfirmBg.removeClass("jconfirm-bg-h");
          this.$body.focus();
          that.$jconfirmBoxContainer.css("transform", "translate(" + 0 + "px, " + 0 + "px)");
          setTimeout(function() {
            that.$body.css(that._getCSS(that.animationSpeed, 1));
            that.$body.css({"transition-property": that.$body.css("transition-property") + ", margin"});
            that.$jconfirmBoxContainer.addClass("jconfirm-no-transition");
            that._modalReady.resolve();
            if (typeof that.onOpen === "function") {
              that.onOpen();
            }
            that.$el.addClass(that.loadedClass);
          }, this.animationSpeed);
        }, loadedClass: "jconfirm-open", isClosed: function() {
          return !this.$el || this.$el.parent().length === 0;
        }, isOpen: function() {
          return !this.isClosed();
        }, toggle: function() {
          if (!this.isOpen()) {
            this.open();
          } else {
            this.close();
          }
        }};
        w2.jconfirm.instances = [];
        w2.jconfirm.lastFocused = false;
        w2.jconfirm.pluginDefaults = {template: '<div class="jconfirm"><div class="jconfirm-bg jconfirm-bg-h"></div><div class="jconfirm-scrollpane"><div class="jconfirm-row"><div class="jconfirm-cell"><div class="jconfirm-holder"><div class="jc-bs3-container"><div class="jc-bs3-row"><div class="jconfirm-box-container jconfirm-animated"><div class="jconfirm-box" role="dialog" aria-labelledby="labelled" tabindex="-1"><div class="jconfirm-closeIcon">&times;</div><div class="jconfirm-title-c"><span class="jconfirm-icon-c"></span><span class="jconfirm-title"></span></div><div class="jconfirm-content-pane"><div class="jconfirm-content"></div></div><div class="jconfirm-buttons"></div><div class="jconfirm-clear"></div></div></div></div></div></div></div></div></div></div>', title: "Hello", titleClass: "", type: "default", typeAnimated: true, draggable: true, dragWindowGap: 15, dragWindowBorder: true, animateFromElement: true, alignMiddle: true, smoothContent: true, content: "Are you sure to continue?", buttons: {}, defaultButtons: {ok: {action: function() {
        }}, close: {action: function() {
        }}}, contentLoaded: function() {
        }, icon: "", lazyOpen: false, bgOpacity: null, theme: "light", animation: "scale", closeAnimation: "scale", animationSpeed: 400, animationBounce: 1, escapeKey: true, rtl: false, container: "body", containerFluid: false, backgroundDismiss: false, backgroundDismissAnimation: "shake", autoClose: false, closeIcon: null, closeIconClass: false, watchInterval: 100, columnClass: "col-md-4 col-md-offset-4 col-sm-6 col-sm-offset-3 col-xs-10 col-xs-offset-1", boxWidth: "50%", scrollToPreviousElement: true, scrollToPreviousElementAnimate: true, useBootstrap: true, offsetTop: 40, offsetBottom: 40, bootstrapClasses: {container: "container", containerFluid: "container-fluid", row: "row"}, onContentReady: function() {
        }, onOpenBefore: function() {
        }, onOpen: function() {
        }, onClose: function() {
        }, onDestroy: function() {
        }, onAction: function() {
        }};
        var keyDown = false;
        $3(window).on("keydown", function(e2) {
          if (!keyDown) {
            var $target = $3(e2.target);
            var pass = false;
            if ($target.closest(".jconfirm-box").length) {
              pass = true;
            }
            if (pass) {
              $3(window).trigger("jcKeyDown");
            }
            keyDown = true;
          }
        });
        $3(window).on("keyup", function() {
          keyDown = false;
        });
        w2.jconfirm.lastClicked = false;
        $3(document).on("mousedown", "button, a, [jc-source]", function() {
          w2.jconfirm.lastClicked = $3(this);
        });
      });
    }
  });

  // node_modules/lodash/lodash.js
  var require_lodash = __commonJS({
    "node_modules/lodash/lodash.js"(exports, module) {
      (function() {
        var undefined2;
        var VERSION = "4.17.21";
        var LARGE_ARRAY_SIZE = 200;
        var CORE_ERROR_TEXT = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.", FUNC_ERROR_TEXT = "Expected a function", INVALID_TEMPL_VAR_ERROR_TEXT = "Invalid `variable` option passed into `_.template`";
        var HASH_UNDEFINED = "__lodash_hash_undefined__";
        var MAX_MEMOIZE_SIZE = 500;
        var PLACEHOLDER = "__lodash_placeholder__";
        var CLONE_DEEP_FLAG = 1, CLONE_FLAT_FLAG = 2, CLONE_SYMBOLS_FLAG = 4;
        var COMPARE_PARTIAL_FLAG = 1, COMPARE_UNORDERED_FLAG = 2;
        var WRAP_BIND_FLAG = 1, WRAP_BIND_KEY_FLAG = 2, WRAP_CURRY_BOUND_FLAG = 4, WRAP_CURRY_FLAG = 8, WRAP_CURRY_RIGHT_FLAG = 16, WRAP_PARTIAL_FLAG = 32, WRAP_PARTIAL_RIGHT_FLAG = 64, WRAP_ARY_FLAG = 128, WRAP_REARG_FLAG = 256, WRAP_FLIP_FLAG = 512;
        var DEFAULT_TRUNC_LENGTH = 30, DEFAULT_TRUNC_OMISSION = "...";
        var HOT_COUNT = 800, HOT_SPAN = 16;
        var LAZY_FILTER_FLAG = 1, LAZY_MAP_FLAG = 2, LAZY_WHILE_FLAG = 3;
        var INFINITY = 1 / 0, MAX_SAFE_INTEGER = 9007199254740991, MAX_INTEGER = 17976931348623157e292, NAN = 0 / 0;
        var MAX_ARRAY_LENGTH = 4294967295, MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1, HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;
        var wrapFlags = [
          ["ary", WRAP_ARY_FLAG],
          ["bind", WRAP_BIND_FLAG],
          ["bindKey", WRAP_BIND_KEY_FLAG],
          ["curry", WRAP_CURRY_FLAG],
          ["curryRight", WRAP_CURRY_RIGHT_FLAG],
          ["flip", WRAP_FLIP_FLAG],
          ["partial", WRAP_PARTIAL_FLAG],
          ["partialRight", WRAP_PARTIAL_RIGHT_FLAG],
          ["rearg", WRAP_REARG_FLAG]
        ];
        var argsTag = "[object Arguments]", arrayTag = "[object Array]", asyncTag = "[object AsyncFunction]", boolTag = "[object Boolean]", dateTag = "[object Date]", domExcTag = "[object DOMException]", errorTag = "[object Error]", funcTag = "[object Function]", genTag = "[object GeneratorFunction]", mapTag = "[object Map]", numberTag = "[object Number]", nullTag = "[object Null]", objectTag = "[object Object]", promiseTag = "[object Promise]", proxyTag = "[object Proxy]", regexpTag = "[object RegExp]", setTag = "[object Set]", stringTag = "[object String]", symbolTag = "[object Symbol]", undefinedTag = "[object Undefined]", weakMapTag = "[object WeakMap]", weakSetTag = "[object WeakSet]";
        var arrayBufferTag = "[object ArrayBuffer]", dataViewTag = "[object DataView]", float32Tag = "[object Float32Array]", float64Tag = "[object Float64Array]", int8Tag = "[object Int8Array]", int16Tag = "[object Int16Array]", int32Tag = "[object Int32Array]", uint8Tag = "[object Uint8Array]", uint8ClampedTag = "[object Uint8ClampedArray]", uint16Tag = "[object Uint16Array]", uint32Tag = "[object Uint32Array]";
        var reEmptyStringLeading = /\b__p \+= '';/g, reEmptyStringMiddle = /\b(__p \+=) '' \+/g, reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;
        var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g, reUnescapedHtml = /[&<>"']/g, reHasEscapedHtml = RegExp(reEscapedHtml.source), reHasUnescapedHtml = RegExp(reUnescapedHtml.source);
        var reEscape = /<%-([\s\S]+?)%>/g, reEvaluate = /<%([\s\S]+?)%>/g, reInterpolate = /<%=([\s\S]+?)%>/g;
        var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, reIsPlainProp = /^\w*$/, rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
        var reRegExpChar = /[\\^$.*+?()[\]{}|]/g, reHasRegExpChar = RegExp(reRegExpChar.source);
        var reTrimStart = /^\s+/;
        var reWhitespace = /\s/;
        var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/, reSplitDetails = /,? & /;
        var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
        var reForbiddenIdentifierChars = /[()=,{}\[\]\/\s]/;
        var reEscapeChar = /\\(\\)?/g;
        var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;
        var reFlags = /\w*$/;
        var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
        var reIsBinary = /^0b[01]+$/i;
        var reIsHostCtor = /^\[object .+?Constructor\]$/;
        var reIsOctal = /^0o[0-7]+$/i;
        var reIsUint = /^(?:0|[1-9]\d*)$/;
        var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
        var reNoMatch = /($^)/;
        var reUnescapedString = /['\n\r\u2028\u2029\\]/g;
        var rsAstralRange = "\\ud800-\\udfff", rsComboMarksRange = "\\u0300-\\u036f", reComboHalfMarksRange = "\\ufe20-\\ufe2f", rsComboSymbolsRange = "\\u20d0-\\u20ff", rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange, rsDingbatRange = "\\u2700-\\u27bf", rsLowerRange = "a-z\\xdf-\\xf6\\xf8-\\xff", rsMathOpRange = "\\xac\\xb1\\xd7\\xf7", rsNonCharRange = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf", rsPunctuationRange = "\\u2000-\\u206f", rsSpaceRange = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", rsUpperRange = "A-Z\\xc0-\\xd6\\xd8-\\xde", rsVarRange = "\\ufe0e\\ufe0f", rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;
        var rsApos = "['\u2019]", rsAstral = "[" + rsAstralRange + "]", rsBreak = "[" + rsBreakRange + "]", rsCombo = "[" + rsComboRange + "]", rsDigits = "\\d+", rsDingbat = "[" + rsDingbatRange + "]", rsLower = "[" + rsLowerRange + "]", rsMisc = "[^" + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + "]", rsFitz = "\\ud83c[\\udffb-\\udfff]", rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")", rsNonAstral = "[^" + rsAstralRange + "]", rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}", rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]", rsUpper = "[" + rsUpperRange + "]", rsZWJ = "\\u200d";
        var rsMiscLower = "(?:" + rsLower + "|" + rsMisc + ")", rsMiscUpper = "(?:" + rsUpper + "|" + rsMisc + ")", rsOptContrLower = "(?:" + rsApos + "(?:d|ll|m|re|s|t|ve))?", rsOptContrUpper = "(?:" + rsApos + "(?:D|LL|M|RE|S|T|VE))?", reOptMod = rsModifier + "?", rsOptVar = "[" + rsVarRange + "]?", rsOptJoin = "(?:" + rsZWJ + "(?:" + [rsNonAstral, rsRegional, rsSurrPair].join("|") + ")" + rsOptVar + reOptMod + ")*", rsOrdLower = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", rsOrdUpper = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", rsSeq = rsOptVar + reOptMod + rsOptJoin, rsEmoji = "(?:" + [rsDingbat, rsRegional, rsSurrPair].join("|") + ")" + rsSeq, rsSymbol = "(?:" + [rsNonAstral + rsCombo + "?", rsCombo, rsRegional, rsSurrPair, rsAstral].join("|") + ")";
        var reApos = RegExp(rsApos, "g");
        var reComboMark = RegExp(rsCombo, "g");
        var reUnicode = RegExp(rsFitz + "(?=" + rsFitz + ")|" + rsSymbol + rsSeq, "g");
        var reUnicodeWord = RegExp([
          rsUpper + "?" + rsLower + "+" + rsOptContrLower + "(?=" + [rsBreak, rsUpper, "$"].join("|") + ")",
          rsMiscUpper + "+" + rsOptContrUpper + "(?=" + [rsBreak, rsUpper + rsMiscLower, "$"].join("|") + ")",
          rsUpper + "?" + rsMiscLower + "+" + rsOptContrLower,
          rsUpper + "+" + rsOptContrUpper,
          rsOrdUpper,
          rsOrdLower,
          rsDigits,
          rsEmoji
        ].join("|"), "g");
        var reHasUnicode = RegExp("[" + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + "]");
        var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
        var contextProps = [
          "Array",
          "Buffer",
          "DataView",
          "Date",
          "Error",
          "Float32Array",
          "Float64Array",
          "Function",
          "Int8Array",
          "Int16Array",
          "Int32Array",
          "Map",
          "Math",
          "Object",
          "Promise",
          "RegExp",
          "Set",
          "String",
          "Symbol",
          "TypeError",
          "Uint8Array",
          "Uint8ClampedArray",
          "Uint16Array",
          "Uint32Array",
          "WeakMap",
          "_",
          "clearTimeout",
          "isFinite",
          "parseInt",
          "setTimeout"
        ];
        var templateCounter = -1;
        var typedArrayTags = {};
        typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
        typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
        var cloneableTags = {};
        cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
        cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
        var deburredLetters = {
          "\xC0": "A",
          "\xC1": "A",
          "\xC2": "A",
          "\xC3": "A",
          "\xC4": "A",
          "\xC5": "A",
          "\xE0": "a",
          "\xE1": "a",
          "\xE2": "a",
          "\xE3": "a",
          "\xE4": "a",
          "\xE5": "a",
          "\xC7": "C",
          "\xE7": "c",
          "\xD0": "D",
          "\xF0": "d",
          "\xC8": "E",
          "\xC9": "E",
          "\xCA": "E",
          "\xCB": "E",
          "\xE8": "e",
          "\xE9": "e",
          "\xEA": "e",
          "\xEB": "e",
          "\xCC": "I",
          "\xCD": "I",
          "\xCE": "I",
          "\xCF": "I",
          "\xEC": "i",
          "\xED": "i",
          "\xEE": "i",
          "\xEF": "i",
          "\xD1": "N",
          "\xF1": "n",
          "\xD2": "O",
          "\xD3": "O",
          "\xD4": "O",
          "\xD5": "O",
          "\xD6": "O",
          "\xD8": "O",
          "\xF2": "o",
          "\xF3": "o",
          "\xF4": "o",
          "\xF5": "o",
          "\xF6": "o",
          "\xF8": "o",
          "\xD9": "U",
          "\xDA": "U",
          "\xDB": "U",
          "\xDC": "U",
          "\xF9": "u",
          "\xFA": "u",
          "\xFB": "u",
          "\xFC": "u",
          "\xDD": "Y",
          "\xFD": "y",
          "\xFF": "y",
          "\xC6": "Ae",
          "\xE6": "ae",
          "\xDE": "Th",
          "\xFE": "th",
          "\xDF": "ss",
          "\u0100": "A",
          "\u0102": "A",
          "\u0104": "A",
          "\u0101": "a",
          "\u0103": "a",
          "\u0105": "a",
          "\u0106": "C",
          "\u0108": "C",
          "\u010A": "C",
          "\u010C": "C",
          "\u0107": "c",
          "\u0109": "c",
          "\u010B": "c",
          "\u010D": "c",
          "\u010E": "D",
          "\u0110": "D",
          "\u010F": "d",
          "\u0111": "d",
          "\u0112": "E",
          "\u0114": "E",
          "\u0116": "E",
          "\u0118": "E",
          "\u011A": "E",
          "\u0113": "e",
          "\u0115": "e",
          "\u0117": "e",
          "\u0119": "e",
          "\u011B": "e",
          "\u011C": "G",
          "\u011E": "G",
          "\u0120": "G",
          "\u0122": "G",
          "\u011D": "g",
          "\u011F": "g",
          "\u0121": "g",
          "\u0123": "g",
          "\u0124": "H",
          "\u0126": "H",
          "\u0125": "h",
          "\u0127": "h",
          "\u0128": "I",
          "\u012A": "I",
          "\u012C": "I",
          "\u012E": "I",
          "\u0130": "I",
          "\u0129": "i",
          "\u012B": "i",
          "\u012D": "i",
          "\u012F": "i",
          "\u0131": "i",
          "\u0134": "J",
          "\u0135": "j",
          "\u0136": "K",
          "\u0137": "k",
          "\u0138": "k",
          "\u0139": "L",
          "\u013B": "L",
          "\u013D": "L",
          "\u013F": "L",
          "\u0141": "L",
          "\u013A": "l",
          "\u013C": "l",
          "\u013E": "l",
          "\u0140": "l",
          "\u0142": "l",
          "\u0143": "N",
          "\u0145": "N",
          "\u0147": "N",
          "\u014A": "N",
          "\u0144": "n",
          "\u0146": "n",
          "\u0148": "n",
          "\u014B": "n",
          "\u014C": "O",
          "\u014E": "O",
          "\u0150": "O",
          "\u014D": "o",
          "\u014F": "o",
          "\u0151": "o",
          "\u0154": "R",
          "\u0156": "R",
          "\u0158": "R",
          "\u0155": "r",
          "\u0157": "r",
          "\u0159": "r",
          "\u015A": "S",
          "\u015C": "S",
          "\u015E": "S",
          "\u0160": "S",
          "\u015B": "s",
          "\u015D": "s",
          "\u015F": "s",
          "\u0161": "s",
          "\u0162": "T",
          "\u0164": "T",
          "\u0166": "T",
          "\u0163": "t",
          "\u0165": "t",
          "\u0167": "t",
          "\u0168": "U",
          "\u016A": "U",
          "\u016C": "U",
          "\u016E": "U",
          "\u0170": "U",
          "\u0172": "U",
          "\u0169": "u",
          "\u016B": "u",
          "\u016D": "u",
          "\u016F": "u",
          "\u0171": "u",
          "\u0173": "u",
          "\u0174": "W",
          "\u0175": "w",
          "\u0176": "Y",
          "\u0177": "y",
          "\u0178": "Y",
          "\u0179": "Z",
          "\u017B": "Z",
          "\u017D": "Z",
          "\u017A": "z",
          "\u017C": "z",
          "\u017E": "z",
          "\u0132": "IJ",
          "\u0133": "ij",
          "\u0152": "Oe",
          "\u0153": "oe",
          "\u0149": "'n",
          "\u017F": "s"
        };
        var htmlEscapes = {
          "&": "&amp;",
          "<": "&lt;",
          ">": "&gt;",
          '"': "&quot;",
          "'": "&#39;"
        };
        var htmlUnescapes = {
          "&amp;": "&",
          "&lt;": "<",
          "&gt;": ">",
          "&quot;": '"',
          "&#39;": "'"
        };
        var stringEscapes = {
          "\\": "\\",
          "'": "'",
          "\n": "n",
          "\r": "r",
          "\u2028": "u2028",
          "\u2029": "u2029"
        };
        var freeParseFloat = parseFloat, freeParseInt = parseInt;
        var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
        var freeSelf = typeof self == "object" && self && self.Object === Object && self;
        var root = freeGlobal || freeSelf || Function("return this")();
        var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
        var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
        var moduleExports = freeModule && freeModule.exports === freeExports;
        var freeProcess = moduleExports && freeGlobal.process;
        var nodeUtil = function() {
          try {
            var types = freeModule && freeModule.require && freeModule.require("util").types;
            if (types) {
              return types;
            }
            return freeProcess && freeProcess.binding && freeProcess.binding("util");
          } catch (e2) {
          }
        }();
        var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer, nodeIsDate = nodeUtil && nodeUtil.isDate, nodeIsMap = nodeUtil && nodeUtil.isMap, nodeIsRegExp = nodeUtil && nodeUtil.isRegExp, nodeIsSet = nodeUtil && nodeUtil.isSet, nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
        function apply(func, thisArg, args) {
          switch (args.length) {
            case 0:
              return func.call(thisArg);
            case 1:
              return func.call(thisArg, args[0]);
            case 2:
              return func.call(thisArg, args[0], args[1]);
            case 3:
              return func.call(thisArg, args[0], args[1], args[2]);
          }
          return func.apply(thisArg, args);
        }
        function arrayAggregator(array, setter, iteratee, accumulator) {
          var index = -1, length = array == null ? 0 : array.length;
          while (++index < length) {
            var value = array[index];
            setter(accumulator, value, iteratee(value), array);
          }
          return accumulator;
        }
        function arrayEach(array, iteratee) {
          var index = -1, length = array == null ? 0 : array.length;
          while (++index < length) {
            if (iteratee(array[index], index, array) === false) {
              break;
            }
          }
          return array;
        }
        function arrayEachRight(array, iteratee) {
          var length = array == null ? 0 : array.length;
          while (length--) {
            if (iteratee(array[length], length, array) === false) {
              break;
            }
          }
          return array;
        }
        function arrayEvery(array, predicate) {
          var index = -1, length = array == null ? 0 : array.length;
          while (++index < length) {
            if (!predicate(array[index], index, array)) {
              return false;
            }
          }
          return true;
        }
        function arrayFilter(array, predicate) {
          var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
          while (++index < length) {
            var value = array[index];
            if (predicate(value, index, array)) {
              result[resIndex++] = value;
            }
          }
          return result;
        }
        function arrayIncludes(array, value) {
          var length = array == null ? 0 : array.length;
          return !!length && baseIndexOf(array, value, 0) > -1;
        }
        function arrayIncludesWith(array, value, comparator) {
          var index = -1, length = array == null ? 0 : array.length;
          while (++index < length) {
            if (comparator(value, array[index])) {
              return true;
            }
          }
          return false;
        }
        function arrayMap(array, iteratee) {
          var index = -1, length = array == null ? 0 : array.length, result = Array(length);
          while (++index < length) {
            result[index] = iteratee(array[index], index, array);
          }
          return result;
        }
        function arrayPush(array, values) {
          var index = -1, length = values.length, offset = array.length;
          while (++index < length) {
            array[offset + index] = values[index];
          }
          return array;
        }
        function arrayReduce(array, iteratee, accumulator, initAccum) {
          var index = -1, length = array == null ? 0 : array.length;
          if (initAccum && length) {
            accumulator = array[++index];
          }
          while (++index < length) {
            accumulator = iteratee(accumulator, array[index], index, array);
          }
          return accumulator;
        }
        function arrayReduceRight(array, iteratee, accumulator, initAccum) {
          var length = array == null ? 0 : array.length;
          if (initAccum && length) {
            accumulator = array[--length];
          }
          while (length--) {
            accumulator = iteratee(accumulator, array[length], length, array);
          }
          return accumulator;
        }
        function arraySome(array, predicate) {
          var index = -1, length = array == null ? 0 : array.length;
          while (++index < length) {
            if (predicate(array[index], index, array)) {
              return true;
            }
          }
          return false;
        }
        var asciiSize = baseProperty("length");
        function asciiToArray(string) {
          return string.split("");
        }
        function asciiWords(string) {
          return string.match(reAsciiWord) || [];
        }
        function baseFindKey(collection, predicate, eachFunc) {
          var result;
          eachFunc(collection, function(value, key, collection2) {
            if (predicate(value, key, collection2)) {
              result = key;
              return false;
            }
          });
          return result;
        }
        function baseFindIndex(array, predicate, fromIndex, fromRight) {
          var length = array.length, index = fromIndex + (fromRight ? 1 : -1);
          while (fromRight ? index-- : ++index < length) {
            if (predicate(array[index], index, array)) {
              return index;
            }
          }
          return -1;
        }
        function baseIndexOf(array, value, fromIndex) {
          return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);
        }
        function baseIndexOfWith(array, value, fromIndex, comparator) {
          var index = fromIndex - 1, length = array.length;
          while (++index < length) {
            if (comparator(array[index], value)) {
              return index;
            }
          }
          return -1;
        }
        function baseIsNaN(value) {
          return value !== value;
        }
        function baseMean(array, iteratee) {
          var length = array == null ? 0 : array.length;
          return length ? baseSum(array, iteratee) / length : NAN;
        }
        function baseProperty(key) {
          return function(object) {
            return object == null ? undefined2 : object[key];
          };
        }
        function basePropertyOf(object) {
          return function(key) {
            return object == null ? undefined2 : object[key];
          };
        }
        function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
          eachFunc(collection, function(value, index, collection2) {
            accumulator = initAccum ? (initAccum = false, value) : iteratee(accumulator, value, index, collection2);
          });
          return accumulator;
        }
        function baseSortBy(array, comparer) {
          var length = array.length;
          array.sort(comparer);
          while (length--) {
            array[length] = array[length].value;
          }
          return array;
        }
        function baseSum(array, iteratee) {
          var result, index = -1, length = array.length;
          while (++index < length) {
            var current = iteratee(array[index]);
            if (current !== undefined2) {
              result = result === undefined2 ? current : result + current;
            }
          }
          return result;
        }
        function baseTimes(n, iteratee) {
          var index = -1, result = Array(n);
          while (++index < n) {
            result[index] = iteratee(index);
          }
          return result;
        }
        function baseToPairs(object, props) {
          return arrayMap(props, function(key) {
            return [key, object[key]];
          });
        }
        function baseTrim(string) {
          return string ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, "") : string;
        }
        function baseUnary(func) {
          return function(value) {
            return func(value);
          };
        }
        function baseValues(object, props) {
          return arrayMap(props, function(key) {
            return object[key];
          });
        }
        function cacheHas(cache, key) {
          return cache.has(key);
        }
        function charsStartIndex(strSymbols, chrSymbols) {
          var index = -1, length = strSymbols.length;
          while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {
          }
          return index;
        }
        function charsEndIndex(strSymbols, chrSymbols) {
          var index = strSymbols.length;
          while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {
          }
          return index;
        }
        function countHolders(array, placeholder) {
          var length = array.length, result = 0;
          while (length--) {
            if (array[length] === placeholder) {
              ++result;
            }
          }
          return result;
        }
        var deburrLetter = basePropertyOf(deburredLetters);
        var escapeHtmlChar = basePropertyOf(htmlEscapes);
        function escapeStringChar(chr) {
          return "\\" + stringEscapes[chr];
        }
        function getValue(object, key) {
          return object == null ? undefined2 : object[key];
        }
        function hasUnicode(string) {
          return reHasUnicode.test(string);
        }
        function hasUnicodeWord(string) {
          return reHasUnicodeWord.test(string);
        }
        function iteratorToArray(iterator) {
          var data, result = [];
          while (!(data = iterator.next()).done) {
            result.push(data.value);
          }
          return result;
        }
        function mapToArray(map) {
          var index = -1, result = Array(map.size);
          map.forEach(function(value, key) {
            result[++index] = [key, value];
          });
          return result;
        }
        function overArg(func, transform) {
          return function(arg) {
            return func(transform(arg));
          };
        }
        function replaceHolders(array, placeholder) {
          var index = -1, length = array.length, resIndex = 0, result = [];
          while (++index < length) {
            var value = array[index];
            if (value === placeholder || value === PLACEHOLDER) {
              array[index] = PLACEHOLDER;
              result[resIndex++] = index;
            }
          }
          return result;
        }
        function setToArray(set) {
          var index = -1, result = Array(set.size);
          set.forEach(function(value) {
            result[++index] = value;
          });
          return result;
        }
        function setToPairs(set) {
          var index = -1, result = Array(set.size);
          set.forEach(function(value) {
            result[++index] = [value, value];
          });
          return result;
        }
        function strictIndexOf(array, value, fromIndex) {
          var index = fromIndex - 1, length = array.length;
          while (++index < length) {
            if (array[index] === value) {
              return index;
            }
          }
          return -1;
        }
        function strictLastIndexOf(array, value, fromIndex) {
          var index = fromIndex + 1;
          while (index--) {
            if (array[index] === value) {
              return index;
            }
          }
          return index;
        }
        function stringSize(string) {
          return hasUnicode(string) ? unicodeSize(string) : asciiSize(string);
        }
        function stringToArray(string) {
          return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);
        }
        function trimmedEndIndex(string) {
          var index = string.length;
          while (index-- && reWhitespace.test(string.charAt(index))) {
          }
          return index;
        }
        var unescapeHtmlChar = basePropertyOf(htmlUnescapes);
        function unicodeSize(string) {
          var result = reUnicode.lastIndex = 0;
          while (reUnicode.test(string)) {
            ++result;
          }
          return result;
        }
        function unicodeToArray(string) {
          return string.match(reUnicode) || [];
        }
        function unicodeWords(string) {
          return string.match(reUnicodeWord) || [];
        }
        var runInContext = function runInContext2(context) {
          context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));
          var Array2 = context.Array, Date2 = context.Date, Error2 = context.Error, Function2 = context.Function, Math2 = context.Math, Object2 = context.Object, RegExp2 = context.RegExp, String2 = context.String, TypeError2 = context.TypeError;
          var arrayProto = Array2.prototype, funcProto = Function2.prototype, objectProto = Object2.prototype;
          var coreJsData = context["__core-js_shared__"];
          var funcToString = funcProto.toString;
          var hasOwnProperty = objectProto.hasOwnProperty;
          var idCounter = 0;
          var maskSrcKey = function() {
            var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
            return uid ? "Symbol(src)_1." + uid : "";
          }();
          var nativeObjectToString = objectProto.toString;
          var objectCtorString = funcToString.call(Object2);
          var oldDash = root._;
          var reIsNative = RegExp2("^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
          var Buffer2 = moduleExports ? context.Buffer : undefined2, Symbol2 = context.Symbol, Uint8Array2 = context.Uint8Array, allocUnsafe = Buffer2 ? Buffer2.allocUnsafe : undefined2, getPrototype = overArg(Object2.getPrototypeOf, Object2), objectCreate = Object2.create, propertyIsEnumerable = objectProto.propertyIsEnumerable, splice = arrayProto.splice, spreadableSymbol = Symbol2 ? Symbol2.isConcatSpreadable : undefined2, symIterator = Symbol2 ? Symbol2.iterator : undefined2, symToStringTag = Symbol2 ? Symbol2.toStringTag : undefined2;
          var defineProperty = function() {
            try {
              var func = getNative(Object2, "defineProperty");
              func({}, "", {});
              return func;
            } catch (e2) {
            }
          }();
          var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout, ctxNow = Date2 && Date2.now !== root.Date.now && Date2.now, ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;
          var nativeCeil = Math2.ceil, nativeFloor = Math2.floor, nativeGetSymbols = Object2.getOwnPropertySymbols, nativeIsBuffer = Buffer2 ? Buffer2.isBuffer : undefined2, nativeIsFinite = context.isFinite, nativeJoin = arrayProto.join, nativeKeys = overArg(Object2.keys, Object2), nativeMax = Math2.max, nativeMin = Math2.min, nativeNow = Date2.now, nativeParseInt = context.parseInt, nativeRandom = Math2.random, nativeReverse = arrayProto.reverse;
          var DataView2 = getNative(context, "DataView"), Map2 = getNative(context, "Map"), Promise2 = getNative(context, "Promise"), Set2 = getNative(context, "Set"), WeakMap2 = getNative(context, "WeakMap"), nativeCreate = getNative(Object2, "create");
          var metaMap = WeakMap2 && new WeakMap2();
          var realNames = {};
          var dataViewCtorString = toSource(DataView2), mapCtorString = toSource(Map2), promiseCtorString = toSource(Promise2), setCtorString = toSource(Set2), weakMapCtorString = toSource(WeakMap2);
          var symbolProto = Symbol2 ? Symbol2.prototype : undefined2, symbolValueOf = symbolProto ? symbolProto.valueOf : undefined2, symbolToString = symbolProto ? symbolProto.toString : undefined2;
          function lodash(value) {
            if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
              if (value instanceof LodashWrapper) {
                return value;
              }
              if (hasOwnProperty.call(value, "__wrapped__")) {
                return wrapperClone(value);
              }
            }
            return new LodashWrapper(value);
          }
          var baseCreate = function() {
            function object() {
            }
            return function(proto) {
              if (!isObject(proto)) {
                return {};
              }
              if (objectCreate) {
                return objectCreate(proto);
              }
              object.prototype = proto;
              var result2 = new object();
              object.prototype = undefined2;
              return result2;
            };
          }();
          function baseLodash() {
          }
          function LodashWrapper(value, chainAll) {
            this.__wrapped__ = value;
            this.__actions__ = [];
            this.__chain__ = !!chainAll;
            this.__index__ = 0;
            this.__values__ = undefined2;
          }
          lodash.templateSettings = {
            "escape": reEscape,
            "evaluate": reEvaluate,
            "interpolate": reInterpolate,
            "variable": "",
            "imports": {
              "_": lodash
            }
          };
          lodash.prototype = baseLodash.prototype;
          lodash.prototype.constructor = lodash;
          LodashWrapper.prototype = baseCreate(baseLodash.prototype);
          LodashWrapper.prototype.constructor = LodashWrapper;
          function LazyWrapper(value) {
            this.__wrapped__ = value;
            this.__actions__ = [];
            this.__dir__ = 1;
            this.__filtered__ = false;
            this.__iteratees__ = [];
            this.__takeCount__ = MAX_ARRAY_LENGTH;
            this.__views__ = [];
          }
          function lazyClone() {
            var result2 = new LazyWrapper(this.__wrapped__);
            result2.__actions__ = copyArray(this.__actions__);
            result2.__dir__ = this.__dir__;
            result2.__filtered__ = this.__filtered__;
            result2.__iteratees__ = copyArray(this.__iteratees__);
            result2.__takeCount__ = this.__takeCount__;
            result2.__views__ = copyArray(this.__views__);
            return result2;
          }
          function lazyReverse() {
            if (this.__filtered__) {
              var result2 = new LazyWrapper(this);
              result2.__dir__ = -1;
              result2.__filtered__ = true;
            } else {
              result2 = this.clone();
              result2.__dir__ *= -1;
            }
            return result2;
          }
          function lazyValue() {
            var array = this.__wrapped__.value(), dir = this.__dir__, isArr = isArray(array), isRight = dir < 0, arrLength = isArr ? array.length : 0, view = getView(0, arrLength, this.__views__), start = view.start, end = view.end, length = end - start, index = isRight ? end : start - 1, iteratees = this.__iteratees__, iterLength = iteratees.length, resIndex = 0, takeCount = nativeMin(length, this.__takeCount__);
            if (!isArr || !isRight && arrLength == length && takeCount == length) {
              return baseWrapperValue(array, this.__actions__);
            }
            var result2 = [];
            outer:
              while (length-- && resIndex < takeCount) {
                index += dir;
                var iterIndex = -1, value = array[index];
                while (++iterIndex < iterLength) {
                  var data = iteratees[iterIndex], iteratee2 = data.iteratee, type = data.type, computed = iteratee2(value);
                  if (type == LAZY_MAP_FLAG) {
                    value = computed;
                  } else if (!computed) {
                    if (type == LAZY_FILTER_FLAG) {
                      continue outer;
                    } else {
                      break outer;
                    }
                  }
                }
                result2[resIndex++] = value;
              }
            return result2;
          }
          LazyWrapper.prototype = baseCreate(baseLodash.prototype);
          LazyWrapper.prototype.constructor = LazyWrapper;
          function Hash(entries) {
            var index = -1, length = entries == null ? 0 : entries.length;
            this.clear();
            while (++index < length) {
              var entry = entries[index];
              this.set(entry[0], entry[1]);
            }
          }
          function hashClear() {
            this.__data__ = nativeCreate ? nativeCreate(null) : {};
            this.size = 0;
          }
          function hashDelete(key) {
            var result2 = this.has(key) && delete this.__data__[key];
            this.size -= result2 ? 1 : 0;
            return result2;
          }
          function hashGet(key) {
            var data = this.__data__;
            if (nativeCreate) {
              var result2 = data[key];
              return result2 === HASH_UNDEFINED ? undefined2 : result2;
            }
            return hasOwnProperty.call(data, key) ? data[key] : undefined2;
          }
          function hashHas(key) {
            var data = this.__data__;
            return nativeCreate ? data[key] !== undefined2 : hasOwnProperty.call(data, key);
          }
          function hashSet(key, value) {
            var data = this.__data__;
            this.size += this.has(key) ? 0 : 1;
            data[key] = nativeCreate && value === undefined2 ? HASH_UNDEFINED : value;
            return this;
          }
          Hash.prototype.clear = hashClear;
          Hash.prototype["delete"] = hashDelete;
          Hash.prototype.get = hashGet;
          Hash.prototype.has = hashHas;
          Hash.prototype.set = hashSet;
          function ListCache(entries) {
            var index = -1, length = entries == null ? 0 : entries.length;
            this.clear();
            while (++index < length) {
              var entry = entries[index];
              this.set(entry[0], entry[1]);
            }
          }
          function listCacheClear() {
            this.__data__ = [];
            this.size = 0;
          }
          function listCacheDelete(key) {
            var data = this.__data__, index = assocIndexOf(data, key);
            if (index < 0) {
              return false;
            }
            var lastIndex = data.length - 1;
            if (index == lastIndex) {
              data.pop();
            } else {
              splice.call(data, index, 1);
            }
            --this.size;
            return true;
          }
          function listCacheGet(key) {
            var data = this.__data__, index = assocIndexOf(data, key);
            return index < 0 ? undefined2 : data[index][1];
          }
          function listCacheHas(key) {
            return assocIndexOf(this.__data__, key) > -1;
          }
          function listCacheSet(key, value) {
            var data = this.__data__, index = assocIndexOf(data, key);
            if (index < 0) {
              ++this.size;
              data.push([key, value]);
            } else {
              data[index][1] = value;
            }
            return this;
          }
          ListCache.prototype.clear = listCacheClear;
          ListCache.prototype["delete"] = listCacheDelete;
          ListCache.prototype.get = listCacheGet;
          ListCache.prototype.has = listCacheHas;
          ListCache.prototype.set = listCacheSet;
          function MapCache(entries) {
            var index = -1, length = entries == null ? 0 : entries.length;
            this.clear();
            while (++index < length) {
              var entry = entries[index];
              this.set(entry[0], entry[1]);
            }
          }
          function mapCacheClear() {
            this.size = 0;
            this.__data__ = {
              "hash": new Hash(),
              "map": new (Map2 || ListCache)(),
              "string": new Hash()
            };
          }
          function mapCacheDelete(key) {
            var result2 = getMapData(this, key)["delete"](key);
            this.size -= result2 ? 1 : 0;
            return result2;
          }
          function mapCacheGet(key) {
            return getMapData(this, key).get(key);
          }
          function mapCacheHas(key) {
            return getMapData(this, key).has(key);
          }
          function mapCacheSet(key, value) {
            var data = getMapData(this, key), size2 = data.size;
            data.set(key, value);
            this.size += data.size == size2 ? 0 : 1;
            return this;
          }
          MapCache.prototype.clear = mapCacheClear;
          MapCache.prototype["delete"] = mapCacheDelete;
          MapCache.prototype.get = mapCacheGet;
          MapCache.prototype.has = mapCacheHas;
          MapCache.prototype.set = mapCacheSet;
          function SetCache(values2) {
            var index = -1, length = values2 == null ? 0 : values2.length;
            this.__data__ = new MapCache();
            while (++index < length) {
              this.add(values2[index]);
            }
          }
          function setCacheAdd(value) {
            this.__data__.set(value, HASH_UNDEFINED);
            return this;
          }
          function setCacheHas(value) {
            return this.__data__.has(value);
          }
          SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
          SetCache.prototype.has = setCacheHas;
          function Stack(entries) {
            var data = this.__data__ = new ListCache(entries);
            this.size = data.size;
          }
          function stackClear() {
            this.__data__ = new ListCache();
            this.size = 0;
          }
          function stackDelete(key) {
            var data = this.__data__, result2 = data["delete"](key);
            this.size = data.size;
            return result2;
          }
          function stackGet(key) {
            return this.__data__.get(key);
          }
          function stackHas(key) {
            return this.__data__.has(key);
          }
          function stackSet(key, value) {
            var data = this.__data__;
            if (data instanceof ListCache) {
              var pairs = data.__data__;
              if (!Map2 || pairs.length < LARGE_ARRAY_SIZE - 1) {
                pairs.push([key, value]);
                this.size = ++data.size;
                return this;
              }
              data = this.__data__ = new MapCache(pairs);
            }
            data.set(key, value);
            this.size = data.size;
            return this;
          }
          Stack.prototype.clear = stackClear;
          Stack.prototype["delete"] = stackDelete;
          Stack.prototype.get = stackGet;
          Stack.prototype.has = stackHas;
          Stack.prototype.set = stackSet;
          function arrayLikeKeys(value, inherited) {
            var isArr = isArray(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result2 = skipIndexes ? baseTimes(value.length, String2) : [], length = result2.length;
            for (var key in value) {
              if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && (key == "length" || isBuff && (key == "offset" || key == "parent") || isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || isIndex(key, length)))) {
                result2.push(key);
              }
            }
            return result2;
          }
          function arraySample(array) {
            var length = array.length;
            return length ? array[baseRandom(0, length - 1)] : undefined2;
          }
          function arraySampleSize(array, n) {
            return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
          }
          function arrayShuffle(array) {
            return shuffleSelf(copyArray(array));
          }
          function assignMergeValue(object, key, value) {
            if (value !== undefined2 && !eq(object[key], value) || value === undefined2 && !(key in object)) {
              baseAssignValue(object, key, value);
            }
          }
          function assignValue(object, key, value) {
            var objValue = object[key];
            if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === undefined2 && !(key in object)) {
              baseAssignValue(object, key, value);
            }
          }
          function assocIndexOf(array, key) {
            var length = array.length;
            while (length--) {
              if (eq(array[length][0], key)) {
                return length;
              }
            }
            return -1;
          }
          function baseAggregator(collection, setter, iteratee2, accumulator) {
            baseEach(collection, function(value, key, collection2) {
              setter(accumulator, value, iteratee2(value), collection2);
            });
            return accumulator;
          }
          function baseAssign(object, source) {
            return object && copyObject(source, keys(source), object);
          }
          function baseAssignIn(object, source) {
            return object && copyObject(source, keysIn(source), object);
          }
          function baseAssignValue(object, key, value) {
            if (key == "__proto__" && defineProperty) {
              defineProperty(object, key, {
                "configurable": true,
                "enumerable": true,
                "value": value,
                "writable": true
              });
            } else {
              object[key] = value;
            }
          }
          function baseAt(object, paths) {
            var index = -1, length = paths.length, result2 = Array2(length), skip = object == null;
            while (++index < length) {
              result2[index] = skip ? undefined2 : get(object, paths[index]);
            }
            return result2;
          }
          function baseClamp(number, lower, upper) {
            if (number === number) {
              if (upper !== undefined2) {
                number = number <= upper ? number : upper;
              }
              if (lower !== undefined2) {
                number = number >= lower ? number : lower;
              }
            }
            return number;
          }
          function baseClone(value, bitmask, customizer, key, object, stack) {
            var result2, isDeep = bitmask & CLONE_DEEP_FLAG, isFlat = bitmask & CLONE_FLAT_FLAG, isFull = bitmask & CLONE_SYMBOLS_FLAG;
            if (customizer) {
              result2 = object ? customizer(value, key, object, stack) : customizer(value);
            }
            if (result2 !== undefined2) {
              return result2;
            }
            if (!isObject(value)) {
              return value;
            }
            var isArr = isArray(value);
            if (isArr) {
              result2 = initCloneArray(value);
              if (!isDeep) {
                return copyArray(value, result2);
              }
            } else {
              var tag = getTag(value), isFunc = tag == funcTag || tag == genTag;
              if (isBuffer(value)) {
                return cloneBuffer(value, isDeep);
              }
              if (tag == objectTag || tag == argsTag || isFunc && !object) {
                result2 = isFlat || isFunc ? {} : initCloneObject(value);
                if (!isDeep) {
                  return isFlat ? copySymbolsIn(value, baseAssignIn(result2, value)) : copySymbols(value, baseAssign(result2, value));
                }
              } else {
                if (!cloneableTags[tag]) {
                  return object ? value : {};
                }
                result2 = initCloneByTag(value, tag, isDeep);
              }
            }
            stack || (stack = new Stack());
            var stacked = stack.get(value);
            if (stacked) {
              return stacked;
            }
            stack.set(value, result2);
            if (isSet(value)) {
              value.forEach(function(subValue) {
                result2.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
              });
            } else if (isMap(value)) {
              value.forEach(function(subValue, key2) {
                result2.set(key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
              });
            }
            var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;
            var props = isArr ? undefined2 : keysFunc(value);
            arrayEach(props || value, function(subValue, key2) {
              if (props) {
                key2 = subValue;
                subValue = value[key2];
              }
              assignValue(result2, key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
            });
            return result2;
          }
          function baseConforms(source) {
            var props = keys(source);
            return function(object) {
              return baseConformsTo(object, source, props);
            };
          }
          function baseConformsTo(object, source, props) {
            var length = props.length;
            if (object == null) {
              return !length;
            }
            object = Object2(object);
            while (length--) {
              var key = props[length], predicate = source[key], value = object[key];
              if (value === undefined2 && !(key in object) || !predicate(value)) {
                return false;
              }
            }
            return true;
          }
          function baseDelay(func, wait, args) {
            if (typeof func != "function") {
              throw new TypeError2(FUNC_ERROR_TEXT);
            }
            return setTimeout2(function() {
              func.apply(undefined2, args);
            }, wait);
          }
          function baseDifference(array, values2, iteratee2, comparator) {
            var index = -1, includes2 = arrayIncludes, isCommon = true, length = array.length, result2 = [], valuesLength = values2.length;
            if (!length) {
              return result2;
            }
            if (iteratee2) {
              values2 = arrayMap(values2, baseUnary(iteratee2));
            }
            if (comparator) {
              includes2 = arrayIncludesWith;
              isCommon = false;
            } else if (values2.length >= LARGE_ARRAY_SIZE) {
              includes2 = cacheHas;
              isCommon = false;
              values2 = new SetCache(values2);
            }
            outer:
              while (++index < length) {
                var value = array[index], computed = iteratee2 == null ? value : iteratee2(value);
                value = comparator || value !== 0 ? value : 0;
                if (isCommon && computed === computed) {
                  var valuesIndex = valuesLength;
                  while (valuesIndex--) {
                    if (values2[valuesIndex] === computed) {
                      continue outer;
                    }
                  }
                  result2.push(value);
                } else if (!includes2(values2, computed, comparator)) {
                  result2.push(value);
                }
              }
            return result2;
          }
          var baseEach = createBaseEach(baseForOwn);
          var baseEachRight = createBaseEach(baseForOwnRight, true);
          function baseEvery(collection, predicate) {
            var result2 = true;
            baseEach(collection, function(value, index, collection2) {
              result2 = !!predicate(value, index, collection2);
              return result2;
            });
            return result2;
          }
          function baseExtremum(array, iteratee2, comparator) {
            var index = -1, length = array.length;
            while (++index < length) {
              var value = array[index], current = iteratee2(value);
              if (current != null && (computed === undefined2 ? current === current && !isSymbol(current) : comparator(current, computed))) {
                var computed = current, result2 = value;
              }
            }
            return result2;
          }
          function baseFill(array, value, start, end) {
            var length = array.length;
            start = toInteger2(start);
            if (start < 0) {
              start = -start > length ? 0 : length + start;
            }
            end = end === undefined2 || end > length ? length : toInteger2(end);
            if (end < 0) {
              end += length;
            }
            end = start > end ? 0 : toLength(end);
            while (start < end) {
              array[start++] = value;
            }
            return array;
          }
          function baseFilter(collection, predicate) {
            var result2 = [];
            baseEach(collection, function(value, index, collection2) {
              if (predicate(value, index, collection2)) {
                result2.push(value);
              }
            });
            return result2;
          }
          function baseFlatten(array, depth, predicate, isStrict, result2) {
            var index = -1, length = array.length;
            predicate || (predicate = isFlattenable);
            result2 || (result2 = []);
            while (++index < length) {
              var value = array[index];
              if (depth > 0 && predicate(value)) {
                if (depth > 1) {
                  baseFlatten(value, depth - 1, predicate, isStrict, result2);
                } else {
                  arrayPush(result2, value);
                }
              } else if (!isStrict) {
                result2[result2.length] = value;
              }
            }
            return result2;
          }
          var baseFor = createBaseFor();
          var baseForRight = createBaseFor(true);
          function baseForOwn(object, iteratee2) {
            return object && baseFor(object, iteratee2, keys);
          }
          function baseForOwnRight(object, iteratee2) {
            return object && baseForRight(object, iteratee2, keys);
          }
          function baseFunctions(object, props) {
            return arrayFilter(props, function(key) {
              return isFunction(object[key]);
            });
          }
          function baseGet(object, path) {
            path = castPath(path, object);
            var index = 0, length = path.length;
            while (object != null && index < length) {
              object = object[toKey(path[index++])];
            }
            return index && index == length ? object : undefined2;
          }
          function baseGetAllKeys(object, keysFunc, symbolsFunc) {
            var result2 = keysFunc(object);
            return isArray(object) ? result2 : arrayPush(result2, symbolsFunc(object));
          }
          function baseGetTag(value) {
            if (value == null) {
              return value === undefined2 ? undefinedTag : nullTag;
            }
            return symToStringTag && symToStringTag in Object2(value) ? getRawTag(value) : objectToString(value);
          }
          function baseGt(value, other) {
            return value > other;
          }
          function baseHas(object, key) {
            return object != null && hasOwnProperty.call(object, key);
          }
          function baseHasIn(object, key) {
            return object != null && key in Object2(object);
          }
          function baseInRange(number, start, end) {
            return number >= nativeMin(start, end) && number < nativeMax(start, end);
          }
          function baseIntersection(arrays, iteratee2, comparator) {
            var includes2 = comparator ? arrayIncludesWith : arrayIncludes, length = arrays[0].length, othLength = arrays.length, othIndex = othLength, caches = Array2(othLength), maxLength = Infinity, result2 = [];
            while (othIndex--) {
              var array = arrays[othIndex];
              if (othIndex && iteratee2) {
                array = arrayMap(array, baseUnary(iteratee2));
              }
              maxLength = nativeMin(array.length, maxLength);
              caches[othIndex] = !comparator && (iteratee2 || length >= 120 && array.length >= 120) ? new SetCache(othIndex && array) : undefined2;
            }
            array = arrays[0];
            var index = -1, seen = caches[0];
            outer:
              while (++index < length && result2.length < maxLength) {
                var value = array[index], computed = iteratee2 ? iteratee2(value) : value;
                value = comparator || value !== 0 ? value : 0;
                if (!(seen ? cacheHas(seen, computed) : includes2(result2, computed, comparator))) {
                  othIndex = othLength;
                  while (--othIndex) {
                    var cache = caches[othIndex];
                    if (!(cache ? cacheHas(cache, computed) : includes2(arrays[othIndex], computed, comparator))) {
                      continue outer;
                    }
                  }
                  if (seen) {
                    seen.push(computed);
                  }
                  result2.push(value);
                }
              }
            return result2;
          }
          function baseInverter(object, setter, iteratee2, accumulator) {
            baseForOwn(object, function(value, key, object2) {
              setter(accumulator, iteratee2(value), key, object2);
            });
            return accumulator;
          }
          function baseInvoke(object, path, args) {
            path = castPath(path, object);
            object = parent(object, path);
            var func = object == null ? object : object[toKey(last(path))];
            return func == null ? undefined2 : apply(func, object, args);
          }
          function baseIsArguments(value) {
            return isObjectLike(value) && baseGetTag(value) == argsTag;
          }
          function baseIsArrayBuffer(value) {
            return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
          }
          function baseIsDate(value) {
            return isObjectLike(value) && baseGetTag(value) == dateTag;
          }
          function baseIsEqual(value, other, bitmask, customizer, stack) {
            if (value === other) {
              return true;
            }
            if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
              return value !== value && other !== other;
            }
            return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
          }
          function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
            var objIsArr = isArray(object), othIsArr = isArray(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);
            objTag = objTag == argsTag ? objectTag : objTag;
            othTag = othTag == argsTag ? objectTag : othTag;
            var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
            if (isSameTag && isBuffer(object)) {
              if (!isBuffer(other)) {
                return false;
              }
              objIsArr = true;
              objIsObj = false;
            }
            if (isSameTag && !objIsObj) {
              stack || (stack = new Stack());
              return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
            }
            if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
              var objIsWrapped = objIsObj && hasOwnProperty.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty.call(other, "__wrapped__");
              if (objIsWrapped || othIsWrapped) {
                var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
                stack || (stack = new Stack());
                return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
              }
            }
            if (!isSameTag) {
              return false;
            }
            stack || (stack = new Stack());
            return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
          }
          function baseIsMap(value) {
            return isObjectLike(value) && getTag(value) == mapTag;
          }
          function baseIsMatch(object, source, matchData, customizer) {
            var index = matchData.length, length = index, noCustomizer = !customizer;
            if (object == null) {
              return !length;
            }
            object = Object2(object);
            while (index--) {
              var data = matchData[index];
              if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
                return false;
              }
            }
            while (++index < length) {
              data = matchData[index];
              var key = data[0], objValue = object[key], srcValue = data[1];
              if (noCustomizer && data[2]) {
                if (objValue === undefined2 && !(key in object)) {
                  return false;
                }
              } else {
                var stack = new Stack();
                if (customizer) {
                  var result2 = customizer(objValue, srcValue, key, object, source, stack);
                }
                if (!(result2 === undefined2 ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result2)) {
                  return false;
                }
              }
            }
            return true;
          }
          function baseIsNative(value) {
            if (!isObject(value) || isMasked(value)) {
              return false;
            }
            var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
            return pattern.test(toSource(value));
          }
          function baseIsRegExp(value) {
            return isObjectLike(value) && baseGetTag(value) == regexpTag;
          }
          function baseIsSet(value) {
            return isObjectLike(value) && getTag(value) == setTag;
          }
          function baseIsTypedArray(value) {
            return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
          }
          function baseIteratee(value) {
            if (typeof value == "function") {
              return value;
            }
            if (value == null) {
              return identity;
            }
            if (typeof value == "object") {
              return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
            }
            return property(value);
          }
          function baseKeys(object) {
            if (!isPrototype(object)) {
              return nativeKeys(object);
            }
            var result2 = [];
            for (var key in Object2(object)) {
              if (hasOwnProperty.call(object, key) && key != "constructor") {
                result2.push(key);
              }
            }
            return result2;
          }
          function baseKeysIn(object) {
            if (!isObject(object)) {
              return nativeKeysIn(object);
            }
            var isProto = isPrototype(object), result2 = [];
            for (var key in object) {
              if (!(key == "constructor" && (isProto || !hasOwnProperty.call(object, key)))) {
                result2.push(key);
              }
            }
            return result2;
          }
          function baseLt(value, other) {
            return value < other;
          }
          function baseMap(collection, iteratee2) {
            var index = -1, result2 = isArrayLike(collection) ? Array2(collection.length) : [];
            baseEach(collection, function(value, key, collection2) {
              result2[++index] = iteratee2(value, key, collection2);
            });
            return result2;
          }
          function baseMatches(source) {
            var matchData = getMatchData(source);
            if (matchData.length == 1 && matchData[0][2]) {
              return matchesStrictComparable(matchData[0][0], matchData[0][1]);
            }
            return function(object) {
              return object === source || baseIsMatch(object, source, matchData);
            };
          }
          function baseMatchesProperty(path, srcValue) {
            if (isKey(path) && isStrictComparable(srcValue)) {
              return matchesStrictComparable(toKey(path), srcValue);
            }
            return function(object) {
              var objValue = get(object, path);
              return objValue === undefined2 && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
            };
          }
          function baseMerge(object, source, srcIndex, customizer, stack) {
            if (object === source) {
              return;
            }
            baseFor(source, function(srcValue, key) {
              stack || (stack = new Stack());
              if (isObject(srcValue)) {
                baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
              } else {
                var newValue = customizer ? customizer(safeGet(object, key), srcValue, key + "", object, source, stack) : undefined2;
                if (newValue === undefined2) {
                  newValue = srcValue;
                }
                assignMergeValue(object, key, newValue);
              }
            }, keysIn);
          }
          function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
            var objValue = safeGet(object, key), srcValue = safeGet(source, key), stacked = stack.get(srcValue);
            if (stacked) {
              assignMergeValue(object, key, stacked);
              return;
            }
            var newValue = customizer ? customizer(objValue, srcValue, key + "", object, source, stack) : undefined2;
            var isCommon = newValue === undefined2;
            if (isCommon) {
              var isArr = isArray(srcValue), isBuff = !isArr && isBuffer(srcValue), isTyped = !isArr && !isBuff && isTypedArray(srcValue);
              newValue = srcValue;
              if (isArr || isBuff || isTyped) {
                if (isArray(objValue)) {
                  newValue = objValue;
                } else if (isArrayLikeObject(objValue)) {
                  newValue = copyArray(objValue);
                } else if (isBuff) {
                  isCommon = false;
                  newValue = cloneBuffer(srcValue, true);
                } else if (isTyped) {
                  isCommon = false;
                  newValue = cloneTypedArray(srcValue, true);
                } else {
                  newValue = [];
                }
              } else if (isPlainObject(srcValue) || isArguments(srcValue)) {
                newValue = objValue;
                if (isArguments(objValue)) {
                  newValue = toPlainObject(objValue);
                } else if (!isObject(objValue) || isFunction(objValue)) {
                  newValue = initCloneObject(srcValue);
                }
              } else {
                isCommon = false;
              }
            }
            if (isCommon) {
              stack.set(srcValue, newValue);
              mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
              stack["delete"](srcValue);
            }
            assignMergeValue(object, key, newValue);
          }
          function baseNth(array, n) {
            var length = array.length;
            if (!length) {
              return;
            }
            n += n < 0 ? length : 0;
            return isIndex(n, length) ? array[n] : undefined2;
          }
          function baseOrderBy(collection, iteratees, orders) {
            if (iteratees.length) {
              iteratees = arrayMap(iteratees, function(iteratee2) {
                if (isArray(iteratee2)) {
                  return function(value) {
                    return baseGet(value, iteratee2.length === 1 ? iteratee2[0] : iteratee2);
                  };
                }
                return iteratee2;
              });
            } else {
              iteratees = [identity];
            }
            var index = -1;
            iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
            var result2 = baseMap(collection, function(value, key, collection2) {
              var criteria = arrayMap(iteratees, function(iteratee2) {
                return iteratee2(value);
              });
              return {"criteria": criteria, "index": ++index, "value": value};
            });
            return baseSortBy(result2, function(object, other) {
              return compareMultiple(object, other, orders);
            });
          }
          function basePick(object, paths) {
            return basePickBy(object, paths, function(value, path) {
              return hasIn(object, path);
            });
          }
          function basePickBy(object, paths, predicate) {
            var index = -1, length = paths.length, result2 = {};
            while (++index < length) {
              var path = paths[index], value = baseGet(object, path);
              if (predicate(value, path)) {
                baseSet(result2, castPath(path, object), value);
              }
            }
            return result2;
          }
          function basePropertyDeep(path) {
            return function(object) {
              return baseGet(object, path);
            };
          }
          function basePullAll(array, values2, iteratee2, comparator) {
            var indexOf2 = comparator ? baseIndexOfWith : baseIndexOf, index = -1, length = values2.length, seen = array;
            if (array === values2) {
              values2 = copyArray(values2);
            }
            if (iteratee2) {
              seen = arrayMap(array, baseUnary(iteratee2));
            }
            while (++index < length) {
              var fromIndex = 0, value = values2[index], computed = iteratee2 ? iteratee2(value) : value;
              while ((fromIndex = indexOf2(seen, computed, fromIndex, comparator)) > -1) {
                if (seen !== array) {
                  splice.call(seen, fromIndex, 1);
                }
                splice.call(array, fromIndex, 1);
              }
            }
            return array;
          }
          function basePullAt(array, indexes) {
            var length = array ? indexes.length : 0, lastIndex = length - 1;
            while (length--) {
              var index = indexes[length];
              if (length == lastIndex || index !== previous) {
                var previous = index;
                if (isIndex(index)) {
                  splice.call(array, index, 1);
                } else {
                  baseUnset(array, index);
                }
              }
            }
            return array;
          }
          function baseRandom(lower, upper) {
            return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
          }
          function baseRange(start, end, step, fromRight) {
            var index = -1, length = nativeMax(nativeCeil((end - start) / (step || 1)), 0), result2 = Array2(length);
            while (length--) {
              result2[fromRight ? length : ++index] = start;
              start += step;
            }
            return result2;
          }
          function baseRepeat(string, n) {
            var result2 = "";
            if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
              return result2;
            }
            do {
              if (n % 2) {
                result2 += string;
              }
              n = nativeFloor(n / 2);
              if (n) {
                string += string;
              }
            } while (n);
            return result2;
          }
          function baseRest(func, start) {
            return setToString(overRest(func, start, identity), func + "");
          }
          function baseSample(collection) {
            return arraySample(values(collection));
          }
          function baseSampleSize(collection, n) {
            var array = values(collection);
            return shuffleSelf(array, baseClamp(n, 0, array.length));
          }
          function baseSet(object, path, value, customizer) {
            if (!isObject(object)) {
              return object;
            }
            path = castPath(path, object);
            var index = -1, length = path.length, lastIndex = length - 1, nested = object;
            while (nested != null && ++index < length) {
              var key = toKey(path[index]), newValue = value;
              if (key === "__proto__" || key === "constructor" || key === "prototype") {
                return object;
              }
              if (index != lastIndex) {
                var objValue = nested[key];
                newValue = customizer ? customizer(objValue, key, nested) : undefined2;
                if (newValue === undefined2) {
                  newValue = isObject(objValue) ? objValue : isIndex(path[index + 1]) ? [] : {};
                }
              }
              assignValue(nested, key, newValue);
              nested = nested[key];
            }
            return object;
          }
          var baseSetData = !metaMap ? identity : function(func, data) {
            metaMap.set(func, data);
            return func;
          };
          var baseSetToString = !defineProperty ? identity : function(func, string) {
            return defineProperty(func, "toString", {
              "configurable": true,
              "enumerable": false,
              "value": constant(string),
              "writable": true
            });
          };
          function baseShuffle(collection) {
            return shuffleSelf(values(collection));
          }
          function baseSlice(array, start, end) {
            var index = -1, length = array.length;
            if (start < 0) {
              start = -start > length ? 0 : length + start;
            }
            end = end > length ? length : end;
            if (end < 0) {
              end += length;
            }
            length = start > end ? 0 : end - start >>> 0;
            start >>>= 0;
            var result2 = Array2(length);
            while (++index < length) {
              result2[index] = array[index + start];
            }
            return result2;
          }
          function baseSome(collection, predicate) {
            var result2;
            baseEach(collection, function(value, index, collection2) {
              result2 = predicate(value, index, collection2);
              return !result2;
            });
            return !!result2;
          }
          function baseSortedIndex(array, value, retHighest) {
            var low = 0, high = array == null ? low : array.length;
            if (typeof value == "number" && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
              while (low < high) {
                var mid = low + high >>> 1, computed = array[mid];
                if (computed !== null && !isSymbol(computed) && (retHighest ? computed <= value : computed < value)) {
                  low = mid + 1;
                } else {
                  high = mid;
                }
              }
              return high;
            }
            return baseSortedIndexBy(array, value, identity, retHighest);
          }
          function baseSortedIndexBy(array, value, iteratee2, retHighest) {
            var low = 0, high = array == null ? 0 : array.length;
            if (high === 0) {
              return 0;
            }
            value = iteratee2(value);
            var valIsNaN = value !== value, valIsNull = value === null, valIsSymbol = isSymbol(value), valIsUndefined = value === undefined2;
            while (low < high) {
              var mid = nativeFloor((low + high) / 2), computed = iteratee2(array[mid]), othIsDefined = computed !== undefined2, othIsNull = computed === null, othIsReflexive = computed === computed, othIsSymbol = isSymbol(computed);
              if (valIsNaN) {
                var setLow = retHighest || othIsReflexive;
              } else if (valIsUndefined) {
                setLow = othIsReflexive && (retHighest || othIsDefined);
              } else if (valIsNull) {
                setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
              } else if (valIsSymbol) {
                setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
              } else if (othIsNull || othIsSymbol) {
                setLow = false;
              } else {
                setLow = retHighest ? computed <= value : computed < value;
              }
              if (setLow) {
                low = mid + 1;
              } else {
                high = mid;
              }
            }
            return nativeMin(high, MAX_ARRAY_INDEX);
          }
          function baseSortedUniq(array, iteratee2) {
            var index = -1, length = array.length, resIndex = 0, result2 = [];
            while (++index < length) {
              var value = array[index], computed = iteratee2 ? iteratee2(value) : value;
              if (!index || !eq(computed, seen)) {
                var seen = computed;
                result2[resIndex++] = value === 0 ? 0 : value;
              }
            }
            return result2;
          }
          function baseToNumber(value) {
            if (typeof value == "number") {
              return value;
            }
            if (isSymbol(value)) {
              return NAN;
            }
            return +value;
          }
          function baseToString(value) {
            if (typeof value == "string") {
              return value;
            }
            if (isArray(value)) {
              return arrayMap(value, baseToString) + "";
            }
            if (isSymbol(value)) {
              return symbolToString ? symbolToString.call(value) : "";
            }
            var result2 = value + "";
            return result2 == "0" && 1 / value == -INFINITY ? "-0" : result2;
          }
          function baseUniq(array, iteratee2, comparator) {
            var index = -1, includes2 = arrayIncludes, length = array.length, isCommon = true, result2 = [], seen = result2;
            if (comparator) {
              isCommon = false;
              includes2 = arrayIncludesWith;
            } else if (length >= LARGE_ARRAY_SIZE) {
              var set2 = iteratee2 ? null : createSet(array);
              if (set2) {
                return setToArray(set2);
              }
              isCommon = false;
              includes2 = cacheHas;
              seen = new SetCache();
            } else {
              seen = iteratee2 ? [] : result2;
            }
            outer:
              while (++index < length) {
                var value = array[index], computed = iteratee2 ? iteratee2(value) : value;
                value = comparator || value !== 0 ? value : 0;
                if (isCommon && computed === computed) {
                  var seenIndex = seen.length;
                  while (seenIndex--) {
                    if (seen[seenIndex] === computed) {
                      continue outer;
                    }
                  }
                  if (iteratee2) {
                    seen.push(computed);
                  }
                  result2.push(value);
                } else if (!includes2(seen, computed, comparator)) {
                  if (seen !== result2) {
                    seen.push(computed);
                  }
                  result2.push(value);
                }
              }
            return result2;
          }
          function baseUnset(object, path) {
            path = castPath(path, object);
            object = parent(object, path);
            return object == null || delete object[toKey(last(path))];
          }
          function baseUpdate(object, path, updater, customizer) {
            return baseSet(object, path, updater(baseGet(object, path)), customizer);
          }
          function baseWhile(array, predicate, isDrop, fromRight) {
            var length = array.length, index = fromRight ? length : -1;
            while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {
            }
            return isDrop ? baseSlice(array, fromRight ? 0 : index, fromRight ? index + 1 : length) : baseSlice(array, fromRight ? index + 1 : 0, fromRight ? length : index);
          }
          function baseWrapperValue(value, actions) {
            var result2 = value;
            if (result2 instanceof LazyWrapper) {
              result2 = result2.value();
            }
            return arrayReduce(actions, function(result3, action) {
              return action.func.apply(action.thisArg, arrayPush([result3], action.args));
            }, result2);
          }
          function baseXor(arrays, iteratee2, comparator) {
            var length = arrays.length;
            if (length < 2) {
              return length ? baseUniq(arrays[0]) : [];
            }
            var index = -1, result2 = Array2(length);
            while (++index < length) {
              var array = arrays[index], othIndex = -1;
              while (++othIndex < length) {
                if (othIndex != index) {
                  result2[index] = baseDifference(result2[index] || array, arrays[othIndex], iteratee2, comparator);
                }
              }
            }
            return baseUniq(baseFlatten(result2, 1), iteratee2, comparator);
          }
          function baseZipObject(props, values2, assignFunc) {
            var index = -1, length = props.length, valsLength = values2.length, result2 = {};
            while (++index < length) {
              var value = index < valsLength ? values2[index] : undefined2;
              assignFunc(result2, props[index], value);
            }
            return result2;
          }
          function castArrayLikeObject(value) {
            return isArrayLikeObject(value) ? value : [];
          }
          function castFunction(value) {
            return typeof value == "function" ? value : identity;
          }
          function castPath(value, object) {
            if (isArray(value)) {
              return value;
            }
            return isKey(value, object) ? [value] : stringToPath(toString(value));
          }
          var castRest = baseRest;
          function castSlice(array, start, end) {
            var length = array.length;
            end = end === undefined2 ? length : end;
            return !start && end >= length ? array : baseSlice(array, start, end);
          }
          var clearTimeout2 = ctxClearTimeout || function(id) {
            return root.clearTimeout(id);
          };
          function cloneBuffer(buffer, isDeep) {
            if (isDeep) {
              return buffer.slice();
            }
            var length = buffer.length, result2 = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
            buffer.copy(result2);
            return result2;
          }
          function cloneArrayBuffer(arrayBuffer) {
            var result2 = new arrayBuffer.constructor(arrayBuffer.byteLength);
            new Uint8Array2(result2).set(new Uint8Array2(arrayBuffer));
            return result2;
          }
          function cloneDataView(dataView, isDeep) {
            var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
            return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
          }
          function cloneRegExp(regexp) {
            var result2 = new regexp.constructor(regexp.source, reFlags.exec(regexp));
            result2.lastIndex = regexp.lastIndex;
            return result2;
          }
          function cloneSymbol(symbol) {
            return symbolValueOf ? Object2(symbolValueOf.call(symbol)) : {};
          }
          function cloneTypedArray(typedArray, isDeep) {
            var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
            return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
          }
          function compareAscending(value, other) {
            if (value !== other) {
              var valIsDefined = value !== undefined2, valIsNull = value === null, valIsReflexive = value === value, valIsSymbol = isSymbol(value);
              var othIsDefined = other !== undefined2, othIsNull = other === null, othIsReflexive = other === other, othIsSymbol = isSymbol(other);
              if (!othIsNull && !othIsSymbol && !valIsSymbol && value > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) {
                return 1;
              }
              if (!valIsNull && !valIsSymbol && !othIsSymbol && value < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) {
                return -1;
              }
            }
            return 0;
          }
          function compareMultiple(object, other, orders) {
            var index = -1, objCriteria = object.criteria, othCriteria = other.criteria, length = objCriteria.length, ordersLength = orders.length;
            while (++index < length) {
              var result2 = compareAscending(objCriteria[index], othCriteria[index]);
              if (result2) {
                if (index >= ordersLength) {
                  return result2;
                }
                var order = orders[index];
                return result2 * (order == "desc" ? -1 : 1);
              }
            }
            return object.index - other.index;
          }
          function composeArgs(args, partials, holders, isCurried) {
            var argsIndex = -1, argsLength = args.length, holdersLength = holders.length, leftIndex = -1, leftLength = partials.length, rangeLength = nativeMax(argsLength - holdersLength, 0), result2 = Array2(leftLength + rangeLength), isUncurried = !isCurried;
            while (++leftIndex < leftLength) {
              result2[leftIndex] = partials[leftIndex];
            }
            while (++argsIndex < holdersLength) {
              if (isUncurried || argsIndex < argsLength) {
                result2[holders[argsIndex]] = args[argsIndex];
              }
            }
            while (rangeLength--) {
              result2[leftIndex++] = args[argsIndex++];
            }
            return result2;
          }
          function composeArgsRight(args, partials, holders, isCurried) {
            var argsIndex = -1, argsLength = args.length, holdersIndex = -1, holdersLength = holders.length, rightIndex = -1, rightLength = partials.length, rangeLength = nativeMax(argsLength - holdersLength, 0), result2 = Array2(rangeLength + rightLength), isUncurried = !isCurried;
            while (++argsIndex < rangeLength) {
              result2[argsIndex] = args[argsIndex];
            }
            var offset = argsIndex;
            while (++rightIndex < rightLength) {
              result2[offset + rightIndex] = partials[rightIndex];
            }
            while (++holdersIndex < holdersLength) {
              if (isUncurried || argsIndex < argsLength) {
                result2[offset + holders[holdersIndex]] = args[argsIndex++];
              }
            }
            return result2;
          }
          function copyArray(source, array) {
            var index = -1, length = source.length;
            array || (array = Array2(length));
            while (++index < length) {
              array[index] = source[index];
            }
            return array;
          }
          function copyObject(source, props, object, customizer) {
            var isNew = !object;
            object || (object = {});
            var index = -1, length = props.length;
            while (++index < length) {
              var key = props[index];
              var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined2;
              if (newValue === undefined2) {
                newValue = source[key];
              }
              if (isNew) {
                baseAssignValue(object, key, newValue);
              } else {
                assignValue(object, key, newValue);
              }
            }
            return object;
          }
          function copySymbols(source, object) {
            return copyObject(source, getSymbols(source), object);
          }
          function copySymbolsIn(source, object) {
            return copyObject(source, getSymbolsIn(source), object);
          }
          function createAggregator(setter, initializer) {
            return function(collection, iteratee2) {
              var func = isArray(collection) ? arrayAggregator : baseAggregator, accumulator = initializer ? initializer() : {};
              return func(collection, setter, getIteratee(iteratee2, 2), accumulator);
            };
          }
          function createAssigner(assigner) {
            return baseRest(function(object, sources) {
              var index = -1, length = sources.length, customizer = length > 1 ? sources[length - 1] : undefined2, guard = length > 2 ? sources[2] : undefined2;
              customizer = assigner.length > 3 && typeof customizer == "function" ? (length--, customizer) : undefined2;
              if (guard && isIterateeCall(sources[0], sources[1], guard)) {
                customizer = length < 3 ? undefined2 : customizer;
                length = 1;
              }
              object = Object2(object);
              while (++index < length) {
                var source = sources[index];
                if (source) {
                  assigner(object, source, index, customizer);
                }
              }
              return object;
            });
          }
          function createBaseEach(eachFunc, fromRight) {
            return function(collection, iteratee2) {
              if (collection == null) {
                return collection;
              }
              if (!isArrayLike(collection)) {
                return eachFunc(collection, iteratee2);
              }
              var length = collection.length, index = fromRight ? length : -1, iterable = Object2(collection);
              while (fromRight ? index-- : ++index < length) {
                if (iteratee2(iterable[index], index, iterable) === false) {
                  break;
                }
              }
              return collection;
            };
          }
          function createBaseFor(fromRight) {
            return function(object, iteratee2, keysFunc) {
              var index = -1, iterable = Object2(object), props = keysFunc(object), length = props.length;
              while (length--) {
                var key = props[fromRight ? length : ++index];
                if (iteratee2(iterable[key], key, iterable) === false) {
                  break;
                }
              }
              return object;
            };
          }
          function createBind(func, bitmask, thisArg) {
            var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor(func);
            function wrapper() {
              var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
              return fn.apply(isBind ? thisArg : this, arguments);
            }
            return wrapper;
          }
          function createCaseFirst(methodName) {
            return function(string) {
              string = toString(string);
              var strSymbols = hasUnicode(string) ? stringToArray(string) : undefined2;
              var chr = strSymbols ? strSymbols[0] : string.charAt(0);
              var trailing = strSymbols ? castSlice(strSymbols, 1).join("") : string.slice(1);
              return chr[methodName]() + trailing;
            };
          }
          function createCompounder(callback) {
            return function(string) {
              return arrayReduce(words(deburr(string).replace(reApos, "")), callback, "");
            };
          }
          function createCtor(Ctor) {
            return function() {
              var args = arguments;
              switch (args.length) {
                case 0:
                  return new Ctor();
                case 1:
                  return new Ctor(args[0]);
                case 2:
                  return new Ctor(args[0], args[1]);
                case 3:
                  return new Ctor(args[0], args[1], args[2]);
                case 4:
                  return new Ctor(args[0], args[1], args[2], args[3]);
                case 5:
                  return new Ctor(args[0], args[1], args[2], args[3], args[4]);
                case 6:
                  return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
                case 7:
                  return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
              }
              var thisBinding = baseCreate(Ctor.prototype), result2 = Ctor.apply(thisBinding, args);
              return isObject(result2) ? result2 : thisBinding;
            };
          }
          function createCurry(func, bitmask, arity) {
            var Ctor = createCtor(func);
            function wrapper() {
              var length = arguments.length, args = Array2(length), index = length, placeholder = getHolder(wrapper);
              while (index--) {
                args[index] = arguments[index];
              }
              var holders = length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder ? [] : replaceHolders(args, placeholder);
              length -= holders.length;
              if (length < arity) {
                return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, undefined2, args, holders, undefined2, undefined2, arity - length);
              }
              var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
              return apply(fn, this, args);
            }
            return wrapper;
          }
          function createFind(findIndexFunc) {
            return function(collection, predicate, fromIndex) {
              var iterable = Object2(collection);
              if (!isArrayLike(collection)) {
                var iteratee2 = getIteratee(predicate, 3);
                collection = keys(collection);
                predicate = function(key) {
                  return iteratee2(iterable[key], key, iterable);
                };
              }
              var index = findIndexFunc(collection, predicate, fromIndex);
              return index > -1 ? iterable[iteratee2 ? collection[index] : index] : undefined2;
            };
          }
          function createFlow(fromRight) {
            return flatRest(function(funcs) {
              var length = funcs.length, index = length, prereq = LodashWrapper.prototype.thru;
              if (fromRight) {
                funcs.reverse();
              }
              while (index--) {
                var func = funcs[index];
                if (typeof func != "function") {
                  throw new TypeError2(FUNC_ERROR_TEXT);
                }
                if (prereq && !wrapper && getFuncName(func) == "wrapper") {
                  var wrapper = new LodashWrapper([], true);
                }
              }
              index = wrapper ? index : length;
              while (++index < length) {
                func = funcs[index];
                var funcName = getFuncName(func), data = funcName == "wrapper" ? getData(func) : undefined2;
                if (data && isLaziable(data[0]) && data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) && !data[4].length && data[9] == 1) {
                  wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
                } else {
                  wrapper = func.length == 1 && isLaziable(func) ? wrapper[funcName]() : wrapper.thru(func);
                }
              }
              return function() {
                var args = arguments, value = args[0];
                if (wrapper && args.length == 1 && isArray(value)) {
                  return wrapper.plant(value).value();
                }
                var index2 = 0, result2 = length ? funcs[index2].apply(this, args) : value;
                while (++index2 < length) {
                  result2 = funcs[index2].call(this, result2);
                }
                return result2;
              };
            });
          }
          function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary2, arity) {
            var isAry = bitmask & WRAP_ARY_FLAG, isBind = bitmask & WRAP_BIND_FLAG, isBindKey = bitmask & WRAP_BIND_KEY_FLAG, isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG), isFlip = bitmask & WRAP_FLIP_FLAG, Ctor = isBindKey ? undefined2 : createCtor(func);
            function wrapper() {
              var length = arguments.length, args = Array2(length), index = length;
              while (index--) {
                args[index] = arguments[index];
              }
              if (isCurried) {
                var placeholder = getHolder(wrapper), holdersCount = countHolders(args, placeholder);
              }
              if (partials) {
                args = composeArgs(args, partials, holders, isCurried);
              }
              if (partialsRight) {
                args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
              }
              length -= holdersCount;
              if (isCurried && length < arity) {
                var newHolders = replaceHolders(args, placeholder);
                return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, thisArg, args, newHolders, argPos, ary2, arity - length);
              }
              var thisBinding = isBind ? thisArg : this, fn = isBindKey ? thisBinding[func] : func;
              length = args.length;
              if (argPos) {
                args = reorder(args, argPos);
              } else if (isFlip && length > 1) {
                args.reverse();
              }
              if (isAry && ary2 < length) {
                args.length = ary2;
              }
              if (this && this !== root && this instanceof wrapper) {
                fn = Ctor || createCtor(fn);
              }
              return fn.apply(thisBinding, args);
            }
            return wrapper;
          }
          function createInverter(setter, toIteratee) {
            return function(object, iteratee2) {
              return baseInverter(object, setter, toIteratee(iteratee2), {});
            };
          }
          function createMathOperation(operator, defaultValue) {
            return function(value, other) {
              var result2;
              if (value === undefined2 && other === undefined2) {
                return defaultValue;
              }
              if (value !== undefined2) {
                result2 = value;
              }
              if (other !== undefined2) {
                if (result2 === undefined2) {
                  return other;
                }
                if (typeof value == "string" || typeof other == "string") {
                  value = baseToString(value);
                  other = baseToString(other);
                } else {
                  value = baseToNumber(value);
                  other = baseToNumber(other);
                }
                result2 = operator(value, other);
              }
              return result2;
            };
          }
          function createOver(arrayFunc) {
            return flatRest(function(iteratees) {
              iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
              return baseRest(function(args) {
                var thisArg = this;
                return arrayFunc(iteratees, function(iteratee2) {
                  return apply(iteratee2, thisArg, args);
                });
              });
            });
          }
          function createPadding(length, chars) {
            chars = chars === undefined2 ? " " : baseToString(chars);
            var charsLength = chars.length;
            if (charsLength < 2) {
              return charsLength ? baseRepeat(chars, length) : chars;
            }
            var result2 = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
            return hasUnicode(chars) ? castSlice(stringToArray(result2), 0, length).join("") : result2.slice(0, length);
          }
          function createPartial(func, bitmask, thisArg, partials) {
            var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor(func);
            function wrapper() {
              var argsIndex = -1, argsLength = arguments.length, leftIndex = -1, leftLength = partials.length, args = Array2(leftLength + argsLength), fn = this && this !== root && this instanceof wrapper ? Ctor : func;
              while (++leftIndex < leftLength) {
                args[leftIndex] = partials[leftIndex];
              }
              while (argsLength--) {
                args[leftIndex++] = arguments[++argsIndex];
              }
              return apply(fn, isBind ? thisArg : this, args);
            }
            return wrapper;
          }
          function createRange(fromRight) {
            return function(start, end, step) {
              if (step && typeof step != "number" && isIterateeCall(start, end, step)) {
                end = step = undefined2;
              }
              start = toFinite(start);
              if (end === undefined2) {
                end = start;
                start = 0;
              } else {
                end = toFinite(end);
              }
              step = step === undefined2 ? start < end ? 1 : -1 : toFinite(step);
              return baseRange(start, end, step, fromRight);
            };
          }
          function createRelationalOperation(operator) {
            return function(value, other) {
              if (!(typeof value == "string" && typeof other == "string")) {
                value = toNumber(value);
                other = toNumber(other);
              }
              return operator(value, other);
            };
          }
          function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary2, arity) {
            var isCurry = bitmask & WRAP_CURRY_FLAG, newHolders = isCurry ? holders : undefined2, newHoldersRight = isCurry ? undefined2 : holders, newPartials = isCurry ? partials : undefined2, newPartialsRight = isCurry ? undefined2 : partials;
            bitmask |= isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG;
            bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);
            if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
              bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
            }
            var newData = [
              func,
              bitmask,
              thisArg,
              newPartials,
              newHolders,
              newPartialsRight,
              newHoldersRight,
              argPos,
              ary2,
              arity
            ];
            var result2 = wrapFunc.apply(undefined2, newData);
            if (isLaziable(func)) {
              setData(result2, newData);
            }
            result2.placeholder = placeholder;
            return setWrapToString(result2, func, bitmask);
          }
          function createRound(methodName) {
            var func = Math2[methodName];
            return function(number, precision) {
              number = toNumber(number);
              precision = precision == null ? 0 : nativeMin(toInteger2(precision), 292);
              if (precision && nativeIsFinite(number)) {
                var pair = (toString(number) + "e").split("e"), value = func(pair[0] + "e" + (+pair[1] + precision));
                pair = (toString(value) + "e").split("e");
                return +(pair[0] + "e" + (+pair[1] - precision));
              }
              return func(number);
            };
          }
          var createSet = !(Set2 && 1 / setToArray(new Set2([, -0]))[1] == INFINITY) ? noop : function(values2) {
            return new Set2(values2);
          };
          function createToPairs(keysFunc) {
            return function(object) {
              var tag = getTag(object);
              if (tag == mapTag) {
                return mapToArray(object);
              }
              if (tag == setTag) {
                return setToPairs(object);
              }
              return baseToPairs(object, keysFunc(object));
            };
          }
          function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary2, arity) {
            var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
            if (!isBindKey && typeof func != "function") {
              throw new TypeError2(FUNC_ERROR_TEXT);
            }
            var length = partials ? partials.length : 0;
            if (!length) {
              bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
              partials = holders = undefined2;
            }
            ary2 = ary2 === undefined2 ? ary2 : nativeMax(toInteger2(ary2), 0);
            arity = arity === undefined2 ? arity : toInteger2(arity);
            length -= holders ? holders.length : 0;
            if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
              var partialsRight = partials, holdersRight = holders;
              partials = holders = undefined2;
            }
            var data = isBindKey ? undefined2 : getData(func);
            var newData = [
              func,
              bitmask,
              thisArg,
              partials,
              holders,
              partialsRight,
              holdersRight,
              argPos,
              ary2,
              arity
            ];
            if (data) {
              mergeData(newData, data);
            }
            func = newData[0];
            bitmask = newData[1];
            thisArg = newData[2];
            partials = newData[3];
            holders = newData[4];
            arity = newData[9] = newData[9] === undefined2 ? isBindKey ? 0 : func.length : nativeMax(newData[9] - length, 0);
            if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
              bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
            }
            if (!bitmask || bitmask == WRAP_BIND_FLAG) {
              var result2 = createBind(func, bitmask, thisArg);
            } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
              result2 = createCurry(func, bitmask, arity);
            } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
              result2 = createPartial(func, bitmask, thisArg, partials);
            } else {
              result2 = createHybrid.apply(undefined2, newData);
            }
            var setter = data ? baseSetData : setData;
            return setWrapToString(setter(result2, newData), func, bitmask);
          }
          function customDefaultsAssignIn(objValue, srcValue, key, object) {
            if (objValue === undefined2 || eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key)) {
              return srcValue;
            }
            return objValue;
          }
          function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
            if (isObject(objValue) && isObject(srcValue)) {
              stack.set(srcValue, objValue);
              baseMerge(objValue, srcValue, undefined2, customDefaultsMerge, stack);
              stack["delete"](srcValue);
            }
            return objValue;
          }
          function customOmitClone(value) {
            return isPlainObject(value) ? undefined2 : value;
          }
          function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
            var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
            if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
              return false;
            }
            var arrStacked = stack.get(array);
            var othStacked = stack.get(other);
            if (arrStacked && othStacked) {
              return arrStacked == other && othStacked == array;
            }
            var index = -1, result2 = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined2;
            stack.set(array, other);
            stack.set(other, array);
            while (++index < arrLength) {
              var arrValue = array[index], othValue = other[index];
              if (customizer) {
                var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
              }
              if (compared !== undefined2) {
                if (compared) {
                  continue;
                }
                result2 = false;
                break;
              }
              if (seen) {
                if (!arraySome(other, function(othValue2, othIndex) {
                  if (!cacheHas(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
                    return seen.push(othIndex);
                  }
                })) {
                  result2 = false;
                  break;
                }
              } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                result2 = false;
                break;
              }
            }
            stack["delete"](array);
            stack["delete"](other);
            return result2;
          }
          function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
            switch (tag) {
              case dataViewTag:
                if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
                  return false;
                }
                object = object.buffer;
                other = other.buffer;
              case arrayBufferTag:
                if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array2(object), new Uint8Array2(other))) {
                  return false;
                }
                return true;
              case boolTag:
              case dateTag:
              case numberTag:
                return eq(+object, +other);
              case errorTag:
                return object.name == other.name && object.message == other.message;
              case regexpTag:
              case stringTag:
                return object == other + "";
              case mapTag:
                var convert = mapToArray;
              case setTag:
                var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
                convert || (convert = setToArray);
                if (object.size != other.size && !isPartial) {
                  return false;
                }
                var stacked = stack.get(object);
                if (stacked) {
                  return stacked == other;
                }
                bitmask |= COMPARE_UNORDERED_FLAG;
                stack.set(object, other);
                var result2 = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
                stack["delete"](object);
                return result2;
              case symbolTag:
                if (symbolValueOf) {
                  return symbolValueOf.call(object) == symbolValueOf.call(other);
                }
            }
            return false;
          }
          function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
            var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
            if (objLength != othLength && !isPartial) {
              return false;
            }
            var index = objLength;
            while (index--) {
              var key = objProps[index];
              if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
                return false;
              }
            }
            var objStacked = stack.get(object);
            var othStacked = stack.get(other);
            if (objStacked && othStacked) {
              return objStacked == other && othStacked == object;
            }
            var result2 = true;
            stack.set(object, other);
            stack.set(other, object);
            var skipCtor = isPartial;
            while (++index < objLength) {
              key = objProps[index];
              var objValue = object[key], othValue = other[key];
              if (customizer) {
                var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
              }
              if (!(compared === undefined2 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
                result2 = false;
                break;
              }
              skipCtor || (skipCtor = key == "constructor");
            }
            if (result2 && !skipCtor) {
              var objCtor = object.constructor, othCtor = other.constructor;
              if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
                result2 = false;
              }
            }
            stack["delete"](object);
            stack["delete"](other);
            return result2;
          }
          function flatRest(func) {
            return setToString(overRest(func, undefined2, flatten), func + "");
          }
          function getAllKeys(object) {
            return baseGetAllKeys(object, keys, getSymbols);
          }
          function getAllKeysIn(object) {
            return baseGetAllKeys(object, keysIn, getSymbolsIn);
          }
          var getData = !metaMap ? noop : function(func) {
            return metaMap.get(func);
          };
          function getFuncName(func) {
            var result2 = func.name + "", array = realNames[result2], length = hasOwnProperty.call(realNames, result2) ? array.length : 0;
            while (length--) {
              var data = array[length], otherFunc = data.func;
              if (otherFunc == null || otherFunc == func) {
                return data.name;
              }
            }
            return result2;
          }
          function getHolder(func) {
            var object = hasOwnProperty.call(lodash, "placeholder") ? lodash : func;
            return object.placeholder;
          }
          function getIteratee() {
            var result2 = lodash.iteratee || iteratee;
            result2 = result2 === iteratee ? baseIteratee : result2;
            return arguments.length ? result2(arguments[0], arguments[1]) : result2;
          }
          function getMapData(map2, key) {
            var data = map2.__data__;
            return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
          }
          function getMatchData(object) {
            var result2 = keys(object), length = result2.length;
            while (length--) {
              var key = result2[length], value = object[key];
              result2[length] = [key, value, isStrictComparable(value)];
            }
            return result2;
          }
          function getNative(object, key) {
            var value = getValue(object, key);
            return baseIsNative(value) ? value : undefined2;
          }
          function getRawTag(value) {
            var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
            try {
              value[symToStringTag] = undefined2;
              var unmasked = true;
            } catch (e2) {
            }
            var result2 = nativeObjectToString.call(value);
            if (unmasked) {
              if (isOwn) {
                value[symToStringTag] = tag;
              } else {
                delete value[symToStringTag];
              }
            }
            return result2;
          }
          var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
            if (object == null) {
              return [];
            }
            object = Object2(object);
            return arrayFilter(nativeGetSymbols(object), function(symbol) {
              return propertyIsEnumerable.call(object, symbol);
            });
          };
          var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
            var result2 = [];
            while (object) {
              arrayPush(result2, getSymbols(object));
              object = getPrototype(object);
            }
            return result2;
          };
          var getTag = baseGetTag;
          if (DataView2 && getTag(new DataView2(new ArrayBuffer(1))) != dataViewTag || Map2 && getTag(new Map2()) != mapTag || Promise2 && getTag(Promise2.resolve()) != promiseTag || Set2 && getTag(new Set2()) != setTag || WeakMap2 && getTag(new WeakMap2()) != weakMapTag) {
            getTag = function(value) {
              var result2 = baseGetTag(value), Ctor = result2 == objectTag ? value.constructor : undefined2, ctorString = Ctor ? toSource(Ctor) : "";
              if (ctorString) {
                switch (ctorString) {
                  case dataViewCtorString:
                    return dataViewTag;
                  case mapCtorString:
                    return mapTag;
                  case promiseCtorString:
                    return promiseTag;
                  case setCtorString:
                    return setTag;
                  case weakMapCtorString:
                    return weakMapTag;
                }
              }
              return result2;
            };
          }
          function getView(start, end, transforms) {
            var index = -1, length = transforms.length;
            while (++index < length) {
              var data = transforms[index], size2 = data.size;
              switch (data.type) {
                case "drop":
                  start += size2;
                  break;
                case "dropRight":
                  end -= size2;
                  break;
                case "take":
                  end = nativeMin(end, start + size2);
                  break;
                case "takeRight":
                  start = nativeMax(start, end - size2);
                  break;
              }
            }
            return {"start": start, "end": end};
          }
          function getWrapDetails(source) {
            var match2 = source.match(reWrapDetails);
            return match2 ? match2[1].split(reSplitDetails) : [];
          }
          function hasPath(object, path, hasFunc) {
            path = castPath(path, object);
            var index = -1, length = path.length, result2 = false;
            while (++index < length) {
              var key = toKey(path[index]);
              if (!(result2 = object != null && hasFunc(object, key))) {
                break;
              }
              object = object[key];
            }
            if (result2 || ++index != length) {
              return result2;
            }
            length = object == null ? 0 : object.length;
            return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
          }
          function initCloneArray(array) {
            var length = array.length, result2 = new array.constructor(length);
            if (length && typeof array[0] == "string" && hasOwnProperty.call(array, "index")) {
              result2.index = array.index;
              result2.input = array.input;
            }
            return result2;
          }
          function initCloneObject(object) {
            return typeof object.constructor == "function" && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};
          }
          function initCloneByTag(object, tag, isDeep) {
            var Ctor = object.constructor;
            switch (tag) {
              case arrayBufferTag:
                return cloneArrayBuffer(object);
              case boolTag:
              case dateTag:
                return new Ctor(+object);
              case dataViewTag:
                return cloneDataView(object, isDeep);
              case float32Tag:
              case float64Tag:
              case int8Tag:
              case int16Tag:
              case int32Tag:
              case uint8Tag:
              case uint8ClampedTag:
              case uint16Tag:
              case uint32Tag:
                return cloneTypedArray(object, isDeep);
              case mapTag:
                return new Ctor();
              case numberTag:
              case stringTag:
                return new Ctor(object);
              case regexpTag:
                return cloneRegExp(object);
              case setTag:
                return new Ctor();
              case symbolTag:
                return cloneSymbol(object);
            }
          }
          function insertWrapDetails(source, details) {
            var length = details.length;
            if (!length) {
              return source;
            }
            var lastIndex = length - 1;
            details[lastIndex] = (length > 1 ? "& " : "") + details[lastIndex];
            details = details.join(length > 2 ? ", " : " ");
            return source.replace(reWrapComment, "{\n/* [wrapped with " + details + "] */\n");
          }
          function isFlattenable(value) {
            return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
          }
          function isIndex(value, length) {
            var type = typeof value;
            length = length == null ? MAX_SAFE_INTEGER : length;
            return !!length && (type == "number" || type != "symbol" && reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
          }
          function isIterateeCall(value, index, object) {
            if (!isObject(object)) {
              return false;
            }
            var type = typeof index;
            if (type == "number" ? isArrayLike(object) && isIndex(index, object.length) : type == "string" && index in object) {
              return eq(object[index], value);
            }
            return false;
          }
          function isKey(value, object) {
            if (isArray(value)) {
              return false;
            }
            var type = typeof value;
            if (type == "number" || type == "symbol" || type == "boolean" || value == null || isSymbol(value)) {
              return true;
            }
            return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object2(object);
          }
          function isKeyable(value) {
            var type = typeof value;
            return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
          }
          function isLaziable(func) {
            var funcName = getFuncName(func), other = lodash[funcName];
            if (typeof other != "function" || !(funcName in LazyWrapper.prototype)) {
              return false;
            }
            if (func === other) {
              return true;
            }
            var data = getData(other);
            return !!data && func === data[0];
          }
          function isMasked(func) {
            return !!maskSrcKey && maskSrcKey in func;
          }
          var isMaskable = coreJsData ? isFunction : stubFalse;
          function isPrototype(value) {
            var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
            return value === proto;
          }
          function isStrictComparable(value) {
            return value === value && !isObject(value);
          }
          function matchesStrictComparable(key, srcValue) {
            return function(object) {
              if (object == null) {
                return false;
              }
              return object[key] === srcValue && (srcValue !== undefined2 || key in Object2(object));
            };
          }
          function memoizeCapped(func) {
            var result2 = memoize(func, function(key) {
              if (cache.size === MAX_MEMOIZE_SIZE) {
                cache.clear();
              }
              return key;
            });
            var cache = result2.cache;
            return result2;
          }
          function mergeData(data, source) {
            var bitmask = data[1], srcBitmask = source[1], newBitmask = bitmask | srcBitmask, isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);
            var isCombo = srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_CURRY_FLAG || srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_REARG_FLAG && data[7].length <= source[8] || srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG) && source[7].length <= source[8] && bitmask == WRAP_CURRY_FLAG;
            if (!(isCommon || isCombo)) {
              return data;
            }
            if (srcBitmask & WRAP_BIND_FLAG) {
              data[2] = source[2];
              newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
            }
            var value = source[3];
            if (value) {
              var partials = data[3];
              data[3] = partials ? composeArgs(partials, value, source[4]) : value;
              data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
            }
            value = source[5];
            if (value) {
              partials = data[5];
              data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
              data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
            }
            value = source[7];
            if (value) {
              data[7] = value;
            }
            if (srcBitmask & WRAP_ARY_FLAG) {
              data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
            }
            if (data[9] == null) {
              data[9] = source[9];
            }
            data[0] = source[0];
            data[1] = newBitmask;
            return data;
          }
          function nativeKeysIn(object) {
            var result2 = [];
            if (object != null) {
              for (var key in Object2(object)) {
                result2.push(key);
              }
            }
            return result2;
          }
          function objectToString(value) {
            return nativeObjectToString.call(value);
          }
          function overRest(func, start, transform2) {
            start = nativeMax(start === undefined2 ? func.length - 1 : start, 0);
            return function() {
              var args = arguments, index = -1, length = nativeMax(args.length - start, 0), array = Array2(length);
              while (++index < length) {
                array[index] = args[start + index];
              }
              index = -1;
              var otherArgs = Array2(start + 1);
              while (++index < start) {
                otherArgs[index] = args[index];
              }
              otherArgs[start] = transform2(array);
              return apply(func, this, otherArgs);
            };
          }
          function parent(object, path) {
            return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
          }
          function reorder(array, indexes) {
            var arrLength = array.length, length = nativeMin(indexes.length, arrLength), oldArray = copyArray(array);
            while (length--) {
              var index = indexes[length];
              array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined2;
            }
            return array;
          }
          function safeGet(object, key) {
            if (key === "constructor" && typeof object[key] === "function") {
              return;
            }
            if (key == "__proto__") {
              return;
            }
            return object[key];
          }
          var setData = shortOut(baseSetData);
          var setTimeout2 = ctxSetTimeout || function(func, wait) {
            return root.setTimeout(func, wait);
          };
          var setToString = shortOut(baseSetToString);
          function setWrapToString(wrapper, reference, bitmask) {
            var source = reference + "";
            return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
          }
          function shortOut(func) {
            var count = 0, lastCalled = 0;
            return function() {
              var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
              lastCalled = stamp;
              if (remaining > 0) {
                if (++count >= HOT_COUNT) {
                  return arguments[0];
                }
              } else {
                count = 0;
              }
              return func.apply(undefined2, arguments);
            };
          }
          function shuffleSelf(array, size2) {
            var index = -1, length = array.length, lastIndex = length - 1;
            size2 = size2 === undefined2 ? length : size2;
            while (++index < size2) {
              var rand = baseRandom(index, lastIndex), value = array[rand];
              array[rand] = array[index];
              array[index] = value;
            }
            array.length = size2;
            return array;
          }
          var stringToPath = memoizeCapped(function(string) {
            var result2 = [];
            if (string.charCodeAt(0) === 46) {
              result2.push("");
            }
            string.replace(rePropName, function(match2, number, quote, subString) {
              result2.push(quote ? subString.replace(reEscapeChar, "$1") : number || match2);
            });
            return result2;
          });
          function toKey(value) {
            if (typeof value == "string" || isSymbol(value)) {
              return value;
            }
            var result2 = value + "";
            return result2 == "0" && 1 / value == -INFINITY ? "-0" : result2;
          }
          function toSource(func) {
            if (func != null) {
              try {
                return funcToString.call(func);
              } catch (e2) {
              }
              try {
                return func + "";
              } catch (e2) {
              }
            }
            return "";
          }
          function updateWrapDetails(details, bitmask) {
            arrayEach(wrapFlags, function(pair) {
              var value = "_." + pair[0];
              if (bitmask & pair[1] && !arrayIncludes(details, value)) {
                details.push(value);
              }
            });
            return details.sort();
          }
          function wrapperClone(wrapper) {
            if (wrapper instanceof LazyWrapper) {
              return wrapper.clone();
            }
            var result2 = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
            result2.__actions__ = copyArray(wrapper.__actions__);
            result2.__index__ = wrapper.__index__;
            result2.__values__ = wrapper.__values__;
            return result2;
          }
          function chunk(array, size2, guard) {
            if (guard ? isIterateeCall(array, size2, guard) : size2 === undefined2) {
              size2 = 1;
            } else {
              size2 = nativeMax(toInteger2(size2), 0);
            }
            var length = array == null ? 0 : array.length;
            if (!length || size2 < 1) {
              return [];
            }
            var index = 0, resIndex = 0, result2 = Array2(nativeCeil(length / size2));
            while (index < length) {
              result2[resIndex++] = baseSlice(array, index, index += size2);
            }
            return result2;
          }
          function compact(array) {
            var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result2 = [];
            while (++index < length) {
              var value = array[index];
              if (value) {
                result2[resIndex++] = value;
              }
            }
            return result2;
          }
          function concat() {
            var length = arguments.length;
            if (!length) {
              return [];
            }
            var args = Array2(length - 1), array = arguments[0], index = length;
            while (index--) {
              args[index - 1] = arguments[index];
            }
            return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
          }
          var difference = baseRest(function(array, values2) {
            return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values2, 1, isArrayLikeObject, true)) : [];
          });
          var differenceBy = baseRest(function(array, values2) {
            var iteratee2 = last(values2);
            if (isArrayLikeObject(iteratee2)) {
              iteratee2 = undefined2;
            }
            return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values2, 1, isArrayLikeObject, true), getIteratee(iteratee2, 2)) : [];
          });
          var differenceWith = baseRest(function(array, values2) {
            var comparator = last(values2);
            if (isArrayLikeObject(comparator)) {
              comparator = undefined2;
            }
            return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values2, 1, isArrayLikeObject, true), undefined2, comparator) : [];
          });
          function drop(array, n, guard) {
            var length = array == null ? 0 : array.length;
            if (!length) {
              return [];
            }
            n = guard || n === undefined2 ? 1 : toInteger2(n);
            return baseSlice(array, n < 0 ? 0 : n, length);
          }
          function dropRight(array, n, guard) {
            var length = array == null ? 0 : array.length;
            if (!length) {
              return [];
            }
            n = guard || n === undefined2 ? 1 : toInteger2(n);
            n = length - n;
            return baseSlice(array, 0, n < 0 ? 0 : n);
          }
          function dropRightWhile(array, predicate) {
            return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true, true) : [];
          }
          function dropWhile(array, predicate) {
            return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true) : [];
          }
          function fill(array, value, start, end) {
            var length = array == null ? 0 : array.length;
            if (!length) {
              return [];
            }
            if (start && typeof start != "number" && isIterateeCall(array, value, start)) {
              start = 0;
              end = length;
            }
            return baseFill(array, value, start, end);
          }
          function findIndex2(array, predicate, fromIndex) {
            var length = array == null ? 0 : array.length;
            if (!length) {
              return -1;
            }
            var index = fromIndex == null ? 0 : toInteger2(fromIndex);
            if (index < 0) {
              index = nativeMax(length + index, 0);
            }
            return baseFindIndex(array, getIteratee(predicate, 3), index);
          }
          function findLastIndex(array, predicate, fromIndex) {
            var length = array == null ? 0 : array.length;
            if (!length) {
              return -1;
            }
            var index = length - 1;
            if (fromIndex !== undefined2) {
              index = toInteger2(fromIndex);
              index = fromIndex < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
            }
            return baseFindIndex(array, getIteratee(predicate, 3), index, true);
          }
          function flatten(array) {
            var length = array == null ? 0 : array.length;
            return length ? baseFlatten(array, 1) : [];
          }
          function flattenDeep(array) {
            var length = array == null ? 0 : array.length;
            return length ? baseFlatten(array, INFINITY) : [];
          }
          function flattenDepth(array, depth) {
            var length = array == null ? 0 : array.length;
            if (!length) {
              return [];
            }
            depth = depth === undefined2 ? 1 : toInteger2(depth);
            return baseFlatten(array, depth);
          }
          function fromPairs(pairs) {
            var index = -1, length = pairs == null ? 0 : pairs.length, result2 = {};
            while (++index < length) {
              var pair = pairs[index];
              result2[pair[0]] = pair[1];
            }
            return result2;
          }
          function head(array) {
            return array && array.length ? array[0] : undefined2;
          }
          function indexOf(array, value, fromIndex) {
            var length = array == null ? 0 : array.length;
            if (!length) {
              return -1;
            }
            var index = fromIndex == null ? 0 : toInteger2(fromIndex);
            if (index < 0) {
              index = nativeMax(length + index, 0);
            }
            return baseIndexOf(array, value, index);
          }
          function initial(array) {
            var length = array == null ? 0 : array.length;
            return length ? baseSlice(array, 0, -1) : [];
          }
          var intersection = baseRest(function(arrays) {
            var mapped = arrayMap(arrays, castArrayLikeObject);
            return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped) : [];
          });
          var intersectionBy = baseRest(function(arrays) {
            var iteratee2 = last(arrays), mapped = arrayMap(arrays, castArrayLikeObject);
            if (iteratee2 === last(mapped)) {
              iteratee2 = undefined2;
            } else {
              mapped.pop();
            }
            return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, getIteratee(iteratee2, 2)) : [];
          });
          var intersectionWith = baseRest(function(arrays) {
            var comparator = last(arrays), mapped = arrayMap(arrays, castArrayLikeObject);
            comparator = typeof comparator == "function" ? comparator : undefined2;
            if (comparator) {
              mapped.pop();
            }
            return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, undefined2, comparator) : [];
          });
          function join(array, separator) {
            return array == null ? "" : nativeJoin.call(array, separator);
          }
          function last(array) {
            var length = array == null ? 0 : array.length;
            return length ? array[length - 1] : undefined2;
          }
          function lastIndexOf(array, value, fromIndex) {
            var length = array == null ? 0 : array.length;
            if (!length) {
              return -1;
            }
            var index = length;
            if (fromIndex !== undefined2) {
              index = toInteger2(fromIndex);
              index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
            }
            return value === value ? strictLastIndexOf(array, value, index) : baseFindIndex(array, baseIsNaN, index, true);
          }
          function nth(array, n) {
            return array && array.length ? baseNth(array, toInteger2(n)) : undefined2;
          }
          var pull = baseRest(pullAll);
          function pullAll(array, values2) {
            return array && array.length && values2 && values2.length ? basePullAll(array, values2) : array;
          }
          function pullAllBy(array, values2, iteratee2) {
            return array && array.length && values2 && values2.length ? basePullAll(array, values2, getIteratee(iteratee2, 2)) : array;
          }
          function pullAllWith(array, values2, comparator) {
            return array && array.length && values2 && values2.length ? basePullAll(array, values2, undefined2, comparator) : array;
          }
          var pullAt = flatRest(function(array, indexes) {
            var length = array == null ? 0 : array.length, result2 = baseAt(array, indexes);
            basePullAt(array, arrayMap(indexes, function(index) {
              return isIndex(index, length) ? +index : index;
            }).sort(compareAscending));
            return result2;
          });
          function remove(array, predicate) {
            var result2 = [];
            if (!(array && array.length)) {
              return result2;
            }
            var index = -1, indexes = [], length = array.length;
            predicate = getIteratee(predicate, 3);
            while (++index < length) {
              var value = array[index];
              if (predicate(value, index, array)) {
                result2.push(value);
                indexes.push(index);
              }
            }
            basePullAt(array, indexes);
            return result2;
          }
          function reverse(array) {
            return array == null ? array : nativeReverse.call(array);
          }
          function slice(array, start, end) {
            var length = array == null ? 0 : array.length;
            if (!length) {
              return [];
            }
            if (end && typeof end != "number" && isIterateeCall(array, start, end)) {
              start = 0;
              end = length;
            } else {
              start = start == null ? 0 : toInteger2(start);
              end = end === undefined2 ? length : toInteger2(end);
            }
            return baseSlice(array, start, end);
          }
          function sortedIndex(array, value) {
            return baseSortedIndex(array, value);
          }
          function sortedIndexBy(array, value, iteratee2) {
            return baseSortedIndexBy(array, value, getIteratee(iteratee2, 2));
          }
          function sortedIndexOf(array, value) {
            var length = array == null ? 0 : array.length;
            if (length) {
              var index = baseSortedIndex(array, value);
              if (index < length && eq(array[index], value)) {
                return index;
              }
            }
            return -1;
          }
          function sortedLastIndex(array, value) {
            return baseSortedIndex(array, value, true);
          }
          function sortedLastIndexBy(array, value, iteratee2) {
            return baseSortedIndexBy(array, value, getIteratee(iteratee2, 2), true);
          }
          function sortedLastIndexOf(array, value) {
            var length = array == null ? 0 : array.length;
            if (length) {
              var index = baseSortedIndex(array, value, true) - 1;
              if (eq(array[index], value)) {
                return index;
              }
            }
            return -1;
          }
          function sortedUniq(array) {
            return array && array.length ? baseSortedUniq(array) : [];
          }
          function sortedUniqBy(array, iteratee2) {
            return array && array.length ? baseSortedUniq(array, getIteratee(iteratee2, 2)) : [];
          }
          function tail(array) {
            var length = array == null ? 0 : array.length;
            return length ? baseSlice(array, 1, length) : [];
          }
          function take(array, n, guard) {
            if (!(array && array.length)) {
              return [];
            }
            n = guard || n === undefined2 ? 1 : toInteger2(n);
            return baseSlice(array, 0, n < 0 ? 0 : n);
          }
          function takeRight(array, n, guard) {
            var length = array == null ? 0 : array.length;
            if (!length) {
              return [];
            }
            n = guard || n === undefined2 ? 1 : toInteger2(n);
            n = length - n;
            return baseSlice(array, n < 0 ? 0 : n, length);
          }
          function takeRightWhile(array, predicate) {
            return array && array.length ? baseWhile(array, getIteratee(predicate, 3), false, true) : [];
          }
          function takeWhile(array, predicate) {
            return array && array.length ? baseWhile(array, getIteratee(predicate, 3)) : [];
          }
          var union = baseRest(function(arrays) {
            return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
          });
          var unionBy = baseRest(function(arrays) {
            var iteratee2 = last(arrays);
            if (isArrayLikeObject(iteratee2)) {
              iteratee2 = undefined2;
            }
            return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee2, 2));
          });
          var unionWith = baseRest(function(arrays) {
            var comparator = last(arrays);
            comparator = typeof comparator == "function" ? comparator : undefined2;
            return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined2, comparator);
          });
          function uniq(array) {
            return array && array.length ? baseUniq(array) : [];
          }
          function uniqBy(array, iteratee2) {
            return array && array.length ? baseUniq(array, getIteratee(iteratee2, 2)) : [];
          }
          function uniqWith(array, comparator) {
            comparator = typeof comparator == "function" ? comparator : undefined2;
            return array && array.length ? baseUniq(array, undefined2, comparator) : [];
          }
          function unzip(array) {
            if (!(array && array.length)) {
              return [];
            }
            var length = 0;
            array = arrayFilter(array, function(group) {
              if (isArrayLikeObject(group)) {
                length = nativeMax(group.length, length);
                return true;
              }
            });
            return baseTimes(length, function(index) {
              return arrayMap(array, baseProperty(index));
            });
          }
          function unzipWith(array, iteratee2) {
            if (!(array && array.length)) {
              return [];
            }
            var result2 = unzip(array);
            if (iteratee2 == null) {
              return result2;
            }
            return arrayMap(result2, function(group) {
              return apply(iteratee2, undefined2, group);
            });
          }
          var without = baseRest(function(array, values2) {
            return isArrayLikeObject(array) ? baseDifference(array, values2) : [];
          });
          var xor = baseRest(function(arrays) {
            return baseXor(arrayFilter(arrays, isArrayLikeObject));
          });
          var xorBy = baseRest(function(arrays) {
            var iteratee2 = last(arrays);
            if (isArrayLikeObject(iteratee2)) {
              iteratee2 = undefined2;
            }
            return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee2, 2));
          });
          var xorWith = baseRest(function(arrays) {
            var comparator = last(arrays);
            comparator = typeof comparator == "function" ? comparator : undefined2;
            return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined2, comparator);
          });
          var zip = baseRest(unzip);
          function zipObject(props, values2) {
            return baseZipObject(props || [], values2 || [], assignValue);
          }
          function zipObjectDeep(props, values2) {
            return baseZipObject(props || [], values2 || [], baseSet);
          }
          var zipWith = baseRest(function(arrays) {
            var length = arrays.length, iteratee2 = length > 1 ? arrays[length - 1] : undefined2;
            iteratee2 = typeof iteratee2 == "function" ? (arrays.pop(), iteratee2) : undefined2;
            return unzipWith(arrays, iteratee2);
          });
          function chain(value) {
            var result2 = lodash(value);
            result2.__chain__ = true;
            return result2;
          }
          function tap(value, interceptor) {
            interceptor(value);
            return value;
          }
          function thru(value, interceptor) {
            return interceptor(value);
          }
          var wrapperAt = flatRest(function(paths) {
            var length = paths.length, start = length ? paths[0] : 0, value = this.__wrapped__, interceptor = function(object) {
              return baseAt(object, paths);
            };
            if (length > 1 || this.__actions__.length || !(value instanceof LazyWrapper) || !isIndex(start)) {
              return this.thru(interceptor);
            }
            value = value.slice(start, +start + (length ? 1 : 0));
            value.__actions__.push({
              "func": thru,
              "args": [interceptor],
              "thisArg": undefined2
            });
            return new LodashWrapper(value, this.__chain__).thru(function(array) {
              if (length && !array.length) {
                array.push(undefined2);
              }
              return array;
            });
          });
          function wrapperChain() {
            return chain(this);
          }
          function wrapperCommit() {
            return new LodashWrapper(this.value(), this.__chain__);
          }
          function wrapperNext() {
            if (this.__values__ === undefined2) {
              this.__values__ = toArray(this.value());
            }
            var done = this.__index__ >= this.__values__.length, value = done ? undefined2 : this.__values__[this.__index__++];
            return {"done": done, "value": value};
          }
          function wrapperToIterator() {
            return this;
          }
          function wrapperPlant(value) {
            var result2, parent2 = this;
            while (parent2 instanceof baseLodash) {
              var clone2 = wrapperClone(parent2);
              clone2.__index__ = 0;
              clone2.__values__ = undefined2;
              if (result2) {
                previous.__wrapped__ = clone2;
              } else {
                result2 = clone2;
              }
              var previous = clone2;
              parent2 = parent2.__wrapped__;
            }
            previous.__wrapped__ = value;
            return result2;
          }
          function wrapperReverse() {
            var value = this.__wrapped__;
            if (value instanceof LazyWrapper) {
              var wrapped = value;
              if (this.__actions__.length) {
                wrapped = new LazyWrapper(this);
              }
              wrapped = wrapped.reverse();
              wrapped.__actions__.push({
                "func": thru,
                "args": [reverse],
                "thisArg": undefined2
              });
              return new LodashWrapper(wrapped, this.__chain__);
            }
            return this.thru(reverse);
          }
          function wrapperValue() {
            return baseWrapperValue(this.__wrapped__, this.__actions__);
          }
          var countBy = createAggregator(function(result2, value, key) {
            if (hasOwnProperty.call(result2, key)) {
              ++result2[key];
            } else {
              baseAssignValue(result2, key, 1);
            }
          });
          function every(collection, predicate, guard) {
            var func = isArray(collection) ? arrayEvery : baseEvery;
            if (guard && isIterateeCall(collection, predicate, guard)) {
              predicate = undefined2;
            }
            return func(collection, getIteratee(predicate, 3));
          }
          function filter(collection, predicate) {
            var func = isArray(collection) ? arrayFilter : baseFilter;
            return func(collection, getIteratee(predicate, 3));
          }
          var find = createFind(findIndex2);
          var findLast = createFind(findLastIndex);
          function flatMap(collection, iteratee2) {
            return baseFlatten(map(collection, iteratee2), 1);
          }
          function flatMapDeep(collection, iteratee2) {
            return baseFlatten(map(collection, iteratee2), INFINITY);
          }
          function flatMapDepth(collection, iteratee2, depth) {
            depth = depth === undefined2 ? 1 : toInteger2(depth);
            return baseFlatten(map(collection, iteratee2), depth);
          }
          function forEach(collection, iteratee2) {
            var func = isArray(collection) ? arrayEach : baseEach;
            return func(collection, getIteratee(iteratee2, 3));
          }
          function forEachRight(collection, iteratee2) {
            var func = isArray(collection) ? arrayEachRight : baseEachRight;
            return func(collection, getIteratee(iteratee2, 3));
          }
          var groupBy = createAggregator(function(result2, value, key) {
            if (hasOwnProperty.call(result2, key)) {
              result2[key].push(value);
            } else {
              baseAssignValue(result2, key, [value]);
            }
          });
          function includes(collection, value, fromIndex, guard) {
            collection = isArrayLike(collection) ? collection : values(collection);
            fromIndex = fromIndex && !guard ? toInteger2(fromIndex) : 0;
            var length = collection.length;
            if (fromIndex < 0) {
              fromIndex = nativeMax(length + fromIndex, 0);
            }
            return isString(collection) ? fromIndex <= length && collection.indexOf(value, fromIndex) > -1 : !!length && baseIndexOf(collection, value, fromIndex) > -1;
          }
          var invokeMap = baseRest(function(collection, path, args) {
            var index = -1, isFunc = typeof path == "function", result2 = isArrayLike(collection) ? Array2(collection.length) : [];
            baseEach(collection, function(value) {
              result2[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
            });
            return result2;
          });
          var keyBy = createAggregator(function(result2, value, key) {
            baseAssignValue(result2, key, value);
          });
          function map(collection, iteratee2) {
            var func = isArray(collection) ? arrayMap : baseMap;
            return func(collection, getIteratee(iteratee2, 3));
          }
          function orderBy(collection, iteratees, orders, guard) {
            if (collection == null) {
              return [];
            }
            if (!isArray(iteratees)) {
              iteratees = iteratees == null ? [] : [iteratees];
            }
            orders = guard ? undefined2 : orders;
            if (!isArray(orders)) {
              orders = orders == null ? [] : [orders];
            }
            return baseOrderBy(collection, iteratees, orders);
          }
          var partition = createAggregator(function(result2, value, key) {
            result2[key ? 0 : 1].push(value);
          }, function() {
            return [[], []];
          });
          function reduce(collection, iteratee2, accumulator) {
            var func = isArray(collection) ? arrayReduce : baseReduce, initAccum = arguments.length < 3;
            return func(collection, getIteratee(iteratee2, 4), accumulator, initAccum, baseEach);
          }
          function reduceRight(collection, iteratee2, accumulator) {
            var func = isArray(collection) ? arrayReduceRight : baseReduce, initAccum = arguments.length < 3;
            return func(collection, getIteratee(iteratee2, 4), accumulator, initAccum, baseEachRight);
          }
          function reject(collection, predicate) {
            var func = isArray(collection) ? arrayFilter : baseFilter;
            return func(collection, negate(getIteratee(predicate, 3)));
          }
          function sample(collection) {
            var func = isArray(collection) ? arraySample : baseSample;
            return func(collection);
          }
          function sampleSize(collection, n, guard) {
            if (guard ? isIterateeCall(collection, n, guard) : n === undefined2) {
              n = 1;
            } else {
              n = toInteger2(n);
            }
            var func = isArray(collection) ? arraySampleSize : baseSampleSize;
            return func(collection, n);
          }
          function shuffle(collection) {
            var func = isArray(collection) ? arrayShuffle : baseShuffle;
            return func(collection);
          }
          function size(collection) {
            if (collection == null) {
              return 0;
            }
            if (isArrayLike(collection)) {
              return isString(collection) ? stringSize(collection) : collection.length;
            }
            var tag = getTag(collection);
            if (tag == mapTag || tag == setTag) {
              return collection.size;
            }
            return baseKeys(collection).length;
          }
          function some(collection, predicate, guard) {
            var func = isArray(collection) ? arraySome : baseSome;
            if (guard && isIterateeCall(collection, predicate, guard)) {
              predicate = undefined2;
            }
            return func(collection, getIteratee(predicate, 3));
          }
          var sortBy = baseRest(function(collection, iteratees) {
            if (collection == null) {
              return [];
            }
            var length = iteratees.length;
            if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
              iteratees = [];
            } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
              iteratees = [iteratees[0]];
            }
            return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
          });
          var now = ctxNow || function() {
            return root.Date.now();
          };
          function after(n, func) {
            if (typeof func != "function") {
              throw new TypeError2(FUNC_ERROR_TEXT);
            }
            n = toInteger2(n);
            return function() {
              if (--n < 1) {
                return func.apply(this, arguments);
              }
            };
          }
          function ary(func, n, guard) {
            n = guard ? undefined2 : n;
            n = func && n == null ? func.length : n;
            return createWrap(func, WRAP_ARY_FLAG, undefined2, undefined2, undefined2, undefined2, n);
          }
          function before(n, func) {
            var result2;
            if (typeof func != "function") {
              throw new TypeError2(FUNC_ERROR_TEXT);
            }
            n = toInteger2(n);
            return function() {
              if (--n > 0) {
                result2 = func.apply(this, arguments);
              }
              if (n <= 1) {
                func = undefined2;
              }
              return result2;
            };
          }
          var bind = baseRest(function(func, thisArg, partials) {
            var bitmask = WRAP_BIND_FLAG;
            if (partials.length) {
              var holders = replaceHolders(partials, getHolder(bind));
              bitmask |= WRAP_PARTIAL_FLAG;
            }
            return createWrap(func, bitmask, thisArg, partials, holders);
          });
          var bindKey = baseRest(function(object, key, partials) {
            var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
            if (partials.length) {
              var holders = replaceHolders(partials, getHolder(bindKey));
              bitmask |= WRAP_PARTIAL_FLAG;
            }
            return createWrap(key, bitmask, object, partials, holders);
          });
          function curry(func, arity, guard) {
            arity = guard ? undefined2 : arity;
            var result2 = createWrap(func, WRAP_CURRY_FLAG, undefined2, undefined2, undefined2, undefined2, undefined2, arity);
            result2.placeholder = curry.placeholder;
            return result2;
          }
          function curryRight(func, arity, guard) {
            arity = guard ? undefined2 : arity;
            var result2 = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined2, undefined2, undefined2, undefined2, undefined2, arity);
            result2.placeholder = curryRight.placeholder;
            return result2;
          }
          function debounce(func, wait, options) {
            var lastArgs, lastThis, maxWait, result2, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
            if (typeof func != "function") {
              throw new TypeError2(FUNC_ERROR_TEXT);
            }
            wait = toNumber(wait) || 0;
            if (isObject(options)) {
              leading = !!options.leading;
              maxing = "maxWait" in options;
              maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
              trailing = "trailing" in options ? !!options.trailing : trailing;
            }
            function invokeFunc(time) {
              var args = lastArgs, thisArg = lastThis;
              lastArgs = lastThis = undefined2;
              lastInvokeTime = time;
              result2 = func.apply(thisArg, args);
              return result2;
            }
            function leadingEdge(time) {
              lastInvokeTime = time;
              timerId = setTimeout2(timerExpired, wait);
              return leading ? invokeFunc(time) : result2;
            }
            function remainingWait(time) {
              var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
              return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
            }
            function shouldInvoke(time) {
              var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
              return lastCallTime === undefined2 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
            }
            function timerExpired() {
              var time = now();
              if (shouldInvoke(time)) {
                return trailingEdge(time);
              }
              timerId = setTimeout2(timerExpired, remainingWait(time));
            }
            function trailingEdge(time) {
              timerId = undefined2;
              if (trailing && lastArgs) {
                return invokeFunc(time);
              }
              lastArgs = lastThis = undefined2;
              return result2;
            }
            function cancel() {
              if (timerId !== undefined2) {
                clearTimeout2(timerId);
              }
              lastInvokeTime = 0;
              lastArgs = lastCallTime = lastThis = timerId = undefined2;
            }
            function flush() {
              return timerId === undefined2 ? result2 : trailingEdge(now());
            }
            function debounced() {
              var time = now(), isInvoking = shouldInvoke(time);
              lastArgs = arguments;
              lastThis = this;
              lastCallTime = time;
              if (isInvoking) {
                if (timerId === undefined2) {
                  return leadingEdge(lastCallTime);
                }
                if (maxing) {
                  clearTimeout2(timerId);
                  timerId = setTimeout2(timerExpired, wait);
                  return invokeFunc(lastCallTime);
                }
              }
              if (timerId === undefined2) {
                timerId = setTimeout2(timerExpired, wait);
              }
              return result2;
            }
            debounced.cancel = cancel;
            debounced.flush = flush;
            return debounced;
          }
          var defer = baseRest(function(func, args) {
            return baseDelay(func, 1, args);
          });
          var delay = baseRest(function(func, wait, args) {
            return baseDelay(func, toNumber(wait) || 0, args);
          });
          function flip(func) {
            return createWrap(func, WRAP_FLIP_FLAG);
          }
          function memoize(func, resolver) {
            if (typeof func != "function" || resolver != null && typeof resolver != "function") {
              throw new TypeError2(FUNC_ERROR_TEXT);
            }
            var memoized = function() {
              var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
              if (cache.has(key)) {
                return cache.get(key);
              }
              var result2 = func.apply(this, args);
              memoized.cache = cache.set(key, result2) || cache;
              return result2;
            };
            memoized.cache = new (memoize.Cache || MapCache)();
            return memoized;
          }
          memoize.Cache = MapCache;
          function negate(predicate) {
            if (typeof predicate != "function") {
              throw new TypeError2(FUNC_ERROR_TEXT);
            }
            return function() {
              var args = arguments;
              switch (args.length) {
                case 0:
                  return !predicate.call(this);
                case 1:
                  return !predicate.call(this, args[0]);
                case 2:
                  return !predicate.call(this, args[0], args[1]);
                case 3:
                  return !predicate.call(this, args[0], args[1], args[2]);
              }
              return !predicate.apply(this, args);
            };
          }
          function once(func) {
            return before(2, func);
          }
          var overArgs = castRest(function(func, transforms) {
            transforms = transforms.length == 1 && isArray(transforms[0]) ? arrayMap(transforms[0], baseUnary(getIteratee())) : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));
            var funcsLength = transforms.length;
            return baseRest(function(args) {
              var index = -1, length = nativeMin(args.length, funcsLength);
              while (++index < length) {
                args[index] = transforms[index].call(this, args[index]);
              }
              return apply(func, this, args);
            });
          });
          var partial = baseRest(function(func, partials) {
            var holders = replaceHolders(partials, getHolder(partial));
            return createWrap(func, WRAP_PARTIAL_FLAG, undefined2, partials, holders);
          });
          var partialRight = baseRest(function(func, partials) {
            var holders = replaceHolders(partials, getHolder(partialRight));
            return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined2, partials, holders);
          });
          var rearg = flatRest(function(func, indexes) {
            return createWrap(func, WRAP_REARG_FLAG, undefined2, undefined2, undefined2, indexes);
          });
          function rest(func, start) {
            if (typeof func != "function") {
              throw new TypeError2(FUNC_ERROR_TEXT);
            }
            start = start === undefined2 ? start : toInteger2(start);
            return baseRest(func, start);
          }
          function spread(func, start) {
            if (typeof func != "function") {
              throw new TypeError2(FUNC_ERROR_TEXT);
            }
            start = start == null ? 0 : nativeMax(toInteger2(start), 0);
            return baseRest(function(args) {
              var array = args[start], otherArgs = castSlice(args, 0, start);
              if (array) {
                arrayPush(otherArgs, array);
              }
              return apply(func, this, otherArgs);
            });
          }
          function throttle(func, wait, options) {
            var leading = true, trailing = true;
            if (typeof func != "function") {
              throw new TypeError2(FUNC_ERROR_TEXT);
            }
            if (isObject(options)) {
              leading = "leading" in options ? !!options.leading : leading;
              trailing = "trailing" in options ? !!options.trailing : trailing;
            }
            return debounce(func, wait, {
              "leading": leading,
              "maxWait": wait,
              "trailing": trailing
            });
          }
          function unary(func) {
            return ary(func, 1);
          }
          function wrap(value, wrapper) {
            return partial(castFunction(wrapper), value);
          }
          function castArray() {
            if (!arguments.length) {
              return [];
            }
            var value = arguments[0];
            return isArray(value) ? value : [value];
          }
          function clone(value) {
            return baseClone(value, CLONE_SYMBOLS_FLAG);
          }
          function cloneWith(value, customizer) {
            customizer = typeof customizer == "function" ? customizer : undefined2;
            return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
          }
          function cloneDeep(value) {
            return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
          }
          function cloneDeepWith(value, customizer) {
            customizer = typeof customizer == "function" ? customizer : undefined2;
            return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
          }
          function conformsTo(object, source) {
            return source == null || baseConformsTo(object, source, keys(source));
          }
          function eq(value, other) {
            return value === other || value !== value && other !== other;
          }
          var gt = createRelationalOperation(baseGt);
          var gte = createRelationalOperation(function(value, other) {
            return value >= other;
          });
          var isArguments = baseIsArguments(function() {
            return arguments;
          }()) ? baseIsArguments : function(value) {
            return isObjectLike(value) && hasOwnProperty.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
          };
          var isArray = Array2.isArray;
          var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;
          function isArrayLike(value) {
            return value != null && isLength(value.length) && !isFunction(value);
          }
          function isArrayLikeObject(value) {
            return isObjectLike(value) && isArrayLike(value);
          }
          function isBoolean(value) {
            return value === true || value === false || isObjectLike(value) && baseGetTag(value) == boolTag;
          }
          var isBuffer = nativeIsBuffer || stubFalse;
          var isDate2 = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;
          function isElement(value) {
            return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
          }
          function isEmpty(value) {
            if (value == null) {
              return true;
            }
            if (isArrayLike(value) && (isArray(value) || typeof value == "string" || typeof value.splice == "function" || isBuffer(value) || isTypedArray(value) || isArguments(value))) {
              return !value.length;
            }
            var tag = getTag(value);
            if (tag == mapTag || tag == setTag) {
              return !value.size;
            }
            if (isPrototype(value)) {
              return !baseKeys(value).length;
            }
            for (var key in value) {
              if (hasOwnProperty.call(value, key)) {
                return false;
              }
            }
            return true;
          }
          function isEqual(value, other) {
            return baseIsEqual(value, other);
          }
          function isEqualWith(value, other, customizer) {
            customizer = typeof customizer == "function" ? customizer : undefined2;
            var result2 = customizer ? customizer(value, other) : undefined2;
            return result2 === undefined2 ? baseIsEqual(value, other, undefined2, customizer) : !!result2;
          }
          function isError(value) {
            if (!isObjectLike(value)) {
              return false;
            }
            var tag = baseGetTag(value);
            return tag == errorTag || tag == domExcTag || typeof value.message == "string" && typeof value.name == "string" && !isPlainObject(value);
          }
          function isFinite2(value) {
            return typeof value == "number" && nativeIsFinite(value);
          }
          function isFunction(value) {
            if (!isObject(value)) {
              return false;
            }
            var tag = baseGetTag(value);
            return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
          }
          function isInteger(value) {
            return typeof value == "number" && value == toInteger2(value);
          }
          function isLength(value) {
            return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
          }
          function isObject(value) {
            var type = typeof value;
            return value != null && (type == "object" || type == "function");
          }
          function isObjectLike(value) {
            return value != null && typeof value == "object";
          }
          var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;
          function isMatch(object, source) {
            return object === source || baseIsMatch(object, source, getMatchData(source));
          }
          function isMatchWith(object, source, customizer) {
            customizer = typeof customizer == "function" ? customizer : undefined2;
            return baseIsMatch(object, source, getMatchData(source), customizer);
          }
          function isNaN2(value) {
            return isNumber(value) && value != +value;
          }
          function isNative(value) {
            if (isMaskable(value)) {
              throw new Error2(CORE_ERROR_TEXT);
            }
            return baseIsNative(value);
          }
          function isNull(value) {
            return value === null;
          }
          function isNil(value) {
            return value == null;
          }
          function isNumber(value) {
            return typeof value == "number" || isObjectLike(value) && baseGetTag(value) == numberTag;
          }
          function isPlainObject(value) {
            if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
              return false;
            }
            var proto = getPrototype(value);
            if (proto === null) {
              return true;
            }
            var Ctor = hasOwnProperty.call(proto, "constructor") && proto.constructor;
            return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
          }
          var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;
          function isSafeInteger(value) {
            return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
          }
          var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
          function isString(value) {
            return typeof value == "string" || !isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag;
          }
          function isSymbol(value) {
            return typeof value == "symbol" || isObjectLike(value) && baseGetTag(value) == symbolTag;
          }
          var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
          function isUndefined(value) {
            return value === undefined2;
          }
          function isWeakMap(value) {
            return isObjectLike(value) && getTag(value) == weakMapTag;
          }
          function isWeakSet(value) {
            return isObjectLike(value) && baseGetTag(value) == weakSetTag;
          }
          var lt = createRelationalOperation(baseLt);
          var lte = createRelationalOperation(function(value, other) {
            return value <= other;
          });
          function toArray(value) {
            if (!value) {
              return [];
            }
            if (isArrayLike(value)) {
              return isString(value) ? stringToArray(value) : copyArray(value);
            }
            if (symIterator && value[symIterator]) {
              return iteratorToArray(value[symIterator]());
            }
            var tag = getTag(value), func = tag == mapTag ? mapToArray : tag == setTag ? setToArray : values;
            return func(value);
          }
          function toFinite(value) {
            if (!value) {
              return value === 0 ? value : 0;
            }
            value = toNumber(value);
            if (value === INFINITY || value === -INFINITY) {
              var sign = value < 0 ? -1 : 1;
              return sign * MAX_INTEGER;
            }
            return value === value ? value : 0;
          }
          function toInteger2(value) {
            var result2 = toFinite(value), remainder = result2 % 1;
            return result2 === result2 ? remainder ? result2 - remainder : result2 : 0;
          }
          function toLength(value) {
            return value ? baseClamp(toInteger2(value), 0, MAX_ARRAY_LENGTH) : 0;
          }
          function toNumber(value) {
            if (typeof value == "number") {
              return value;
            }
            if (isSymbol(value)) {
              return NAN;
            }
            if (isObject(value)) {
              var other = typeof value.valueOf == "function" ? value.valueOf() : value;
              value = isObject(other) ? other + "" : other;
            }
            if (typeof value != "string") {
              return value === 0 ? value : +value;
            }
            value = baseTrim(value);
            var isBinary = reIsBinary.test(value);
            return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
          }
          function toPlainObject(value) {
            return copyObject(value, keysIn(value));
          }
          function toSafeInteger(value) {
            return value ? baseClamp(toInteger2(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER) : value === 0 ? value : 0;
          }
          function toString(value) {
            return value == null ? "" : baseToString(value);
          }
          var assign = createAssigner(function(object, source) {
            if (isPrototype(source) || isArrayLike(source)) {
              copyObject(source, keys(source), object);
              return;
            }
            for (var key in source) {
              if (hasOwnProperty.call(source, key)) {
                assignValue(object, key, source[key]);
              }
            }
          });
          var assignIn = createAssigner(function(object, source) {
            copyObject(source, keysIn(source), object);
          });
          var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
            copyObject(source, keysIn(source), object, customizer);
          });
          var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
            copyObject(source, keys(source), object, customizer);
          });
          var at = flatRest(baseAt);
          function create(prototype, properties) {
            var result2 = baseCreate(prototype);
            return properties == null ? result2 : baseAssign(result2, properties);
          }
          var defaults = baseRest(function(object, sources) {
            object = Object2(object);
            var index = -1;
            var length = sources.length;
            var guard = length > 2 ? sources[2] : undefined2;
            if (guard && isIterateeCall(sources[0], sources[1], guard)) {
              length = 1;
            }
            while (++index < length) {
              var source = sources[index];
              var props = keysIn(source);
              var propsIndex = -1;
              var propsLength = props.length;
              while (++propsIndex < propsLength) {
                var key = props[propsIndex];
                var value = object[key];
                if (value === undefined2 || eq(value, objectProto[key]) && !hasOwnProperty.call(object, key)) {
                  object[key] = source[key];
                }
              }
            }
            return object;
          });
          var defaultsDeep = baseRest(function(args) {
            args.push(undefined2, customDefaultsMerge);
            return apply(mergeWith, undefined2, args);
          });
          function findKey2(object, predicate) {
            return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
          }
          function findLastKey(object, predicate) {
            return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
          }
          function forIn(object, iteratee2) {
            return object == null ? object : baseFor(object, getIteratee(iteratee2, 3), keysIn);
          }
          function forInRight(object, iteratee2) {
            return object == null ? object : baseForRight(object, getIteratee(iteratee2, 3), keysIn);
          }
          function forOwn(object, iteratee2) {
            return object && baseForOwn(object, getIteratee(iteratee2, 3));
          }
          function forOwnRight(object, iteratee2) {
            return object && baseForOwnRight(object, getIteratee(iteratee2, 3));
          }
          function functions(object) {
            return object == null ? [] : baseFunctions(object, keys(object));
          }
          function functionsIn(object) {
            return object == null ? [] : baseFunctions(object, keysIn(object));
          }
          function get(object, path, defaultValue) {
            var result2 = object == null ? undefined2 : baseGet(object, path);
            return result2 === undefined2 ? defaultValue : result2;
          }
          function has(object, path) {
            return object != null && hasPath(object, path, baseHas);
          }
          function hasIn(object, path) {
            return object != null && hasPath(object, path, baseHasIn);
          }
          var invert = createInverter(function(result2, value, key) {
            if (value != null && typeof value.toString != "function") {
              value = nativeObjectToString.call(value);
            }
            result2[value] = key;
          }, constant(identity));
          var invertBy = createInverter(function(result2, value, key) {
            if (value != null && typeof value.toString != "function") {
              value = nativeObjectToString.call(value);
            }
            if (hasOwnProperty.call(result2, value)) {
              result2[value].push(key);
            } else {
              result2[value] = [key];
            }
          }, getIteratee);
          var invoke = baseRest(baseInvoke);
          function keys(object) {
            return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
          }
          function keysIn(object) {
            return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
          }
          function mapKeys(object, iteratee2) {
            var result2 = {};
            iteratee2 = getIteratee(iteratee2, 3);
            baseForOwn(object, function(value, key, object2) {
              baseAssignValue(result2, iteratee2(value, key, object2), value);
            });
            return result2;
          }
          function mapValues(object, iteratee2) {
            var result2 = {};
            iteratee2 = getIteratee(iteratee2, 3);
            baseForOwn(object, function(value, key, object2) {
              baseAssignValue(result2, key, iteratee2(value, key, object2));
            });
            return result2;
          }
          var merge2 = createAssigner(function(object, source, srcIndex) {
            baseMerge(object, source, srcIndex);
          });
          var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
            baseMerge(object, source, srcIndex, customizer);
          });
          var omit = flatRest(function(object, paths) {
            var result2 = {};
            if (object == null) {
              return result2;
            }
            var isDeep = false;
            paths = arrayMap(paths, function(path) {
              path = castPath(path, object);
              isDeep || (isDeep = path.length > 1);
              return path;
            });
            copyObject(object, getAllKeysIn(object), result2);
            if (isDeep) {
              result2 = baseClone(result2, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
            }
            var length = paths.length;
            while (length--) {
              baseUnset(result2, paths[length]);
            }
            return result2;
          });
          function omitBy(object, predicate) {
            return pickBy(object, negate(getIteratee(predicate)));
          }
          var pick = flatRest(function(object, paths) {
            return object == null ? {} : basePick(object, paths);
          });
          function pickBy(object, predicate) {
            if (object == null) {
              return {};
            }
            var props = arrayMap(getAllKeysIn(object), function(prop) {
              return [prop];
            });
            predicate = getIteratee(predicate);
            return basePickBy(object, props, function(value, path) {
              return predicate(value, path[0]);
            });
          }
          function result(object, path, defaultValue) {
            path = castPath(path, object);
            var index = -1, length = path.length;
            if (!length) {
              length = 1;
              object = undefined2;
            }
            while (++index < length) {
              var value = object == null ? undefined2 : object[toKey(path[index])];
              if (value === undefined2) {
                index = length;
                value = defaultValue;
              }
              object = isFunction(value) ? value.call(object) : value;
            }
            return object;
          }
          function set(object, path, value) {
            return object == null ? object : baseSet(object, path, value);
          }
          function setWith(object, path, value, customizer) {
            customizer = typeof customizer == "function" ? customizer : undefined2;
            return object == null ? object : baseSet(object, path, value, customizer);
          }
          var toPairs = createToPairs(keys);
          var toPairsIn = createToPairs(keysIn);
          function transform(object, iteratee2, accumulator) {
            var isArr = isArray(object), isArrLike = isArr || isBuffer(object) || isTypedArray(object);
            iteratee2 = getIteratee(iteratee2, 4);
            if (accumulator == null) {
              var Ctor = object && object.constructor;
              if (isArrLike) {
                accumulator = isArr ? new Ctor() : [];
              } else if (isObject(object)) {
                accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
              } else {
                accumulator = {};
              }
            }
            (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object2) {
              return iteratee2(accumulator, value, index, object2);
            });
            return accumulator;
          }
          function unset(object, path) {
            return object == null ? true : baseUnset(object, path);
          }
          function update(object, path, updater) {
            return object == null ? object : baseUpdate(object, path, castFunction(updater));
          }
          function updateWith(object, path, updater, customizer) {
            customizer = typeof customizer == "function" ? customizer : undefined2;
            return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
          }
          function values(object) {
            return object == null ? [] : baseValues(object, keys(object));
          }
          function valuesIn(object) {
            return object == null ? [] : baseValues(object, keysIn(object));
          }
          function clamp(number, lower, upper) {
            if (upper === undefined2) {
              upper = lower;
              lower = undefined2;
            }
            if (upper !== undefined2) {
              upper = toNumber(upper);
              upper = upper === upper ? upper : 0;
            }
            if (lower !== undefined2) {
              lower = toNumber(lower);
              lower = lower === lower ? lower : 0;
            }
            return baseClamp(toNumber(number), lower, upper);
          }
          function inRange(number, start, end) {
            start = toFinite(start);
            if (end === undefined2) {
              end = start;
              start = 0;
            } else {
              end = toFinite(end);
            }
            number = toNumber(number);
            return baseInRange(number, start, end);
          }
          function random(lower, upper, floating) {
            if (floating && typeof floating != "boolean" && isIterateeCall(lower, upper, floating)) {
              upper = floating = undefined2;
            }
            if (floating === undefined2) {
              if (typeof upper == "boolean") {
                floating = upper;
                upper = undefined2;
              } else if (typeof lower == "boolean") {
                floating = lower;
                lower = undefined2;
              }
            }
            if (lower === undefined2 && upper === undefined2) {
              lower = 0;
              upper = 1;
            } else {
              lower = toFinite(lower);
              if (upper === undefined2) {
                upper = lower;
                lower = 0;
              } else {
                upper = toFinite(upper);
              }
            }
            if (lower > upper) {
              var temp = lower;
              lower = upper;
              upper = temp;
            }
            if (floating || lower % 1 || upper % 1) {
              var rand = nativeRandom();
              return nativeMin(lower + rand * (upper - lower + freeParseFloat("1e-" + ((rand + "").length - 1))), upper);
            }
            return baseRandom(lower, upper);
          }
          var camelCase = createCompounder(function(result2, word, index) {
            word = word.toLowerCase();
            return result2 + (index ? capitalize(word) : word);
          });
          function capitalize(string) {
            return upperFirst(toString(string).toLowerCase());
          }
          function deburr(string) {
            string = toString(string);
            return string && string.replace(reLatin, deburrLetter).replace(reComboMark, "");
          }
          function endsWith(string, target, position) {
            string = toString(string);
            target = baseToString(target);
            var length = string.length;
            position = position === undefined2 ? length : baseClamp(toInteger2(position), 0, length);
            var end = position;
            position -= target.length;
            return position >= 0 && string.slice(position, end) == target;
          }
          function escape(string) {
            string = toString(string);
            return string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar) : string;
          }
          function escapeRegExp(string) {
            string = toString(string);
            return string && reHasRegExpChar.test(string) ? string.replace(reRegExpChar, "\\$&") : string;
          }
          var kebabCase = createCompounder(function(result2, word, index) {
            return result2 + (index ? "-" : "") + word.toLowerCase();
          });
          var lowerCase = createCompounder(function(result2, word, index) {
            return result2 + (index ? " " : "") + word.toLowerCase();
          });
          var lowerFirst = createCaseFirst("toLowerCase");
          function pad(string, length, chars) {
            string = toString(string);
            length = toInteger2(length);
            var strLength = length ? stringSize(string) : 0;
            if (!length || strLength >= length) {
              return string;
            }
            var mid = (length - strLength) / 2;
            return createPadding(nativeFloor(mid), chars) + string + createPadding(nativeCeil(mid), chars);
          }
          function padEnd(string, length, chars) {
            string = toString(string);
            length = toInteger2(length);
            var strLength = length ? stringSize(string) : 0;
            return length && strLength < length ? string + createPadding(length - strLength, chars) : string;
          }
          function padStart(string, length, chars) {
            string = toString(string);
            length = toInteger2(length);
            var strLength = length ? stringSize(string) : 0;
            return length && strLength < length ? createPadding(length - strLength, chars) + string : string;
          }
          function parseInt2(string, radix, guard) {
            if (guard || radix == null) {
              radix = 0;
            } else if (radix) {
              radix = +radix;
            }
            return nativeParseInt(toString(string).replace(reTrimStart, ""), radix || 0);
          }
          function repeat(string, n, guard) {
            if (guard ? isIterateeCall(string, n, guard) : n === undefined2) {
              n = 1;
            } else {
              n = toInteger2(n);
            }
            return baseRepeat(toString(string), n);
          }
          function replace() {
            var args = arguments, string = toString(args[0]);
            return args.length < 3 ? string : string.replace(args[1], args[2]);
          }
          var snakeCase = createCompounder(function(result2, word, index) {
            return result2 + (index ? "_" : "") + word.toLowerCase();
          });
          function split(string, separator, limit) {
            if (limit && typeof limit != "number" && isIterateeCall(string, separator, limit)) {
              separator = limit = undefined2;
            }
            limit = limit === undefined2 ? MAX_ARRAY_LENGTH : limit >>> 0;
            if (!limit) {
              return [];
            }
            string = toString(string);
            if (string && (typeof separator == "string" || separator != null && !isRegExp(separator))) {
              separator = baseToString(separator);
              if (!separator && hasUnicode(string)) {
                return castSlice(stringToArray(string), 0, limit);
              }
            }
            return string.split(separator, limit);
          }
          var startCase = createCompounder(function(result2, word, index) {
            return result2 + (index ? " " : "") + upperFirst(word);
          });
          function startsWith(string, target, position) {
            string = toString(string);
            position = position == null ? 0 : baseClamp(toInteger2(position), 0, string.length);
            target = baseToString(target);
            return string.slice(position, position + target.length) == target;
          }
          function template(string, options, guard) {
            var settings = lodash.templateSettings;
            if (guard && isIterateeCall(string, options, guard)) {
              options = undefined2;
            }
            string = toString(string);
            options = assignInWith({}, options, settings, customDefaultsAssignIn);
            var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn), importsKeys = keys(imports), importsValues = baseValues(imports, importsKeys);
            var isEscaping, isEvaluating, index = 0, interpolate = options.interpolate || reNoMatch, source = "__p += '";
            var reDelimiters = RegExp2((options.escape || reNoMatch).source + "|" + interpolate.source + "|" + (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + "|" + (options.evaluate || reNoMatch).source + "|$", "g");
            var sourceURL = "//# sourceURL=" + (hasOwnProperty.call(options, "sourceURL") ? (options.sourceURL + "").replace(/\s/g, " ") : "lodash.templateSources[" + ++templateCounter + "]") + "\n";
            string.replace(reDelimiters, function(match2, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
              interpolateValue || (interpolateValue = esTemplateValue);
              source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);
              if (escapeValue) {
                isEscaping = true;
                source += "' +\n__e(" + escapeValue + ") +\n'";
              }
              if (evaluateValue) {
                isEvaluating = true;
                source += "';\n" + evaluateValue + ";\n__p += '";
              }
              if (interpolateValue) {
                source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
              }
              index = offset + match2.length;
              return match2;
            });
            source += "';\n";
            var variable = hasOwnProperty.call(options, "variable") && options.variable;
            if (!variable) {
              source = "with (obj) {\n" + source + "\n}\n";
            } else if (reForbiddenIdentifierChars.test(variable)) {
              throw new Error2(INVALID_TEMPL_VAR_ERROR_TEXT);
            }
            source = (isEvaluating ? source.replace(reEmptyStringLeading, "") : source).replace(reEmptyStringMiddle, "$1").replace(reEmptyStringTrailing, "$1;");
            source = "function(" + (variable || "obj") + ") {\n" + (variable ? "" : "obj || (obj = {});\n") + "var __t, __p = ''" + (isEscaping ? ", __e = _.escape" : "") + (isEvaluating ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n" : ";\n") + source + "return __p\n}";
            var result2 = attempt(function() {
              return Function2(importsKeys, sourceURL + "return " + source).apply(undefined2, importsValues);
            });
            result2.source = source;
            if (isError(result2)) {
              throw result2;
            }
            return result2;
          }
          function toLower(value) {
            return toString(value).toLowerCase();
          }
          function toUpper(value) {
            return toString(value).toUpperCase();
          }
          function trim(string, chars, guard) {
            string = toString(string);
            if (string && (guard || chars === undefined2)) {
              return baseTrim(string);
            }
            if (!string || !(chars = baseToString(chars))) {
              return string;
            }
            var strSymbols = stringToArray(string), chrSymbols = stringToArray(chars), start = charsStartIndex(strSymbols, chrSymbols), end = charsEndIndex(strSymbols, chrSymbols) + 1;
            return castSlice(strSymbols, start, end).join("");
          }
          function trimEnd(string, chars, guard) {
            string = toString(string);
            if (string && (guard || chars === undefined2)) {
              return string.slice(0, trimmedEndIndex(string) + 1);
            }
            if (!string || !(chars = baseToString(chars))) {
              return string;
            }
            var strSymbols = stringToArray(string), end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;
            return castSlice(strSymbols, 0, end).join("");
          }
          function trimStart(string, chars, guard) {
            string = toString(string);
            if (string && (guard || chars === undefined2)) {
              return string.replace(reTrimStart, "");
            }
            if (!string || !(chars = baseToString(chars))) {
              return string;
            }
            var strSymbols = stringToArray(string), start = charsStartIndex(strSymbols, stringToArray(chars));
            return castSlice(strSymbols, start).join("");
          }
          function truncate(string, options) {
            var length = DEFAULT_TRUNC_LENGTH, omission = DEFAULT_TRUNC_OMISSION;
            if (isObject(options)) {
              var separator = "separator" in options ? options.separator : separator;
              length = "length" in options ? toInteger2(options.length) : length;
              omission = "omission" in options ? baseToString(options.omission) : omission;
            }
            string = toString(string);
            var strLength = string.length;
            if (hasUnicode(string)) {
              var strSymbols = stringToArray(string);
              strLength = strSymbols.length;
            }
            if (length >= strLength) {
              return string;
            }
            var end = length - stringSize(omission);
            if (end < 1) {
              return omission;
            }
            var result2 = strSymbols ? castSlice(strSymbols, 0, end).join("") : string.slice(0, end);
            if (separator === undefined2) {
              return result2 + omission;
            }
            if (strSymbols) {
              end += result2.length - end;
            }
            if (isRegExp(separator)) {
              if (string.slice(end).search(separator)) {
                var match2, substring = result2;
                if (!separator.global) {
                  separator = RegExp2(separator.source, toString(reFlags.exec(separator)) + "g");
                }
                separator.lastIndex = 0;
                while (match2 = separator.exec(substring)) {
                  var newEnd = match2.index;
                }
                result2 = result2.slice(0, newEnd === undefined2 ? end : newEnd);
              }
            } else if (string.indexOf(baseToString(separator), end) != end) {
              var index = result2.lastIndexOf(separator);
              if (index > -1) {
                result2 = result2.slice(0, index);
              }
            }
            return result2 + omission;
          }
          function unescape(string) {
            string = toString(string);
            return string && reHasEscapedHtml.test(string) ? string.replace(reEscapedHtml, unescapeHtmlChar) : string;
          }
          var upperCase = createCompounder(function(result2, word, index) {
            return result2 + (index ? " " : "") + word.toUpperCase();
          });
          var upperFirst = createCaseFirst("toUpperCase");
          function words(string, pattern, guard) {
            string = toString(string);
            pattern = guard ? undefined2 : pattern;
            if (pattern === undefined2) {
              return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
            }
            return string.match(pattern) || [];
          }
          var attempt = baseRest(function(func, args) {
            try {
              return apply(func, undefined2, args);
            } catch (e2) {
              return isError(e2) ? e2 : new Error2(e2);
            }
          });
          var bindAll = flatRest(function(object, methodNames) {
            arrayEach(methodNames, function(key) {
              key = toKey(key);
              baseAssignValue(object, key, bind(object[key], object));
            });
            return object;
          });
          function cond(pairs) {
            var length = pairs == null ? 0 : pairs.length, toIteratee = getIteratee();
            pairs = !length ? [] : arrayMap(pairs, function(pair) {
              if (typeof pair[1] != "function") {
                throw new TypeError2(FUNC_ERROR_TEXT);
              }
              return [toIteratee(pair[0]), pair[1]];
            });
            return baseRest(function(args) {
              var index = -1;
              while (++index < length) {
                var pair = pairs[index];
                if (apply(pair[0], this, args)) {
                  return apply(pair[1], this, args);
                }
              }
            });
          }
          function conforms(source) {
            return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
          }
          function constant(value) {
            return function() {
              return value;
            };
          }
          function defaultTo(value, defaultValue) {
            return value == null || value !== value ? defaultValue : value;
          }
          var flow = createFlow();
          var flowRight = createFlow(true);
          function identity(value) {
            return value;
          }
          function iteratee(func) {
            return baseIteratee(typeof func == "function" ? func : baseClone(func, CLONE_DEEP_FLAG));
          }
          function matches(source) {
            return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
          }
          function matchesProperty(path, srcValue) {
            return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
          }
          var method = baseRest(function(path, args) {
            return function(object) {
              return baseInvoke(object, path, args);
            };
          });
          var methodOf = baseRest(function(object, args) {
            return function(path) {
              return baseInvoke(object, path, args);
            };
          });
          function mixin(object, source, options) {
            var props = keys(source), methodNames = baseFunctions(source, props);
            if (options == null && !(isObject(source) && (methodNames.length || !props.length))) {
              options = source;
              source = object;
              object = this;
              methodNames = baseFunctions(source, keys(source));
            }
            var chain2 = !(isObject(options) && "chain" in options) || !!options.chain, isFunc = isFunction(object);
            arrayEach(methodNames, function(methodName) {
              var func = source[methodName];
              object[methodName] = func;
              if (isFunc) {
                object.prototype[methodName] = function() {
                  var chainAll = this.__chain__;
                  if (chain2 || chainAll) {
                    var result2 = object(this.__wrapped__), actions = result2.__actions__ = copyArray(this.__actions__);
                    actions.push({"func": func, "args": arguments, "thisArg": object});
                    result2.__chain__ = chainAll;
                    return result2;
                  }
                  return func.apply(object, arrayPush([this.value()], arguments));
                };
              }
            });
            return object;
          }
          function noConflict() {
            if (root._ === this) {
              root._ = oldDash;
            }
            return this;
          }
          function noop() {
          }
          function nthArg(n) {
            n = toInteger2(n);
            return baseRest(function(args) {
              return baseNth(args, n);
            });
          }
          var over = createOver(arrayMap);
          var overEvery = createOver(arrayEvery);
          var overSome = createOver(arraySome);
          function property(path) {
            return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
          }
          function propertyOf(object) {
            return function(path) {
              return object == null ? undefined2 : baseGet(object, path);
            };
          }
          var range = createRange();
          var rangeRight = createRange(true);
          function stubArray() {
            return [];
          }
          function stubFalse() {
            return false;
          }
          function stubObject() {
            return {};
          }
          function stubString() {
            return "";
          }
          function stubTrue() {
            return true;
          }
          function times(n, iteratee2) {
            n = toInteger2(n);
            if (n < 1 || n > MAX_SAFE_INTEGER) {
              return [];
            }
            var index = MAX_ARRAY_LENGTH, length = nativeMin(n, MAX_ARRAY_LENGTH);
            iteratee2 = getIteratee(iteratee2);
            n -= MAX_ARRAY_LENGTH;
            var result2 = baseTimes(length, iteratee2);
            while (++index < n) {
              iteratee2(index);
            }
            return result2;
          }
          function toPath(value) {
            if (isArray(value)) {
              return arrayMap(value, toKey);
            }
            return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
          }
          function uniqueId(prefix) {
            var id = ++idCounter;
            return toString(prefix) + id;
          }
          var add = createMathOperation(function(augend, addend) {
            return augend + addend;
          }, 0);
          var ceil = createRound("ceil");
          var divide = createMathOperation(function(dividend, divisor) {
            return dividend / divisor;
          }, 1);
          var floor = createRound("floor");
          function max(array) {
            return array && array.length ? baseExtremum(array, identity, baseGt) : undefined2;
          }
          function maxBy(array, iteratee2) {
            return array && array.length ? baseExtremum(array, getIteratee(iteratee2, 2), baseGt) : undefined2;
          }
          function mean(array) {
            return baseMean(array, identity);
          }
          function meanBy(array, iteratee2) {
            return baseMean(array, getIteratee(iteratee2, 2));
          }
          function min(array) {
            return array && array.length ? baseExtremum(array, identity, baseLt) : undefined2;
          }
          function minBy(array, iteratee2) {
            return array && array.length ? baseExtremum(array, getIteratee(iteratee2, 2), baseLt) : undefined2;
          }
          var multiply = createMathOperation(function(multiplier, multiplicand) {
            return multiplier * multiplicand;
          }, 1);
          var round = createRound("round");
          var subtract = createMathOperation(function(minuend, subtrahend) {
            return minuend - subtrahend;
          }, 0);
          function sum(array) {
            return array && array.length ? baseSum(array, identity) : 0;
          }
          function sumBy(array, iteratee2) {
            return array && array.length ? baseSum(array, getIteratee(iteratee2, 2)) : 0;
          }
          lodash.after = after;
          lodash.ary = ary;
          lodash.assign = assign;
          lodash.assignIn = assignIn;
          lodash.assignInWith = assignInWith;
          lodash.assignWith = assignWith;
          lodash.at = at;
          lodash.before = before;
          lodash.bind = bind;
          lodash.bindAll = bindAll;
          lodash.bindKey = bindKey;
          lodash.castArray = castArray;
          lodash.chain = chain;
          lodash.chunk = chunk;
          lodash.compact = compact;
          lodash.concat = concat;
          lodash.cond = cond;
          lodash.conforms = conforms;
          lodash.constant = constant;
          lodash.countBy = countBy;
          lodash.create = create;
          lodash.curry = curry;
          lodash.curryRight = curryRight;
          lodash.debounce = debounce;
          lodash.defaults = defaults;
          lodash.defaultsDeep = defaultsDeep;
          lodash.defer = defer;
          lodash.delay = delay;
          lodash.difference = difference;
          lodash.differenceBy = differenceBy;
          lodash.differenceWith = differenceWith;
          lodash.drop = drop;
          lodash.dropRight = dropRight;
          lodash.dropRightWhile = dropRightWhile;
          lodash.dropWhile = dropWhile;
          lodash.fill = fill;
          lodash.filter = filter;
          lodash.flatMap = flatMap;
          lodash.flatMapDeep = flatMapDeep;
          lodash.flatMapDepth = flatMapDepth;
          lodash.flatten = flatten;
          lodash.flattenDeep = flattenDeep;
          lodash.flattenDepth = flattenDepth;
          lodash.flip = flip;
          lodash.flow = flow;
          lodash.flowRight = flowRight;
          lodash.fromPairs = fromPairs;
          lodash.functions = functions;
          lodash.functionsIn = functionsIn;
          lodash.groupBy = groupBy;
          lodash.initial = initial;
          lodash.intersection = intersection;
          lodash.intersectionBy = intersectionBy;
          lodash.intersectionWith = intersectionWith;
          lodash.invert = invert;
          lodash.invertBy = invertBy;
          lodash.invokeMap = invokeMap;
          lodash.iteratee = iteratee;
          lodash.keyBy = keyBy;
          lodash.keys = keys;
          lodash.keysIn = keysIn;
          lodash.map = map;
          lodash.mapKeys = mapKeys;
          lodash.mapValues = mapValues;
          lodash.matches = matches;
          lodash.matchesProperty = matchesProperty;
          lodash.memoize = memoize;
          lodash.merge = merge2;
          lodash.mergeWith = mergeWith;
          lodash.method = method;
          lodash.methodOf = methodOf;
          lodash.mixin = mixin;
          lodash.negate = negate;
          lodash.nthArg = nthArg;
          lodash.omit = omit;
          lodash.omitBy = omitBy;
          lodash.once = once;
          lodash.orderBy = orderBy;
          lodash.over = over;
          lodash.overArgs = overArgs;
          lodash.overEvery = overEvery;
          lodash.overSome = overSome;
          lodash.partial = partial;
          lodash.partialRight = partialRight;
          lodash.partition = partition;
          lodash.pick = pick;
          lodash.pickBy = pickBy;
          lodash.property = property;
          lodash.propertyOf = propertyOf;
          lodash.pull = pull;
          lodash.pullAll = pullAll;
          lodash.pullAllBy = pullAllBy;
          lodash.pullAllWith = pullAllWith;
          lodash.pullAt = pullAt;
          lodash.range = range;
          lodash.rangeRight = rangeRight;
          lodash.rearg = rearg;
          lodash.reject = reject;
          lodash.remove = remove;
          lodash.rest = rest;
          lodash.reverse = reverse;
          lodash.sampleSize = sampleSize;
          lodash.set = set;
          lodash.setWith = setWith;
          lodash.shuffle = shuffle;
          lodash.slice = slice;
          lodash.sortBy = sortBy;
          lodash.sortedUniq = sortedUniq;
          lodash.sortedUniqBy = sortedUniqBy;
          lodash.split = split;
          lodash.spread = spread;
          lodash.tail = tail;
          lodash.take = take;
          lodash.takeRight = takeRight;
          lodash.takeRightWhile = takeRightWhile;
          lodash.takeWhile = takeWhile;
          lodash.tap = tap;
          lodash.throttle = throttle;
          lodash.thru = thru;
          lodash.toArray = toArray;
          lodash.toPairs = toPairs;
          lodash.toPairsIn = toPairsIn;
          lodash.toPath = toPath;
          lodash.toPlainObject = toPlainObject;
          lodash.transform = transform;
          lodash.unary = unary;
          lodash.union = union;
          lodash.unionBy = unionBy;
          lodash.unionWith = unionWith;
          lodash.uniq = uniq;
          lodash.uniqBy = uniqBy;
          lodash.uniqWith = uniqWith;
          lodash.unset = unset;
          lodash.unzip = unzip;
          lodash.unzipWith = unzipWith;
          lodash.update = update;
          lodash.updateWith = updateWith;
          lodash.values = values;
          lodash.valuesIn = valuesIn;
          lodash.without = without;
          lodash.words = words;
          lodash.wrap = wrap;
          lodash.xor = xor;
          lodash.xorBy = xorBy;
          lodash.xorWith = xorWith;
          lodash.zip = zip;
          lodash.zipObject = zipObject;
          lodash.zipObjectDeep = zipObjectDeep;
          lodash.zipWith = zipWith;
          lodash.entries = toPairs;
          lodash.entriesIn = toPairsIn;
          lodash.extend = assignIn;
          lodash.extendWith = assignInWith;
          mixin(lodash, lodash);
          lodash.add = add;
          lodash.attempt = attempt;
          lodash.camelCase = camelCase;
          lodash.capitalize = capitalize;
          lodash.ceil = ceil;
          lodash.clamp = clamp;
          lodash.clone = clone;
          lodash.cloneDeep = cloneDeep;
          lodash.cloneDeepWith = cloneDeepWith;
          lodash.cloneWith = cloneWith;
          lodash.conformsTo = conformsTo;
          lodash.deburr = deburr;
          lodash.defaultTo = defaultTo;
          lodash.divide = divide;
          lodash.endsWith = endsWith;
          lodash.eq = eq;
          lodash.escape = escape;
          lodash.escapeRegExp = escapeRegExp;
          lodash.every = every;
          lodash.find = find;
          lodash.findIndex = findIndex2;
          lodash.findKey = findKey2;
          lodash.findLast = findLast;
          lodash.findLastIndex = findLastIndex;
          lodash.findLastKey = findLastKey;
          lodash.floor = floor;
          lodash.forEach = forEach;
          lodash.forEachRight = forEachRight;
          lodash.forIn = forIn;
          lodash.forInRight = forInRight;
          lodash.forOwn = forOwn;
          lodash.forOwnRight = forOwnRight;
          lodash.get = get;
          lodash.gt = gt;
          lodash.gte = gte;
          lodash.has = has;
          lodash.hasIn = hasIn;
          lodash.head = head;
          lodash.identity = identity;
          lodash.includes = includes;
          lodash.indexOf = indexOf;
          lodash.inRange = inRange;
          lodash.invoke = invoke;
          lodash.isArguments = isArguments;
          lodash.isArray = isArray;
          lodash.isArrayBuffer = isArrayBuffer;
          lodash.isArrayLike = isArrayLike;
          lodash.isArrayLikeObject = isArrayLikeObject;
          lodash.isBoolean = isBoolean;
          lodash.isBuffer = isBuffer;
          lodash.isDate = isDate2;
          lodash.isElement = isElement;
          lodash.isEmpty = isEmpty;
          lodash.isEqual = isEqual;
          lodash.isEqualWith = isEqualWith;
          lodash.isError = isError;
          lodash.isFinite = isFinite2;
          lodash.isFunction = isFunction;
          lodash.isInteger = isInteger;
          lodash.isLength = isLength;
          lodash.isMap = isMap;
          lodash.isMatch = isMatch;
          lodash.isMatchWith = isMatchWith;
          lodash.isNaN = isNaN2;
          lodash.isNative = isNative;
          lodash.isNil = isNil;
          lodash.isNull = isNull;
          lodash.isNumber = isNumber;
          lodash.isObject = isObject;
          lodash.isObjectLike = isObjectLike;
          lodash.isPlainObject = isPlainObject;
          lodash.isRegExp = isRegExp;
          lodash.isSafeInteger = isSafeInteger;
          lodash.isSet = isSet;
          lodash.isString = isString;
          lodash.isSymbol = isSymbol;
          lodash.isTypedArray = isTypedArray;
          lodash.isUndefined = isUndefined;
          lodash.isWeakMap = isWeakMap;
          lodash.isWeakSet = isWeakSet;
          lodash.join = join;
          lodash.kebabCase = kebabCase;
          lodash.last = last;
          lodash.lastIndexOf = lastIndexOf;
          lodash.lowerCase = lowerCase;
          lodash.lowerFirst = lowerFirst;
          lodash.lt = lt;
          lodash.lte = lte;
          lodash.max = max;
          lodash.maxBy = maxBy;
          lodash.mean = mean;
          lodash.meanBy = meanBy;
          lodash.min = min;
          lodash.minBy = minBy;
          lodash.stubArray = stubArray;
          lodash.stubFalse = stubFalse;
          lodash.stubObject = stubObject;
          lodash.stubString = stubString;
          lodash.stubTrue = stubTrue;
          lodash.multiply = multiply;
          lodash.nth = nth;
          lodash.noConflict = noConflict;
          lodash.noop = noop;
          lodash.now = now;
          lodash.pad = pad;
          lodash.padEnd = padEnd;
          lodash.padStart = padStart;
          lodash.parseInt = parseInt2;
          lodash.random = random;
          lodash.reduce = reduce;
          lodash.reduceRight = reduceRight;
          lodash.repeat = repeat;
          lodash.replace = replace;
          lodash.result = result;
          lodash.round = round;
          lodash.runInContext = runInContext2;
          lodash.sample = sample;
          lodash.size = size;
          lodash.snakeCase = snakeCase;
          lodash.some = some;
          lodash.sortedIndex = sortedIndex;
          lodash.sortedIndexBy = sortedIndexBy;
          lodash.sortedIndexOf = sortedIndexOf;
          lodash.sortedLastIndex = sortedLastIndex;
          lodash.sortedLastIndexBy = sortedLastIndexBy;
          lodash.sortedLastIndexOf = sortedLastIndexOf;
          lodash.startCase = startCase;
          lodash.startsWith = startsWith;
          lodash.subtract = subtract;
          lodash.sum = sum;
          lodash.sumBy = sumBy;
          lodash.template = template;
          lodash.times = times;
          lodash.toFinite = toFinite;
          lodash.toInteger = toInteger2;
          lodash.toLength = toLength;
          lodash.toLower = toLower;
          lodash.toNumber = toNumber;
          lodash.toSafeInteger = toSafeInteger;
          lodash.toString = toString;
          lodash.toUpper = toUpper;
          lodash.trim = trim;
          lodash.trimEnd = trimEnd;
          lodash.trimStart = trimStart;
          lodash.truncate = truncate;
          lodash.unescape = unescape;
          lodash.uniqueId = uniqueId;
          lodash.upperCase = upperCase;
          lodash.upperFirst = upperFirst;
          lodash.each = forEach;
          lodash.eachRight = forEachRight;
          lodash.first = head;
          mixin(lodash, function() {
            var source = {};
            baseForOwn(lodash, function(func, methodName) {
              if (!hasOwnProperty.call(lodash.prototype, methodName)) {
                source[methodName] = func;
              }
            });
            return source;
          }(), {"chain": false});
          lodash.VERSION = VERSION;
          arrayEach(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function(methodName) {
            lodash[methodName].placeholder = lodash;
          });
          arrayEach(["drop", "take"], function(methodName, index) {
            LazyWrapper.prototype[methodName] = function(n) {
              n = n === undefined2 ? 1 : nativeMax(toInteger2(n), 0);
              var result2 = this.__filtered__ && !index ? new LazyWrapper(this) : this.clone();
              if (result2.__filtered__) {
                result2.__takeCount__ = nativeMin(n, result2.__takeCount__);
              } else {
                result2.__views__.push({
                  "size": nativeMin(n, MAX_ARRAY_LENGTH),
                  "type": methodName + (result2.__dir__ < 0 ? "Right" : "")
                });
              }
              return result2;
            };
            LazyWrapper.prototype[methodName + "Right"] = function(n) {
              return this.reverse()[methodName](n).reverse();
            };
          });
          arrayEach(["filter", "map", "takeWhile"], function(methodName, index) {
            var type = index + 1, isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;
            LazyWrapper.prototype[methodName] = function(iteratee2) {
              var result2 = this.clone();
              result2.__iteratees__.push({
                "iteratee": getIteratee(iteratee2, 3),
                "type": type
              });
              result2.__filtered__ = result2.__filtered__ || isFilter;
              return result2;
            };
          });
          arrayEach(["head", "last"], function(methodName, index) {
            var takeName = "take" + (index ? "Right" : "");
            LazyWrapper.prototype[methodName] = function() {
              return this[takeName](1).value()[0];
            };
          });
          arrayEach(["initial", "tail"], function(methodName, index) {
            var dropName = "drop" + (index ? "" : "Right");
            LazyWrapper.prototype[methodName] = function() {
              return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
            };
          });
          LazyWrapper.prototype.compact = function() {
            return this.filter(identity);
          };
          LazyWrapper.prototype.find = function(predicate) {
            return this.filter(predicate).head();
          };
          LazyWrapper.prototype.findLast = function(predicate) {
            return this.reverse().find(predicate);
          };
          LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
            if (typeof path == "function") {
              return new LazyWrapper(this);
            }
            return this.map(function(value) {
              return baseInvoke(value, path, args);
            });
          });
          LazyWrapper.prototype.reject = function(predicate) {
            return this.filter(negate(getIteratee(predicate)));
          };
          LazyWrapper.prototype.slice = function(start, end) {
            start = toInteger2(start);
            var result2 = this;
            if (result2.__filtered__ && (start > 0 || end < 0)) {
              return new LazyWrapper(result2);
            }
            if (start < 0) {
              result2 = result2.takeRight(-start);
            } else if (start) {
              result2 = result2.drop(start);
            }
            if (end !== undefined2) {
              end = toInteger2(end);
              result2 = end < 0 ? result2.dropRight(-end) : result2.take(end - start);
            }
            return result2;
          };
          LazyWrapper.prototype.takeRightWhile = function(predicate) {
            return this.reverse().takeWhile(predicate).reverse();
          };
          LazyWrapper.prototype.toArray = function() {
            return this.take(MAX_ARRAY_LENGTH);
          };
          baseForOwn(LazyWrapper.prototype, function(func, methodName) {
            var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName), isTaker = /^(?:head|last)$/.test(methodName), lodashFunc = lodash[isTaker ? "take" + (methodName == "last" ? "Right" : "") : methodName], retUnwrapped = isTaker || /^find/.test(methodName);
            if (!lodashFunc) {
              return;
            }
            lodash.prototype[methodName] = function() {
              var value = this.__wrapped__, args = isTaker ? [1] : arguments, isLazy = value instanceof LazyWrapper, iteratee2 = args[0], useLazy = isLazy || isArray(value);
              var interceptor = function(value2) {
                var result3 = lodashFunc.apply(lodash, arrayPush([value2], args));
                return isTaker && chainAll ? result3[0] : result3;
              };
              if (useLazy && checkIteratee && typeof iteratee2 == "function" && iteratee2.length != 1) {
                isLazy = useLazy = false;
              }
              var chainAll = this.__chain__, isHybrid = !!this.__actions__.length, isUnwrapped = retUnwrapped && !chainAll, onlyLazy = isLazy && !isHybrid;
              if (!retUnwrapped && useLazy) {
                value = onlyLazy ? value : new LazyWrapper(this);
                var result2 = func.apply(value, args);
                result2.__actions__.push({"func": thru, "args": [interceptor], "thisArg": undefined2});
                return new LodashWrapper(result2, chainAll);
              }
              if (isUnwrapped && onlyLazy) {
                return func.apply(this, args);
              }
              result2 = this.thru(interceptor);
              return isUnwrapped ? isTaker ? result2.value()[0] : result2.value() : result2;
            };
          });
          arrayEach(["pop", "push", "shift", "sort", "splice", "unshift"], function(methodName) {
            var func = arrayProto[methodName], chainName = /^(?:push|sort|unshift)$/.test(methodName) ? "tap" : "thru", retUnwrapped = /^(?:pop|shift)$/.test(methodName);
            lodash.prototype[methodName] = function() {
              var args = arguments;
              if (retUnwrapped && !this.__chain__) {
                var value = this.value();
                return func.apply(isArray(value) ? value : [], args);
              }
              return this[chainName](function(value2) {
                return func.apply(isArray(value2) ? value2 : [], args);
              });
            };
          });
          baseForOwn(LazyWrapper.prototype, function(func, methodName) {
            var lodashFunc = lodash[methodName];
            if (lodashFunc) {
              var key = lodashFunc.name + "";
              if (!hasOwnProperty.call(realNames, key)) {
                realNames[key] = [];
              }
              realNames[key].push({"name": methodName, "func": lodashFunc});
            }
          });
          realNames[createHybrid(undefined2, WRAP_BIND_KEY_FLAG).name] = [{
            "name": "wrapper",
            "func": undefined2
          }];
          LazyWrapper.prototype.clone = lazyClone;
          LazyWrapper.prototype.reverse = lazyReverse;
          LazyWrapper.prototype.value = lazyValue;
          lodash.prototype.at = wrapperAt;
          lodash.prototype.chain = wrapperChain;
          lodash.prototype.commit = wrapperCommit;
          lodash.prototype.next = wrapperNext;
          lodash.prototype.plant = wrapperPlant;
          lodash.prototype.reverse = wrapperReverse;
          lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;
          lodash.prototype.first = lodash.prototype.head;
          if (symIterator) {
            lodash.prototype[symIterator] = wrapperToIterator;
          }
          return lodash;
        };
        var _ = runInContext();
        if (typeof define == "function" && typeof define.amd == "object" && define.amd) {
          root._ = _;
          define(function() {
            return _;
          });
        } else if (freeModule) {
          (freeModule.exports = _)._ = _;
          freeExports._ = _;
        } else {
          root._ = _;
        }
      }).call(exports);
    }
  });

  // node_modules/vditor/dist/index.min.js
  var require_index_min = __commonJS({
    "node_modules/vditor/dist/index.min.js"(exports, module) {
      !function(e2, t4) {
        typeof exports == "object" && typeof module == "object" ? module.exports = t4() : typeof define == "function" && define.amd ? define([], t4) : typeof exports == "object" ? exports.Vditor = t4() : e2.Vditor = t4();
      }(exports, () => (() => {
        var e2 = {694: (e3) => {
          var t5 = function() {
            this.Diff_Timeout = 1, this.Diff_EditCost = 4, this.Match_Threshold = 0.5, this.Match_Distance = 1e3, this.Patch_DeleteThreshold = 0.5, this.Patch_Margin = 4, this.Match_MaxBits = 32;
          }, n2 = -1;
          t5.Diff = function(e4, t6) {
            return [e4, t6];
          }, t5.prototype.diff_main = function(e4, n3, r2, i2) {
            i2 === void 0 && (i2 = this.Diff_Timeout <= 0 ? Number.MAX_VALUE : new Date().getTime() + 1e3 * this.Diff_Timeout);
            var o = i2;
            if (e4 == null || n3 == null)
              throw new Error("Null input. (diff_main)");
            if (e4 == n3)
              return e4 ? [new t5.Diff(0, e4)] : [];
            r2 === void 0 && (r2 = true);
            var a3 = r2, l = this.diff_commonPrefix(e4, n3), s3 = e4.substring(0, l);
            e4 = e4.substring(l), n3 = n3.substring(l), l = this.diff_commonSuffix(e4, n3);
            var d3 = e4.substring(e4.length - l);
            e4 = e4.substring(0, e4.length - l), n3 = n3.substring(0, n3.length - l);
            var c2 = this.diff_compute_(e4, n3, a3, o);
            return s3 && c2.unshift(new t5.Diff(0, s3)), d3 && c2.push(new t5.Diff(0, d3)), this.diff_cleanupMerge(c2), c2;
          }, t5.prototype.diff_compute_ = function(e4, r2, i2, o) {
            var a3;
            if (!e4)
              return [new t5.Diff(1, r2)];
            if (!r2)
              return [new t5.Diff(n2, e4)];
            var l = e4.length > r2.length ? e4 : r2, s3 = e4.length > r2.length ? r2 : e4, d3 = l.indexOf(s3);
            if (d3 != -1)
              return a3 = [new t5.Diff(1, l.substring(0, d3)), new t5.Diff(0, s3), new t5.Diff(1, l.substring(d3 + s3.length))], e4.length > r2.length && (a3[0][0] = a3[2][0] = n2), a3;
            if (s3.length == 1)
              return [new t5.Diff(n2, e4), new t5.Diff(1, r2)];
            var c2 = this.diff_halfMatch_(e4, r2);
            if (c2) {
              var u2 = c2[0], p = c2[1], m3 = c2[2], f = c2[3], h3 = c2[4], v = this.diff_main(u2, m3, i2, o), g = this.diff_main(p, f, i2, o);
              return v.concat([new t5.Diff(0, h3)], g);
            }
            return i2 && e4.length > 100 && r2.length > 100 ? this.diff_lineMode_(e4, r2, o) : this.diff_bisect_(e4, r2, o);
          }, t5.prototype.diff_lineMode_ = function(e4, r2, i2) {
            var o = this.diff_linesToChars_(e4, r2);
            e4 = o.chars1, r2 = o.chars2;
            var a3 = o.lineArray, l = this.diff_main(e4, r2, false, i2);
            this.diff_charsToLines_(l, a3), this.diff_cleanupSemantic(l), l.push(new t5.Diff(0, ""));
            for (var s3 = 0, d3 = 0, c2 = 0, u2 = "", p = ""; s3 < l.length; ) {
              switch (l[s3][0]) {
                case 1:
                  c2++, p += l[s3][1];
                  break;
                case n2:
                  d3++, u2 += l[s3][1];
                  break;
                case 0:
                  if (d3 >= 1 && c2 >= 1) {
                    l.splice(s3 - d3 - c2, d3 + c2), s3 = s3 - d3 - c2;
                    for (var m3 = this.diff_main(u2, p, false, i2), f = m3.length - 1; f >= 0; f--)
                      l.splice(s3, 0, m3[f]);
                    s3 += m3.length;
                  }
                  c2 = 0, d3 = 0, u2 = "", p = "";
              }
              s3++;
            }
            return l.pop(), l;
          }, t5.prototype.diff_bisect_ = function(e4, r2, i2) {
            for (var o = e4.length, a3 = r2.length, l = Math.ceil((o + a3) / 2), s3 = l, d3 = 2 * l, c2 = new Array(d3), u2 = new Array(d3), p = 0; p < d3; p++)
              c2[p] = -1, u2[p] = -1;
            c2[s3 + 1] = 0, u2[s3 + 1] = 0;
            for (var m3 = o - a3, f = m3 % 2 != 0, h3 = 0, v = 0, g = 0, y3 = 0, b2 = 0; b2 < l && !(new Date().getTime() > i2); b2++) {
              for (var w2 = -b2 + h3; w2 <= b2 - v; w2 += 2) {
                for (var E2 = s3 + w2, k2 = (T2 = w2 == -b2 || w2 != b2 && c2[E2 - 1] < c2[E2 + 1] ? c2[E2 + 1] : c2[E2 - 1] + 1) - w2; T2 < o && k2 < a3 && e4.charAt(T2) == r2.charAt(k2); )
                  T2++, k2++;
                if (c2[E2] = T2, T2 > o)
                  v += 2;
                else if (k2 > a3)
                  h3 += 2;
                else if (f) {
                  if ((C = s3 + m3 - w2) >= 0 && C < d3 && u2[C] != -1) {
                    if (T2 >= (L2 = o - u2[C]))
                      return this.diff_bisectSplit_(e4, r2, T2, k2, i2);
                  }
                }
              }
              for (var S3 = -b2 + g; S3 <= b2 - y3; S3 += 2) {
                for (var L2, C = s3 + S3, M3 = (L2 = S3 == -b2 || S3 != b2 && u2[C - 1] < u2[C + 1] ? u2[C + 1] : u2[C - 1] + 1) - S3; L2 < o && M3 < a3 && e4.charAt(o - L2 - 1) == r2.charAt(a3 - M3 - 1); )
                  L2++, M3++;
                if (u2[C] = L2, L2 > o)
                  y3 += 2;
                else if (M3 > a3)
                  g += 2;
                else if (!f) {
                  if ((E2 = s3 + m3 - S3) >= 0 && E2 < d3 && c2[E2] != -1) {
                    var T2;
                    k2 = s3 + (T2 = c2[E2]) - E2;
                    if (T2 >= (L2 = o - L2))
                      return this.diff_bisectSplit_(e4, r2, T2, k2, i2);
                  }
                }
              }
            }
            return [new t5.Diff(n2, e4), new t5.Diff(1, r2)];
          }, t5.prototype.diff_bisectSplit_ = function(e4, t6, n3, r2, i2) {
            var o = e4.substring(0, n3), a3 = t6.substring(0, r2), l = e4.substring(n3), s3 = t6.substring(r2), d3 = this.diff_main(o, a3, false, i2), c2 = this.diff_main(l, s3, false, i2);
            return d3.concat(c2);
          }, t5.prototype.diff_linesToChars_ = function(e4, t6) {
            var n3 = [], r2 = {};
            function i2(e5) {
              for (var t7 = "", i3 = 0, a4 = -1, l = n3.length; a4 < e5.length - 1; ) {
                (a4 = e5.indexOf("\n", i3)) == -1 && (a4 = e5.length - 1);
                var s3 = e5.substring(i3, a4 + 1);
                (r2.hasOwnProperty ? r2.hasOwnProperty(s3) : r2[s3] !== void 0) ? t7 += String.fromCharCode(r2[s3]) : (l == o && (s3 = e5.substring(i3), a4 = e5.length), t7 += String.fromCharCode(l), r2[s3] = l, n3[l++] = s3), i3 = a4 + 1;
              }
              return t7;
            }
            n3[0] = "";
            var o = 4e4, a3 = i2(e4);
            return o = 65535, {chars1: a3, chars2: i2(t6), lineArray: n3};
          }, t5.prototype.diff_charsToLines_ = function(e4, t6) {
            for (var n3 = 0; n3 < e4.length; n3++) {
              for (var r2 = e4[n3][1], i2 = [], o = 0; o < r2.length; o++)
                i2[o] = t6[r2.charCodeAt(o)];
              e4[n3][1] = i2.join("");
            }
          }, t5.prototype.diff_commonPrefix = function(e4, t6) {
            if (!e4 || !t6 || e4.charAt(0) != t6.charAt(0))
              return 0;
            for (var n3 = 0, r2 = Math.min(e4.length, t6.length), i2 = r2, o = 0; n3 < i2; )
              e4.substring(o, i2) == t6.substring(o, i2) ? o = n3 = i2 : r2 = i2, i2 = Math.floor((r2 - n3) / 2 + n3);
            return i2;
          }, t5.prototype.diff_commonSuffix = function(e4, t6) {
            if (!e4 || !t6 || e4.charAt(e4.length - 1) != t6.charAt(t6.length - 1))
              return 0;
            for (var n3 = 0, r2 = Math.min(e4.length, t6.length), i2 = r2, o = 0; n3 < i2; )
              e4.substring(e4.length - i2, e4.length - o) == t6.substring(t6.length - i2, t6.length - o) ? o = n3 = i2 : r2 = i2, i2 = Math.floor((r2 - n3) / 2 + n3);
            return i2;
          }, t5.prototype.diff_commonOverlap_ = function(e4, t6) {
            var n3 = e4.length, r2 = t6.length;
            if (n3 == 0 || r2 == 0)
              return 0;
            n3 > r2 ? e4 = e4.substring(n3 - r2) : n3 < r2 && (t6 = t6.substring(0, n3));
            var i2 = Math.min(n3, r2);
            if (e4 == t6)
              return i2;
            for (var o = 0, a3 = 1; ; ) {
              var l = e4.substring(i2 - a3), s3 = t6.indexOf(l);
              if (s3 == -1)
                return o;
              a3 += s3, s3 != 0 && e4.substring(i2 - a3) != t6.substring(0, a3) || (o = a3, a3++);
            }
          }, t5.prototype.diff_halfMatch_ = function(e4, t6) {
            if (this.Diff_Timeout <= 0)
              return null;
            var n3 = e4.length > t6.length ? e4 : t6, r2 = e4.length > t6.length ? t6 : e4;
            if (n3.length < 4 || 2 * r2.length < n3.length)
              return null;
            var i2 = this;
            function o(e5, t7, n4) {
              for (var r3, o2, a4, l2, s4 = e5.substring(n4, n4 + Math.floor(e5.length / 4)), d4 = -1, c3 = ""; (d4 = t7.indexOf(s4, d4 + 1)) != -1; ) {
                var u3 = i2.diff_commonPrefix(e5.substring(n4), t7.substring(d4)), p2 = i2.diff_commonSuffix(e5.substring(0, n4), t7.substring(0, d4));
                c3.length < p2 + u3 && (c3 = t7.substring(d4 - p2, d4) + t7.substring(d4, d4 + u3), r3 = e5.substring(0, n4 - p2), o2 = e5.substring(n4 + u3), a4 = t7.substring(0, d4 - p2), l2 = t7.substring(d4 + u3));
              }
              return 2 * c3.length >= e5.length ? [r3, o2, a4, l2, c3] : null;
            }
            var a3, l, s3, d3, c2, u2 = o(n3, r2, Math.ceil(n3.length / 4)), p = o(n3, r2, Math.ceil(n3.length / 2));
            return u2 || p ? (a3 = p ? u2 && u2[4].length > p[4].length ? u2 : p : u2, e4.length > t6.length ? (l = a3[0], s3 = a3[1], d3 = a3[2], c2 = a3[3]) : (d3 = a3[0], c2 = a3[1], l = a3[2], s3 = a3[3]), [l, s3, d3, c2, a3[4]]) : null;
          }, t5.prototype.diff_cleanupSemantic = function(e4) {
            for (var r2 = false, i2 = [], o = 0, a3 = null, l = 0, s3 = 0, d3 = 0, c2 = 0, u2 = 0; l < e4.length; )
              e4[l][0] == 0 ? (i2[o++] = l, s3 = c2, d3 = u2, c2 = 0, u2 = 0, a3 = e4[l][1]) : (e4[l][0] == 1 ? c2 += e4[l][1].length : u2 += e4[l][1].length, a3 && a3.length <= Math.max(s3, d3) && a3.length <= Math.max(c2, u2) && (e4.splice(i2[o - 1], 0, new t5.Diff(n2, a3)), e4[i2[o - 1] + 1][0] = 1, o--, l = --o > 0 ? i2[o - 1] : -1, s3 = 0, d3 = 0, c2 = 0, u2 = 0, a3 = null, r2 = true)), l++;
            for (r2 && this.diff_cleanupMerge(e4), this.diff_cleanupSemanticLossless(e4), l = 1; l < e4.length; ) {
              if (e4[l - 1][0] == n2 && e4[l][0] == 1) {
                var p = e4[l - 1][1], m3 = e4[l][1], f = this.diff_commonOverlap_(p, m3), h3 = this.diff_commonOverlap_(m3, p);
                f >= h3 ? (f >= p.length / 2 || f >= m3.length / 2) && (e4.splice(l, 0, new t5.Diff(0, m3.substring(0, f))), e4[l - 1][1] = p.substring(0, p.length - f), e4[l + 1][1] = m3.substring(f), l++) : (h3 >= p.length / 2 || h3 >= m3.length / 2) && (e4.splice(l, 0, new t5.Diff(0, p.substring(0, h3))), e4[l - 1][0] = 1, e4[l - 1][1] = m3.substring(0, m3.length - h3), e4[l + 1][0] = n2, e4[l + 1][1] = p.substring(h3), l++), l++;
              }
              l++;
            }
          }, t5.prototype.diff_cleanupSemanticLossless = function(e4) {
            function n3(e5, n4) {
              if (!e5 || !n4)
                return 6;
              var r3 = e5.charAt(e5.length - 1), i3 = n4.charAt(0), o2 = r3.match(t5.nonAlphaNumericRegex_), a4 = i3.match(t5.nonAlphaNumericRegex_), l2 = o2 && r3.match(t5.whitespaceRegex_), s4 = a4 && i3.match(t5.whitespaceRegex_), d4 = l2 && r3.match(t5.linebreakRegex_), c3 = s4 && i3.match(t5.linebreakRegex_), u3 = d4 && e5.match(t5.blanklineEndRegex_), p2 = c3 && n4.match(t5.blanklineStartRegex_);
              return u3 || p2 ? 5 : d4 || c3 ? 4 : o2 && !l2 && s4 ? 3 : l2 || s4 ? 2 : o2 || a4 ? 1 : 0;
            }
            for (var r2 = 1; r2 < e4.length - 1; ) {
              if (e4[r2 - 1][0] == 0 && e4[r2 + 1][0] == 0) {
                var i2 = e4[r2 - 1][1], o = e4[r2][1], a3 = e4[r2 + 1][1], l = this.diff_commonSuffix(i2, o);
                if (l) {
                  var s3 = o.substring(o.length - l);
                  i2 = i2.substring(0, i2.length - l), o = s3 + o.substring(0, o.length - l), a3 = s3 + a3;
                }
                for (var d3 = i2, c2 = o, u2 = a3, p = n3(i2, o) + n3(o, a3); o.charAt(0) === a3.charAt(0); ) {
                  i2 += o.charAt(0), o = o.substring(1) + a3.charAt(0), a3 = a3.substring(1);
                  var m3 = n3(i2, o) + n3(o, a3);
                  m3 >= p && (p = m3, d3 = i2, c2 = o, u2 = a3);
                }
                e4[r2 - 1][1] != d3 && (d3 ? e4[r2 - 1][1] = d3 : (e4.splice(r2 - 1, 1), r2--), e4[r2][1] = c2, u2 ? e4[r2 + 1][1] = u2 : (e4.splice(r2 + 1, 1), r2--));
              }
              r2++;
            }
          }, t5.nonAlphaNumericRegex_ = /[^a-zA-Z0-9]/, t5.whitespaceRegex_ = /\s/, t5.linebreakRegex_ = /[\r\n]/, t5.blanklineEndRegex_ = /\n\r?\n$/, t5.blanklineStartRegex_ = /^\r?\n\r?\n/, t5.prototype.diff_cleanupEfficiency = function(e4) {
            for (var r2 = false, i2 = [], o = 0, a3 = null, l = 0, s3 = false, d3 = false, c2 = false, u2 = false; l < e4.length; )
              e4[l][0] == 0 ? (e4[l][1].length < this.Diff_EditCost && (c2 || u2) ? (i2[o++] = l, s3 = c2, d3 = u2, a3 = e4[l][1]) : (o = 0, a3 = null), c2 = u2 = false) : (e4[l][0] == n2 ? u2 = true : c2 = true, a3 && (s3 && d3 && c2 && u2 || a3.length < this.Diff_EditCost / 2 && s3 + d3 + c2 + u2 == 3) && (e4.splice(i2[o - 1], 0, new t5.Diff(n2, a3)), e4[i2[o - 1] + 1][0] = 1, o--, a3 = null, s3 && d3 ? (c2 = u2 = true, o = 0) : (l = --o > 0 ? i2[o - 1] : -1, c2 = u2 = false), r2 = true)), l++;
            r2 && this.diff_cleanupMerge(e4);
          }, t5.prototype.diff_cleanupMerge = function(e4) {
            e4.push(new t5.Diff(0, ""));
            for (var r2, i2 = 0, o = 0, a3 = 0, l = "", s3 = ""; i2 < e4.length; )
              switch (e4[i2][0]) {
                case 1:
                  a3++, s3 += e4[i2][1], i2++;
                  break;
                case n2:
                  o++, l += e4[i2][1], i2++;
                  break;
                case 0:
                  o + a3 > 1 ? (o !== 0 && a3 !== 0 && ((r2 = this.diff_commonPrefix(s3, l)) !== 0 && (i2 - o - a3 > 0 && e4[i2 - o - a3 - 1][0] == 0 ? e4[i2 - o - a3 - 1][1] += s3.substring(0, r2) : (e4.splice(0, 0, new t5.Diff(0, s3.substring(0, r2))), i2++), s3 = s3.substring(r2), l = l.substring(r2)), (r2 = this.diff_commonSuffix(s3, l)) !== 0 && (e4[i2][1] = s3.substring(s3.length - r2) + e4[i2][1], s3 = s3.substring(0, s3.length - r2), l = l.substring(0, l.length - r2))), i2 -= o + a3, e4.splice(i2, o + a3), l.length && (e4.splice(i2, 0, new t5.Diff(n2, l)), i2++), s3.length && (e4.splice(i2, 0, new t5.Diff(1, s3)), i2++), i2++) : i2 !== 0 && e4[i2 - 1][0] == 0 ? (e4[i2 - 1][1] += e4[i2][1], e4.splice(i2, 1)) : i2++, a3 = 0, o = 0, l = "", s3 = "";
              }
            e4[e4.length - 1][1] === "" && e4.pop();
            var d3 = false;
            for (i2 = 1; i2 < e4.length - 1; )
              e4[i2 - 1][0] == 0 && e4[i2 + 1][0] == 0 && (e4[i2][1].substring(e4[i2][1].length - e4[i2 - 1][1].length) == e4[i2 - 1][1] ? (e4[i2][1] = e4[i2 - 1][1] + e4[i2][1].substring(0, e4[i2][1].length - e4[i2 - 1][1].length), e4[i2 + 1][1] = e4[i2 - 1][1] + e4[i2 + 1][1], e4.splice(i2 - 1, 1), d3 = true) : e4[i2][1].substring(0, e4[i2 + 1][1].length) == e4[i2 + 1][1] && (e4[i2 - 1][1] += e4[i2 + 1][1], e4[i2][1] = e4[i2][1].substring(e4[i2 + 1][1].length) + e4[i2 + 1][1], e4.splice(i2 + 1, 1), d3 = true)), i2++;
            d3 && this.diff_cleanupMerge(e4);
          }, t5.prototype.diff_xIndex = function(e4, t6) {
            var r2, i2 = 0, o = 0, a3 = 0, l = 0;
            for (r2 = 0; r2 < e4.length && (e4[r2][0] !== 1 && (i2 += e4[r2][1].length), e4[r2][0] !== n2 && (o += e4[r2][1].length), !(i2 > t6)); r2++)
              a3 = i2, l = o;
            return e4.length != r2 && e4[r2][0] === n2 ? l : l + (t6 - a3);
          }, t5.prototype.diff_prettyHtml = function(e4) {
            for (var t6 = [], r2 = /&/g, i2 = /</g, o = />/g, a3 = /\n/g, l = 0; l < e4.length; l++) {
              var s3 = e4[l][0], d3 = e4[l][1].replace(r2, "&amp;").replace(i2, "&lt;").replace(o, "&gt;").replace(a3, "&para;<br>");
              switch (s3) {
                case 1:
                  t6[l] = '<ins style="background:#e6ffe6;">' + d3 + "</ins>";
                  break;
                case n2:
                  t6[l] = '<del style="background:#ffe6e6;">' + d3 + "</del>";
                  break;
                case 0:
                  t6[l] = "<span>" + d3 + "</span>";
              }
            }
            return t6.join("");
          }, t5.prototype.diff_text1 = function(e4) {
            for (var t6 = [], n3 = 0; n3 < e4.length; n3++)
              e4[n3][0] !== 1 && (t6[n3] = e4[n3][1]);
            return t6.join("");
          }, t5.prototype.diff_text2 = function(e4) {
            for (var t6 = [], r2 = 0; r2 < e4.length; r2++)
              e4[r2][0] !== n2 && (t6[r2] = e4[r2][1]);
            return t6.join("");
          }, t5.prototype.diff_levenshtein = function(e4) {
            for (var t6 = 0, r2 = 0, i2 = 0, o = 0; o < e4.length; o++) {
              var a3 = e4[o][0], l = e4[o][1];
              switch (a3) {
                case 1:
                  r2 += l.length;
                  break;
                case n2:
                  i2 += l.length;
                  break;
                case 0:
                  t6 += Math.max(r2, i2), r2 = 0, i2 = 0;
              }
            }
            return t6 += Math.max(r2, i2);
          }, t5.prototype.diff_toDelta = function(e4) {
            for (var t6 = [], r2 = 0; r2 < e4.length; r2++)
              switch (e4[r2][0]) {
                case 1:
                  t6[r2] = "+" + encodeURI(e4[r2][1]);
                  break;
                case n2:
                  t6[r2] = "-" + e4[r2][1].length;
                  break;
                case 0:
                  t6[r2] = "=" + e4[r2][1].length;
              }
            return t6.join("	").replace(/%20/g, " ");
          }, t5.prototype.diff_fromDelta = function(e4, r2) {
            for (var i2 = [], o = 0, a3 = 0, l = r2.split(/\t/g), s3 = 0; s3 < l.length; s3++) {
              var d3 = l[s3].substring(1);
              switch (l[s3].charAt(0)) {
                case "+":
                  try {
                    i2[o++] = new t5.Diff(1, decodeURI(d3));
                  } catch (e5) {
                    throw new Error("Illegal escape in diff_fromDelta: " + d3);
                  }
                  break;
                case "-":
                case "=":
                  var c2 = parseInt(d3, 10);
                  if (isNaN(c2) || c2 < 0)
                    throw new Error("Invalid number in diff_fromDelta: " + d3);
                  var u2 = e4.substring(a3, a3 += c2);
                  l[s3].charAt(0) == "=" ? i2[o++] = new t5.Diff(0, u2) : i2[o++] = new t5.Diff(n2, u2);
                  break;
                default:
                  if (l[s3])
                    throw new Error("Invalid diff operation in diff_fromDelta: " + l[s3]);
              }
            }
            if (a3 != e4.length)
              throw new Error("Delta length (" + a3 + ") does not equal source text length (" + e4.length + ").");
            return i2;
          }, t5.prototype.match_main = function(e4, t6, n3) {
            if (e4 == null || t6 == null || n3 == null)
              throw new Error("Null input. (match_main)");
            return n3 = Math.max(0, Math.min(n3, e4.length)), e4 == t6 ? 0 : e4.length ? e4.substring(n3, n3 + t6.length) == t6 ? n3 : this.match_bitap_(e4, t6, n3) : -1;
          }, t5.prototype.match_bitap_ = function(e4, t6, n3) {
            if (t6.length > this.Match_MaxBits)
              throw new Error("Pattern too long for this browser.");
            var r2 = this.match_alphabet_(t6), i2 = this;
            function o(e5, r3) {
              var o2 = e5 / t6.length, a4 = Math.abs(n3 - r3);
              return i2.Match_Distance ? o2 + a4 / i2.Match_Distance : a4 ? 1 : o2;
            }
            var a3 = this.Match_Threshold, l = e4.indexOf(t6, n3);
            l != -1 && (a3 = Math.min(o(0, l), a3), (l = e4.lastIndexOf(t6, n3 + t6.length)) != -1 && (a3 = Math.min(o(0, l), a3)));
            var s3, d3, c2 = 1 << t6.length - 1;
            l = -1;
            for (var u2, p = t6.length + e4.length, m3 = 0; m3 < t6.length; m3++) {
              for (s3 = 0, d3 = p; s3 < d3; )
                o(m3, n3 + d3) <= a3 ? s3 = d3 : p = d3, d3 = Math.floor((p - s3) / 2 + s3);
              p = d3;
              var f = Math.max(1, n3 - d3 + 1), h3 = Math.min(n3 + d3, e4.length) + t6.length, v = Array(h3 + 2);
              v[h3 + 1] = (1 << m3) - 1;
              for (var g = h3; g >= f; g--) {
                var y3 = r2[e4.charAt(g - 1)];
                if (v[g] = m3 === 0 ? (v[g + 1] << 1 | 1) & y3 : (v[g + 1] << 1 | 1) & y3 | (u2[g + 1] | u2[g]) << 1 | 1 | u2[g + 1], v[g] & c2) {
                  var b2 = o(m3, g - 1);
                  if (b2 <= a3) {
                    if (a3 = b2, !((l = g - 1) > n3))
                      break;
                    f = Math.max(1, 2 * n3 - l);
                  }
                }
              }
              if (o(m3 + 1, n3) > a3)
                break;
              u2 = v;
            }
            return l;
          }, t5.prototype.match_alphabet_ = function(e4) {
            for (var t6 = {}, n3 = 0; n3 < e4.length; n3++)
              t6[e4.charAt(n3)] = 0;
            for (n3 = 0; n3 < e4.length; n3++)
              t6[e4.charAt(n3)] |= 1 << e4.length - n3 - 1;
            return t6;
          }, t5.prototype.patch_addContext_ = function(e4, n3) {
            if (n3.length != 0) {
              if (e4.start2 === null)
                throw Error("patch not initialized");
              for (var r2 = n3.substring(e4.start2, e4.start2 + e4.length1), i2 = 0; n3.indexOf(r2) != n3.lastIndexOf(r2) && r2.length < this.Match_MaxBits - this.Patch_Margin - this.Patch_Margin; )
                i2 += this.Patch_Margin, r2 = n3.substring(e4.start2 - i2, e4.start2 + e4.length1 + i2);
              i2 += this.Patch_Margin;
              var o = n3.substring(e4.start2 - i2, e4.start2);
              o && e4.diffs.unshift(new t5.Diff(0, o));
              var a3 = n3.substring(e4.start2 + e4.length1, e4.start2 + e4.length1 + i2);
              a3 && e4.diffs.push(new t5.Diff(0, a3)), e4.start1 -= o.length, e4.start2 -= o.length, e4.length1 += o.length + a3.length, e4.length2 += o.length + a3.length;
            }
          }, t5.prototype.patch_make = function(e4, r2, i2) {
            var o, a3;
            if (typeof e4 == "string" && typeof r2 == "string" && i2 === void 0)
              o = e4, (a3 = this.diff_main(o, r2, true)).length > 2 && (this.diff_cleanupSemantic(a3), this.diff_cleanupEfficiency(a3));
            else if (e4 && typeof e4 == "object" && r2 === void 0 && i2 === void 0)
              a3 = e4, o = this.diff_text1(a3);
            else if (typeof e4 == "string" && r2 && typeof r2 == "object" && i2 === void 0)
              o = e4, a3 = r2;
            else {
              if (typeof e4 != "string" || typeof r2 != "string" || !i2 || typeof i2 != "object")
                throw new Error("Unknown call format to patch_make.");
              o = e4, a3 = i2;
            }
            if (a3.length === 0)
              return [];
            for (var l = [], s3 = new t5.patch_obj(), d3 = 0, c2 = 0, u2 = 0, p = o, m3 = o, f = 0; f < a3.length; f++) {
              var h3 = a3[f][0], v = a3[f][1];
              switch (d3 || h3 === 0 || (s3.start1 = c2, s3.start2 = u2), h3) {
                case 1:
                  s3.diffs[d3++] = a3[f], s3.length2 += v.length, m3 = m3.substring(0, u2) + v + m3.substring(u2);
                  break;
                case n2:
                  s3.length1 += v.length, s3.diffs[d3++] = a3[f], m3 = m3.substring(0, u2) + m3.substring(u2 + v.length);
                  break;
                case 0:
                  v.length <= 2 * this.Patch_Margin && d3 && a3.length != f + 1 ? (s3.diffs[d3++] = a3[f], s3.length1 += v.length, s3.length2 += v.length) : v.length >= 2 * this.Patch_Margin && d3 && (this.patch_addContext_(s3, p), l.push(s3), s3 = new t5.patch_obj(), d3 = 0, p = m3, c2 = u2);
              }
              h3 !== 1 && (c2 += v.length), h3 !== n2 && (u2 += v.length);
            }
            return d3 && (this.patch_addContext_(s3, p), l.push(s3)), l;
          }, t5.prototype.patch_deepCopy = function(e4) {
            for (var n3 = [], r2 = 0; r2 < e4.length; r2++) {
              var i2 = e4[r2], o = new t5.patch_obj();
              o.diffs = [];
              for (var a3 = 0; a3 < i2.diffs.length; a3++)
                o.diffs[a3] = new t5.Diff(i2.diffs[a3][0], i2.diffs[a3][1]);
              o.start1 = i2.start1, o.start2 = i2.start2, o.length1 = i2.length1, o.length2 = i2.length2, n3[r2] = o;
            }
            return n3;
          }, t5.prototype.patch_apply = function(e4, t6) {
            if (e4.length == 0)
              return [t6, []];
            e4 = this.patch_deepCopy(e4);
            var r2 = this.patch_addPadding(e4);
            t6 = r2 + t6 + r2, this.patch_splitMax(e4);
            for (var i2 = 0, o = [], a3 = 0; a3 < e4.length; a3++) {
              var l, s3, d3 = e4[a3].start2 + i2, c2 = this.diff_text1(e4[a3].diffs), u2 = -1;
              if (c2.length > this.Match_MaxBits ? (l = this.match_main(t6, c2.substring(0, this.Match_MaxBits), d3)) != -1 && ((u2 = this.match_main(t6, c2.substring(c2.length - this.Match_MaxBits), d3 + c2.length - this.Match_MaxBits)) == -1 || l >= u2) && (l = -1) : l = this.match_main(t6, c2, d3), l == -1)
                o[a3] = false, i2 -= e4[a3].length2 - e4[a3].length1;
              else if (o[a3] = true, i2 = l - d3, c2 == (s3 = u2 == -1 ? t6.substring(l, l + c2.length) : t6.substring(l, u2 + this.Match_MaxBits)))
                t6 = t6.substring(0, l) + this.diff_text2(e4[a3].diffs) + t6.substring(l + c2.length);
              else {
                var p = this.diff_main(c2, s3, false);
                if (c2.length > this.Match_MaxBits && this.diff_levenshtein(p) / c2.length > this.Patch_DeleteThreshold)
                  o[a3] = false;
                else {
                  this.diff_cleanupSemanticLossless(p);
                  for (var m3, f = 0, h3 = 0; h3 < e4[a3].diffs.length; h3++) {
                    var v = e4[a3].diffs[h3];
                    v[0] !== 0 && (m3 = this.diff_xIndex(p, f)), v[0] === 1 ? t6 = t6.substring(0, l + m3) + v[1] + t6.substring(l + m3) : v[0] === n2 && (t6 = t6.substring(0, l + m3) + t6.substring(l + this.diff_xIndex(p, f + v[1].length))), v[0] !== n2 && (f += v[1].length);
                  }
                }
              }
            }
            return [t6 = t6.substring(r2.length, t6.length - r2.length), o];
          }, t5.prototype.patch_addPadding = function(e4) {
            for (var n3 = this.Patch_Margin, r2 = "", i2 = 1; i2 <= n3; i2++)
              r2 += String.fromCharCode(i2);
            for (i2 = 0; i2 < e4.length; i2++)
              e4[i2].start1 += n3, e4[i2].start2 += n3;
            var o = e4[0], a3 = o.diffs;
            if (a3.length == 0 || a3[0][0] != 0)
              a3.unshift(new t5.Diff(0, r2)), o.start1 -= n3, o.start2 -= n3, o.length1 += n3, o.length2 += n3;
            else if (n3 > a3[0][1].length) {
              var l = n3 - a3[0][1].length;
              a3[0][1] = r2.substring(a3[0][1].length) + a3[0][1], o.start1 -= l, o.start2 -= l, o.length1 += l, o.length2 += l;
            }
            if ((a3 = (o = e4[e4.length - 1]).diffs).length == 0 || a3[a3.length - 1][0] != 0)
              a3.push(new t5.Diff(0, r2)), o.length1 += n3, o.length2 += n3;
            else if (n3 > a3[a3.length - 1][1].length) {
              l = n3 - a3[a3.length - 1][1].length;
              a3[a3.length - 1][1] += r2.substring(0, l), o.length1 += l, o.length2 += l;
            }
            return r2;
          }, t5.prototype.patch_splitMax = function(e4) {
            for (var r2 = this.Match_MaxBits, i2 = 0; i2 < e4.length; i2++)
              if (!(e4[i2].length1 <= r2)) {
                var o = e4[i2];
                e4.splice(i2--, 1);
                for (var a3 = o.start1, l = o.start2, s3 = ""; o.diffs.length !== 0; ) {
                  var d3 = new t5.patch_obj(), c2 = true;
                  for (d3.start1 = a3 - s3.length, d3.start2 = l - s3.length, s3 !== "" && (d3.length1 = d3.length2 = s3.length, d3.diffs.push(new t5.Diff(0, s3))); o.diffs.length !== 0 && d3.length1 < r2 - this.Patch_Margin; ) {
                    var u2 = o.diffs[0][0], p = o.diffs[0][1];
                    u2 === 1 ? (d3.length2 += p.length, l += p.length, d3.diffs.push(o.diffs.shift()), c2 = false) : u2 === n2 && d3.diffs.length == 1 && d3.diffs[0][0] == 0 && p.length > 2 * r2 ? (d3.length1 += p.length, a3 += p.length, c2 = false, d3.diffs.push(new t5.Diff(u2, p)), o.diffs.shift()) : (p = p.substring(0, r2 - d3.length1 - this.Patch_Margin), d3.length1 += p.length, a3 += p.length, u2 === 0 ? (d3.length2 += p.length, l += p.length) : c2 = false, d3.diffs.push(new t5.Diff(u2, p)), p == o.diffs[0][1] ? o.diffs.shift() : o.diffs[0][1] = o.diffs[0][1].substring(p.length));
                  }
                  s3 = (s3 = this.diff_text2(d3.diffs)).substring(s3.length - this.Patch_Margin);
                  var m3 = this.diff_text1(o.diffs).substring(0, this.Patch_Margin);
                  m3 !== "" && (d3.length1 += m3.length, d3.length2 += m3.length, d3.diffs.length !== 0 && d3.diffs[d3.diffs.length - 1][0] === 0 ? d3.diffs[d3.diffs.length - 1][1] += m3 : d3.diffs.push(new t5.Diff(0, m3))), c2 || e4.splice(++i2, 0, d3);
                }
              }
          }, t5.prototype.patch_toText = function(e4) {
            for (var t6 = [], n3 = 0; n3 < e4.length; n3++)
              t6[n3] = e4[n3];
            return t6.join("");
          }, t5.prototype.patch_fromText = function(e4) {
            var r2 = [];
            if (!e4)
              return r2;
            for (var i2 = e4.split("\n"), o = 0, a3 = /^@@ -(\d+),?(\d*) \+(\d+),?(\d*) @@$/; o < i2.length; ) {
              var l = i2[o].match(a3);
              if (!l)
                throw new Error("Invalid patch string: " + i2[o]);
              var s3 = new t5.patch_obj();
              for (r2.push(s3), s3.start1 = parseInt(l[1], 10), l[2] === "" ? (s3.start1--, s3.length1 = 1) : l[2] == "0" ? s3.length1 = 0 : (s3.start1--, s3.length1 = parseInt(l[2], 10)), s3.start2 = parseInt(l[3], 10), l[4] === "" ? (s3.start2--, s3.length2 = 1) : l[4] == "0" ? s3.length2 = 0 : (s3.start2--, s3.length2 = parseInt(l[4], 10)), o++; o < i2.length; ) {
                var d3 = i2[o].charAt(0);
                try {
                  var c2 = decodeURI(i2[o].substring(1));
                } catch (e5) {
                  throw new Error("Illegal escape in patch_fromText: " + c2);
                }
                if (d3 == "-")
                  s3.diffs.push(new t5.Diff(n2, c2));
                else if (d3 == "+")
                  s3.diffs.push(new t5.Diff(1, c2));
                else if (d3 == " ")
                  s3.diffs.push(new t5.Diff(0, c2));
                else {
                  if (d3 == "@")
                    break;
                  if (d3 !== "")
                    throw new Error('Invalid patch mode "' + d3 + '" in: ' + c2);
                }
                o++;
              }
            }
            return r2;
          }, (t5.patch_obj = function() {
            this.diffs = [], this.start1 = null, this.start2 = null, this.length1 = 0, this.length2 = 0;
          }).prototype.toString = function() {
            for (var e4, t6 = ["@@ -" + (this.length1 === 0 ? this.start1 + ",0" : this.length1 == 1 ? this.start1 + 1 : this.start1 + 1 + "," + this.length1) + " +" + (this.length2 === 0 ? this.start2 + ",0" : this.length2 == 1 ? this.start2 + 1 : this.start2 + 1 + "," + this.length2) + " @@\n"], r2 = 0; r2 < this.diffs.length; r2++) {
              switch (this.diffs[r2][0]) {
                case 1:
                  e4 = "+";
                  break;
                case n2:
                  e4 = "-";
                  break;
                case 0:
                  e4 = " ";
              }
              t6[r2 + 1] = e4 + encodeURI(this.diffs[r2][1]) + "\n";
            }
            return t6.join("").replace(/%20/g, " ");
          }, e3.exports = t5, e3.exports.diff_match_patch = t5, e3.exports.DIFF_DELETE = n2, e3.exports.DIFF_INSERT = 1, e3.exports.DIFF_EQUAL = 0;
        }, 857: (e3, t5, n2) => {
          "use strict";
          n2.d(t5, {default: () => N});
          var r2 = n2(369), i2 = n2(46), o = n2(726), a3 = n2(23), l = n2(383), s3 = n2(890), d3 = n2(93), c2 = function(e4) {
            e4 === void 0 && (e4 = document);
            var t6 = function(e5) {
              var t7 = document.createElement("img");
              t7.src = e5.getAttribute("data-src"), t7.addEventListener("load", function() {
                e5.getAttribute("style") || e5.getAttribute("class") || e5.getAttribute("width") || e5.getAttribute("height") || t7.naturalHeight > t7.naturalWidth && t7.naturalWidth / t7.naturalHeight < document.querySelector(".vditor-reset").clientWidth / (window.innerHeight - 40) && t7.naturalHeight > window.innerHeight - 40 && (e5.style.height = window.innerHeight - 40 + "px"), e5.src = t7.src;
              }), e5.removeAttribute("data-src");
            };
            if (!("IntersectionObserver" in window))
              return e4.querySelectorAll("img").forEach(function(e5) {
                e5.getAttribute("data-src") && t6(e5);
              }), false;
            window.vditorImageIntersectionObserver ? (window.vditorImageIntersectionObserver.disconnect(), e4.querySelectorAll("img").forEach(function(e5) {
              window.vditorImageIntersectionObserver.observe(e5);
            })) : (window.vditorImageIntersectionObserver = new IntersectionObserver(function(e5) {
              e5.forEach(function(e6) {
                (e6.isIntersecting === void 0 ? e6.intersectionRatio !== 0 : e6.isIntersecting) && e6.target.getAttribute("data-src") && t6(e6.target);
              });
            }), e4.querySelectorAll("img").forEach(function(e5) {
              window.vditorImageIntersectionObserver.observe(e5);
            }));
          }, u2 = n2(323), p = n2(207), m3 = n2(765), f = n2(894), h3 = n2(198), v = n2(583), g = n2(260), y3 = n2(958), b2 = n2(228), w2 = n2(713), E2 = n2(224), k2 = n2(792), S3 = n2(187), L2 = function(e4, t6) {
            if (t6 === void 0 && (t6 = "zh_CN"), typeof speechSynthesis != "undefined" && typeof SpeechSynthesisUtterance != "undefined") {
              var n3 = '<svg><use xlink:href="#vditor-icon-play"></use></svg>', r3 = '<svg><use xlink:href="#vditor-icon-pause"></use></svg>';
              document.getElementById("vditorIconScript") || (n3 = '<svg viewBox="0 0 32 32"><path d="M3.436 0l25.128 16-25.128 16v-32z"></path></svg>', r3 = '<svg viewBox="0 0 32 32"><path d="M20.617 0h9.128v32h-9.128v-32zM2.255 32v-32h9.128v32h-9.128z"></path></svg>');
              var i3 = document.querySelector(".vditor-speech");
              if (!i3) {
                (i3 = document.createElement("div")).className = "vditor-speech", document.body.insertAdjacentElement("beforeend", i3);
                var o2 = function() {
                  var e5, n4;
                  return speechSynthesis.getVoices().forEach(function(r4) {
                    r4.lang === t6.replace("_", "-") && (e5 = r4), r4.default && (n4 = r4);
                  }), e5 || (e5 = n4), e5;
                };
                speechSynthesis.onvoiceschanged !== void 0 && (speechSynthesis.onvoiceschanged = o2);
                var a4 = o2();
                i3.onclick = function() {
                  if (i3.className === "vditor-speech") {
                    var e5 = new SpeechSynthesisUtterance(i3.getAttribute("data-text"));
                    e5.voice = a4, e5.onend = function() {
                      i3.className = "vditor-speech", speechSynthesis.cancel(), i3.innerHTML = n3;
                    }, speechSynthesis.speak(e5), i3.className = "vditor-speech vditor-speech--current", i3.innerHTML = r3;
                  } else
                    speechSynthesis.speaking && (speechSynthesis.paused ? (speechSynthesis.resume(), i3.innerHTML = r3) : (speechSynthesis.pause(), i3.innerHTML = n3));
                  (0, S3.Hc)(window.vditorSpeechRange);
                }, document.body.addEventListener("click", function() {
                  getSelection().toString().trim() === "" && i3.style.display === "block" && (i3.className = "vditor-speech", speechSynthesis.cancel(), i3.style.display = "none");
                });
              }
              e4.addEventListener("mouseup", function(e5) {
                var t7 = getSelection().toString().trim();
                if (speechSynthesis.cancel(), getSelection().toString().trim() !== "") {
                  window.vditorSpeechRange = getSelection().getRangeAt(0).cloneRange();
                  var r4 = getSelection().getRangeAt(0).getBoundingClientRect();
                  i3.innerHTML = n3, i3.style.display = "block", i3.style.top = r4.top + r4.height + document.querySelector("html").scrollTop - 20 + "px", i3.style.left = e5.screenX + 2 + "px", i3.setAttribute("data-text", t7);
                } else
                  i3.style.display === "block" && (i3.className = "vditor-speech", i3.style.display = "none");
              });
            }
          }, C = function(e4, t6, n3, r3) {
            return new (n3 || (n3 = Promise))(function(i3, o2) {
              function a4(e5) {
                try {
                  s4(r3.next(e5));
                } catch (e6) {
                  o2(e6);
                }
              }
              function l2(e5) {
                try {
                  s4(r3.throw(e5));
                } catch (e6) {
                  o2(e6);
                }
              }
              function s4(e5) {
                var t7;
                e5.done ? i3(e5.value) : (t7 = e5.value, t7 instanceof n3 ? t7 : new n3(function(e6) {
                  e6(t7);
                })).then(a4, l2);
              }
              s4((r3 = r3.apply(e4, t6 || [])).next());
            });
          }, M3 = function(e4, t6) {
            var n3, r3, i3, o2, a4 = {label: 0, sent: function() {
              if (1 & i3[0])
                throw i3[1];
              return i3[1];
            }, trys: [], ops: []};
            return o2 = {next: l2(0), throw: l2(1), return: l2(2)}, typeof Symbol == "function" && (o2[Symbol.iterator] = function() {
              return this;
            }), o2;
            function l2(o3) {
              return function(l3) {
                return function(o4) {
                  if (n3)
                    throw new TypeError("Generator is already executing.");
                  for (; a4; )
                    try {
                      if (n3 = 1, r3 && (i3 = 2 & o4[0] ? r3.return : o4[0] ? r3.throw || ((i3 = r3.return) && i3.call(r3), 0) : r3.next) && !(i3 = i3.call(r3, o4[1])).done)
                        return i3;
                      switch (r3 = 0, i3 && (o4 = [2 & o4[0], i3.value]), o4[0]) {
                        case 0:
                        case 1:
                          i3 = o4;
                          break;
                        case 4:
                          return a4.label++, {value: o4[1], done: false};
                        case 5:
                          a4.label++, r3 = o4[1], o4 = [0];
                          continue;
                        case 7:
                          o4 = a4.ops.pop(), a4.trys.pop();
                          continue;
                        default:
                          if (!(i3 = a4.trys, (i3 = i3.length > 0 && i3[i3.length - 1]) || o4[0] !== 6 && o4[0] !== 2)) {
                            a4 = 0;
                            continue;
                          }
                          if (o4[0] === 3 && (!i3 || o4[1] > i3[0] && o4[1] < i3[3])) {
                            a4.label = o4[1];
                            break;
                          }
                          if (o4[0] === 6 && a4.label < i3[1]) {
                            a4.label = i3[1], i3 = o4;
                            break;
                          }
                          if (i3 && a4.label < i3[2]) {
                            a4.label = i3[2], a4.ops.push(o4);
                            break;
                          }
                          i3[2] && a4.ops.pop(), a4.trys.pop();
                          continue;
                      }
                      o4 = t6.call(e4, a4);
                    } catch (e5) {
                      o4 = [6, e5], r3 = 0;
                    } finally {
                      n3 = i3 = 0;
                    }
                  if (5 & o4[0])
                    throw o4[1];
                  return {value: o4[0] ? o4[1] : void 0, done: true};
                }([o3, l3]);
              };
            }
          }, T2 = function(e4) {
            var t6 = {anchor: 0, cdn: g.g.CDN, customEmoji: {}, emojiPath: (e4 && e4.emojiPath || g.g.CDN) + "/dist/images/emoji", hljs: g.g.HLJS_OPTIONS, icon: "ant", lang: "zh_CN", markdown: g.g.MARKDOWN_OPTIONS, math: g.g.MATH_OPTIONS, mode: "light", speech: {enable: false}, theme: g.g.THEME_OPTIONS};
            return (0, E2.T)(t6, e4);
          }, A = function(e4, t6) {
            var n3 = T2(t6);
            return (0, b2.G)(n3.cdn + "/dist/js/lute/lute.min.js", "vditorLuteScript").then(function() {
              var r3 = (0, k2.X)({autoSpace: n3.markdown.autoSpace, codeBlockPreview: n3.markdown.codeBlockPreview, emojiSite: n3.emojiPath, emojis: n3.customEmoji, fixTermTypo: n3.markdown.fixTermTypo, footnotes: n3.markdown.footnotes, headingAnchor: n3.anchor !== 0, inlineMathDigit: n3.math.inlineDigit, lazyLoadImage: n3.lazyLoadImage, linkBase: n3.markdown.linkBase, linkPrefix: n3.markdown.linkPrefix, listStyle: n3.markdown.listStyle, mark: n3.markdown.mark, mathBlockPreview: n3.markdown.mathBlockPreview, paragraphBeginningSpace: n3.markdown.paragraphBeginningSpace, sanitize: n3.markdown.sanitize, toc: n3.markdown.toc});
              return (t6 == null ? void 0 : t6.renderers) && r3.SetJSRenderers({renderers: {Md2HTML: t6.renderers}}), r3.SetHeadingID(true), r3.Md2HTML(e4);
            });
          }, _ = function(e4, t6, n3) {
            return C(void 0, void 0, void 0, function() {
              var i3, h4, g2;
              return M3(this, function(E3) {
                switch (E3.label) {
                  case 0:
                    return i3 = T2(n3), [4, A(t6, i3)];
                  case 1:
                    if (h4 = E3.sent(), i3.transform && (h4 = i3.transform(h4)), e4.innerHTML = h4, e4.classList.add("vditor-reset"), i3.i18n)
                      return [3, 5];
                    if (["en_US", "ja_JP", "ko_KR", "ru_RU", "zh_CN", "zh_TW"].includes(i3.lang))
                      return [3, 2];
                    throw new Error("options.lang error, see https://ld246.com/article/1549638745630#options");
                  case 2:
                    return g2 = "vditorI18nScript" + i3.lang, document.querySelectorAll('head script[id^="vditorI18nScript"]').forEach(function(e5) {
                      e5.id !== g2 && document.head.removeChild(e5);
                    }), [4, (0, b2.G)(i3.cdn + "/dist/js/i18n/" + i3.lang + ".js", g2)];
                  case 3:
                    E3.sent(), E3.label = 4;
                  case 4:
                    return [3, 6];
                  case 5:
                    window.VditorI18n = i3.i18n, E3.label = 6;
                  case 6:
                    return i3.icon ? [4, (0, b2.G)(i3.cdn + "/dist/js/icons/" + i3.icon + ".js", "vditorIconScript")] : [3, 8];
                  case 7:
                    E3.sent(), E3.label = 8;
                  case 8:
                    return (0, y3.Z)(i3.theme.current, i3.theme.path), i3.anchor === 1 && e4.classList.add("vditor-reset--anchor"), (0, a3.O)(e4), (0, d3.s)(i3.hljs, e4, i3.cdn), (0, u2.H)(e4, {cdn: i3.cdn, math: i3.math}), (0, m3.i)(e4, i3.cdn, i3.mode), (0, l.P)(e4, i3.cdn), (0, s3.v)(e4, i3.cdn), (0, o.p)(e4, i3.cdn, i3.mode), (0, f.P)(e4, i3.cdn, i3.mode), (0, v.B)(e4, i3.cdn), (0, r2.Q)(e4, i3.cdn), (0, p.Y)(e4), i3.speech.enable && L2(e4), i3.anchor !== 0 && (k3 = i3.anchor, document.querySelectorAll(".vditor-anchor").forEach(function(e5) {
                      k3 === 1 && e5.classList.add("vditor-anchor--left"), e5.onclick = function() {
                        var t7 = e5.getAttribute("href").substr(1), n4 = document.getElementById("vditorAnchor-" + t7).offsetTop;
                        document.querySelector("html").scrollTop = n4;
                      };
                    }), window.onhashchange = function() {
                      var e5 = document.getElementById("vditorAnchor-" + decodeURIComponent(window.location.hash.substr(1)));
                      e5 && (document.querySelector("html").scrollTop = e5.offsetTop);
                    }), i3.after && i3.after(), i3.lazyLoadImage && c2(e4), e4.addEventListener("click", function(t7) {
                      var n4 = (0, w2.lG)(t7.target, "SPAN");
                      if (n4 && (0, w2.fb)(n4, "vditor-toc")) {
                        var r3 = e4.querySelector("#" + n4.getAttribute("data-target-id"));
                        r3 && window.scrollTo(window.scrollX, r3.offsetTop);
                      } else
                        ;
                    }), [2];
                }
                var k3;
              });
            });
          }, x2 = n2(264), H3 = n2(968);
          const N = function() {
            function e4() {
            }
            return e4.adapterRender = i2, e4.previewImage = x2.E, e4.codeRender = a3.O, e4.graphvizRender = s3.v, e4.highlightRender = d3.s, e4.mathRender = u2.H, e4.mermaidRender = m3.i, e4.flowchartRender = l.P, e4.chartRender = o.p, e4.abcRender = r2.Q, e4.mindmapRender = f.P, e4.plantumlRender = v.B, e4.outlineRender = h3.k, e4.mediaRender = p.Y, e4.speechRender = L2, e4.lazyLoadImageRender = c2, e4.md2html = A, e4.preview = _, e4.setCodeTheme = H3.Y, e4.setContentTheme = y3.Z, e4;
          }();
        }, 260: (e3, t5, n2) => {
          "use strict";
          n2.d(t5, {H: () => r2, g: () => i2});
          var r2 = "3.8.18", i2 = function() {
            function e4() {
            }
            return e4.ZWSP = "\u200B", e4.DROP_EDITOR = "application/editor", e4.MOBILE_WIDTH = 520, e4.CLASS_MENU_DISABLED = "vditor-menu--disabled", e4.EDIT_TOOLBARS = ["emoji", "headings", "bold", "italic", "strike", "link", "list", "ordered-list", "outdent", "indent", "check", "line", "quote", "code", "inline-code", "insert-after", "insert-before", "upload", "record", "table"], e4.CODE_THEME = ["abap", "algol", "algol_nu", "arduino", "autumn", "borland", "bw", "colorful", "dracula", "emacs", "friendly", "fruity", "github", "igor", "lovelace", "manni", "monokai", "monokailight", "murphy", "native", "paraiso-dark", "paraiso-light", "pastie", "perldoc", "pygments", "rainbow_dash", "rrt", "solarized-dark", "solarized-dark256", "solarized-light", "swapoff", "tango", "trac", "vim", "vs", "xcode", "ant-design"], e4.CODE_LANGUAGES = ["mermaid", "echarts", "mindmap", "plantuml", "abc", "graphviz", "flowchart", "apache", "js", "ts", "html", "properties", "apache", "bash", "c", "csharp", "cpp", "css", "coffeescript", "diff", "go", "xml", "http", "json", "java", "javascript", "kotlin", "less", "lua", "makefile", "markdown", "nginx", "objectivec", "php", "php-template", "perl", "plaintext", "python", "python-repl", "r", "ruby", "rust", "scss", "sql", "shell", "swift", "ini", "typescript", "vbnet", "yaml", "ada", "clojure", "dart", "erb", "fortran", "gradle", "haskell", "julia", "julia-repl", "lisp", "matlab", "pgsql", "powershell", "sql_more", "stata", "cmake", "mathematica", "solidity", "yul"], e4.CDN = "https://unpkg.com/vditor@3.8.18", e4.MARKDOWN_OPTIONS = {autoSpace: false, codeBlockPreview: true, fixTermTypo: false, footnotes: true, linkBase: "", linkPrefix: "", listStyle: false, mark: false, mathBlockPreview: true, paragraphBeginningSpace: false, sanitize: true, toc: false}, e4.HLJS_OPTIONS = {enable: true, lineNumber: false, style: "github"}, e4.MATH_OPTIONS = {engine: "KaTeX", inlineDigit: false, macros: {}}, e4.THEME_OPTIONS = {current: "light", list: {"ant-design": "Ant Design", dark: "Dark", light: "Light", wechat: "WeChat"}, path: e4.CDN + "/dist/css/content-theme"}, e4;
          }();
        }, 369: (e3, t5, n2) => {
          "use strict";
          n2.d(t5, {Q: () => a3});
          var r2 = n2(260), i2 = n2(228), o = n2(46), a3 = function(e4, t6) {
            e4 === void 0 && (e4 = document), t6 === void 0 && (t6 = r2.g.CDN);
            var n3 = o.abcRenderAdapter.getElements(e4);
            n3.length > 0 && (0, i2.G)(t6 + "/dist/js/abcjs/abcjs_basic.min.js", "vditorAbcjsScript").then(function() {
              n3.forEach(function(e5) {
                e5.parentElement.classList.contains("vditor-wysiwyg__pre") || e5.parentElement.classList.contains("vditor-ir__marker--pre") || e5.getAttribute("data-processed") !== "true" && (ABCJS.renderAbc(e5, o.abcRenderAdapter.getCode(e5).trim()), e5.style.overflowX = "auto", e5.setAttribute("data-processed", "true"));
              });
            });
          };
        }, 46: (e3, t5, n2) => {
          "use strict";
          n2.r(t5), n2.d(t5, {abcRenderAdapter: () => l, chartRenderAdapter: () => a3, flowchartRenderAdapter: () => d3, graphvizRenderAdapter: () => s3, mathRenderAdapter: () => r2, mermaidRenderAdapter: () => i2, mindmapRenderAdapter: () => o, plantumlRenderAdapter: () => c2});
          var r2 = {getCode: function(e4) {
            return e4.textContent;
          }, getElements: function(e4) {
            return e4.querySelectorAll(".language-math");
          }}, i2 = {getCode: function(e4) {
            return e4.textContent;
          }, getElements: function(e4) {
            return e4.querySelectorAll(".language-mermaid");
          }}, o = {getCode: function(e4) {
            return e4.getAttribute("data-code");
          }, getElements: function(e4) {
            return e4.querySelectorAll(".language-mindmap");
          }}, a3 = {getCode: function(e4) {
            return e4.innerText;
          }, getElements: function(e4) {
            return e4.querySelectorAll(".language-echarts");
          }}, l = {getCode: function(e4) {
            return e4.textContent;
          }, getElements: function(e4) {
            return e4.querySelectorAll(".language-abc");
          }}, s3 = {getCode: function(e4) {
            return e4.textContent;
          }, getElements: function(e4) {
            return e4.querySelectorAll(".language-graphviz");
          }}, d3 = {getCode: function(e4) {
            return e4.textContent;
          }, getElements: function(e4) {
            return e4.querySelectorAll(".language-flowchart");
          }}, c2 = {getCode: function(e4) {
            return e4.textContent;
          }, getElements: function(e4) {
            return e4.querySelectorAll(".language-plantuml");
          }};
        }, 726: (e3, t5, n2) => {
          "use strict";
          n2.d(t5, {p: () => a3});
          var r2 = n2(260), i2 = n2(228), o = n2(46), a3 = function(e4, t6, n3) {
            e4 === void 0 && (e4 = document), t6 === void 0 && (t6 = r2.g.CDN);
            var a4 = o.chartRenderAdapter.getElements(e4);
            a4.length > 0 && (0, i2.G)(t6 + "/dist/js/echarts/echarts.min.js", "vditorEchartsScript").then(function() {
              a4.forEach(function(e5) {
                if (!e5.parentElement.classList.contains("vditor-wysiwyg__pre") && !e5.parentElement.classList.contains("vditor-ir__marker--pre")) {
                  var t7 = o.chartRenderAdapter.getCode(e5).trim();
                  if (t7)
                    try {
                      if (e5.getAttribute("data-processed") === "true")
                        return;
                      var r3 = JSON.parse(t7);
                      echarts.init(e5, n3 === "dark" ? "dark" : void 0).setOption(r3), e5.setAttribute("data-processed", "true");
                    } catch (t8) {
                      e5.className = "vditor-reset--error", e5.innerHTML = "echarts render error: <br>" + t8;
                    }
                }
              });
            });
          };
        }, 23: (e3, t5, n2) => {
          "use strict";
          n2.d(t5, {O: () => i2});
          var r2 = n2(769), i2 = function(e4) {
            e4.querySelectorAll("pre > code").forEach(function(t6, n3) {
              var i3, o, a3;
              if (!t6.parentElement.classList.contains("vditor-wysiwyg__pre") && !t6.parentElement.classList.contains("vditor-ir__marker--pre") && !(t6.classList.contains("language-mermaid") || t6.classList.contains("language-flowchart") || t6.classList.contains("language-echarts") || t6.classList.contains("language-mindmap") || t6.classList.contains("language-plantuml") || t6.classList.contains("language-abc") || t6.classList.contains("language-graphviz") || t6.classList.contains("language-math") || t6.style.maxHeight.indexOf("px") > -1 || e4.classList.contains("vditor-preview") && n3 > 5)) {
                var l = t6.innerText;
                if (t6.classList.contains("highlight-chroma")) {
                  var s3 = document.createElement("code");
                  s3.innerHTML = t6.innerHTML, s3.querySelectorAll(".highlight-ln").forEach(function(e5) {
                    e5.remove();
                  }), l = s3.innerText;
                }
                var d3 = '<svg><use xlink:href="#vditor-icon-copy"></use></svg>';
                document.getElementById("vditorIconScript") || (d3 = '<svg viewBox="0 0 32 32"><path d="M22.545-0h-17.455c-1.6 0-2.909 1.309-2.909 2.909v20.364h2.909v-20.364h17.455v-2.909zM26.909 5.818h-16c-1.6 0-2.909 1.309-2.909 2.909v20.364c0 1.6 1.309 2.909 2.909 2.909h16c1.6 0 2.909-1.309 2.909-2.909v-20.364c0-1.6-1.309-2.909-2.909-2.909zM26.909 29.091h-16v-20.364h16v20.364z"></path></svg>');
                var c2 = document.createElement("div");
                c2.className = "vditor-copy", c2.innerHTML = '<span aria-label="' + (((i3 = window.VditorI18n) === null || i3 === void 0 ? void 0 : i3.copy) || "\u590D\u5236") + `"
onmouseover="this.setAttribute('aria-label', '` + (((o = window.VditorI18n) === null || o === void 0 ? void 0 : o.copy) || "\u590D\u5236") + `')"
class="vditor-tooltipped vditor-tooltipped__w"
onclick="this.previousElementSibling.select();document.execCommand('copy');this.setAttribute('aria-label', '` + (((a3 = window.VditorI18n) === null || a3 === void 0 ? void 0 : a3.copy) || "\u5DF2\u590D\u5236") + `')">` + d3 + "</span>";
                var u2 = document.createElement("textarea");
                u2.value = (0, r2.X)(l), c2.insertAdjacentElement("afterbegin", u2), t6.before(c2), t6.style.maxHeight = window.outerHeight - 40 + "px";
              }
            });
          };
        }, 383: (e3, t5, n2) => {
          "use strict";
          n2.d(t5, {P: () => a3});
          var r2 = n2(260), i2 = n2(228), o = n2(46), a3 = function(e4, t6) {
            t6 === void 0 && (t6 = r2.g.CDN);
            var n3 = o.flowchartRenderAdapter.getElements(e4);
            n3.length !== 0 && (0, i2.G)(t6 + "/dist/js/flowchart.js/flowchart.min.js", "vditorFlowchartScript").then(function() {
              n3.forEach(function(e5) {
                if (e5.getAttribute("data-processed") !== "true") {
                  var t7 = flowchart.parse(o.flowchartRenderAdapter.getCode(e5));
                  e5.innerHTML = "", t7.drawSVG(e5), e5.setAttribute("data-processed", "true");
                }
              });
            });
          };
        }, 890: (e3, t5, n2) => {
          "use strict";
          n2.d(t5, {v: () => a3});
          var r2 = n2(260), i2 = n2(228), o = n2(46), a3 = function(e4, t6) {
            t6 === void 0 && (t6 = r2.g.CDN);
            var n3 = o.graphvizRenderAdapter.getElements(e4);
            n3.length !== 0 && (0, i2.G)(t6 + "/dist/js/graphviz/viz.js", "vditorGraphVizScript").then(function() {
              n3.forEach(function(e5) {
                var t7 = o.graphvizRenderAdapter.getCode(e5);
                if (!e5.parentElement.classList.contains("vditor-wysiwyg__pre") && !e5.parentElement.classList.contains("vditor-ir__marker--pre") && e5.getAttribute("data-processed") !== "true" && t7.trim() !== "") {
                  try {
                    var n4 = new Blob(["importScripts('" + document.getElementById("vditorGraphVizScript").src.replace("viz.js", "full.render.js") + "');"], {type: "application/javascript"}), r3 = (window.URL || window.webkitURL).createObjectURL(n4), i3 = new Worker(r3);
                    new Viz({worker: i3}).renderSVGElement(t7).then(function(t8) {
                      e5.innerHTML = t8.outerHTML;
                    }).catch(function(t8) {
                      e5.innerHTML = "graphviz render error: <br>" + t8, e5.className = "vditor-reset--error";
                    });
                  } catch (e6) {
                    console.error("graphviz error", e6);
                  }
                  e5.setAttribute("data-processed", "true");
                }
              });
            });
          };
        }, 93: (e3, t5, n2) => {
          "use strict";
          n2.d(t5, {s: () => a3});
          var r2 = n2(260), i2 = n2(228), o = n2(946), a3 = function(e4, t6, n3) {
            t6 === void 0 && (t6 = document), n3 === void 0 && (n3 = r2.g.CDN);
            var a4 = e4.style;
            r2.g.CODE_THEME.includes(a4) || (a4 = "github");
            var l = document.getElementById("vditorHljsStyle"), s3 = n3 + "/dist/js/highlight.js/styles/" + a4 + ".css";
            (l && l.href !== s3 && l.remove(), (0, o.c)(n3 + "/dist/js/highlight.js/styles/" + a4 + ".css", "vditorHljsStyle"), e4.enable !== false) && (t6.querySelectorAll("pre > code").length !== 0 && (0, i2.G)(n3 + "/dist/js/highlight.js/highlight.pack.js", "vditorHljsScript").then(function() {
              (0, i2.G)(n3 + "/dist/js/highlight.js/solidity.min.js", "vditorHljsSolidityScript").then(function() {
                (0, i2.G)(n3 + "/dist/js/highlight.js/yul.min.js", "vditorHljsYulScript").then(function() {
                  t6.querySelectorAll("pre > code").forEach(function(t7) {
                    if (!t7.parentElement.classList.contains("vditor-ir__marker--pre") && !t7.parentElement.classList.contains("vditor-wysiwyg__pre") && !(t7.classList.contains("language-mermaid") || t7.classList.contains("language-flowchart") || t7.classList.contains("language-echarts") || t7.classList.contains("language-mindmap") || t7.classList.contains("language-plantuml") || t7.classList.contains("language-abc") || t7.classList.contains("language-graphviz") || t7.classList.contains("language-math")) && (hljs.highlightElement(t7), e4.lineNumber)) {
                      t7.classList.add("vditor-linenumber");
                      var n4 = t7.querySelector(".vditor-linenumber__temp");
                      n4 || ((n4 = document.createElement("div")).className = "vditor-linenumber__temp", t7.insertAdjacentElement("beforeend", n4));
                      var r3 = getComputedStyle(t7).whiteSpace, i3 = false;
                      r3 !== "pre-wrap" && r3 !== "pre-line" || (i3 = true);
                      var o2 = "", a5 = t7.textContent.split(/\r\n|\r|\n/g);
                      a5.pop(), a5.map(function(e5) {
                        var t8 = "";
                        i3 && (n4.textContent = e5 || "\n", t8 = ' style="height:' + n4.getBoundingClientRect().height + 'px"'), o2 += "<span" + t8 + "></span>";
                      }), n4.style.display = "none", o2 = '<span class="vditor-linenumber__rows">' + o2 + "</span>", t7.insertAdjacentHTML("beforeend", o2);
                    }
                  });
                });
              });
            }));
          };
        }, 323: (e3, t5, n2) => {
          "use strict";
          n2.d(t5, {H: () => s3});
          var r2 = n2(260), i2 = n2(228), o = n2(946), a3 = n2(769), l = n2(46), s3 = function(e4, t6) {
            var n3 = l.mathRenderAdapter.getElements(e4);
            if (n3.length !== 0) {
              var s4 = {cdn: r2.g.CDN, math: {engine: "KaTeX", inlineDigit: false, macros: {}}};
              if (t6 && t6.math && (t6.math = Object.assign({}, s4.math, t6.math)), (t6 = Object.assign({}, s4, t6)).math.engine === "KaTeX")
                (0, o.c)(t6.cdn + "/dist/js/katex/katex.min.css", "vditorKatexStyle"), (0, i2.G)(t6.cdn + "/dist/js/katex/katex.min.js", "vditorKatexScript").then(function() {
                  (0, i2.G)(t6.cdn + "/dist/js/katex/mhchem.min.js", "vditorKatexChemScript").then(function() {
                    n3.forEach(function(e5) {
                      if (!e5.parentElement.classList.contains("vditor-wysiwyg__pre") && !e5.parentElement.classList.contains("vditor-ir__marker--pre") && !e5.getAttribute("data-math")) {
                        var t7 = (0, a3.X)(l.mathRenderAdapter.getCode(e5));
                        e5.setAttribute("data-math", t7);
                        try {
                          e5.innerHTML = katex.renderToString(t7, {displayMode: e5.tagName === "DIV", output: "html"});
                        } catch (t8) {
                          e5.innerHTML = t8.message, e5.className = "language-math vditor-reset--error";
                        }
                        e5.addEventListener("copy", function(e6) {
                          e6.stopPropagation(), e6.preventDefault();
                          var t8 = e6.currentTarget.closest(".language-math");
                          e6.clipboardData.setData("text/html", t8.innerHTML), e6.clipboardData.setData("text/plain", t8.getAttribute("data-math"));
                        });
                      }
                    });
                  });
                });
              else if (t6.math.engine === "MathJax") {
                window.MathJax || (window.MathJax = {loader: {paths: {mathjax: t6.cdn + "/dist/js/mathjax"}}, startup: {typeset: false}, tex: {macros: t6.math.macros}}), (0, i2.J)(t6.cdn + "/dist/js/mathjax/tex-svg-full.js", "protyleMathJaxScript");
                var d3 = function(e5, t7) {
                  var n4 = (0, a3.X)(e5.textContent).trim(), r3 = window.MathJax.getMetricsFor(e5);
                  r3.display = e5.tagName === "DIV", window.MathJax.tex2svgPromise(n4, r3).then(function(r4) {
                    e5.innerHTML = "", e5.setAttribute("data-math", n4), e5.append(r4), window.MathJax.startup.document.clear(), window.MathJax.startup.document.updateDocument();
                    var i3 = r4.querySelector('[data-mml-node="merror"]');
                    i3 && i3.textContent.trim() !== "" && (e5.innerHTML = i3.textContent.trim(), e5.className = "vditor-reset--error"), t7 && t7();
                  });
                };
                window.MathJax.startup.promise.then(function() {
                  for (var e5 = [], t7 = function(t8) {
                    var r4 = n3[t8];
                    r4.parentElement.classList.contains("vditor-wysiwyg__pre") || r4.parentElement.classList.contains("vditor-ir__marker--pre") || r4.getAttribute("data-math") || !(0, a3.X)(r4.textContent).trim() || e5.push(function(e6) {
                      t8 === n3.length - 1 ? d3(r4) : d3(r4, e6);
                    });
                  }, r3 = 0; r3 < n3.length; r3++)
                    t7(r3);
                  !function(e6) {
                    if (e6.length !== 0) {
                      var t8 = 0, n4 = e6[e6.length - 1], r4 = function() {
                        var i3 = e6[t8++];
                        i3 === n4 ? i3() : i3(r4);
                      };
                      r4();
                    }
                  }(e5);
                });
              }
            }
          };
        }, 207: (e3, t5, n2) => {
          "use strict";
          n2.d(t5, {Y: () => r2});
          var r2 = function(e4) {
            e4 && e4.querySelectorAll("a").forEach(function(e5) {
              var t6 = e5.getAttribute("href");
              t6 && (t6.match(/^.+.(mp4|m4v|ogg|ogv|webm)$/) ? function(e6, t7) {
                e6.insertAdjacentHTML("afterend", '<video controls="controls" src="' + t7 + '"></video>'), e6.remove();
              }(e5, t6) : t6.match(/^.+.(mp3|wav|flac)$/) ? function(e6, t7) {
                e6.insertAdjacentHTML("afterend", '<audio controls="controls" src="' + t7 + '"></audio>'), e6.remove();
              }(e5, t6) : function(e6, t7) {
                var n3 = t7.match(/\/\/(?:www\.)?(?:youtu\.be\/|youtube\.com\/(?:embed\/|v\/|watch\?v=|watch\?.+&v=))([\w|-]{11})(?:(?:[\?&]t=)(\S+))?/), r3 = t7.match(/\/\/v\.youku\.com\/v_show\/id_(\w+)=*\.html/), i2 = t7.match(/\/\/v\.qq\.com\/x\/cover\/.*\/([^\/]+)\.html\??.*/), o = t7.match(/(?:www\.|\/\/)coub\.com\/view\/(\w+)/), a3 = t7.match(/(?:www\.|\/\/)facebook\.com\/([^\/]+)\/videos\/([0-9]+)/), l = t7.match(/.+dailymotion.com\/(video|hub)\/(\w+)\?/), s3 = t7.match(/(?:www\.|\/\/)bilibili\.com\/video\/(\w+)/), d3 = t7.match(/(?:www\.|\/\/)ted\.com\/talks\/(\w+)/);
                n3 && n3[1].length === 11 ? (e6.insertAdjacentHTML("afterend", '<iframe class="iframe__video" src="//www.youtube.com/embed/' + n3[1] + (n3[2] ? "?start=" + n3[2] : "") + '"></iframe>'), e6.remove()) : r3 && r3[1] ? (e6.insertAdjacentHTML("afterend", '<iframe class="iframe__video" src="//player.youku.com/embed/' + r3[1] + '"></iframe>'), e6.remove()) : i2 && i2[1] ? (e6.insertAdjacentHTML("afterend", '<iframe class="iframe__video" src="https://v.qq.com/txp/iframe/player.html?vid=' + i2[1] + '"></iframe>'), e6.remove()) : o && o[1] ? (e6.insertAdjacentHTML("afterend", '<iframe class="iframe__video"\n src="//coub.com/embed/' + o[1] + '?muted=false&autostart=false&originalSize=true&startWithHD=true"></iframe>'), e6.remove()) : a3 && a3[0] ? (e6.insertAdjacentHTML("afterend", '<iframe class="iframe__video"\n src="https://www.facebook.com/plugins/video.php?href=' + encodeURIComponent(a3[0]) + '"></iframe>'), e6.remove()) : l && l[2] ? (e6.insertAdjacentHTML("afterend", '<iframe class="iframe__video"\n src="https://www.dailymotion.com/embed/video/' + l[2] + '"></iframe>'), e6.remove()) : s3 && s3[1] ? (e6.insertAdjacentHTML("afterend", '<iframe class="iframe__video"\n src="//player.bilibili.com/player.html?bvid=' + s3[1] + '"></iframe>'), e6.remove()) : d3 && d3[1] && (e6.insertAdjacentHTML("afterend", '<iframe class="iframe__video" src="//embed.ted.com/talks/' + d3[1] + '"></iframe>'), e6.remove());
              }(e5, t6));
            });
          };
        }, 765: (e3, t5, n2) => {
          "use strict";
          n2.d(t5, {i: () => a3});
          var r2 = n2(260), i2 = n2(228), o = n2(46), a3 = function(e4, t6, n3) {
            t6 === void 0 && (t6 = r2.g.CDN);
            var a4 = o.mermaidRenderAdapter.getElements(e4);
            a4.length !== 0 && (0, i2.G)(t6 + "/dist/js/mermaid/mermaid.min.js", "vditorMermaidScript").then(function() {
              var e5 = {securityLevel: "loose", altFontFamily: "sans-serif", fontFamily: "sans-serif", startOnLoad: false, flowchart: {htmlLabels: true, useMaxWidth: true}, sequence: {useMaxWidth: true, diagramMarginX: 8, diagramMarginY: 8, boxMargin: 8}, gantt: {leftPadding: 75, rightPadding: 20}};
              n3 === "dark" && (e5.theme = "dark"), mermaid.initialize(e5), a4.forEach(function(e6) {
                var t7 = o.mermaidRenderAdapter.getCode(e6);
                e6.getAttribute("data-processed") !== "true" && t7.trim() !== "" && (mermaid.init(void 0, e6), e6.setAttribute("data-processed", "true"));
              });
            });
          };
        }, 894: (e3, t5, n2) => {
          "use strict";
          n2.d(t5, {P: () => a3});
          var r2 = n2(260), i2 = n2(228), o = n2(46), a3 = function(e4, t6, n3) {
            e4 === void 0 && (e4 = document), t6 === void 0 && (t6 = r2.g.CDN);
            var a4 = o.mindmapRenderAdapter.getElements(e4);
            a4.length > 0 && (0, i2.G)(t6 + "/dist/js/echarts/echarts.min.js", "vditorEchartsScript").then(function() {
              a4.forEach(function(e5) {
                if (!e5.parentElement.classList.contains("vditor-wysiwyg__pre") && !e5.parentElement.classList.contains("vditor-ir__marker--pre")) {
                  var t7 = o.mindmapRenderAdapter.getCode(e5);
                  if (t7)
                    try {
                      if (e5.getAttribute("data-processed") === "true")
                        return;
                      echarts.init(e5, n3 === "dark" ? "dark" : void 0).setOption({series: [{data: [JSON.parse(decodeURIComponent(t7))], initialTreeDepth: -1, itemStyle: {borderWidth: 0, color: "#4285f4"}, label: {backgroundColor: "#f6f8fa", borderColor: "#d1d5da", borderRadius: 5, borderWidth: 0.5, color: "#586069", lineHeight: 20, offset: [-5, 0], padding: [0, 5], position: "insideRight"}, lineStyle: {color: "#d1d5da", width: 1}, roam: true, symbol: function(e6, t8) {
                        var n4;
                        return ((n4 = t8 == null ? void 0 : t8.data) === null || n4 === void 0 ? void 0 : n4.children) ? "circle" : "path://";
                      }, type: "tree"}], tooltip: {trigger: "item", triggerOn: "mousemove"}}), e5.setAttribute("data-processed", "true");
                    } catch (t8) {
                      e5.className = "vditor-reset--error", e5.innerHTML = "mindmap render error: <br>" + t8;
                    }
                }
              });
            });
          };
        }, 198: (e3, t5, n2) => {
          "use strict";
          n2.d(t5, {k: () => o});
          var r2 = n2(615), i2 = n2(323), o = function(e4, t6, n3) {
            var o2 = "", a3 = [];
            if (Array.from(e4.children).forEach(function(e5, t7) {
              if ((0, r2.W)(e5)) {
                if (n3) {
                  var i3 = e5.id.lastIndexOf("_");
                  e5.id = e5.id.substring(0, i3 === -1 ? void 0 : i3) + "_" + t7;
                }
                a3.push(e5.id), o2 += e5.outerHTML.replace("<wbr>", "");
              }
            }), o2 === "")
              return t6.innerHTML = "", "";
            var l = document.createElement("div");
            if (n3)
              n3.lute.SetToC(true), n3.currentMode !== "wysiwyg" || n3.preview.element.contains(e4) ? n3.currentMode !== "ir" || n3.preview.element.contains(e4) ? l.innerHTML = n3.lute.HTML2VditorDOM("<p>[ToC]</p>" + o2) : l.innerHTML = n3.lute.SpinVditorIRDOM("<p>[ToC]</p>" + o2) : l.innerHTML = n3.lute.SpinVditorDOM("<p>[ToC]</p>" + o2), n3.lute.SetToC(n3.options.preview.markdown.toc);
            else {
              t6.classList.add("vditor-outline");
              var s3 = Lute.New();
              s3.SetToC(true), l.innerHTML = s3.HTML2VditorDOM("<p>[ToC]</p>" + o2);
            }
            var d3 = l.firstElementChild.querySelectorAll("li > span[data-target-id]");
            return d3.forEach(function(e5, t7) {
              if (e5.nextElementSibling && e5.nextElementSibling.tagName === "UL") {
                var n4 = "<svg class='vditor-outline__action'><use xlink:href='#vditor-icon-down'></use></svg>";
                document.getElementById("vditorIconScript") || (n4 = '<svg class="vditor-outline__action" viewBox="0 0 32 32"><path d="M3.76 6.12l12.24 12.213 12.24-12.213 3.76 3.76-16 16-16-16 3.76-3.76z"></path></svg>'), e5.innerHTML = n4 + "<span>" + e5.innerHTML + "</span>";
              } else
                e5.innerHTML = "<svg></svg><span>" + e5.innerHTML + "</span>";
              e5.setAttribute("data-target-id", a3[t7]);
            }), o2 = l.firstElementChild.innerHTML, d3.length === 0 ? (t6.innerHTML = "", o2) : (t6.innerHTML = o2, n3 && (0, i2.H)(t6, {cdn: n3.options.cdn, math: n3.options.preview.math}), t6.firstElementChild.addEventListener("click", function(r3) {
              for (var i3 = r3.target; i3 && !i3.isEqualNode(t6); ) {
                if (i3.classList.contains("vditor-outline__action")) {
                  i3.classList.contains("vditor-outline__action--close") ? (i3.classList.remove("vditor-outline__action--close"), i3.parentElement.nextElementSibling.setAttribute("style", "display:block")) : (i3.classList.add("vditor-outline__action--close"), i3.parentElement.nextElementSibling.setAttribute("style", "display:none")), r3.preventDefault(), r3.stopPropagation();
                  break;
                }
                if (i3.getAttribute("data-target-id")) {
                  r3.preventDefault(), r3.stopPropagation();
                  var o3 = document.getElementById(i3.getAttribute("data-target-id"));
                  if (!o3)
                    return;
                  if (n3)
                    if (n3.options.height === "auto") {
                      var a4 = o3.offsetTop + n3.element.offsetTop;
                      n3.options.toolbarConfig.pin || (a4 += n3.toolbar.element.offsetHeight), window.scrollTo(window.scrollX, a4);
                    } else
                      n3.element.offsetTop < window.scrollY && window.scrollTo(window.scrollX, n3.element.offsetTop), n3.preview.element.contains(e4) ? e4.parentElement.scrollTop = o3.offsetTop : e4.scrollTop = o3.offsetTop;
                  else
                    window.scrollTo(window.scrollX, o3.offsetTop);
                  break;
                }
                i3 = i3.parentElement;
              }
            }), o2);
          };
        }, 583: (e3, t5, n2) => {
          "use strict";
          n2.d(t5, {B: () => a3});
          var r2 = n2(260), i2 = n2(228), o = n2(46), a3 = function(e4, t6) {
            e4 === void 0 && (e4 = document), t6 === void 0 && (t6 = r2.g.CDN);
            var n3 = o.plantumlRenderAdapter.getElements(e4);
            n3.length !== 0 && (0, i2.G)(t6 + "/dist/js/plantuml/plantuml-encoder.min.js", "vditorPlantumlScript").then(function() {
              n3.forEach(function(e5) {
                if (!e5.parentElement.classList.contains("vditor-wysiwyg__pre") && !e5.parentElement.classList.contains("vditor-ir__marker--pre")) {
                  var t7 = o.plantumlRenderAdapter.getCode(e5).trim();
                  if (t7)
                    try {
                      e5.innerHTML = '<img src="http://www.plantuml.com/plantuml/svg/~1' + plantumlEncoder.encode(t7) + '">';
                    } catch (t8) {
                      e5.className = "vditor-reset--error", e5.innerHTML = "plantuml render error: <br>" + t8;
                    }
                }
              });
            });
          };
        }, 792: (e3, t5, n2) => {
          "use strict";
          n2.d(t5, {X: () => r2});
          var r2 = function(e4) {
            var t6 = Lute.New();
            return t6.PutEmojis(e4.emojis), t6.SetEmojiSite(e4.emojiSite), t6.SetHeadingAnchor(e4.headingAnchor), t6.SetInlineMathAllowDigitAfterOpenMarker(e4.inlineMathDigit), t6.SetAutoSpace(e4.autoSpace), t6.SetToC(e4.toc), t6.SetFootnotes(e4.footnotes), t6.SetFixTermTypo(e4.fixTermTypo), t6.SetVditorCodeBlockPreview(e4.codeBlockPreview), t6.SetVditorMathBlockPreview(e4.mathBlockPreview), t6.SetSanitize(e4.sanitize), t6.SetChineseParagraphBeginningSpace(e4.paragraphBeginningSpace), t6.SetRenderListStyle(e4.listStyle), t6.SetLinkBase(e4.linkBase), t6.SetLinkPrefix(e4.linkPrefix), t6.SetMark(e4.mark), e4.lazyLoadImage && t6.SetImageLazyLoading(e4.lazyLoadImage), t6;
          };
        }, 264: (e3, t5, n2) => {
          "use strict";
          n2.d(t5, {E: () => r2});
          var r2 = function(e4, t6, n3) {
            t6 === void 0 && (t6 = "zh_CN"), n3 === void 0 && (n3 = "classic");
            var r3 = e4.getBoundingClientRect();
            document.body.insertAdjacentHTML("beforeend", '<div class="vditor vditor-img' + (n3 === "dark" ? " vditor--dark" : "") + '">\n    <div class="vditor-img__bar">\n      <span class="vditor-img__btn" data-deg="0">\n        <svg><use xlink:href="#vditor-icon-redo"></use></svg>\n        ' + window.VditorI18n.spin + `
      </span>
      <span class="vditor-img__btn"  onclick="this.parentElement.parentElement.outerHTML = '';document.body.style.overflow = ''">
        X &nbsp;` + window.VditorI18n.close + `
      </span>
    </div>
    <div class="vditor-img__img" onclick="this.parentElement.outerHTML = '';document.body.style.overflow = ''">
      <img style="width: ` + e4.width + "px;height:" + e4.height + "px;transform: translate3d(" + r3.left + "px, " + (r3.top - 36) + 'px, 0)" src="' + e4.getAttribute("src") + '">\n    </div>\n</div>'), document.body.style.overflow = "hidden";
            var i2 = document.querySelector(".vditor-img img"), o = "translate3d(" + Math.max(0, window.innerWidth - e4.naturalWidth) / 2 + "px, " + Math.max(0, window.innerHeight - 36 - e4.naturalHeight) / 2 + "px, 0)";
            setTimeout(function() {
              i2.setAttribute("style", "transition: transform .3s ease-in-out;transform: " + o), setTimeout(function() {
                i2.parentElement.scrollTo((i2.parentElement.scrollWidth - i2.parentElement.clientWidth) / 2, (i2.parentElement.scrollHeight - i2.parentElement.clientHeight) / 2);
              }, 400);
            });
            var a3 = document.querySelector(".vditor-img__btn");
            a3.addEventListener("click", function() {
              var t7 = parseInt(a3.getAttribute("data-deg"), 10) + 90;
              t7 / 90 % 2 == 1 && e4.naturalWidth > i2.parentElement.clientHeight ? i2.style.transform = "translate3d(" + Math.max(0, window.innerWidth - e4.naturalWidth) / 2 + "px, " + (e4.naturalWidth / 2 - e4.naturalHeight / 2) + "px, 0) rotateZ(" + t7 + "deg)" : i2.style.transform = o + " rotateZ(" + t7 + "deg)", a3.setAttribute("data-deg", t7.toString()), setTimeout(function() {
                i2.parentElement.scrollTo((i2.parentElement.scrollWidth - i2.parentElement.clientWidth) / 2, (i2.parentElement.scrollHeight - i2.parentElement.clientHeight) / 2);
              }, 400);
            });
          };
        }, 968: (e3, t5, n2) => {
          "use strict";
          n2.d(t5, {Y: () => o});
          var r2 = n2(260), i2 = n2(946), o = function(e4, t6) {
            t6 === void 0 && (t6 = r2.g.CDN), r2.g.CODE_THEME.includes(e4) || (e4 = "github");
            var n3 = document.getElementById("vditorHljsStyle"), o2 = t6 + "/dist/js/highlight.js/styles/" + e4 + ".css";
            n3 ? n3.href !== o2 && (n3.remove(), (0, i2.c)(o2, "vditorHljsStyle")) : (0, i2.c)(o2, "vditorHljsStyle");
          };
        }, 958: (e3, t5, n2) => {
          "use strict";
          n2.d(t5, {Z: () => i2});
          var r2 = n2(946), i2 = function(e4, t6) {
            if (e4 && t6) {
              var n3 = document.getElementById("vditorContentTheme"), i3 = t6 + "/" + e4 + ".css";
              n3 ? n3.getAttribute("href") !== i3 && (n3.remove(), (0, r2.c)(i3, "vditorContentTheme")) : (0, r2.c)(i3, "vditorContentTheme");
            }
          };
        }, 228: (e3, t5, n2) => {
          "use strict";
          n2.d(t5, {G: () => i2, J: () => r2});
          var r2 = function(e4, t6) {
            if (document.getElementById(t6))
              return false;
            var n3 = new XMLHttpRequest();
            n3.open("GET", e4, false), n3.setRequestHeader("Accept", "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript, */*; q=0.01"), n3.send("");
            var r3 = document.createElement("script");
            r3.type = "text/javascript", r3.text = n3.responseText, r3.id = t6, document.head.appendChild(r3);
          }, i2 = function(e4, t6) {
            return new Promise(function(n3, r3) {
              if (document.getElementById(t6))
                return n3(), false;
              var i3 = document.createElement("script");
              i3.src = e4, i3.async = true, document.head.appendChild(i3), i3.onload = function() {
                if (document.getElementById(t6))
                  return i3.remove(), n3(), false;
                i3.id = t6, n3();
              };
            });
          };
        }, 946: (e3, t5, n2) => {
          "use strict";
          n2.d(t5, {c: () => r2});
          var r2 = function(e4, t6) {
            if (!document.getElementById(t6)) {
              var n3 = document.createElement("link");
              n3.id = t6, n3.rel = "stylesheet", n3.type = "text/css", n3.href = e4, document.getElementsByTagName("head")[0].appendChild(n3);
            }
          };
        }, 769: (e3, t5, n2) => {
          "use strict";
          n2.d(t5, {X: () => r2});
          var r2 = function(e4) {
            return e4.replace(/\u00a0/g, " ");
          };
        }, 931: (e3, t5, n2) => {
          "use strict";
          n2.d(t5, {G6: () => r2, Le: () => a3, i7: () => d3, ns: () => s3, pK: () => o, vU: () => i2, yl: () => l});
          var r2 = function() {
            return navigator.userAgent.indexOf("Safari") > -1 && navigator.userAgent.indexOf("Chrome") === -1;
          }, i2 = function() {
            return navigator.userAgent.toLowerCase().indexOf("firefox") > -1;
          }, o = function() {
            try {
              return typeof localStorage != "undefined";
            } catch (e4) {
              return false;
            }
          }, a3 = function() {
            return navigator.userAgent.indexOf("iPhone") > -1 ? "touchstart" : "click";
          }, l = function(e4) {
            return navigator.platform.toUpperCase().indexOf("MAC") >= 0 ? !(!e4.metaKey || e4.ctrlKey) : !(e4.metaKey || !e4.ctrlKey);
          }, s3 = function(e4) {
            return /Mac/.test(navigator.platform) || navigator.platform === "iPhone" ? e4.indexOf("\u21E7") > -1 && i2() && (e4 = e4.replace(";", ":").replace("=", "+").replace("-", "_")) : (e4 = (e4 = e4.startsWith("\u2318") ? e4.replace("\u2318", "\u2318+") : e4.startsWith("\u2325") && e4.substr(1, 1) !== "\u2318" ? e4.replace("\u2325", "\u2325+") : e4.replace("\u21E7\u2318", "\u2318+\u21E7+").replace("\u2325\u2318", "\u2325+\u2318+")).replace("\u2318", "Ctrl").replace("\u21E7", "Shift").replace("\u2325", "Alt")).indexOf("Shift") > -1 && (e4 = e4.replace(";", ":").replace("=", "+").replace("-", "_")), e4;
          }, d3 = function() {
            return /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);
          };
        }, 713: (e3, t5, n2) => {
          "use strict";
          n2.d(t5, {DX: () => u2, E2: () => o, F9: () => s3, JQ: () => i2, O9: () => a3, a1: () => l, fb: () => c2, lG: () => d3});
          var r2 = n2(615), i2 = function(e4, t6) {
            for (var n3 = c2(e4, t6), r3 = false, i3 = false; n3 && !n3.classList.contains("vditor-reset") && !i3; )
              (r3 = c2(n3.parentElement, t6)) ? n3 = r3 : i3 = true;
            return n3 || false;
          }, o = function(e4, t6) {
            for (var n3 = (0, r2.S)(e4, t6), i3 = false, o2 = false; n3 && !n3.classList.contains("vditor-reset") && !o2; )
              (i3 = (0, r2.S)(n3.parentElement, t6)) ? n3 = i3 : o2 = true;
            return n3 || false;
          }, a3 = function(e4) {
            var t6 = o(e4, "UL"), n3 = o(e4, "OL"), r3 = t6;
            return n3 && (!t6 || t6 && n3.contains(t6)) && (r3 = n3), r3;
          }, l = function(e4, t6, n3) {
            if (!e4)
              return false;
            e4.nodeType === 3 && (e4 = e4.parentElement);
            for (var r3 = e4, i3 = false; r3 && !i3 && !r3.classList.contains("vditor-reset"); )
              r3.getAttribute(t6) === n3 ? i3 = true : r3 = r3.parentElement;
            return i3 && r3;
          }, s3 = function(e4) {
            if (!e4)
              return false;
            e4.nodeType === 3 && (e4 = e4.parentElement);
            var t6 = e4, n3 = false, r3 = l(e4, "data-block", "0");
            if (r3)
              return r3;
            for (; t6 && !n3 && !t6.classList.contains("vditor-reset"); )
              t6.tagName === "H1" || t6.tagName === "H2" || t6.tagName === "H3" || t6.tagName === "H4" || t6.tagName === "H5" || t6.tagName === "H6" || t6.tagName === "P" || t6.tagName === "BLOCKQUOTE" || t6.tagName === "OL" || t6.tagName === "UL" ? n3 = true : t6 = t6.parentElement;
            return n3 && t6;
          }, d3 = function(e4, t6) {
            if (!e4)
              return false;
            e4.nodeType === 3 && (e4 = e4.parentElement);
            for (var n3 = e4, r3 = false; n3 && !r3 && !n3.classList.contains("vditor-reset"); )
              n3.nodeName === t6 ? r3 = true : n3 = n3.parentElement;
            return r3 && n3;
          }, c2 = function(e4, t6) {
            if (!e4)
              return false;
            e4.nodeType === 3 && (e4 = e4.parentElement);
            for (var n3 = e4, r3 = false; n3 && !r3 && !n3.classList.contains("vditor-reset"); )
              n3.classList.contains(t6) ? r3 = true : n3 = n3.parentElement;
            return r3 && n3;
          }, u2 = function(e4) {
            for (; e4 && e4.lastChild; )
              e4 = e4.lastChild;
            return e4;
          };
        }, 615: (e3, t5, n2) => {
          "use strict";
          n2.d(t5, {S: () => r2, W: () => i2});
          var r2 = function(e4, t6) {
            if (!e4)
              return false;
            e4.nodeType === 3 && (e4 = e4.parentElement);
            for (var n3 = e4, r3 = false; n3 && !r3 && !n3.classList.contains("vditor-reset"); )
              n3.nodeName.indexOf(t6) === 0 ? r3 = true : n3 = n3.parentElement;
            return r3 && n3;
          }, i2 = function(e4) {
            var t6 = r2(e4, "H");
            return !(!t6 || t6.tagName.length !== 2 || t6.tagName === "HR") && t6;
          };
        }, 224: (e3, t5, n2) => {
          "use strict";
          n2.d(t5, {T: () => r2});
          var r2 = function() {
            for (var e4 = [], t6 = 0; t6 < arguments.length; t6++)
              e4[t6] = arguments[t6];
            for (var n3 = {}, i2 = function(e5) {
              for (var t7 in e5)
                e5.hasOwnProperty(t7) && (Object.prototype.toString.call(e5[t7]) === "[object Object]" ? n3[t7] = r2(n3[t7], e5[t7]) : n3[t7] = e5[t7]);
            }, o = 0; o < e4.length; o++)
              i2(e4[o]);
            return n3;
          };
        }, 187: (e3, t5, n2) => {
          "use strict";
          n2.d(t5, {$j: () => u2, Gb: () => s3, Hc: () => d3, Ny: () => l, ib: () => p, im: () => c2, oC: () => m3, zh: () => a3});
          var r2 = n2(260), i2 = n2(931), o = n2(713), a3 = function(e4) {
            var t6, n3 = e4[e4.currentMode].element;
            return getSelection().rangeCount > 0 && (t6 = getSelection().getRangeAt(0), n3.isEqualNode(t6.startContainer) || n3.contains(t6.startContainer)) ? t6 : e4[e4.currentMode].range ? e4[e4.currentMode].range : (n3.focus(), (t6 = n3.ownerDocument.createRange()).setStart(n3, 0), t6.collapse(true), t6);
          }, l = function(e4) {
            var t6 = window.getSelection().getRangeAt(0);
            if (!e4.contains(t6.startContainer) && !(0, o.fb)(t6.startContainer, "vditor-panel--none"))
              return {left: 0, top: 0};
            var n3, r3 = e4.parentElement.getBoundingClientRect();
            if (t6.getClientRects().length === 0)
              if (t6.startContainer.nodeType === 3) {
                var i3 = t6.startContainer.parentElement;
                if (!(i3 && i3.getClientRects().length > 0))
                  return {left: 0, top: 0};
                n3 = i3.getClientRects()[0];
              } else {
                var a4 = t6.startContainer.children;
                if (a4[t6.startOffset] && a4[t6.startOffset].getClientRects().length > 0)
                  n3 = a4[t6.startOffset].getClientRects()[0];
                else if (t6.startContainer.childNodes.length > 0) {
                  var l2 = t6.cloneRange();
                  t6.selectNode(t6.startContainer.childNodes[Math.max(0, t6.startOffset - 1)]), n3 = t6.getClientRects()[0], t6.setEnd(l2.endContainer, l2.endOffset), t6.setStart(l2.startContainer, l2.startOffset);
                } else
                  n3 = t6.startContainer.getClientRects()[0];
                if (!n3) {
                  for (var s4 = t6.startContainer.childNodes[t6.startOffset]; !s4.getClientRects || s4.getClientRects && s4.getClientRects().length === 0; )
                    s4 = s4.parentElement;
                  n3 = s4.getClientRects()[0];
                }
              }
            else
              n3 = t6.getClientRects()[0];
            return {left: n3.left - r3.left, top: n3.top - r3.top};
          }, s3 = function(e4, t6) {
            if (!t6) {
              if (getSelection().rangeCount === 0)
                return false;
              t6 = getSelection().getRangeAt(0);
            }
            var n3 = t6.commonAncestorContainer;
            return e4.isEqualNode(n3) || e4.contains(n3);
          }, d3 = function(e4) {
            var t6 = window.getSelection();
            t6.removeAllRanges(), t6.addRange(e4);
          }, c2 = function(e4, t6, n3) {
            var r3 = {end: 0, start: 0};
            if (!n3) {
              if (getSelection().rangeCount === 0)
                return r3;
              n3 = window.getSelection().getRangeAt(0);
            }
            if (s3(t6, n3)) {
              var i3 = n3.cloneRange();
              e4.childNodes[0] && e4.childNodes[0].childNodes[0] ? i3.setStart(e4.childNodes[0].childNodes[0], 0) : i3.selectNodeContents(e4), i3.setEnd(n3.startContainer, n3.startOffset), r3.start = i3.toString().length, r3.end = r3.start + n3.toString().length;
            }
            return r3;
          }, u2 = function(e4, t6, n3) {
            var r3 = 0, i3 = 0, o2 = n3.childNodes[i3], a4 = false, l2 = false;
            e4 = Math.max(0, e4), t6 = Math.max(0, t6);
            var s4 = n3.ownerDocument.createRange();
            for (s4.setStart(o2 || n3, 0), s4.collapse(true); !l2 && o2; ) {
              var c3 = r3 + o2.textContent.length;
              if (!a4 && e4 >= r3 && e4 <= c3 && (e4 === 0 ? s4.setStart(o2, 0) : o2.childNodes[0].nodeType === 3 ? s4.setStart(o2.childNodes[0], e4 - r3) : o2.nextSibling ? s4.setStartBefore(o2.nextSibling) : s4.setStartAfter(o2), a4 = true, e4 === t6)) {
                l2 = true;
                break;
              }
              a4 && t6 >= r3 && t6 <= c3 && (t6 === 0 ? s4.setEnd(o2, 0) : o2.childNodes[0].nodeType === 3 ? s4.setEnd(o2.childNodes[0], t6 - r3) : o2.nextSibling ? s4.setEndBefore(o2.nextSibling) : s4.setEndAfter(o2), l2 = true), r3 = c3, o2 = n3.childNodes[++i3];
            }
            return !l2 && n3.childNodes[i3 - 1] && s4.setStartBefore(n3.childNodes[i3 - 1]), d3(s4), s4;
          }, p = function(e4, t6) {
            var n3 = e4.querySelector("wbr");
            if (n3) {
              if (n3.previousElementSibling)
                if (n3.previousElementSibling.isSameNode(n3.previousSibling)) {
                  if (n3.previousElementSibling.lastChild)
                    return t6.setStartBefore(n3), t6.collapse(true), d3(t6), !(0, i2.i7)() || n3.previousElementSibling.tagName !== "EM" && n3.previousElementSibling.tagName !== "STRONG" && n3.previousElementSibling.tagName !== "S" || (t6.insertNode(document.createTextNode(r2.g.ZWSP)), t6.collapse(false)), void n3.remove();
                  t6.setStartAfter(n3.previousElementSibling);
                } else
                  t6.setStart(n3.previousSibling, n3.previousSibling.textContent.length);
              else
                n3.previousSibling ? t6.setStart(n3.previousSibling, n3.previousSibling.textContent.length) : n3.nextSibling ? n3.nextSibling.nodeType === 3 ? t6.setStart(n3.nextSibling, 0) : t6.setStartBefore(n3.nextSibling) : t6.setStart(n3.parentElement, 0);
              t6.collapse(true), n3.remove(), d3(t6);
            }
          }, m3 = function(e4, t6) {
            var n3 = document.createElement("div");
            n3.innerHTML = e4;
            var r3 = n3.querySelectorAll("p");
            r3.length === 1 && !r3[0].previousSibling && !r3[0].nextSibling && t6[t6.currentMode].element.children.length > 0 && n3.firstElementChild.tagName === "P" && (e4 = r3[0].innerHTML.trim());
            var i3 = document.createElement("div");
            i3.innerHTML = e4;
            var l2 = a3(t6);
            if (l2.toString() !== "" && (t6[t6.currentMode].preventInput = true, document.execCommand("delete", false, "")), i3.firstElementChild && i3.firstElementChild.getAttribute("data-block") === "0") {
              i3.lastElementChild.insertAdjacentHTML("beforeend", "<wbr>");
              var s4 = (0, o.F9)(l2.startContainer);
              s4 ? s4.insertAdjacentHTML("afterend", i3.innerHTML) : t6[t6.currentMode].element.insertAdjacentHTML("beforeend", i3.innerHTML), p(t6[t6.currentMode].element, l2);
            } else {
              var c3 = document.createElement("template");
              c3.innerHTML = e4, l2.insertNode(c3.content.cloneNode(true)), l2.collapse(false), d3(l2);
            }
          };
        }}, t4 = {};
        function n(r2) {
          var i2 = t4[r2];
          if (i2 !== void 0)
            return i2.exports;
          var o = t4[r2] = {exports: {}};
          return e2[r2](o, o.exports, n), o.exports;
        }
        n.d = (e3, t5) => {
          for (var r2 in t5)
            n.o(t5, r2) && !n.o(e3, r2) && Object.defineProperty(e3, r2, {enumerable: true, get: t5[r2]});
        }, n.o = (e3, t5) => Object.prototype.hasOwnProperty.call(e3, t5), n.r = (e3) => {
          typeof Symbol != "undefined" && Symbol.toStringTag && Object.defineProperty(e3, Symbol.toStringTag, {value: "Module"}), Object.defineProperty(e3, "__esModule", {value: true});
        };
        var r = {};
        return (() => {
          "use strict";
          n.d(r, {default: () => Gn});
          var e3, t5 = n(857), i2 = n(260), o = n(769), a3 = function(e4) {
            return e4.currentMode === "sv" ? (0, o.X)((e4.sv.element.textContent + "\n").replace(/\n\n$/, "\n")) : e4.currentMode === "wysiwyg" ? e4.lute.VditorDOM2Md(e4.wysiwyg.element.innerHTML) : e4.currentMode === "ir" ? e4.lute.VditorIRDOM2Md(e4.ir.element.innerHTML) : "";
          }, l = n(228), s3 = function() {
            function e4() {
              this.element = document.createElement("div"), this.element.className = "vditor-devtools", this.element.innerHTML = '<div class="vditor-reset--error"></div><div style="height: 100%;"></div>';
            }
            return e4.prototype.renderEchart = function(e5) {
              var t6 = this;
              e5.devtools.element.style.display === "block" && (0, l.G)(e5.options.cdn + "/dist/js/echarts/echarts.min.js", "vditorEchartsScript").then(function() {
                t6.ASTChart || (t6.ASTChart = echarts.init(e5.devtools.element.lastElementChild));
                try {
                  t6.element.lastElementChild.style.display = "block", t6.element.firstElementChild.innerHTML = "", t6.ASTChart.setOption({series: [{data: JSON.parse(e5.lute.RenderEChartsJSON(a3(e5))), initialTreeDepth: -1, label: {align: "left", backgroundColor: "rgba(68, 77, 86, .68)", borderRadius: 3, color: "#d1d5da", fontSize: 12, lineHeight: 12, offset: [9, 12], padding: [2, 4, 2, 4], position: "top", verticalAlign: "middle"}, lineStyle: {color: "#4285f4", type: "curve", width: 1}, orient: "vertical", roam: true, type: "tree"}], toolbox: {bottom: 25, emphasis: {iconStyle: {color: "#4285f4"}}, feature: {restore: {show: true}, saveAsImage: {show: true}}, right: 15, show: true}}), t6.ASTChart.resize();
                } catch (e6) {
                  t6.element.lastElementChild.style.display = "none", t6.element.firstElementChild.innerHTML = e6;
                }
              });
            }, e4;
          }(), d3 = n(931), c2 = function(e4, t6) {
            t6.forEach(function(t7) {
              if (e4[t7]) {
                var n2 = e4[t7].children[0];
                n2 && n2.classList.contains("vditor-menu--current") && n2.classList.remove("vditor-menu--current");
              }
            });
          }, u2 = function(e4, t6) {
            t6.forEach(function(t7) {
              if (e4[t7]) {
                var n2 = e4[t7].children[0];
                n2 && !n2.classList.contains("vditor-menu--current") && n2.classList.add("vditor-menu--current");
              }
            });
          }, p = function(e4, t6) {
            t6.forEach(function(t7) {
              if (e4[t7]) {
                var n2 = e4[t7].children[0];
                n2 && n2.classList.contains(i2.g.CLASS_MENU_DISABLED) && n2.classList.remove(i2.g.CLASS_MENU_DISABLED);
              }
            });
          }, m3 = function(e4, t6) {
            t6.forEach(function(t7) {
              if (e4[t7]) {
                var n2 = e4[t7].children[0];
                n2 && !n2.classList.contains(i2.g.CLASS_MENU_DISABLED) && n2.classList.add(i2.g.CLASS_MENU_DISABLED);
              }
            });
          }, f = function(e4, t6) {
            t6.forEach(function(t7) {
              e4[t7] && e4[t7] && (e4[t7].style.display = "none");
            });
          }, h3 = function(e4, t6) {
            t6.forEach(function(t7) {
              e4[t7] && e4[t7] && (e4[t7].style.display = "block");
            });
          }, v = function(e4, t6, n2) {
            t6.includes("subToolbar") && (e4.toolbar.element.querySelectorAll(".vditor-hint").forEach(function(e5) {
              n2 && e5.isEqualNode(n2) || (e5.style.display = "none");
            }), e4.toolbar.elements.emoji && (e4.toolbar.elements.emoji.lastElementChild.style.display = "none")), t6.includes("hint") && (e4.hint.element.style.display = "none"), e4.wysiwyg.popover && t6.includes("popover") && (e4.wysiwyg.popover.style.display = "none");
          }, g = function(e4, t6, n2, r2) {
            n2.addEventListener((0, d3.Le)(), function(r3) {
              r3.preventDefault(), r3.stopPropagation(), n2.classList.contains(i2.g.CLASS_MENU_DISABLED) || (e4.toolbar.element.querySelectorAll(".vditor-hint--current").forEach(function(e5) {
                e5.classList.remove("vditor-hint--current");
              }), t6.style.display === "block" ? t6.style.display = "none" : (v(e4, ["subToolbar", "hint", "popover"], n2.parentElement.parentElement), n2.classList.contains("vditor-tooltipped") || n2.classList.add("vditor-hint--current"), t6.style.display = "block", e4.toolbar.element.getBoundingClientRect().right - n2.getBoundingClientRect().right < 250 ? t6.classList.add("vditor-panel--left") : t6.classList.remove("vditor-panel--left")));
            });
          }, y3 = n(713), b2 = n(615), w2 = function(e4, t6, n2, r2) {
            r2 && console.log(e4 + " - " + n2 + ": " + t6);
          }, E2 = n(369), k2 = n(726), S3 = n(23), L2 = n(383), C = n(890), M3 = n(93), T2 = n(323), A = n(765), _ = n(894), x2 = n(583), H3 = function(e4, t6) {
            if (e4)
              if (e4.parentElement.getAttribute("data-type") !== "html-block") {
                var n2 = e4.firstElementChild.className.replace("language-", "");
                n2 && (n2 === "abc" ? (0, E2.Q)(e4, t6.options.cdn) : n2 === "mermaid" ? (0, A.i)(e4, t6.options.cdn, t6.options.theme) : n2 === "flowchart" ? (0, L2.P)(e4, t6.options.cdn) : n2 === "echarts" ? (0, k2.p)(e4, t6.options.cdn, t6.options.theme) : n2 === "mindmap" ? (0, _.P)(e4, t6.options.cdn, t6.options.theme) : n2 === "plantuml" ? (0, x2.B)(e4, t6.options.cdn) : n2 === "graphviz" ? (0, C.v)(e4, t6.options.cdn) : n2 === "math" ? (0, T2.H)(e4, {cdn: t6.options.cdn, math: t6.options.preview.math}) : ((0, M3.s)(Object.assign({}, t6.options.preview.hljs), e4, t6.options.cdn), (0, S3.O)(e4)), e4.setAttribute("data-render", "1"));
              } else
                e4.setAttribute("data-render", "1");
          }, N = n(187), D2 = function(e4) {
            if (e4.currentMode !== "sv") {
              var t6 = e4[e4.currentMode].element, n2 = e4.outline.render(e4);
              n2 === "" && (n2 = "[ToC]"), t6.querySelectorAll('[data-type="toc-block"]').forEach(function(t7) {
                t7.innerHTML = n2, (0, T2.H)(t7, {cdn: e4.options.cdn, math: e4.options.preview.math});
              });
            }
          }, O2 = function(e4, t6) {
            var n2 = (0, y3.lG)(e4.target, "SPAN");
            if (n2 && (0, y3.fb)(n2, "vditor-toc")) {
              var r2 = t6[t6.currentMode].element.querySelector("#" + n2.getAttribute("data-target-id"));
              if (r2)
                if (t6.options.height === "auto") {
                  var i3 = r2.offsetTop + t6.element.offsetTop;
                  t6.options.toolbarConfig.pin || (i3 += t6.toolbar.element.offsetHeight), window.scrollTo(window.scrollX, i3);
                } else
                  t6.element.offsetTop < window.scrollY && window.scrollTo(window.scrollX, t6.element.offsetTop), t6[t6.currentMode].element.scrollTop = r2.offsetTop;
            } else
              ;
          }, I2 = function(e4, t6, n2, r2) {
            if (e4.previousElementSibling && e4.previousElementSibling.classList.contains("vditor-toc")) {
              if (n2.key === "Backspace" && (0, N.im)(e4, t6[t6.currentMode].element, r2).start === 0)
                return e4.previousElementSibling.remove(), lt(t6), true;
              if (et(t6, n2, r2, e4, e4.previousElementSibling))
                return true;
            }
            if (e4.nextElementSibling && e4.nextElementSibling.classList.contains("vditor-toc")) {
              if (n2.key === "Delete" && (0, N.im)(e4, t6[t6.currentMode].element, r2).start >= e4.textContent.trimRight().length)
                return e4.nextElementSibling.remove(), lt(t6), true;
              if ($e(t6, n2, r2, e4, e4.nextElementSibling))
                return true;
            }
            if (n2.key === "Backspace" || n2.key === "Delete") {
              var i3 = (0, y3.fb)(r2.startContainer, "vditor-toc");
              if (i3)
                return i3.remove(), lt(t6), true;
            }
          }, j = function(e4, t6, n2, r2) {
            n2 === void 0 && (n2 = false);
            var o2 = (0, y3.F9)(t6.startContainer);
            if (o2 && !n2 && o2.getAttribute("data-type") !== "code-block") {
              if (ot(o2.innerHTML) && o2.previousElementSibling || at(o2.innerHTML))
                return;
              for (var l2 = (0, N.im)(o2, e4.ir.element, t6).start, s4 = true, d4 = l2 - 1; d4 > o2.textContent.substr(0, l2).lastIndexOf("\n"); d4--)
                if (o2.textContent.charAt(d4) !== " " && o2.textContent.charAt(d4) !== "	") {
                  s4 = false;
                  break;
                }
              l2 === 0 && (s4 = false);
              var c3 = true;
              for (d4 = l2 - 1; d4 < o2.textContent.length; d4++)
                if (o2.textContent.charAt(d4) !== " " && o2.textContent.charAt(d4) !== "\n") {
                  c3 = false;
                  break;
                }
              if (s4)
                return void (typeof e4.options.input == "function" && e4.options.input(a3(e4)));
              if (c3) {
                if (!(0, y3.fb)(t6.startContainer, "vditor-ir__marker")) {
                  var u3 = t6.startContainer.previousSibling;
                  return u3 && u3.nodeType !== 3 && u3.classList.contains("vditor-ir__node--expand") && u3.classList.remove("vditor-ir__node--expand"), void (typeof e4.options.input == "function" && e4.options.input(a3(e4)));
                }
              }
            }
            if (e4.ir.element.querySelectorAll(".vditor-ir__node--expand").forEach(function(e5) {
              e5.classList.remove("vditor-ir__node--expand");
            }), o2 || (o2 = e4.ir.element), !o2.querySelector("wbr")) {
              var p2 = (0, y3.fb)(t6.startContainer, "vditor-ir__preview");
              p2 ? p2.previousElementSibling.insertAdjacentHTML("beforeend", "<wbr>") : t6.insertNode(document.createElement("wbr"));
            }
            o2.querySelectorAll("[style]").forEach(function(e5) {
              e5.removeAttribute("style");
            }), o2.getAttribute("data-type") === "link-ref-defs-block" && (o2 = e4.ir.element);
            var m4, f2 = o2.isEqualNode(e4.ir.element), h4 = (0, y3.a1)(o2, "data-type", "footnotes-block"), v2 = "";
            if (f2)
              v2 = o2.innerHTML;
            else {
              var g2 = (0, b2.S)(t6.startContainer, "BLOCKQUOTE"), E3 = (0, y3.O9)(t6.startContainer);
              if (E3 && (o2 = E3), g2 && (!E3 || E3 && !g2.contains(E3)) && (o2 = g2), h4 && (o2 = h4), v2 = o2.outerHTML, o2.tagName === "UL" || o2.tagName === "OL") {
                var k3 = o2.previousElementSibling, S4 = o2.nextElementSibling;
                !k3 || k3.tagName !== "UL" && k3.tagName !== "OL" || (v2 = k3.outerHTML + v2, k3.remove()), !S4 || S4.tagName !== "UL" && S4.tagName !== "OL" || (v2 += S4.outerHTML, S4.remove()), v2 = v2.replace("<div><wbr><br></div>", "<li><p><wbr><br></p></li>");
              } else
                o2.previousElementSibling && o2.previousElementSibling.textContent.replace(i2.g.ZWSP, "") !== "" && r2 && r2.inputType === "insertParagraph" && (v2 = o2.previousElementSibling.outerHTML + v2, o2.previousElementSibling.remove());
              o2.innerText.startsWith("```") || (e4.ir.element.querySelectorAll("[data-type='link-ref-defs-block']").forEach(function(e5) {
                e5 && !o2.isEqualNode(e5) && (v2 += e5.outerHTML, e5.remove());
              }), e4.ir.element.querySelectorAll("[data-type='footnotes-block']").forEach(function(e5) {
                e5 && !o2.isEqualNode(e5) && (v2 += e5.outerHTML, e5.remove());
              }));
            }
            if (w2("SpinVditorIRDOM", v2, "argument", e4.options.debugger), v2 = e4.lute.SpinVditorIRDOM(v2), w2("SpinVditorIRDOM", v2, "result", e4.options.debugger), f2)
              o2.innerHTML = v2;
            else if (o2.outerHTML = v2, h4) {
              var L3 = (0, y3.a1)(e4.ir.element.querySelector("wbr"), "data-type", "footnotes-def");
              if (L3) {
                var C2 = L3.textContent, M4 = C2.substring(1, C2.indexOf("]:")), T3 = e4.ir.element.querySelector('sup[data-type="footnotes-ref"][data-footnotes-label="' + M4 + '"]');
                T3 && T3.setAttribute("aria-label", C2.substr(M4.length + 3).trim().substr(0, 24));
              }
            }
            var A2, _2 = e4.ir.element.querySelectorAll("[data-type='link-ref-defs-block']");
            _2.forEach(function(e5, t7) {
              t7 === 0 ? m4 = e5 : (m4.insertAdjacentHTML("beforeend", e5.innerHTML), e5.remove());
            }), _2.length > 0 && e4.ir.element.insertAdjacentElement("beforeend", _2[0]);
            var x3 = e4.ir.element.querySelectorAll("[data-type='footnotes-block']");
            x3.forEach(function(e5, t7) {
              t7 === 0 ? A2 = e5 : (A2.insertAdjacentHTML("beforeend", e5.innerHTML), e5.remove());
            }), x3.length > 0 && e4.ir.element.insertAdjacentElement("beforeend", x3[0]), (0, N.ib)(e4.ir.element, t6), e4.ir.element.querySelectorAll(".vditor-ir__preview[data-render='2']").forEach(function(t7) {
              H3(t7, e4);
            }), D2(e4), Ct(e4, {enableAddUndoStack: true, enableHint: true, enableInput: true});
          }, R2 = function(e4, t6) {
            if (e4 === "")
              return false;
            if (e4.indexOf("\u21E7") === -1 && e4.indexOf("\u2318") === -1 && e4.indexOf("\u2325") === -1)
              return !((0, d3.yl)(t6) || t6.altKey || t6.shiftKey || t6.code !== e4);
            if (e4 === "\u21E7Tab")
              return !((0, d3.yl)(t6) || t6.altKey || !t6.shiftKey || t6.code !== "Tab");
            var n2 = e4.split("");
            if (e4.startsWith("\u2325")) {
              var r2 = n2.length === 3 ? n2[2] : n2[1];
              return !((n2.length === 3 ? !(0, d3.yl)(t6) : (0, d3.yl)(t6)) || !t6.altKey || t6.shiftKey || t6.code !== (/^[0-9]$/.test(r2) ? "Digit" : "Key") + r2);
            }
            e4 === "\u2318Enter" && (n2 = ["\u2318", "Enter"]);
            var i3 = n2.length > 2 && n2[0] === "\u21E7", o2 = i3 ? n2[2] : n2[1];
            return !i3 || !(0, d3.vU)() && /Mac/.test(navigator.platform) || (o2 === "-" ? o2 = "_" : o2 === "=" && (o2 = "+")), !(!(0, d3.yl)(t6) || t6.key.toLowerCase() !== o2.toLowerCase() || t6.altKey || !(!i3 && !t6.shiftKey || i3 && t6.shiftKey));
          }, P = function(e4, t6) {
            t6.ir.element.querySelectorAll(".vditor-ir__node--expand").forEach(function(e5) {
              e5.classList.remove("vditor-ir__node--expand");
            });
            var n2 = (0, y3.JQ)(e4.startContainer, "vditor-ir__node"), r2 = !e4.collapsed && (0, y3.JQ)(e4.endContainer, "vditor-ir__node");
            if (e4.collapsed || n2 && n2 === r2) {
              n2 && (n2.classList.add("vditor-ir__node--expand"), n2.classList.remove("vditor-ir__node--hidden"), (0, N.Hc)(e4));
              var i3 = function(e5) {
                var t7 = e5.startContainer;
                if (t7.nodeType === 3 && t7.nodeValue.length !== e5.startOffset)
                  return false;
                for (var n3 = t7.nextSibling; n3 && n3.textContent === ""; )
                  n3 = n3.nextSibling;
                if (!n3) {
                  var r3 = (0, y3.fb)(t7, "vditor-ir__marker");
                  if (r3 && !r3.nextSibling) {
                    var i4 = t7.parentElement.parentElement.nextSibling;
                    if (i4 && i4.nodeType !== 3 && i4.classList.contains("vditor-ir__node"))
                      return i4;
                  }
                  return false;
                }
                return !(!n3 || n3.nodeType === 3 || !n3.classList.contains("vditor-ir__node") || n3.getAttribute("data-block")) && n3;
              }(e4);
              if (i3)
                return i3.classList.add("vditor-ir__node--expand"), void i3.classList.remove("vditor-ir__node--hidden");
              var o2 = function(e5) {
                var t7 = e5.startContainer, n3 = t7.previousSibling;
                return !(t7.nodeType !== 3 || e5.startOffset !== 0 || !n3 || n3.nodeType === 3 || !n3.classList.contains("vditor-ir__node") || n3.getAttribute("data-block")) && n3;
              }(e4);
              return o2 ? (o2.classList.add("vditor-ir__node--expand"), void o2.classList.remove("vditor-ir__node--hidden")) : void 0;
            }
          }, q2 = n(264), B2 = function(e4, t6) {
            var n2, r2 = getSelection().getRangeAt(0).cloneRange(), i3 = r2.startContainer;
            r2.startContainer.nodeType !== 3 && r2.startContainer.tagName === "DIV" && (i3 = r2.startContainer.childNodes[r2.startOffset - 1]);
            var o2 = (0, y3.a1)(i3, "data-block", "0");
            if (o2 && t6 && (t6.inputType === "deleteContentBackward" || t6.data === " ")) {
              for (var a4 = (0, N.im)(o2, e4.sv.element, r2).start, l2 = true, s4 = a4 - 1; s4 > o2.textContent.substr(0, a4).lastIndexOf("\n"); s4--)
                if (o2.textContent.charAt(s4) !== " " && o2.textContent.charAt(s4) !== "	") {
                  l2 = false;
                  break;
                }
              if (a4 === 0 && (l2 = false), l2)
                return void De(e4);
              if (t6.inputType === "deleteContentBackward") {
                var d4 = (0, y3.a1)(i3, "data-type", "code-block-open-marker") || (0, y3.a1)(i3, "data-type", "code-block-close-marker");
                if (d4) {
                  var c3;
                  if (d4.getAttribute("data-type") === "code-block-close-marker") {
                    if (c3 = xe(i3, "code-block-open-marker"))
                      return c3.textContent = d4.textContent, void De(e4);
                  }
                  if (d4.getAttribute("data-type") === "code-block-open-marker") {
                    if (c3 = xe(i3, "code-block-close-marker", false))
                      return c3.textContent = d4.textContent, void De(e4);
                  }
                }
                var u3 = (0, y3.a1)(i3, "data-type", "math-block-open-marker");
                if (u3) {
                  var p2 = u3.nextElementSibling.nextElementSibling;
                  return void (p2 && p2.getAttribute("data-type") === "math-block-close-marker" && (p2.remove(), De(e4)));
                }
                o2.querySelectorAll('[data-type="code-block-open-marker"]').forEach(function(e5) {
                  e5.textContent.length === 1 && e5.remove();
                }), o2.querySelectorAll('[data-type="code-block-close-marker"]').forEach(function(e5) {
                  e5.textContent.length === 1 && e5.remove();
                });
                var m4 = (0, y3.a1)(i3, "data-type", "heading-marker");
                if (m4 && m4.textContent.indexOf("#") === -1)
                  return void De(e4);
              }
              if ((t6.data === " " || t6.inputType === "deleteContentBackward") && ((0, y3.a1)(i3, "data-type", "padding") || (0, y3.a1)(i3, "data-type", "li-marker") || (0, y3.a1)(i3, "data-type", "task-marker") || (0, y3.a1)(i3, "data-type", "blockquote-marker")))
                return void De(e4);
            }
            if (o2 && o2.textContent.trimRight() === "$$")
              De(e4);
            else {
              o2 || (o2 = e4.sv.element), ((n2 = o2.firstElementChild) === null || n2 === void 0 ? void 0 : n2.getAttribute("data-type")) === "link-ref-defs-block" && (o2 = e4.sv.element), (0, y3.a1)(i3, "data-type", "footnotes-link") && (o2 = e4.sv.element), o2.textContent.indexOf(Lute.Caret) === -1 && r2.insertNode(document.createTextNode(Lute.Caret)), o2.querySelectorAll("[style]").forEach(function(e5) {
                e5.removeAttribute("style");
              }), o2.querySelectorAll("font").forEach(function(e5) {
                e5.outerHTML = e5.innerHTML;
              });
              var f2, h4 = o2.textContent, v2 = o2.isEqualNode(e4.sv.element);
              v2 ? h4 = o2.textContent : (o2.previousElementSibling && (h4 = o2.previousElementSibling.textContent + h4, o2.previousElementSibling.remove()), o2.previousElementSibling && h4.indexOf("---\n") === 0 && (h4 = o2.previousElementSibling.textContent + h4, o2.previousElementSibling.remove()), o2.innerText.startsWith("```") || (e4.sv.element.querySelectorAll("[data-type='link-ref-defs-block']").forEach(function(e5, t7) {
                t7 === 0 && e5 && !o2.isEqualNode(e5.parentElement) && (h4 += "\n" + e5.parentElement.textContent, e5.parentElement.remove());
              }), e4.sv.element.querySelectorAll("[data-type='footnotes-link']").forEach(function(e5, t7) {
                t7 === 0 && e5 && !o2.isEqualNode(e5.parentElement) && (h4 += "\n" + e5.parentElement.textContent, e5.parentElement.remove());
              }))), h4 = He(h4, e4), v2 ? o2.innerHTML = h4 : o2.outerHTML = h4;
              var g2, b3 = e4.sv.element.querySelectorAll("[data-type='link-ref-defs-block']");
              b3.forEach(function(e5, t7) {
                t7 === 0 ? f2 = e5.parentElement : (f2.lastElementChild.remove(), f2.insertAdjacentHTML("beforeend", "" + e5.parentElement.innerHTML), e5.parentElement.remove());
              }), b3.length > 0 && e4.sv.element.insertAdjacentElement("beforeend", f2);
              var w3 = e4.sv.element.querySelectorAll("[data-type='footnotes-link']");
              w3.forEach(function(e5, t7) {
                t7 === 0 ? g2 = e5.parentElement : (g2.lastElementChild.remove(), g2.insertAdjacentHTML("beforeend", "" + e5.parentElement.innerHTML), e5.parentElement.remove());
              }), w3.length > 0 && e4.sv.element.insertAdjacentElement("beforeend", g2), (0, N.ib)(e4.sv.element, r2), Me(e4), De(e4, {enableAddUndoStack: true, enableHint: true, enableInput: true});
            }
          }, V = n(958), U = function(e4) {
            e4.options.theme === "dark" ? e4.element.classList.add("vditor--dark") : e4.element.classList.remove("vditor--dark");
          }, W = function(e4) {
            var t6 = window.innerWidth <= i2.g.MOBILE_WIDTH ? 10 : 35;
            if (e4.wysiwyg.element.parentElement.style.display !== "none") {
              var n2 = (e4.wysiwyg.element.parentElement.clientWidth - e4.options.preview.maxWidth) / 2;
              e4.wysiwyg.element.style.padding = "10px " + Math.max(t6, n2) + "px";
            }
            if (e4.ir.element.parentElement.style.display !== "none") {
              n2 = (e4.ir.element.parentElement.clientWidth - e4.options.preview.maxWidth) / 2;
              e4.ir.element.style.padding = "10px " + Math.max(t6, n2) + "px";
            }
            e4.preview.element.style.display !== "block" ? e4.toolbar.element.style.paddingLeft = Math.max(5, parseInt(e4[e4.currentMode].element.style.paddingLeft || "0", 10) + (e4.options.outline.position === "left" ? e4.outline.element.offsetWidth : 0)) + "px" : e4.toolbar.element.style.paddingLeft = 5 + (e4.options.outline.position === "left" ? e4.outline.element.offsetWidth : 0) + "px";
          }, z2 = function(e4) {
            if (e4.options.typewriterMode) {
              var t6 = window.innerHeight;
              typeof e4.options.height == "number" ? (t6 = e4.options.height, typeof e4.options.minHeight == "number" && (t6 = Math.max(t6, e4.options.minHeight)), t6 = Math.min(window.innerHeight, t6)) : t6 = e4.element.clientHeight, e4.element.classList.contains("vditor--fullscreen") && (t6 = window.innerHeight), e4[e4.currentMode].element.style.setProperty("--editor-bottom", (t6 - e4.toolbar.element.offsetHeight) / 2 + "px");
            }
          };
          function G2() {
            window.removeEventListener("resize", e3);
          }
          var K2, F, Z = function(t6) {
            z2(t6), G2(), window.addEventListener("resize", e3 = function() {
              W(t6), z2(t6);
            });
            var n2 = (0, d3.pK)() && localStorage.getItem(t6.options.cache.id);
            return t6.options.cache.enable && n2 || (t6.options.value ? n2 = t6.options.value : t6.originalInnerHTML ? n2 = t6.lute.HTML2Md(t6.originalInnerHTML) : t6.options.cache.enable || (n2 = "")), n2 || "";
          }, J = function(e4) {
            clearTimeout(e4[e4.currentMode].hlToolbarTimeoutId), e4[e4.currentMode].hlToolbarTimeoutId = window.setTimeout(function() {
              if (e4[e4.currentMode].element.getAttribute("contenteditable") !== "false" && (0, N.Gb)(e4[e4.currentMode].element)) {
                c2(e4.toolbar.elements, i2.g.EDIT_TOOLBARS), p(e4.toolbar.elements, i2.g.EDIT_TOOLBARS);
                var t6 = (0, N.zh)(e4), n2 = t6.startContainer;
                t6.startContainer.nodeType === 3 && (n2 = t6.startContainer.parentElement), n2.classList.contains("vditor-reset") && (n2 = n2.childNodes[t6.startOffset]), (e4.currentMode === "sv" ? (0, y3.a1)(n2, "data-type", "heading") : (0, b2.W)(n2)) && u2(e4.toolbar.elements, ["headings"]), (e4.currentMode === "sv" ? (0, y3.a1)(n2, "data-type", "blockquote") : (0, y3.lG)(n2, "BLOCKQUOTE")) && u2(e4.toolbar.elements, ["quote"]), (0, y3.a1)(n2, "data-type", "strong") && u2(e4.toolbar.elements, ["bold"]), (0, y3.a1)(n2, "data-type", "em") && u2(e4.toolbar.elements, ["italic"]), (0, y3.a1)(n2, "data-type", "s") && u2(e4.toolbar.elements, ["strike"]), (0, y3.a1)(n2, "data-type", "a") && u2(e4.toolbar.elements, ["link"]);
                var r2 = (0, y3.lG)(n2, "LI");
                r2 ? (r2.classList.contains("vditor-task") ? u2(e4.toolbar.elements, ["check"]) : r2.parentElement.tagName === "OL" ? u2(e4.toolbar.elements, ["ordered-list"]) : r2.parentElement.tagName === "UL" && u2(e4.toolbar.elements, ["list"]), p(e4.toolbar.elements, ["outdent", "indent"])) : m3(e4.toolbar.elements, ["outdent", "indent"]), (0, y3.a1)(n2, "data-type", "code-block") && (m3(e4.toolbar.elements, ["headings", "bold", "italic", "strike", "line", "quote", "list", "ordered-list", "check", "code", "inline-code", "upload", "link", "table", "record"]), u2(e4.toolbar.elements, ["code"])), (0, y3.a1)(n2, "data-type", "code") && (m3(e4.toolbar.elements, ["headings", "bold", "italic", "strike", "line", "quote", "list", "ordered-list", "check", "code", "upload", "link", "table", "record"]), u2(e4.toolbar.elements, ["inline-code"])), (0, y3.a1)(n2, "data-type", "table") && m3(e4.toolbar.elements, ["headings", "list", "ordered-list", "check", "line", "quote", "code", "table"]);
              }
            }, 200);
          }, X2 = function(e4, t6) {
            t6 === void 0 && (t6 = {enableAddUndoStack: true, enableHint: false, enableInput: true}), t6.enableHint && e4.hint.render(e4), clearTimeout(e4.wysiwyg.afterRenderTimeoutId), e4.wysiwyg.afterRenderTimeoutId = window.setTimeout(function() {
              if (!e4.wysiwyg.composingLock) {
                var n2 = a3(e4);
                typeof e4.options.input == "function" && t6.enableInput && e4.options.input(n2), e4.options.counter.enable && e4.counter.render(e4, n2), e4.options.cache.enable && (0, d3.pK)() && (localStorage.setItem(e4.options.cache.id, n2), e4.options.cache.after && e4.options.cache.after(n2)), e4.devtools && e4.devtools.renderEchart(e4), t6.enableAddUndoStack && e4.undo.addToUndoStack(e4);
              }
            }, e4.options.undoDelay);
          }, Y2 = function(e4) {
            for (var t6 = "", n2 = e4.nextSibling; n2; )
              n2.nodeType === 3 ? t6 += n2.textContent : t6 += n2.outerHTML, n2 = n2.nextSibling;
            return t6;
          }, Q2 = function(e4) {
            for (var t6 = "", n2 = e4.previousSibling; n2; )
              t6 = n2.nodeType === 3 ? n2.textContent + t6 : n2.outerHTML + t6, n2 = n2.previousSibling;
            return t6;
          }, $3 = function(e4, t6) {
            Array.from(e4.wysiwyg.element.childNodes).find(function(n2) {
              if (n2.nodeType === 3) {
                var r2 = document.createElement("p");
                r2.setAttribute("data-block", "0"), r2.textContent = n2.textContent;
                var i3 = t6.startContainer.nodeType === 3 ? t6.startOffset : n2.textContent.length;
                return n2.parentNode.insertBefore(r2, n2), n2.remove(), t6.setStart(r2.firstChild, Math.min(r2.firstChild.textContent.length, i3)), t6.collapse(true), (0, N.Hc)(t6), true;
              }
              if (!n2.getAttribute("data-block"))
                return n2.tagName === "P" ? n2.remove() : (n2.tagName === "DIV" ? (t6.insertNode(document.createElement("wbr")), n2.outerHTML = '<p data-block="0">' + n2.innerHTML + "</p>") : n2.tagName === "BR" ? n2.outerHTML = '<p data-block="0">' + n2.outerHTML + "<wbr></p>" : (t6.insertNode(document.createElement("wbr")), n2.outerHTML = '<p data-block="0">' + n2.outerHTML + "</p>"), (0, N.ib)(e4.wysiwyg.element, t6), t6 = getSelection().getRangeAt(0)), true;
            });
          }, ee = function(e4, t6) {
            var n2 = (0, N.zh)(e4), r2 = (0, y3.F9)(n2.startContainer);
            r2 || (r2 = n2.startContainer.childNodes[n2.startOffset]), r2 || e4.wysiwyg.element.children.length !== 0 || (r2 = e4.wysiwyg.element), r2 && !r2.classList.contains("vditor-wysiwyg__block") && (n2.insertNode(document.createElement("wbr")), r2.innerHTML.trim() === "<wbr>" && (r2.innerHTML = "<wbr><br>"), r2.tagName === "BLOCKQUOTE" || r2.classList.contains("vditor-reset") ? r2.innerHTML = "<" + t6 + ' data-block="0">' + r2.innerHTML.trim() + "</" + t6 + ">" : r2.outerHTML = "<" + t6 + ' data-block="0">' + r2.innerHTML.trim() + "</" + t6 + ">", (0, N.ib)(e4.wysiwyg.element, n2), D2(e4));
          }, te = function(e4) {
            var t6 = getSelection().getRangeAt(0), n2 = (0, y3.F9)(t6.startContainer);
            n2 || (n2 = t6.startContainer.childNodes[t6.startOffset]), n2 && (t6.insertNode(document.createElement("wbr")), n2.outerHTML = '<p data-block="0">' + n2.innerHTML + "</p>", (0, N.ib)(e4.wysiwyg.element, t6)), e4.wysiwyg.popover.style.display = "none";
          }, ne = function(e4, t6, n2) {
            n2 === void 0 && (n2 = true);
            var r2 = e4.previousElementSibling, i3 = r2.ownerDocument.createRange();
            r2.tagName === "CODE" ? (r2.style.display = "inline-block", n2 ? i3.setStart(r2.firstChild, 1) : i3.selectNodeContents(r2)) : (r2.style.display = "block", r2.firstChild.firstChild || r2.firstChild.appendChild(document.createTextNode("")), i3.selectNodeContents(r2.firstChild)), n2 ? i3.collapse(true) : i3.collapse(false), (0, N.Hc)(i3), e4.firstElementChild.classList.contains("language-mindmap") || Me(t6);
          }, re = function(e4, t6) {
            if (R2("\u21E7\u2318X", t6)) {
              var n2 = e4.wysiwyg.popover.querySelector('[data-type="remove"]');
              if (n2)
                return n2.click(), t6.preventDefault(), true;
            }
          }, ie = function(e4) {
            clearTimeout(e4.wysiwyg.hlToolbarTimeoutId), e4.wysiwyg.hlToolbarTimeoutId = window.setTimeout(function() {
              if (e4.wysiwyg.element.getAttribute("contenteditable") !== "false" && (0, N.Gb)(e4.wysiwyg.element)) {
                c2(e4.toolbar.elements, i2.g.EDIT_TOOLBARS), p(e4.toolbar.elements, i2.g.EDIT_TOOLBARS);
                var t6 = getSelection().getRangeAt(0), n2 = t6.startContainer;
                n2 = t6.startContainer.nodeType === 3 ? t6.startContainer.parentElement : n2.childNodes[t6.startOffset >= n2.childNodes.length ? n2.childNodes.length - 1 : t6.startOffset];
                var r2 = (0, y3.a1)(n2, "data-type", "footnotes-block");
                if (r2)
                  return e4.wysiwyg.popover.innerHTML = "", de(r2, e4), void oe(e4, r2);
                var o2 = (0, y3.lG)(n2, "LI");
                o2 ? (o2.classList.contains("vditor-task") ? u2(e4.toolbar.elements, ["check"]) : o2.parentElement.tagName === "OL" ? u2(e4.toolbar.elements, ["ordered-list"]) : o2.parentElement.tagName === "UL" && u2(e4.toolbar.elements, ["list"]), p(e4.toolbar.elements, ["outdent", "indent"])) : m3(e4.toolbar.elements, ["outdent", "indent"]), (0, y3.lG)(n2, "BLOCKQUOTE") && u2(e4.toolbar.elements, ["quote"]), ((0, y3.lG)(n2, "B") || (0, y3.lG)(n2, "STRONG")) && u2(e4.toolbar.elements, ["bold"]), ((0, y3.lG)(n2, "I") || (0, y3.lG)(n2, "EM")) && u2(e4.toolbar.elements, ["italic"]), ((0, y3.lG)(n2, "STRIKE") || (0, y3.lG)(n2, "S")) && u2(e4.toolbar.elements, ["strike"]), e4.wysiwyg.element.querySelectorAll(".vditor-comment--focus").forEach(function(e5) {
                  e5.classList.remove("vditor-comment--focus");
                });
                var a4 = (0, y3.fb)(n2, "vditor-comment");
                if (a4) {
                  var l2 = a4.getAttribute("data-cmtids").split(" ");
                  if (l2.length > 1 && a4.nextSibling.isSameNode(a4.nextElementSibling)) {
                    var s4 = a4.nextElementSibling.getAttribute("data-cmtids").split(" ");
                    l2.find(function(e5) {
                      if (s4.includes(e5))
                        return l2 = [e5], true;
                    });
                  }
                  e4.wysiwyg.element.querySelectorAll(".vditor-comment").forEach(function(e5) {
                    e5.getAttribute("data-cmtids").indexOf(l2[0]) > -1 && e5.classList.add("vditor-comment--focus");
                  });
                }
                var f2 = (0, y3.lG)(n2, "A");
                f2 && u2(e4.toolbar.elements, ["link"]);
                var h4 = (0, y3.lG)(n2, "TABLE"), v2 = (0, b2.W)(n2);
                (0, y3.lG)(n2, "CODE") ? (0, y3.lG)(n2, "PRE") ? (m3(e4.toolbar.elements, ["headings", "bold", "italic", "strike", "line", "quote", "list", "ordered-list", "check", "code", "inline-code", "upload", "link", "table", "record"]), u2(e4.toolbar.elements, ["code"])) : (m3(e4.toolbar.elements, ["headings", "bold", "italic", "strike", "line", "quote", "list", "ordered-list", "check", "code", "upload", "link", "table", "record"]), u2(e4.toolbar.elements, ["inline-code"])) : v2 ? (m3(e4.toolbar.elements, ["bold"]), u2(e4.toolbar.elements, ["headings"])) : h4 && m3(e4.toolbar.elements, ["table"]);
                var g2 = (0, y3.fb)(n2, "vditor-toc");
                if (g2)
                  return e4.wysiwyg.popover.innerHTML = "", de(g2, e4), void oe(e4, g2);
                var w3 = (0, b2.S)(n2, "BLOCKQUOTE");
                if (w3 && (e4.wysiwyg.popover.innerHTML = "", le(t6, w3, e4), se(t6, w3, e4), de(w3, e4), oe(e4, w3)), o2 && (e4.wysiwyg.popover.innerHTML = "", le(t6, o2, e4), se(t6, o2, e4), de(o2, e4), oe(e4, o2)), h4) {
                  e4.options.lang, e4.options;
                  e4.wysiwyg.popover.innerHTML = "";
                  var E3 = function() {
                    var e5 = h4.rows.length, t7 = h4.rows[0].cells.length, n3 = parseInt(R3.value, 10) || e5, r3 = parseInt(q3.value, 10) || t7;
                    if (n3 !== e5 || t7 !== r3) {
                      if (t7 !== r3)
                        for (var i3 = r3 - t7, o3 = 0; o3 < h4.rows.length; o3++)
                          if (i3 > 0)
                            for (var a5 = 0; a5 < i3; a5++)
                              o3 === 0 ? h4.rows[o3].lastElementChild.insertAdjacentHTML("afterend", "<th> </th>") : h4.rows[o3].lastElementChild.insertAdjacentHTML("afterend", "<td> </td>");
                          else
                            for (var l3 = t7 - 1; l3 >= r3; l3--)
                              h4.rows[o3].cells[l3].remove();
                      if (e5 !== n3) {
                        var s5 = n3 - e5;
                        if (s5 > 0) {
                          for (var d4 = "<tr>", c3 = 0; c3 < r3; c3++)
                            d4 += "<td> </td>";
                          for (var u3 = 0; u3 < s5; u3++)
                            h4.querySelector("tbody") ? h4.querySelector("tbody").insertAdjacentHTML("beforeend", d4) : h4.querySelector("thead").insertAdjacentHTML("afterend", d4 + "</tr>");
                        } else
                          for (c3 = e5 - 1; c3 >= n3; c3--)
                            h4.rows[c3].remove(), h4.rows.length === 1 && h4.querySelector("tbody").remove();
                      }
                    }
                  }, k3 = function(n3) {
                    it(h4, n3), n3 === "right" ? (M4.classList.remove("vditor-icon--current"), T3.classList.remove("vditor-icon--current"), A2.classList.add("vditor-icon--current")) : n3 === "center" ? (M4.classList.remove("vditor-icon--current"), A2.classList.remove("vditor-icon--current"), T3.classList.add("vditor-icon--current")) : (T3.classList.remove("vditor-icon--current"), A2.classList.remove("vditor-icon--current"), M4.classList.add("vditor-icon--current")), (0, N.Hc)(t6), X2(e4);
                  }, S4 = (0, y3.lG)(n2, "TD"), L3 = (0, y3.lG)(n2, "TH"), C2 = "left";
                  S4 ? C2 = S4.getAttribute("align") || "left" : L3 && (C2 = L3.getAttribute("align") || "center");
                  var M4 = document.createElement("button");
                  M4.setAttribute("type", "button"), M4.setAttribute("aria-label", window.VditorI18n.alignLeft + "<" + (0, d3.ns)("\u21E7\u2318L") + ">"), M4.setAttribute("data-type", "left"), M4.innerHTML = '<svg><use xlink:href="#vditor-icon-align-left"></use></svg>', M4.className = "vditor-icon vditor-tooltipped vditor-tooltipped__n" + (C2 === "left" ? " vditor-icon--current" : ""), M4.onclick = function() {
                    k3("left");
                  };
                  var T3 = document.createElement("button");
                  T3.setAttribute("type", "button"), T3.setAttribute("aria-label", window.VditorI18n.alignCenter + "<" + (0, d3.ns)("\u21E7\u2318C") + ">"), T3.setAttribute("data-type", "center"), T3.innerHTML = '<svg><use xlink:href="#vditor-icon-align-center"></use></svg>', T3.className = "vditor-icon vditor-tooltipped vditor-tooltipped__n" + (C2 === "center" ? " vditor-icon--current" : ""), T3.onclick = function() {
                    k3("center");
                  };
                  var A2 = document.createElement("button");
                  A2.setAttribute("type", "button"), A2.setAttribute("aria-label", window.VditorI18n.alignRight + "<" + (0, d3.ns)("\u21E7\u2318R") + ">"), A2.setAttribute("data-type", "right"), A2.innerHTML = '<svg><use xlink:href="#vditor-icon-align-right"></use></svg>', A2.className = "vditor-icon vditor-tooltipped vditor-tooltipped__n" + (C2 === "right" ? " vditor-icon--current" : ""), A2.onclick = function() {
                    k3("right");
                  };
                  var _2 = document.createElement("button");
                  _2.setAttribute("type", "button"), _2.setAttribute("aria-label", window.VditorI18n.insertRowBelow + "<" + (0, d3.ns)("\u2318=") + ">"), _2.setAttribute("data-type", "insertRow"), _2.innerHTML = '<svg><use xlink:href="#vditor-icon-insert-row"></use></svg>', _2.className = "vditor-icon vditor-tooltipped vditor-tooltipped__n", _2.onclick = function() {
                    var n3 = getSelection().getRangeAt(0).startContainer, r3 = (0, y3.lG)(n3, "TD") || (0, y3.lG)(n3, "TH");
                    r3 && ut(e4, t6, r3);
                  };
                  var x3 = document.createElement("button");
                  x3.setAttribute("type", "button"), x3.setAttribute("aria-label", window.VditorI18n.insertRowAbove + "<" + (0, d3.ns)("\u21E7\u2318F") + ">"), x3.setAttribute("data-type", "insertRow"), x3.innerHTML = '<svg><use xlink:href="#vditor-icon-insert-rowb"></use></svg>', x3.className = "vditor-icon vditor-tooltipped vditor-tooltipped__n", x3.onclick = function() {
                    var n3 = getSelection().getRangeAt(0).startContainer, r3 = (0, y3.lG)(n3, "TD") || (0, y3.lG)(n3, "TH");
                    r3 && pt(e4, t6, r3);
                  };
                  var D3 = document.createElement("button");
                  D3.setAttribute("type", "button"), D3.setAttribute("aria-label", window.VditorI18n.insertColumnRight + "<" + (0, d3.ns)("\u21E7\u2318=") + ">"), D3.setAttribute("data-type", "insertColumn"), D3.innerHTML = '<svg><use xlink:href="#vditor-icon-insert-column"></use></svg>', D3.className = "vditor-icon vditor-tooltipped vditor-tooltipped__n", D3.onclick = function() {
                    var t7 = getSelection().getRangeAt(0).startContainer, n3 = (0, y3.lG)(t7, "TD") || (0, y3.lG)(t7, "TH");
                    n3 && mt(e4, h4, n3);
                  };
                  var O3 = document.createElement("button");
                  O3.setAttribute("type", "button"), O3.setAttribute("aria-label", window.VditorI18n.insertColumnLeft + "<" + (0, d3.ns)("\u21E7\u2318G") + ">"), O3.setAttribute("data-type", "insertColumn"), O3.innerHTML = '<svg><use xlink:href="#vditor-icon-insert-columnb"></use></svg>', O3.className = "vditor-icon vditor-tooltipped vditor-tooltipped__n", O3.onclick = function() {
                    var t7 = getSelection().getRangeAt(0).startContainer, n3 = (0, y3.lG)(t7, "TD") || (0, y3.lG)(t7, "TH");
                    n3 && mt(e4, h4, n3, "beforebegin");
                  };
                  var I3 = document.createElement("button");
                  I3.setAttribute("type", "button"), I3.setAttribute("aria-label", window.VditorI18n["delete-row"] + "<" + (0, d3.ns)("\u2318-") + ">"), I3.setAttribute("data-type", "deleteRow"), I3.innerHTML = '<svg><use xlink:href="#vditor-icon-delete-row"></use></svg>', I3.className = "vditor-icon vditor-tooltipped vditor-tooltipped__n", I3.onclick = function() {
                    var n3 = getSelection().getRangeAt(0).startContainer, r3 = (0, y3.lG)(n3, "TD") || (0, y3.lG)(n3, "TH");
                    r3 && ft(e4, t6, r3);
                  };
                  var j2 = document.createElement("button");
                  j2.setAttribute("type", "button"), j2.setAttribute("aria-label", window.VditorI18n["delete-column"] + "<" + (0, d3.ns)("\u21E7\u2318-") + ">"), j2.setAttribute("data-type", "deleteColumn"), j2.innerHTML = '<svg><use xlink:href="#vditor-icon-delete-column"></use></svg>', j2.className = "vditor-icon vditor-tooltipped vditor-tooltipped__n", j2.onclick = function() {
                    var n3 = getSelection().getRangeAt(0).startContainer, r3 = (0, y3.lG)(n3, "TD") || (0, y3.lG)(n3, "TH");
                    r3 && ht(e4, t6, h4, r3);
                  }, (Z2 = document.createElement("span")).setAttribute("aria-label", window.VditorI18n.row), Z2.className = "vditor-tooltipped vditor-tooltipped__n";
                  var R3 = document.createElement("input");
                  Z2.appendChild(R3), R3.type = "number", R3.min = "1", R3.className = "vditor-input", R3.style.width = "42px", R3.style.textAlign = "center", R3.setAttribute("placeholder", window.VditorI18n.row), R3.value = h4.rows.length.toString(), R3.oninput = function() {
                    E3();
                  }, R3.onkeydown = function(t7) {
                    if (!t7.isComposing)
                      return t7.key === "Tab" ? (q3.focus(), q3.select(), void t7.preventDefault()) : void re(e4, t7);
                  };
                  var P2 = document.createElement("span");
                  P2.setAttribute("aria-label", window.VditorI18n.column), P2.className = "vditor-tooltipped vditor-tooltipped__n";
                  var q3 = document.createElement("input");
                  P2.appendChild(q3), q3.type = "number", q3.min = "1", q3.className = "vditor-input", q3.style.width = "42px", q3.style.textAlign = "center", q3.setAttribute("placeholder", window.VditorI18n.column), q3.value = h4.rows[0].cells.length.toString(), q3.oninput = function() {
                    E3();
                  }, q3.onkeydown = function(t7) {
                    if (!t7.isComposing)
                      return t7.key === "Tab" ? (R3.focus(), R3.select(), void t7.preventDefault()) : void re(e4, t7);
                  }, le(t6, h4, e4), se(t6, h4, e4), de(h4, e4), e4.wysiwyg.popover.insertAdjacentElement("beforeend", M4), e4.wysiwyg.popover.insertAdjacentElement("beforeend", T3), e4.wysiwyg.popover.insertAdjacentElement("beforeend", A2), e4.wysiwyg.popover.insertAdjacentElement("beforeend", x3), e4.wysiwyg.popover.insertAdjacentElement("beforeend", _2), e4.wysiwyg.popover.insertAdjacentElement("beforeend", O3), e4.wysiwyg.popover.insertAdjacentElement("beforeend", D3), e4.wysiwyg.popover.insertAdjacentElement("beforeend", I3), e4.wysiwyg.popover.insertAdjacentElement("beforeend", j2), e4.wysiwyg.popover.insertAdjacentElement("beforeend", Z2), e4.wysiwyg.popover.insertAdjacentHTML("beforeend", " x "), e4.wysiwyg.popover.insertAdjacentElement("beforeend", P2), oe(e4, h4);
                }
                var B3 = (0, y3.a1)(n2, "data-type", "link-ref");
                B3 && ae(e4, B3);
                var V2 = (0, y3.a1)(n2, "data-type", "footnotes-ref");
                if (V2) {
                  e4.options.lang, e4.options;
                  e4.wysiwyg.popover.innerHTML = "", (Z2 = document.createElement("span")).setAttribute("aria-label", window.VditorI18n.footnoteRef + "<" + (0, d3.ns)("\u2325Enter") + ">"), Z2.className = "vditor-tooltipped vditor-tooltipped__n";
                  var U2 = document.createElement("input");
                  Z2.appendChild(U2), U2.className = "vditor-input", U2.setAttribute("placeholder", window.VditorI18n.footnoteRef + "<" + (0, d3.ns)("\u2325Enter") + ">"), U2.style.width = "120px", U2.value = V2.getAttribute("data-footnotes-label"), U2.oninput = function() {
                    U2.value.trim() !== "" && V2.setAttribute("data-footnotes-label", U2.value);
                  }, U2.onkeydown = function(n3) {
                    if (!n3.isComposing)
                      return (0, d3.yl)(n3) || n3.shiftKey || !n3.altKey || n3.key !== "Enter" ? void re(e4, n3) : (t6.selectNodeContents(V2), t6.collapse(false), (0, N.Hc)(t6), void n3.preventDefault());
                  }, de(V2, e4), e4.wysiwyg.popover.insertAdjacentElement("beforeend", Z2), oe(e4, V2);
                }
                var W2 = (0, y3.fb)(n2, "vditor-wysiwyg__block"), z3 = !!W2 && W2.getAttribute("data-type").indexOf("block") > -1;
                if (e4.wysiwyg.element.querySelectorAll(".vditor-wysiwyg__preview").forEach(function(e5) {
                  (!W2 || W2 && z3 && !W2.contains(e5)) && (e5.previousElementSibling.style.display = "none");
                }), W2 && z3) {
                  if (e4.wysiwyg.popover.innerHTML = "", le(t6, W2, e4), se(t6, W2, e4), de(W2, e4), W2.getAttribute("data-type") === "code-block") {
                    var G3 = document.createElement("span");
                    G3.setAttribute("aria-label", window.VditorI18n.language + "<" + (0, d3.ns)("\u2325Enter") + ">"), G3.className = "vditor-tooltipped vditor-tooltipped__n";
                    var K3 = document.createElement("input");
                    G3.appendChild(K3);
                    var F2 = W2.firstElementChild.firstElementChild;
                    K3.className = "vditor-input", K3.setAttribute("placeholder", window.VditorI18n.language + "<" + (0, d3.ns)("\u2325Enter") + ">"), K3.value = F2.className.indexOf("language-") > -1 ? F2.className.split("-")[1].split(" ")[0] : "", K3.oninput = function(n3) {
                      K3.value.trim() !== "" ? F2.className = "language-" + K3.value : (F2.className = "", e4.hint.recentLanguage = ""), W2.lastElementChild.classList.contains("vditor-wysiwyg__preview") && (W2.lastElementChild.innerHTML = W2.firstElementChild.innerHTML, H3(W2.lastElementChild, e4)), X2(e4), n3.detail === 1 && (t6.setStart(F2.firstChild, 0), t6.collapse(true), (0, N.Hc)(t6));
                    }, K3.onkeydown = function(n3) {
                      if (!n3.isComposing && !re(e4, n3)) {
                        if (n3.key === "Escape" && e4.hint.element.style.display === "block")
                          return e4.hint.element.style.display = "none", void n3.preventDefault();
                        e4.hint.select(n3, e4), (0, d3.yl)(n3) || n3.shiftKey || n3.key !== "Enter" || (t6.setStart(F2.firstChild, 0), t6.collapse(true), (0, N.Hc)(t6), n3.preventDefault(), n3.stopPropagation());
                      }
                    }, K3.onkeyup = function(t7) {
                      if (!t7.isComposing && t7.key !== "Enter" && t7.key !== "ArrowUp" && t7.key !== "Escape" && t7.key !== "ArrowDown") {
                        var n3 = [], r3 = K3.value.substring(0, K3.selectionStart);
                        i2.g.CODE_LANGUAGES.forEach(function(e5) {
                          e5.indexOf(r3.toLowerCase()) > -1 && n3.push({html: e5, value: e5});
                        }), e4.hint.genHTML(n3, r3, e4), t7.preventDefault();
                      }
                    }, e4.wysiwyg.popover.insertAdjacentElement("beforeend", G3);
                  }
                  oe(e4, W2);
                } else
                  W2 = void 0;
                if (v2) {
                  var Z2;
                  e4.wysiwyg.popover.innerHTML = "", (Z2 = document.createElement("span")).setAttribute("aria-label", "ID<" + (0, d3.ns)("\u2325Enter") + ">"), Z2.className = "vditor-tooltipped vditor-tooltipped__n";
                  var J2 = document.createElement("input");
                  Z2.appendChild(J2), J2.className = "vditor-input", J2.setAttribute("placeholder", "ID<" + (0, d3.ns)("\u2325Enter") + ">"), J2.style.width = "120px", J2.value = v2.getAttribute("data-id") || "", J2.oninput = function() {
                    v2.setAttribute("data-id", J2.value);
                  }, J2.onkeydown = function(n3) {
                    if (!n3.isComposing)
                      return (0, d3.yl)(n3) || n3.shiftKey || !n3.altKey || n3.key !== "Enter" ? void re(e4, n3) : (t6.selectNodeContents(v2), t6.collapse(false), (0, N.Hc)(t6), void n3.preventDefault());
                  }, le(t6, v2, e4), se(t6, v2, e4), de(v2, e4), e4.wysiwyg.popover.insertAdjacentElement("beforeend", Z2), oe(e4, v2);
                }
                if (f2 && ue(e4, f2), !(w3 || o2 || h4 || W2 || f2 || B3 || V2 || v2 || g2)) {
                  var Y3 = (0, y3.a1)(n2, "data-block", "0");
                  Y3 && Y3.parentElement.isEqualNode(e4.wysiwyg.element) ? (e4.wysiwyg.popover.innerHTML = "", le(t6, Y3, e4), se(t6, Y3, e4), de(Y3, e4), oe(e4, Y3)) : e4.wysiwyg.popover.style.display = "none";
                }
                e4.wysiwyg.element.querySelectorAll('span[data-type="backslash"] > span').forEach(function(e5) {
                  e5.style.display = "none";
                });
                var Q3 = (0, y3.a1)(t6.startContainer, "data-type", "backslash");
                Q3 && (Q3.querySelector("span").style.display = "inline");
              }
            }, 200);
          }, oe = function(e4, t6) {
            var n2 = t6, r2 = (0, y3.lG)(t6, "TABLE");
            r2 && (n2 = r2), e4.wysiwyg.popover.style.left = "0", e4.wysiwyg.popover.style.display = "block", e4.wysiwyg.popover.style.top = Math.max(-8, n2.offsetTop - 21 - e4.wysiwyg.element.scrollTop) + "px", e4.wysiwyg.popover.style.left = Math.min(n2.offsetLeft, e4.wysiwyg.element.clientWidth - e4.wysiwyg.popover.clientWidth) + "px", e4.wysiwyg.popover.setAttribute("data-top", (n2.offsetTop - 21).toString());
          }, ae = function(e4, t6) {
            e4.wysiwyg.popover.innerHTML = "";
            var n2 = function() {
              i3.value.trim() !== "" && (t6.tagName === "IMG" ? t6.setAttribute("alt", i3.value) : t6.textContent = i3.value), a4.value.trim() !== "" && t6.setAttribute("data-link-label", a4.value);
            }, r2 = document.createElement("span");
            r2.setAttribute("aria-label", window.VditorI18n.textIsNotEmpty), r2.className = "vditor-tooltipped vditor-tooltipped__n";
            var i3 = document.createElement("input");
            r2.appendChild(i3), i3.className = "vditor-input", i3.setAttribute("placeholder", window.VditorI18n.textIsNotEmpty), i3.style.width = "120px", i3.value = t6.getAttribute("alt") || t6.textContent, i3.oninput = function() {
              n2();
            }, i3.onkeydown = function(n3) {
              re(e4, n3) || ce(e4, t6, n3, a4);
            };
            var o2 = document.createElement("span");
            o2.setAttribute("aria-label", window.VditorI18n.linkRef), o2.className = "vditor-tooltipped vditor-tooltipped__n";
            var a4 = document.createElement("input");
            o2.appendChild(a4), a4.className = "vditor-input", a4.setAttribute("placeholder", window.VditorI18n.linkRef), a4.value = t6.getAttribute("data-link-label"), a4.oninput = function() {
              n2();
            }, a4.onkeydown = function(n3) {
              re(e4, n3) || ce(e4, t6, n3, i3);
            }, de(t6, e4), e4.wysiwyg.popover.insertAdjacentElement("beforeend", r2), e4.wysiwyg.popover.insertAdjacentElement("beforeend", o2), oe(e4, t6);
          }, le = function(e4, t6, n2) {
            var r2 = t6.previousElementSibling;
            if (r2 && (t6.parentElement.isEqualNode(n2.wysiwyg.element) || t6.tagName === "LI")) {
              var i3 = document.createElement("button");
              i3.setAttribute("type", "button"), i3.setAttribute("data-type", "up"), i3.setAttribute("aria-label", window.VditorI18n.up + "<" + (0, d3.ns)("\u21E7\u2318U") + ">"), i3.innerHTML = '<svg><use xlink:href="#vditor-icon-up"></use></svg>', i3.className = "vditor-icon vditor-tooltipped vditor-tooltipped__n", i3.onclick = function() {
                e4.insertNode(document.createElement("wbr")), r2.insertAdjacentElement("beforebegin", t6), (0, N.ib)(n2.wysiwyg.element, e4), X2(n2), ie(n2), Me(n2);
              }, n2.wysiwyg.popover.insertAdjacentElement("beforeend", i3);
            }
          }, se = function(e4, t6, n2) {
            var r2 = t6.nextElementSibling;
            if (r2 && (t6.parentElement.isEqualNode(n2.wysiwyg.element) || t6.tagName === "LI")) {
              var i3 = document.createElement("button");
              i3.setAttribute("type", "button"), i3.setAttribute("data-type", "down"), i3.setAttribute("aria-label", window.VditorI18n.down + "<" + (0, d3.ns)("\u21E7\u2318D") + ">"), i3.innerHTML = '<svg><use xlink:href="#vditor-icon-down"></use></svg>', i3.className = "vditor-icon vditor-tooltipped vditor-tooltipped__n", i3.onclick = function() {
                e4.insertNode(document.createElement("wbr")), r2.insertAdjacentElement("afterend", t6), (0, N.ib)(n2.wysiwyg.element, e4), X2(n2), ie(n2), Me(n2);
              }, n2.wysiwyg.popover.insertAdjacentElement("beforeend", i3);
            }
          }, de = function(e4, t6) {
            var n2 = document.createElement("button");
            n2.setAttribute("type", "button"), n2.setAttribute("data-type", "remove"), n2.setAttribute("aria-label", window.VditorI18n.remove + "<" + (0, d3.ns)("\u21E7\u2318X") + ">"), n2.innerHTML = '<svg><use xlink:href="#vditor-icon-trashcan"></use></svg>', n2.className = "vditor-icon vditor-tooltipped vditor-tooltipped__n", n2.onclick = function() {
              var n3 = (0, N.zh)(t6);
              n3.setStartAfter(e4), (0, N.Hc)(n3), e4.remove(), X2(t6), ie(t6), ["H1", "H2", "H3", "H4", "H5", "H6"].includes(e4.tagName) && D2(t6);
            }, t6.wysiwyg.popover.insertAdjacentElement("beforeend", n2);
          }, ce = function(e4, t6, n2, r2) {
            if (!n2.isComposing) {
              if (n2.key === "Tab")
                return r2.focus(), r2.select(), void n2.preventDefault();
              if (!(0, d3.yl)(n2) && !n2.shiftKey && n2.altKey && n2.key === "Enter") {
                var o2 = (0, N.zh)(e4);
                t6.insertAdjacentHTML("afterend", i2.g.ZWSP), o2.setStartAfter(t6.nextSibling), o2.collapse(true), (0, N.Hc)(o2), n2.preventDefault();
              }
            }
          }, ue = function(e4, t6) {
            e4.wysiwyg.popover.innerHTML = "";
            var n2 = function() {
              i3.value.trim() !== "" && (t6.innerHTML = i3.value), t6.setAttribute("href", a4.value), t6.setAttribute("title", s4.value), X2(e4);
            };
            t6.querySelectorAll("[data-marker]").forEach(function(e5) {
              e5.removeAttribute("data-marker");
            });
            var r2 = document.createElement("span");
            r2.setAttribute("aria-label", window.VditorI18n.textIsNotEmpty), r2.className = "vditor-tooltipped vditor-tooltipped__n";
            var i3 = document.createElement("input");
            r2.appendChild(i3), i3.className = "vditor-input", i3.setAttribute("placeholder", window.VditorI18n.textIsNotEmpty), i3.style.width = "120px", i3.value = t6.innerHTML || "", i3.oninput = function() {
              n2();
            }, i3.onkeydown = function(n3) {
              re(e4, n3) || ce(e4, t6, n3, a4);
            };
            var o2 = document.createElement("span");
            o2.setAttribute("aria-label", window.VditorI18n.link), o2.className = "vditor-tooltipped vditor-tooltipped__n";
            var a4 = document.createElement("input");
            o2.appendChild(a4), a4.className = "vditor-input", a4.setAttribute("placeholder", window.VditorI18n.link), a4.value = t6.getAttribute("href") || "", a4.oninput = function() {
              n2();
            }, a4.onkeydown = function(n3) {
              re(e4, n3) || ce(e4, t6, n3, s4);
            };
            var l2 = document.createElement("span");
            l2.setAttribute("aria-label", window.VditorI18n.tooltipText), l2.className = "vditor-tooltipped vditor-tooltipped__n";
            var s4 = document.createElement("input");
            l2.appendChild(s4), s4.className = "vditor-input", s4.setAttribute("placeholder", window.VditorI18n.tooltipText), s4.style.width = "60px", s4.value = t6.getAttribute("title") || "", s4.oninput = function() {
              n2();
            }, s4.onkeydown = function(n3) {
              re(e4, n3) || ce(e4, t6, n3, i3);
            }, de(t6, e4), e4.wysiwyg.popover.insertAdjacentElement("beforeend", r2), e4.wysiwyg.popover.insertAdjacentElement("beforeend", o2), e4.wysiwyg.popover.insertAdjacentElement("beforeend", l2), oe(e4, t6);
          }, pe = function(e4) {
            e4.currentMode === "wysiwyg" ? ie(e4) : e4.currentMode === "ir" && J(e4);
          }, me = function(e4, t6, n2) {
            n2 === void 0 && (n2 = {enableAddUndoStack: true, enableHint: false, enableInput: true});
            var r2 = e4.wysiwyg.element;
            r2.innerHTML = e4.lute.Md2VditorDOM(t6), r2.querySelectorAll(".vditor-wysiwyg__preview[data-render='2']").forEach(function(t7) {
              H3(t7, e4), t7.previousElementSibling.setAttribute("style", "display:none");
            }), X2(e4, n2);
          }, fe = function(e4, t6, n2) {
            for (var r2 = e4.startContainer.parentElement, o2 = false, a4 = "", l2 = "", s4 = function(e5) {
              var t7 = Q2(e5.startContainer), n3 = Y2(e5.startContainer), r3 = e5.startContainer.textContent, o3 = e5.startOffset, a5 = "", l3 = "";
              return (r3.substr(0, o3) !== "" && r3.substr(0, o3) !== i2.g.ZWSP || t7) && (a5 = "" + t7 + r3.substr(0, o3)), (r3.substr(o3) !== "" && r3.substr(o3) !== i2.g.ZWSP || n3) && (l3 = "" + r3.substr(o3) + n3), {afterHTML: l3, beforeHTML: a5};
            }(e4), d4 = s4.beforeHTML, c3 = s4.afterHTML; r2 && !o2; ) {
              var u3 = r2.tagName;
              if (u3 === "STRIKE" && (u3 = "S"), u3 === "I" && (u3 = "EM"), u3 === "B" && (u3 = "STRONG"), u3 === "S" || u3 === "STRONG" || u3 === "EM") {
                var p2 = "", m4 = "", f2 = "";
                r2.parentElement.getAttribute("data-block") !== "0" && (m4 = Q2(r2), f2 = Y2(r2)), (d4 || m4) && (d4 = p2 = m4 + "<" + u3 + ">" + d4 + "</" + u3 + ">"), (n2 === "bold" && u3 === "STRONG" || n2 === "italic" && u3 === "EM" || n2 === "strikeThrough" && u3 === "S") && (p2 += "" + a4 + i2.g.ZWSP + "<wbr>" + l2, o2 = true), (c3 || f2) && (p2 += c3 = "<" + u3 + ">" + c3 + "</" + u3 + ">" + f2), r2.parentElement.getAttribute("data-block") !== "0" ? (r2 = r2.parentElement).innerHTML = p2 : (r2.outerHTML = p2, r2 = r2.parentElement), a4 = "<" + u3 + ">" + a4, l2 = "</" + u3 + ">" + l2;
              } else
                o2 = true;
            }
            (0, N.ib)(t6.wysiwyg.element, e4);
          }, he = function(e4, t6) {
            var n2, r2 = this;
            this.element = document.createElement("div"), t6.className && (n2 = this.element.classList).add.apply(n2, t6.className.split(" "));
            var o2 = t6.hotkey ? " <" + (0, d3.ns)(t6.hotkey) + ">" : "";
            t6.level === 2 && (o2 = t6.hotkey ? " &lt;" + (0, d3.ns)(t6.hotkey) + "&gt;" : "");
            var a4 = t6.tip ? t6.tip + o2 : "" + window.VditorI18n[t6.name] + o2, l2 = t6.name === "upload" ? "div" : "button";
            if (t6.level === 2)
              this.element.innerHTML = "<" + l2 + ' data-type="' + t6.name + '">' + a4 + "</" + l2 + ">";
            else {
              this.element.classList.add("vditor-toolbar__item");
              var s4 = document.createElement(l2);
              s4.setAttribute("data-type", t6.name), s4.className = "vditor-tooltipped vditor-tooltipped__" + t6.tipPosition, s4.setAttribute("aria-label", a4), s4.innerHTML = t6.icon, this.element.appendChild(s4);
            }
            t6.prefix && this.element.children[0].addEventListener((0, d3.Le)(), function(n3) {
              n3.preventDefault(), r2.element.firstElementChild.classList.contains(i2.g.CLASS_MENU_DISABLED) || (e4.currentMode === "wysiwyg" ? function(e5, t7, n4) {
                if (!(e5.wysiwyg.composingLock && n4 instanceof CustomEvent)) {
                  var r3 = true, o3 = true;
                  e5.wysiwyg.element.querySelector("wbr") && e5.wysiwyg.element.querySelector("wbr").remove();
                  var a5 = (0, N.zh)(e5), l3 = t7.getAttribute("data-type");
                  if (t7.classList.contains("vditor-menu--current"))
                    if (l3 === "strike" && (l3 = "strikeThrough"), l3 === "quote") {
                      var s5 = (0, y3.lG)(a5.startContainer, "BLOCKQUOTE");
                      s5 || (s5 = a5.startContainer.childNodes[a5.startOffset]), s5 && (r3 = false, t7.classList.remove("vditor-menu--current"), a5.insertNode(document.createElement("wbr")), s5.outerHTML = s5.innerHTML.trim() === "" ? '<p data-block="0">' + s5.innerHTML + "</p>" : s5.innerHTML, (0, N.ib)(e5.wysiwyg.element, a5));
                    } else if (l3 === "inline-code") {
                      var d4 = (0, y3.lG)(a5.startContainer, "CODE");
                      d4 || (d4 = a5.startContainer.childNodes[a5.startOffset]), d4 && (d4.outerHTML = d4.innerHTML.replace(i2.g.ZWSP, "") + "<wbr>", (0, N.ib)(e5.wysiwyg.element, a5));
                    } else
                      l3 === "link" ? a5.collapsed ? (a5.selectNode(a5.startContainer.parentElement), document.execCommand("unlink", false, "")) : document.execCommand("unlink", false, "") : l3 === "check" || l3 === "list" || l3 === "ordered-list" ? (tt(e5, a5, l3), (0, N.ib)(e5.wysiwyg.element, a5), r3 = false, t7.classList.remove("vditor-menu--current")) : (r3 = false, t7.classList.remove("vditor-menu--current"), a5.toString() === "" ? fe(a5, e5, l3) : document.execCommand(l3, false, ""));
                  else {
                    e5.wysiwyg.element.childNodes.length === 0 && (e5.wysiwyg.element.innerHTML = '<p data-block="0"><wbr></p>', (0, N.ib)(e5.wysiwyg.element, a5));
                    var u3 = (0, y3.F9)(a5.startContainer);
                    if (l3 === "quote") {
                      if (u3 || (u3 = a5.startContainer.childNodes[a5.startOffset]), u3) {
                        r3 = false, t7.classList.add("vditor-menu--current"), a5.insertNode(document.createElement("wbr"));
                        var p2 = (0, y3.lG)(a5.startContainer, "LI");
                        p2 && u3.contains(p2) ? p2.innerHTML = '<blockquote data-block="0">' + p2.innerHTML + "</blockquote>" : u3.outerHTML = '<blockquote data-block="0">' + u3.outerHTML + "</blockquote>", (0, N.ib)(e5.wysiwyg.element, a5);
                      }
                    } else if (l3 === "check" || l3 === "list" || l3 === "ordered-list")
                      tt(e5, a5, l3, false), (0, N.ib)(e5.wysiwyg.element, a5), r3 = false, c2(e5.toolbar.elements, ["check", "list", "ordered-list"]), t7.classList.add("vditor-menu--current");
                    else if (l3 === "inline-code") {
                      if (a5.toString() === "")
                        (m4 = document.createElement("code")).textContent = i2.g.ZWSP, a5.insertNode(m4), a5.setStart(m4.firstChild, 1), a5.collapse(true), (0, N.Hc)(a5);
                      else if (a5.startContainer.nodeType === 3) {
                        var m4 = document.createElement("code");
                        a5.surroundContents(m4), a5.insertNode(m4), (0, N.Hc)(a5);
                      }
                      t7.classList.add("vditor-menu--current");
                    } else if (l3 === "code")
                      (m4 = document.createElement("div")).className = "vditor-wysiwyg__block", m4.setAttribute("data-type", "code-block"), m4.setAttribute("data-block", "0"), m4.setAttribute("data-marker", "```"), a5.toString() === "" ? m4.innerHTML = "<pre><code><wbr>\n</code></pre>" : (m4.innerHTML = "<pre><code>" + a5.toString() + "<wbr></code></pre>", a5.deleteContents()), a5.insertNode(m4), u3 && (u3.outerHTML = e5.lute.SpinVditorDOM(u3.outerHTML)), (0, N.ib)(e5.wysiwyg.element, a5), e5.wysiwyg.element.querySelectorAll(".vditor-wysiwyg__preview[data-render='2']").forEach(function(t8) {
                        H3(t8, e5);
                      }), t7.classList.add("vditor-menu--disabled");
                    else if (l3 === "link") {
                      if (a5.toString() === "") {
                        var f2 = document.createElement("a");
                        f2.innerText = i2.g.ZWSP, a5.insertNode(f2), a5.setStart(f2.firstChild, 1), a5.collapse(true), ue(e5, f2);
                        var h4 = e5.wysiwyg.popover.querySelector("input");
                        h4.value = "", h4.focus(), o3 = false;
                      } else {
                        (m4 = document.createElement("a")).setAttribute("href", ""), m4.innerHTML = a5.toString(), a5.surroundContents(m4), a5.insertNode(m4), (0, N.Hc)(a5), ue(e5, m4);
                        var v2 = e5.wysiwyg.popover.querySelectorAll("input");
                        v2[0].value = m4.innerText, v2[1].focus();
                      }
                      r3 = false, t7.classList.add("vditor-menu--current");
                    } else if (l3 === "table") {
                      var g2 = '<table data-block="0"><thead><tr><th>col1<wbr></th><th>col2</th><th>col3</th></tr></thead><tbody><tr><td> </td><td> </td><td> </td></tr><tr><td> </td><td> </td><td> </td></tr></tbody></table>';
                      if (a5.toString().trim() === "")
                        u3 && u3.innerHTML.trim().replace(i2.g.ZWSP, "") === "" ? u3.outerHTML = g2 : document.execCommand("insertHTML", false, g2), a5.selectNode(e5.wysiwyg.element.querySelector("wbr").previousSibling), e5.wysiwyg.element.querySelector("wbr").remove(), (0, N.Hc)(a5);
                      else {
                        g2 = '<table data-block="0"><thead><tr>';
                        var b3 = a5.toString().split("\n"), w3 = b3[0].split(",").length > b3[0].split("	").length ? "," : "	";
                        b3.forEach(function(e6, t8) {
                          t8 === 0 ? (e6.split(w3).forEach(function(e7, t9) {
                            g2 += t9 === 0 ? "<th>" + e7 + "<wbr></th>" : "<th>" + e7 + "</th>";
                          }), g2 += "</tr></thead>") : (g2 += t8 === 1 ? "<tbody><tr>" : "<tr>", e6.split(w3).forEach(function(e7) {
                            g2 += "<td>" + e7 + "</td>";
                          }), g2 += "</tr>");
                        }), g2 += "</tbody></table>", document.execCommand("insertHTML", false, g2), (0, N.ib)(e5.wysiwyg.element, a5);
                      }
                      r3 = false, t7.classList.add("vditor-menu--disabled");
                    } else if (l3 === "line") {
                      if (u3) {
                        var E3 = '<hr data-block="0"><p data-block="0"><wbr>\n</p>';
                        u3.innerHTML.trim() === "" ? u3.outerHTML = E3 : u3.insertAdjacentHTML("afterend", E3), (0, N.ib)(e5.wysiwyg.element, a5);
                      }
                    } else if (r3 = false, t7.classList.add("vditor-menu--current"), l3 === "strike" && (l3 = "strikeThrough"), a5.toString() !== "" || l3 !== "bold" && l3 !== "italic" && l3 !== "strikeThrough")
                      document.execCommand(l3, false, "");
                    else {
                      var k3 = "strong";
                      l3 === "italic" ? k3 = "em" : l3 === "strikeThrough" && (k3 = "s"), (m4 = document.createElement(k3)).textContent = i2.g.ZWSP, a5.insertNode(m4), m4.previousSibling && m4.previousSibling.textContent === i2.g.ZWSP && (m4.previousSibling.textContent = ""), a5.setStart(m4.firstChild, 1), a5.collapse(true), (0, N.Hc)(a5);
                    }
                  }
                  r3 && ie(e5), o3 && X2(e5);
                }
              }(e4, r2.element.children[0], n3) : e4.currentMode === "ir" ? At(e4, r2.element.children[0], t6.prefix || "", t6.suffix || "") : Ie(e4, r2.element.children[0], t6.prefix || "", t6.suffix || ""));
            });
          }, ve = (K2 = function(e4, t6) {
            return K2 = Object.setPrototypeOf || {__proto__: []} instanceof Array && function(e5, t7) {
              e5.__proto__ = t7;
            } || function(e5, t7) {
              for (var n2 in t7)
                t7.hasOwnProperty(n2) && (e5[n2] = t7[n2]);
            }, K2(e4, t6);
          }, function(e4, t6) {
            function n2() {
              this.constructor = e4;
            }
            K2(e4, t6), e4.prototype = t6 === null ? Object.create(t6) : (n2.prototype = t6.prototype, new n2());
          }), ge = function(e4, t6, n2) {
            var r2;
            if (typeof n2 != "string" ? (v(e4, ["subToolbar", "hint"]), n2.preventDefault(), r2 = a3(e4)) : r2 = n2, e4.currentMode !== t6 || typeof n2 == "string") {
              if (e4.devtools && e4.devtools.renderEchart(e4), e4.options.preview.mode === "both" && t6 === "sv" ? e4.preview.element.style.display = "block" : e4.preview.element.style.display = "none", p(e4.toolbar.elements, i2.g.EDIT_TOOLBARS), c2(e4.toolbar.elements, i2.g.EDIT_TOOLBARS), m3(e4.toolbar.elements, ["outdent", "indent"]), t6 === "ir")
                f(e4.toolbar.elements, ["both"]), h3(e4.toolbar.elements, ["outdent", "indent", "outline", "insert-before", "insert-after"]), e4.sv.element.style.display = "none", e4.wysiwyg.element.parentElement.style.display = "none", e4.ir.element.parentElement.style.display = "block", e4.lute.SetVditorIR(true), e4.lute.SetVditorWYSIWYG(false), e4.lute.SetVditorSV(false), e4.currentMode = "ir", e4.ir.element.innerHTML = e4.lute.Md2VditorIRDOM(r2), Ct(e4, {enableAddUndoStack: true, enableHint: false, enableInput: false}), W(e4), e4.ir.element.querySelectorAll(".vditor-ir__preview[data-render='2']").forEach(function(t7) {
                  H3(t7, e4);
                }), e4.ir.element.querySelectorAll(".vditor-toc").forEach(function(t7) {
                  (0, T2.H)(t7, {cdn: e4.options.cdn, math: e4.options.preview.math});
                });
              else if (t6 === "wysiwyg")
                f(e4.toolbar.elements, ["both"]), h3(e4.toolbar.elements, ["outdent", "indent", "outline", "insert-before", "insert-after"]), e4.sv.element.style.display = "none", e4.wysiwyg.element.parentElement.style.display = "block", e4.ir.element.parentElement.style.display = "none", e4.lute.SetVditorIR(false), e4.lute.SetVditorWYSIWYG(true), e4.lute.SetVditorSV(false), e4.currentMode = "wysiwyg", W(e4), me(e4, r2, {enableAddUndoStack: true, enableHint: false, enableInput: false}), e4.wysiwyg.element.querySelectorAll(".vditor-toc").forEach(function(t7) {
                  (0, T2.H)(t7, {cdn: e4.options.cdn, math: e4.options.preview.math});
                }), e4.wysiwyg.popover.style.display = "none";
              else if (t6 === "sv") {
                h3(e4.toolbar.elements, ["both"]), f(e4.toolbar.elements, ["outdent", "indent", "outline", "insert-before", "insert-after"]), e4.wysiwyg.element.parentElement.style.display = "none", e4.ir.element.parentElement.style.display = "none", (e4.options.preview.mode === "both" || e4.options.preview.mode === "editor") && (e4.sv.element.style.display = "block"), e4.lute.SetVditorIR(false), e4.lute.SetVditorWYSIWYG(false), e4.lute.SetVditorSV(true), e4.currentMode = "sv";
                var o2 = He(r2, e4);
                o2 === "<div data-block='0'></div>" && (o2 = ""), e4.sv.element.innerHTML = o2, De(e4, {enableAddUndoStack: true, enableHint: false, enableInput: false}), W(e4);
              }
              e4.undo.resetIcon(e4), typeof n2 != "string" && (e4[e4.currentMode].element.focus(), pe(e4)), D2(e4), z2(e4), e4.toolbar.elements["edit-mode"] && (e4.toolbar.elements["edit-mode"].querySelectorAll("button").forEach(function(e5) {
                e5.classList.remove("vditor-menu--current");
              }), e4.toolbar.elements["edit-mode"].querySelector('button[data-mode="' + e4.currentMode + '"]').classList.add("vditor-menu--current")), e4.outline.toggle(e4, e4.currentMode !== "sv" && e4.options.outline.enable);
            }
          }, ye = function(e4) {
            function t6(t7, n2) {
              var r2 = e4.call(this, t7, n2) || this, i3 = document.createElement("div");
              return i3.className = "vditor-hint" + (n2.level === 2 ? "" : " vditor-panel--arrow"), i3.innerHTML = '<button data-mode="wysiwyg">' + window.VditorI18n.wysiwyg + " &lt;" + (0, d3.ns)("\u2325\u23187") + '></button>\n<button data-mode="ir">' + window.VditorI18n.instantRendering + " &lt;" + (0, d3.ns)("\u2325\u23188") + '></button>\n<button data-mode="sv">' + window.VditorI18n.splitView + " &lt;" + (0, d3.ns)("\u2325\u23189") + "></button>", r2.element.appendChild(i3), r2._bindEvent(t7, i3, n2), r2;
            }
            return ve(t6, e4), t6.prototype._bindEvent = function(e5, t7, n2) {
              var r2 = this.element.children[0];
              g(e5, t7, r2, n2.level), t7.children.item(0).addEventListener((0, d3.Le)(), function(t8) {
                ge(e5, "wysiwyg", t8), t8.preventDefault(), t8.stopPropagation();
              }), t7.children.item(1).addEventListener((0, d3.Le)(), function(t8) {
                ge(e5, "ir", t8), t8.preventDefault(), t8.stopPropagation();
              }), t7.children.item(2).addEventListener((0, d3.Le)(), function(t8) {
                ge(e5, "sv", t8), t8.preventDefault(), t8.stopPropagation();
              });
            }, t6;
          }(he), be = function(e4, t6) {
            return (0, N.Gb)(e4, t6) ? getSelection().toString() : "";
          }, we = function(e4, t6) {
            t6.addEventListener("focus", function() {
              e4.options.focus && e4.options.focus(a3(e4)), v(e4, ["subToolbar", "hint"]);
            });
          }, Ee = function(e4, t6) {
            t6.addEventListener("dblclick", function(t7) {
              t7.target.tagName === "IMG" && (0, q2.E)(t7.target, e4.options.lang, e4.options.theme);
            });
          }, ke = function(e4, t6) {
            t6.addEventListener("blur", function(t7) {
              if (e4.currentMode === "ir") {
                var n2 = e4.ir.element.querySelector(".vditor-ir__node--expand");
                n2 && n2.classList.remove("vditor-ir__node--expand");
              } else
                e4.currentMode !== "wysiwyg" || e4.wysiwyg.selectPopover.contains(t7.relatedTarget) || e4.wysiwyg.hideComment();
              e4[e4.currentMode].range = (0, N.zh)(e4), e4.options.blur && e4.options.blur(a3(e4));
            });
          }, Se = function(e4, t6) {
            t6.addEventListener("dragstart", function(e5) {
              e5.dataTransfer.setData(i2.g.DROP_EDITOR, i2.g.DROP_EDITOR);
            }), t6.addEventListener("drop", function(t7) {
              t7.dataTransfer.getData(i2.g.DROP_EDITOR) ? lt(e4) : (t7.dataTransfer.types.includes("Files") || t7.dataTransfer.types.includes("text/html")) && St(e4, t7, {pasteCode: function(e5) {
                document.execCommand("insertHTML", false, e5);
              }});
            });
          }, Le = function(e4, t6, n2) {
            t6.addEventListener("copy", function(t7) {
              return n2(t7, e4);
            });
          }, Ce = function(e4, t6, n2) {
            t6.addEventListener("cut", function(t7) {
              n2(t7, e4), e4.options.comment.enable && e4.currentMode === "wysiwyg" && e4.wysiwyg.getComments(e4), document.execCommand("delete");
            });
          }, Me = function(e4) {
            if (e4.currentMode === "wysiwyg" && e4.options.comment.enable && e4.options.comment.adjustTop(e4.wysiwyg.getComments(e4, true)), e4.options.typewriterMode) {
              var t6 = e4[e4.currentMode].element, n2 = (0, N.Ny)(t6).top;
              e4.options.height !== "auto" || e4.element.classList.contains("vditor--fullscreen") || window.scrollTo(window.scrollX, n2 + e4.element.offsetTop + e4.toolbar.element.offsetHeight - window.innerHeight / 2 + 10), (e4.options.height !== "auto" || e4.element.classList.contains("vditor--fullscreen")) && (t6.scrollTop = n2 + t6.scrollTop - t6.clientHeight / 2 + 10);
            }
          }, Te = function(e4, t6) {
            t6.addEventListener("keydown", function(t7) {
              if (!(e4.options.hint.extend.length > 1 || e4.toolbar.elements.emoji) || !e4.hint.select(t7, e4)) {
                if (e4.options.comment.enable && e4.currentMode === "wysiwyg" && (t7.key === "Backspace" || R2("\u2318X", t7)) && e4.wysiwyg.getComments(e4), e4.currentMode === "sv") {
                  if (function(e5, t8) {
                    var n3, r2, i3, o2, a4;
                    if (e5.sv.composingLock = t8.isComposing, t8.isComposing)
                      return false;
                    if (t8.key.indexOf("Arrow") !== -1 || t8.key === "Meta" || t8.key === "Control" || t8.key === "Alt" || t8.key === "Shift" || t8.key === "CapsLock" || t8.key === "Escape" || /^F\d{1,2}$/.test(t8.key) || e5.undo.recordFirstPosition(e5, t8), t8.key !== "Enter" && t8.key !== "Tab" && t8.key !== "Backspace" && t8.key.indexOf("Arrow") === -1 && !(0, d3.yl)(t8) && t8.key !== "Escape")
                      return false;
                    var l2 = (0, N.zh)(e5), s4 = l2.startContainer;
                    l2.startContainer.nodeType !== 3 && l2.startContainer.tagName === "DIV" && (s4 = l2.startContainer.childNodes[l2.startOffset - 1]);
                    var c3 = (0, y3.a1)(s4, "data-type", "text"), u3 = (0, y3.a1)(s4, "data-type", "blockquote-marker");
                    if (!u3 && l2.startOffset === 0 && c3 && c3.previousElementSibling && c3.previousElementSibling.getAttribute("data-type") === "blockquote-marker" && (u3 = c3.previousElementSibling), u3 && t8.key === "Enter" && !(0, d3.yl)(t8) && !t8.altKey && u3.nextElementSibling.textContent.trim() === "" && (0, N.im)(u3, e5.sv.element, l2).start === u3.textContent.length)
                      return ((n3 = u3.previousElementSibling) === null || n3 === void 0 ? void 0 : n3.getAttribute("data-type")) === "padding" && u3.previousElementSibling.setAttribute("data-action", "enter-remove"), u3.remove(), De(e5), t8.preventDefault(), true;
                    var p2 = (0, y3.a1)(s4, "data-type", "li-marker"), m4 = (0, y3.a1)(s4, "data-type", "task-marker"), f2 = p2;
                    if (f2 || m4 && m4.nextElementSibling.getAttribute("data-type") !== "task-marker" && (f2 = m4), f2 || l2.startOffset !== 0 || !c3 || !c3.previousElementSibling || c3.previousElementSibling.getAttribute("data-type") !== "li-marker" && c3.previousElementSibling.getAttribute("data-type") !== "task-marker" || (f2 = c3.previousElementSibling), f2) {
                      var h4 = (0, N.im)(f2, e5.sv.element, l2).start, v2 = f2.getAttribute("data-type") === "task-marker", g2 = f2;
                      if (v2 && (g2 = f2.previousElementSibling.previousElementSibling.previousElementSibling), h4 === f2.textContent.length) {
                        if (t8.key === "Enter" && !(0, d3.yl)(t8) && !t8.altKey && !t8.shiftKey && f2.nextElementSibling.textContent.trim() === "")
                          return ((r2 = g2.previousElementSibling) === null || r2 === void 0 ? void 0 : r2.getAttribute("data-type")) === "padding" ? (g2.previousElementSibling.remove(), B2(e5)) : (v2 && (g2.remove(), f2.previousElementSibling.previousElementSibling.remove(), f2.previousElementSibling.remove()), f2.nextElementSibling.remove(), f2.remove(), De(e5)), t8.preventDefault(), true;
                        if (t8.key === "Tab")
                          return g2.insertAdjacentHTML("beforebegin", '<span data-type="padding">' + g2.textContent.replace(/\S/g, " ") + "</span>"), /^\d/.test(g2.textContent) && (g2.textContent = g2.textContent.replace(/^\d{1,}/, "1"), l2.selectNodeContents(f2.firstChild), l2.collapse(false)), B2(e5), t8.preventDefault(), true;
                      }
                    }
                    if (dt(e5, l2, t8))
                      return true;
                    var w3 = (0, y3.a1)(s4, "data-block", "0"), E3 = (0, b2.S)(s4, "SPAN");
                    if (t8.key === "Enter" && !(0, d3.yl)(t8) && !t8.altKey && !t8.shiftKey && w3) {
                      var k3 = false, S4 = w3.textContent.match(/^\n+/);
                      (0, N.im)(w3, e5.sv.element).start <= (S4 ? S4[0].length : 0) && (k3 = true);
                      var L3 = "\n";
                      if (E3) {
                        if (((i3 = E3.previousElementSibling) === null || i3 === void 0 ? void 0 : i3.getAttribute("data-action")) === "enter-remove")
                          return E3.previousElementSibling.remove(), De(e5), t8.preventDefault(), true;
                        L3 += Ne(E3);
                      }
                      return l2.insertNode(document.createTextNode(L3)), l2.collapse(false), w3 && w3.textContent.trim() !== "" && !k3 ? B2(e5) : De(e5), t8.preventDefault(), true;
                    }
                    if (t8.key === "Backspace" && !(0, d3.yl)(t8) && !t8.altKey && !t8.shiftKey) {
                      if (E3 && ((o2 = E3.previousElementSibling) === null || o2 === void 0 ? void 0 : o2.getAttribute("data-type")) === "newline" && (0, N.im)(E3, e5.sv.element, l2).start === 1 && E3.getAttribute("data-type").indexOf("code-block-") === -1)
                        return l2.setStart(E3, 0), l2.extractContents(), E3.textContent.trim() !== "" ? B2(e5) : De(e5), t8.preventDefault(), true;
                      if (w3 && (0, N.im)(w3, e5.sv.element, l2).start === 0 && w3.previousElementSibling) {
                        l2.extractContents();
                        var C2 = w3.previousElementSibling.lastElementChild;
                        return C2.getAttribute("data-type") === "newline" && (C2.remove(), C2 = w3.previousElementSibling.lastElementChild), C2.getAttribute("data-type") !== "newline" && (C2.insertAdjacentHTML("afterend", w3.innerHTML), w3.remove()), w3.textContent.trim() === "" || ((a4 = w3.previousElementSibling) === null || a4 === void 0 ? void 0 : a4.querySelector('[data-type="code-block-open-marker"]')) ? (C2.getAttribute("data-type") !== "newline" && (l2.selectNodeContents(C2.lastChild), l2.collapse(false)), De(e5)) : B2(e5), t8.preventDefault(), true;
                      }
                    }
                    return false;
                  }(e4, t7))
                    return;
                } else if (e4.currentMode === "wysiwyg") {
                  if (function(e5, t8) {
                    if (e5.wysiwyg.composingLock = t8.isComposing, t8.isComposing)
                      return false;
                    t8.key.indexOf("Arrow") !== -1 || t8.key === "Meta" || t8.key === "Control" || t8.key === "Alt" || t8.key === "Shift" || t8.key === "CapsLock" || t8.key === "Escape" || /^F\d{1,2}$/.test(t8.key) || e5.undo.recordFirstPosition(e5, t8);
                    var n3 = (0, N.zh)(e5), r2 = n3.startContainer;
                    if (!Ke(t8, e5, r2))
                      return false;
                    if (Fe(n3, e5, t8), Et(n3), t8.key !== "Enter" && t8.key !== "Tab" && t8.key !== "Backspace" && t8.key.indexOf("Arrow") === -1 && !(0, d3.yl)(t8) && t8.key !== "Escape" && t8.key !== "Delete")
                      return false;
                    var o2 = (0, y3.F9)(r2), a4 = (0, y3.lG)(r2, "P");
                    if (ct(t8, e5, a4, n3))
                      return true;
                    if (st(n3, e5, a4, t8))
                      return true;
                    if (vt(e5, t8, n3))
                      return true;
                    var l2 = (0, y3.fb)(r2, "vditor-wysiwyg__block");
                    if (l2) {
                      if (t8.key === "Escape" && l2.children.length === 2)
                        return e5.wysiwyg.popover.style.display = "none", l2.firstElementChild.style.display = "none", e5.wysiwyg.element.blur(), t8.preventDefault(), true;
                      if (!(0, d3.yl)(t8) && !t8.shiftKey && t8.altKey && t8.key === "Enter" && l2.getAttribute("data-type") === "code-block") {
                        var s4 = e5.wysiwyg.popover.querySelector(".vditor-input");
                        return s4.focus(), s4.select(), t8.preventDefault(), true;
                      }
                      if (l2.getAttribute("data-block") === "0") {
                        if (gt(e5, t8, l2.firstElementChild, n3))
                          return true;
                        if ($e(e5, t8, n3, l2.firstElementChild, l2))
                          return true;
                        if (l2.getAttribute("data-type") !== "yaml-front-matter" && et(e5, t8, n3, l2.firstElementChild, l2))
                          return true;
                      }
                    }
                    if (yt(e5, n3, t8, a4))
                      return true;
                    var c3 = (0, y3.E2)(r2, "BLOCKQUOTE");
                    if (c3 && !t8.shiftKey && t8.altKey && t8.key === "Enter") {
                      (0, d3.yl)(t8) ? n3.setStartBefore(c3) : n3.setStartAfter(c3), (0, N.Hc)(n3);
                      var u3 = document.createElement("p");
                      return u3.setAttribute("data-block", "0"), u3.innerHTML = "\n", n3.insertNode(u3), n3.collapse(true), (0, N.Hc)(n3), X2(e5), Me(e5), t8.preventDefault(), true;
                    }
                    var p2, m4 = (0, b2.W)(r2);
                    if (m4) {
                      if (m4.tagName === "H6" && r2.textContent.length === n3.startOffset && !(0, d3.yl)(t8) && !t8.shiftKey && !t8.altKey && t8.key === "Enter") {
                        var f2 = document.createElement("p");
                        return f2.textContent = "\n", f2.setAttribute("data-block", "0"), r2.parentElement.insertAdjacentElement("afterend", f2), n3.setStart(f2, 0), (0, N.Hc)(n3), X2(e5), Me(e5), t8.preventDefault(), true;
                      }
                      var h4;
                      if (R2("\u2318=", t8))
                        return (h4 = parseInt(m4.tagName.substr(1), 10) - 1) > 0 && (ee(e5, "h" + h4), X2(e5)), t8.preventDefault(), true;
                      if (R2("\u2318-", t8))
                        return (h4 = parseInt(m4.tagName.substr(1), 10) + 1) < 7 && (ee(e5, "h" + h4), X2(e5)), t8.preventDefault(), true;
                      t8.key !== "Backspace" || (0, d3.yl)(t8) || t8.shiftKey || t8.altKey || m4.textContent.length !== 1 || te(e5);
                    }
                    if (bt(e5, n3, t8))
                      return true;
                    if (t8.altKey && t8.key === "Enter" && !(0, d3.yl)(t8) && !t8.shiftKey) {
                      var v2 = (0, y3.lG)(r2, "A"), g2 = (0, y3.a1)(r2, "data-type", "link-ref"), w3 = (0, y3.a1)(r2, "data-type", "footnotes-ref");
                      if (v2 || g2 || w3 || m4 && m4.tagName.length === 2) {
                        var E3 = e5.wysiwyg.popover.querySelector("input");
                        E3.focus(), E3.select();
                      }
                    }
                    if (re(e5, t8))
                      return true;
                    if (R2("\u21E7\u2318U", t8) && (p2 = e5.wysiwyg.popover.querySelector('[data-type="up"]')))
                      return p2.click(), t8.preventDefault(), true;
                    if (R2("\u21E7\u2318D", t8) && (p2 = e5.wysiwyg.popover.querySelector('[data-type="down"]')))
                      return p2.click(), t8.preventDefault(), true;
                    if (dt(e5, n3, t8))
                      return true;
                    if (!(0, d3.yl)(t8) && t8.shiftKey && !t8.altKey && t8.key === "Enter" && r2.parentElement.tagName !== "LI" && r2.parentElement.tagName !== "P")
                      return ["STRONG", "STRIKE", "S", "I", "EM", "B"].includes(r2.parentElement.tagName) ? n3.insertNode(document.createTextNode("\n" + i2.g.ZWSP)) : n3.insertNode(document.createTextNode("\n")), n3.collapse(false), (0, N.Hc)(n3), X2(e5), Me(e5), t8.preventDefault(), true;
                    if (t8.key === "Backspace" && !(0, d3.yl)(t8) && !t8.shiftKey && !t8.altKey && n3.toString() === "") {
                      if (wt(e5, n3, t8, a4))
                        return true;
                      if (o2) {
                        if (o2.previousElementSibling && o2.previousElementSibling.classList.contains("vditor-wysiwyg__block") && o2.previousElementSibling.getAttribute("data-block") === "0" && o2.tagName !== "UL" && o2.tagName !== "OL") {
                          var k3 = (0, N.im)(o2, e5.wysiwyg.element, n3).start;
                          if (k3 === 0 && n3.startOffset === 0 || k3 === 1 && o2.innerText.startsWith(i2.g.ZWSP))
                            return ne(o2.previousElementSibling.lastElementChild, e5, false), o2.innerHTML.trim().replace(i2.g.ZWSP, "") === "" && (o2.remove(), X2(e5)), t8.preventDefault(), true;
                        }
                        var S4 = n3.startOffset;
                        if (n3.toString() === "" && r2.nodeType === 3 && r2.textContent.charAt(S4 - 2) === "\n" && r2.textContent.charAt(S4 - 1) !== i2.g.ZWSP && ["STRONG", "STRIKE", "S", "I", "EM", "B"].includes(r2.parentElement.tagName))
                          return r2.textContent = r2.textContent.substring(0, S4 - 1) + i2.g.ZWSP, n3.setStart(r2, S4), n3.collapse(true), X2(e5), t8.preventDefault(), true;
                        r2.textContent === i2.g.ZWSP && n3.startOffset === 1 && !r2.previousSibling && function(e6) {
                          for (var t9 = e6.startContainer.nextSibling; t9 && t9.textContent === ""; )
                            t9 = t9.nextSibling;
                          return !(!t9 || t9.nodeType === 3 || t9.tagName !== "CODE" && t9.getAttribute("data-type") !== "math-inline" && t9.getAttribute("data-type") !== "html-entity" && t9.getAttribute("data-type") !== "html-inline");
                        }(n3) && (r2.textContent = ""), o2.querySelectorAll("span.vditor-wysiwyg__block[data-type='math-inline']").forEach(function(e6) {
                          e6.firstElementChild.style.display = "inline", e6.lastElementChild.style.display = "none";
                        }), o2.querySelectorAll("span.vditor-wysiwyg__block[data-type='html-entity']").forEach(function(e6) {
                          e6.firstElementChild.style.display = "inline", e6.lastElementChild.style.display = "none";
                        });
                      }
                    }
                    if ((0, d3.vU)() && n3.startOffset === 1 && r2.textContent.indexOf(i2.g.ZWSP) > -1 && r2.previousSibling && r2.previousSibling.nodeType !== 3 && r2.previousSibling.tagName === "CODE" && (t8.key === "Backspace" || t8.key === "ArrowLeft"))
                      return n3.selectNodeContents(r2.previousSibling), n3.collapse(false), t8.preventDefault(), true;
                    if (kt(t8, o2, n3))
                      return t8.preventDefault(), true;
                    if (Ze(n3, t8.key), t8.key === "ArrowDown") {
                      var L3 = r2.nextSibling;
                      L3 && L3.nodeType !== 3 && L3.getAttribute("data-type") === "math-inline" && n3.setStartAfter(L3);
                    }
                    return !(!o2 || !I2(o2, e5, t8, n3) || (t8.preventDefault(), 0));
                  }(e4, t7))
                    return;
                } else if (e4.currentMode === "ir" && function(e5, t8) {
                  if (e5.ir.composingLock = t8.isComposing, t8.isComposing)
                    return false;
                  t8.key.indexOf("Arrow") !== -1 || t8.key === "Meta" || t8.key === "Control" || t8.key === "Alt" || t8.key === "Shift" || t8.key === "CapsLock" || t8.key === "Escape" || /^F\d{1,2}$/.test(t8.key) || e5.undo.recordFirstPosition(e5, t8);
                  var n3 = (0, N.zh)(e5), r2 = n3.startContainer;
                  if (!Ke(t8, e5, r2))
                    return false;
                  if (Fe(n3, e5, t8), Et(n3), t8.key !== "Enter" && t8.key !== "Tab" && t8.key !== "Backspace" && t8.key.indexOf("Arrow") === -1 && !(0, d3.yl)(t8) && t8.key !== "Escape" && t8.key !== "Delete")
                    return false;
                  var o2 = (0, y3.a1)(r2, "data-newline", "1");
                  if (!(0, d3.yl)(t8) && !t8.altKey && !t8.shiftKey && t8.key === "Enter" && o2 && n3.startOffset < o2.textContent.length) {
                    var a4 = o2.previousElementSibling;
                    a4 && (n3.insertNode(document.createTextNode(a4.textContent)), n3.collapse(false));
                    var l2 = o2.nextSibling;
                    l2 && (n3.insertNode(document.createTextNode(l2.textContent)), n3.collapse(true));
                  }
                  var s4 = (0, y3.lG)(r2, "P");
                  if (ct(t8, e5, s4, n3))
                    return true;
                  if (st(n3, e5, s4, t8))
                    return true;
                  if (yt(e5, n3, t8, s4))
                    return true;
                  var c3 = (0, y3.fb)(r2, "vditor-ir__marker--pre");
                  if (c3 && c3.tagName === "PRE") {
                    var u3 = c3.firstChild;
                    if (gt(e5, t8, c3, n3))
                      return true;
                    if ((u3.getAttribute("data-type") === "math-block" || u3.getAttribute("data-type") === "html-block") && et(e5, t8, n3, u3, c3.parentElement))
                      return true;
                    if ($e(e5, t8, n3, u3, c3.parentElement))
                      return true;
                  }
                  var p2 = (0, y3.a1)(r2, "data-type", "code-block-info");
                  if (p2) {
                    if (t8.key === "Enter" || t8.key === "Tab")
                      return n3.selectNodeContents(p2.nextElementSibling.firstChild), n3.collapse(true), t8.preventDefault(), v(e5, ["hint"]), true;
                    if (t8.key === "Backspace") {
                      var m4 = (0, N.im)(p2, e5.ir.element).start;
                      m4 === 1 && n3.setStart(r2, 0), m4 === 2 && (e5.hint.recentLanguage = "");
                    }
                    if (et(e5, t8, n3, p2, p2.parentElement))
                      return v(e5, ["hint"]), true;
                  }
                  var f2 = (0, y3.lG)(r2, "TD") || (0, y3.lG)(r2, "TH");
                  if (t8.key.indexOf("Arrow") > -1 && f2) {
                    var h4 = Xe(f2);
                    if (h4 && et(e5, t8, n3, f2, h4))
                      return true;
                    var g2 = Ye(f2);
                    if (g2 && $e(e5, t8, n3, f2, g2))
                      return true;
                  }
                  if (vt(e5, t8, n3))
                    return true;
                  if (bt(e5, n3, t8))
                    return true;
                  if (dt(e5, n3, t8))
                    return true;
                  var w3 = (0, b2.W)(r2);
                  if (w3) {
                    var E3;
                    if (R2("\u2318=", t8))
                      return (E3 = w3.querySelector(".vditor-ir__marker--heading")) && E3.textContent.trim().length > 1 && Mt(e5, E3.textContent.substr(1)), t8.preventDefault(), true;
                    if (R2("\u2318-", t8))
                      return (E3 = w3.querySelector(".vditor-ir__marker--heading")) && E3.textContent.trim().length < 6 && Mt(e5, E3.textContent.trim() + "# "), t8.preventDefault(), true;
                  }
                  var k3 = (0, y3.F9)(r2);
                  if (t8.key === "Backspace" && !(0, d3.yl)(t8) && !t8.shiftKey && !t8.altKey && n3.toString() === "") {
                    if (wt(e5, n3, t8, s4))
                      return true;
                    if (k3 && k3.previousElementSibling && k3.tagName !== "UL" && k3.tagName !== "OL" && (k3.previousElementSibling.getAttribute("data-type") === "code-block" || k3.previousElementSibling.getAttribute("data-type") === "math-block")) {
                      var S4 = (0, N.im)(k3, e5.ir.element, n3).start;
                      if (S4 === 0 || S4 === 1 && k3.innerText.startsWith(i2.g.ZWSP))
                        return n3.selectNodeContents(k3.previousElementSibling.querySelector(".vditor-ir__marker--pre code")), n3.collapse(false), P(n3, e5), k3.textContent.trim().replace(i2.g.ZWSP, "") === "" && (k3.remove(), Ct(e5)), t8.preventDefault(), true;
                    }
                    if (w3) {
                      var L3 = w3.firstElementChild.textContent.length;
                      (0, N.im)(w3, e5.ir.element).start === L3 && (n3.setStart(w3.firstElementChild.firstChild, L3 - 1), n3.collapse(true), (0, N.Hc)(n3));
                    }
                  }
                  return !((t8.key !== "ArrowUp" && t8.key !== "ArrowDown" || !k3 || (k3.querySelectorAll(".vditor-ir__node").forEach(function(e6) {
                    e6.contains(r2) || e6.classList.add("vditor-ir__node--hidden");
                  }), !kt(t8, k3, n3))) && (Ze(n3, t8.key), !k3 || !I2(k3, e5, t8, n3) || (t8.preventDefault(), 0)));
                }(e4, t7))
                  return;
                if (e4.options.ctrlEnter && R2("\u2318Enter", t7))
                  return e4.options.ctrlEnter(a3(e4)), void t7.preventDefault();
                if (R2("\u2318Z", t7) && !e4.toolbar.elements.undo)
                  return e4.undo.undo(e4), void t7.preventDefault();
                if (R2("\u2318Y", t7) && !e4.toolbar.elements.redo)
                  return e4.undo.redo(e4), void t7.preventDefault();
                if (t7.key === "Escape")
                  return e4.hint.element.style.display === "block" ? e4.hint.element.style.display = "none" : e4.options.esc && !t7.isComposing && e4.options.esc(a3(e4)), void t7.preventDefault();
                if ((0, d3.yl)(t7) && t7.altKey && !t7.shiftKey && /^Digit[1-6]$/.test(t7.code)) {
                  if (e4.currentMode === "wysiwyg") {
                    var n2 = t7.code.replace("Digit", "H");
                    (0, y3.lG)(getSelection().getRangeAt(0).startContainer, n2) ? te(e4) : ee(e4, n2), X2(e4);
                  } else
                    e4.currentMode === "sv" ? Oe(e4, "#".repeat(parseInt(t7.code.replace("Digit", ""), 10)) + " ") : e4.currentMode === "ir" && Mt(e4, "#".repeat(parseInt(t7.code.replace("Digit", ""), 10)) + " ");
                  return t7.preventDefault(), true;
                }
                if ((0, d3.yl)(t7) && t7.altKey && !t7.shiftKey && /^Digit[7-9]$/.test(t7.code))
                  return t7.code === "Digit7" ? ge(e4, "wysiwyg", t7) : t7.code === "Digit8" ? ge(e4, "ir", t7) : t7.code === "Digit9" && ge(e4, "sv", t7), true;
                e4.options.toolbar.find(function(n3) {
                  return !n3.hotkey || n3.toolbar ? !!n3.toolbar && !!n3.toolbar.find(function(n4) {
                    return !!n4.hotkey && (R2(n4.hotkey, t7) ? (e4.toolbar.elements[n4.name].children[0].dispatchEvent(new CustomEvent((0, d3.Le)())), t7.preventDefault(), true) : void 0);
                  }) : R2(n3.hotkey, t7) ? (e4.toolbar.elements[n3.name].children[0].dispatchEvent(new CustomEvent((0, d3.Le)())), t7.preventDefault(), true) : void 0;
                });
              }
            });
          }, Ae = function(e4, t6) {
            t6.addEventListener("selectstart", function(n2) {
              t6.onmouseup = function() {
                setTimeout(function() {
                  var t7 = be(e4[e4.currentMode].element);
                  t7.trim() ? (e4.currentMode === "wysiwyg" && e4.options.comment.enable && ((0, y3.a1)(n2.target, "data-type", "footnotes-block") || (0, y3.a1)(n2.target, "data-type", "link-ref-defs-block") ? e4.wysiwyg.hideComment() : e4.wysiwyg.showComment()), e4.options.select && e4.options.select(t7)) : e4.currentMode === "wysiwyg" && e4.options.comment.enable && e4.wysiwyg.hideComment();
                });
              };
            });
          }, _e = function(e4, t6) {
            var n2 = (0, N.zh)(e4);
            n2.extractContents(), n2.insertNode(document.createTextNode(Lute.Caret)), n2.insertNode(document.createTextNode(t6));
            var r2 = (0, y3.a1)(n2.startContainer, "data-block", "0");
            r2 || (r2 = e4.sv.element);
            var i3 = e4.lute.SpinVditorSVDOM(r2.textContent);
            i3 = i3.indexOf('data-type="footnotes-link"') > -1 || i3.indexOf('data-type="link-ref-defs-block"') > -1 ? "<div data-block='0'>" + i3 + "</div>" : "<div data-block='0'>" + i3.replace(/<span data-type="newline"><br \/><span style="display: none">\n<\/span><\/span><span data-type="newline"><br \/><span style="display: none">\n<\/span><\/span></g, '<span data-type="newline"><br /><span style="display: none">\n</span></span><span data-type="newline"><br /><span style="display: none">\n</span></span></div><div data-block="0"><') + "</div>", r2.isEqualNode(e4.sv.element) ? r2.innerHTML = i3 : r2.outerHTML = i3, (0, N.ib)(e4.sv.element, n2), Me(e4);
          }, xe = function(e4, t6, n2) {
            n2 === void 0 && (n2 = true);
            var r2 = e4;
            for (r2.nodeType === 3 && (r2 = r2.parentElement); r2; ) {
              if (r2.getAttribute("data-type") === t6)
                return r2;
              r2 = n2 ? r2.previousElementSibling : r2.nextElementSibling;
            }
            return false;
          }, He = function(e4, t6) {
            w2("SpinVditorSVDOM", e4, "argument", t6.options.debugger);
            var n2 = t6.lute.SpinVditorSVDOM(e4);
            return e4 = n2.indexOf('data-type="footnotes-link"') > -1 || n2.indexOf('data-type="link-ref-defs-block"') > -1 ? "<div data-block='0'>" + n2 + "</div>" : "<div data-block='0'>" + n2.replace(/<span data-type="newline"><br \/><span style="display: none">\n<\/span><\/span><span data-type="newline"><br \/><span style="display: none">\n<\/span><\/span></g, '<span data-type="newline"><br /><span style="display: none">\n</span></span><span data-type="newline"><br /><span style="display: none">\n</span></span></div><div data-block="0"><') + "</div>", w2("SpinVditorSVDOM", e4, "result", t6.options.debugger), e4;
          }, Ne = function(e4) {
            var t6 = e4.getAttribute("data-type"), n2 = e4.previousElementSibling, r2 = t6 && t6 !== "text" && t6 !== "table" && t6 !== "heading-marker" && t6 !== "newline" && t6 !== "yaml-front-matter-open-marker" && t6 !== "yaml-front-matter-close-marker" && t6 !== "code-block-info" && t6 !== "code-block-close-marker" && t6 !== "code-block-open-marker" ? e4.textContent : "", i3 = false;
            for (t6 === "newline" && (i3 = true); n2 && !i3; ) {
              var o2 = n2.getAttribute("data-type");
              if (o2 === "li-marker" || o2 === "blockquote-marker" || o2 === "task-marker" || o2 === "padding") {
                var a4 = n2.textContent;
                if (o2 !== "li-marker" || t6 !== "code-block-open-marker" && t6 !== "code-block-info")
                  if (t6 === "code-block-close-marker" && n2.nextElementSibling.isSameNode(e4)) {
                    var l2 = xe(e4, "code-block-open-marker");
                    l2 && l2.previousElementSibling && (n2 = l2.previousElementSibling, r2 = a4 + r2);
                  } else
                    r2 = a4 + r2;
                else
                  r2 = a4.replace(/\S/g, " ") + r2;
              } else
                o2 === "newline" && (i3 = true);
              n2 = n2.previousElementSibling;
            }
            return r2;
          }, De = function(e4, t6) {
            t6 === void 0 && (t6 = {enableAddUndoStack: true, enableHint: false, enableInput: true}), t6.enableHint && e4.hint.render(e4), e4.preview.render(e4);
            var n2 = a3(e4);
            typeof e4.options.input == "function" && t6.enableInput && e4.options.input(n2), e4.options.counter.enable && e4.counter.render(e4, n2), e4.options.cache.enable && (0, d3.pK)() && (localStorage.setItem(e4.options.cache.id, n2), e4.options.cache.after && e4.options.cache.after(n2)), e4.devtools && e4.devtools.renderEchart(e4), clearTimeout(e4.sv.processTimeoutId), e4.sv.processTimeoutId = window.setTimeout(function() {
              t6.enableAddUndoStack && !e4.sv.composingLock && e4.undo.addToUndoStack(e4);
            }, e4.options.undoDelay);
          }, Oe = function(e4, t6) {
            var n2 = (0, N.zh)(e4), r2 = (0, b2.S)(n2.startContainer, "SPAN");
            r2 && r2.textContent.trim() !== "" && (t6 = "\n" + t6), n2.collapse(true), document.execCommand("insertHTML", false, t6);
          }, Ie = function(e4, t6, n2, r2) {
            var i3 = (0, N.zh)(e4), o2 = t6.getAttribute("data-type");
            e4.sv.element.childNodes.length === 0 && (e4.sv.element.innerHTML = '<span data-type="p" data-block="0"><span data-type="text"><wbr></span></span><span data-type="newline"><br><span style="display: none">\n</span></span>', (0, N.ib)(e4.sv.element, i3));
            var a4 = (0, y3.F9)(i3.startContainer), l2 = (0, b2.S)(i3.startContainer, "SPAN");
            if (a4) {
              if (o2 === "link") {
                var s4 = void 0;
                return s4 = i3.toString() === "" ? "" + n2 + Lute.Caret + r2 : "" + n2 + i3.toString() + r2.replace(")", Lute.Caret + ")"), void document.execCommand("insertHTML", false, s4);
              }
              if (o2 === "italic" || o2 === "bold" || o2 === "strike" || o2 === "inline-code" || o2 === "code" || o2 === "table" || o2 === "line") {
                s4 = void 0;
                return s4 = i3.toString() === "" ? "" + n2 + Lute.Caret + (o2 === "code" ? "" : r2) : "" + n2 + i3.toString() + Lute.Caret + (o2 === "code" ? "" : r2), o2 === "table" || o2 === "code" && l2 && l2.textContent !== "" ? s4 = "\n\n" + s4 : o2 === "line" && (s4 = "\n\n" + n2 + "\n" + Lute.Caret), void document.execCommand("insertHTML", false, s4);
              }
              if ((o2 === "check" || o2 === "list" || o2 === "ordered-list" || o2 === "quote") && l2) {
                var d4 = "* ";
                o2 === "check" ? d4 = "* [ ] " : o2 === "ordered-list" ? d4 = "1. " : o2 === "quote" && (d4 = "> ");
                var c3 = xe(l2, "newline");
                return c3 ? c3.insertAdjacentText("afterend", d4) : a4.insertAdjacentText("afterbegin", d4), void B2(e4);
              }
              (0, N.ib)(e4.sv.element, i3), De(e4);
            }
          }, je = function(e4) {
            switch (e4.currentMode) {
              case "ir":
                return e4.ir.element;
              case "wysiwyg":
                return e4.wysiwyg.element;
              case "sv":
                return e4.sv.element;
            }
          }, Re = function(e4, t6) {
            e4.options.upload.setHeaders && (e4.options.upload.headers = e4.options.upload.setHeaders()), e4.options.upload.headers && Object.keys(e4.options.upload.headers).forEach(function(n2) {
              t6.setRequestHeader(n2, e4.options.upload.headers[n2]);
            });
          }, Pe = function(e4, t6, n2, r2) {
            return new (n2 || (n2 = Promise))(function(i3, o2) {
              function a4(e5) {
                try {
                  s4(r2.next(e5));
                } catch (e6) {
                  o2(e6);
                }
              }
              function l2(e5) {
                try {
                  s4(r2.throw(e5));
                } catch (e6) {
                  o2(e6);
                }
              }
              function s4(e5) {
                var t7;
                e5.done ? i3(e5.value) : (t7 = e5.value, t7 instanceof n2 ? t7 : new n2(function(e6) {
                  e6(t7);
                })).then(a4, l2);
              }
              s4((r2 = r2.apply(e4, t6 || [])).next());
            });
          }, qe = function(e4, t6) {
            var n2, r2, i3, o2, a4 = {label: 0, sent: function() {
              if (1 & i3[0])
                throw i3[1];
              return i3[1];
            }, trys: [], ops: []};
            return o2 = {next: l2(0), throw: l2(1), return: l2(2)}, typeof Symbol == "function" && (o2[Symbol.iterator] = function() {
              return this;
            }), o2;
            function l2(o3) {
              return function(l3) {
                return function(o4) {
                  if (n2)
                    throw new TypeError("Generator is already executing.");
                  for (; a4; )
                    try {
                      if (n2 = 1, r2 && (i3 = 2 & o4[0] ? r2.return : o4[0] ? r2.throw || ((i3 = r2.return) && i3.call(r2), 0) : r2.next) && !(i3 = i3.call(r2, o4[1])).done)
                        return i3;
                      switch (r2 = 0, i3 && (o4 = [2 & o4[0], i3.value]), o4[0]) {
                        case 0:
                        case 1:
                          i3 = o4;
                          break;
                        case 4:
                          return a4.label++, {value: o4[1], done: false};
                        case 5:
                          a4.label++, r2 = o4[1], o4 = [0];
                          continue;
                        case 7:
                          o4 = a4.ops.pop(), a4.trys.pop();
                          continue;
                        default:
                          if (!(i3 = a4.trys, (i3 = i3.length > 0 && i3[i3.length - 1]) || o4[0] !== 6 && o4[0] !== 2)) {
                            a4 = 0;
                            continue;
                          }
                          if (o4[0] === 3 && (!i3 || o4[1] > i3[0] && o4[1] < i3[3])) {
                            a4.label = o4[1];
                            break;
                          }
                          if (o4[0] === 6 && a4.label < i3[1]) {
                            a4.label = i3[1], i3 = o4;
                            break;
                          }
                          if (i3 && a4.label < i3[2]) {
                            a4.label = i3[2], a4.ops.push(o4);
                            break;
                          }
                          i3[2] && a4.ops.pop(), a4.trys.pop();
                          continue;
                      }
                      o4 = t6.call(e4, a4);
                    } catch (e5) {
                      o4 = [6, e5], r2 = 0;
                    } finally {
                      n2 = i3 = 0;
                    }
                  if (5 & o4[0])
                    throw o4[1];
                  return {value: o4[0] ? o4[1] : void 0, done: true};
                }([o3, l3]);
              };
            }
          }, Be = function() {
            this.isUploading = false, this.element = document.createElement("div"), this.element.className = "vditor-upload";
          }, Ve = function(e4, t6, n2) {
            return Pe(void 0, void 0, void 0, function() {
              var r2, i3, o2, a4, l2, s4, d4, c3, u3, p2, m4, f2, h4, v2;
              return qe(this, function(g2) {
                switch (g2.label) {
                  case 0:
                    for (r2 = [], i3 = e4.options.upload.multiple === true ? t6.length : 1, f2 = 0; f2 < i3; f2++)
                      (o2 = t6[f2]) instanceof DataTransferItem && (o2 = o2.getAsFile()), r2.push(o2);
                    return e4.options.upload.handler ? [4, e4.options.upload.handler(r2)] : [3, 2];
                  case 1:
                    return a4 = g2.sent(), n2 && (n2.value = ""), typeof a4 == "string" ? (e4.tip.show(a4), [2]) : [2];
                  case 2:
                    return e4.options.upload.url && e4.upload ? e4.options.upload.file ? [4, e4.options.upload.file(r2)] : [3, 4] : (n2 && (n2.value = ""), e4.tip.show("please config: options.upload.url"), [2]);
                  case 3:
                    r2 = g2.sent(), g2.label = 4;
                  case 4:
                    if (e4.options.upload.validate && typeof (a4 = e4.options.upload.validate(r2)) == "string")
                      return e4.tip.show(a4), [2];
                    if (l2 = je(e4), e4.upload.range = (0, N.zh)(e4), s4 = function(e5, t7) {
                      e5.tip.hide();
                      for (var n3 = [], r3 = "", i4 = "", o3 = (e5.options.lang, e5.options, function(o4, a6) {
                        var l4 = t7[a6], s5 = true;
                        l4.name || (r3 += "<li>" + window.VditorI18n.nameEmpty + "</li>", s5 = false), l4.size > e5.options.upload.max && (r3 += "<li>" + l4.name + " " + window.VditorI18n.over + " " + e5.options.upload.max / 1024 / 1024 + "M</li>", s5 = false);
                        var d5 = l4.name.lastIndexOf("."), c4 = l4.name.substr(d5), u4 = e5.options.upload.filename(l4.name.substr(0, d5)) + c4;
                        e5.options.upload.accept && (e5.options.upload.accept.split(",").some(function(e6) {
                          var t8 = e6.trim();
                          if (t8.indexOf(".") === 0) {
                            if (c4.toLowerCase() === t8.toLowerCase())
                              return true;
                          } else if (l4.type.split("/")[0] === t8.split("/")[0])
                            return true;
                          return false;
                        }) || (r3 += "<li>" + l4.name + " " + window.VditorI18n.fileTypeError + "</li>", s5 = false)), s5 && (n3.push(l4), i4 += "<li>" + u4 + " " + window.VditorI18n.uploading + "</li>");
                      }), a5 = t7.length, l3 = 0; l3 < a5; l3++)
                        o3(0, l3);
                      return e5.tip.show("<ul>" + r3 + i4 + "</ul>"), n3;
                    }(e4, r2), s4.length === 0)
                      return n2 && (n2.value = ""), [2];
                    for (d4 = new FormData(), c3 = e4.options.upload.extraData, u3 = 0, p2 = Object.keys(c3); u3 < p2.length; u3++)
                      m4 = p2[u3], d4.append(m4, c3[m4]);
                    for (f2 = 0, h4 = s4.length; f2 < h4; f2++)
                      d4.append(e4.options.upload.fieldName, s4[f2]);
                    return (v2 = new XMLHttpRequest()).open("POST", e4.options.upload.url), e4.options.upload.token && v2.setRequestHeader("X-Upload-Token", e4.options.upload.token), e4.options.upload.withCredentials && (v2.withCredentials = true), Re(e4, v2), e4.upload.isUploading = true, l2.setAttribute("contenteditable", "false"), v2.onreadystatechange = function() {
                      if (v2.readyState === XMLHttpRequest.DONE) {
                        if (e4.upload.isUploading = false, l2.setAttribute("contenteditable", "true"), v2.status >= 200 && v2.status < 300)
                          if (e4.options.upload.success)
                            e4.options.upload.success(l2, v2.responseText);
                          else {
                            var r3 = v2.responseText;
                            e4.options.upload.format && (r3 = e4.options.upload.format(t6, v2.responseText)), function(e5, t7) {
                              je(t7).focus();
                              var n3 = JSON.parse(e5), r4 = "";
                              n3.code === 1 && (r4 = "" + n3.msg), n3.data.errFiles && n3.data.errFiles.length > 0 && (r4 = "<ul><li>" + r4 + "</li>", n3.data.errFiles.forEach(function(e6) {
                                var n4 = e6.lastIndexOf("."), i5 = t7.options.upload.filename(e6.substr(0, n4)) + e6.substr(n4);
                                r4 += "<li>" + i5 + " " + window.VditorI18n.uploadError + "</li>";
                              }), r4 += "</ul>"), r4 ? t7.tip.show(r4) : t7.tip.hide();
                              var i4 = "";
                              Object.keys(n3.data.succMap).forEach(function(e6) {
                                var r5 = n3.data.succMap[e6], o3 = e6.lastIndexOf("."), a5 = e6.substr(o3), l3 = t7.options.upload.filename(e6.substr(0, o3)) + a5;
                                (a5 = a5.toLowerCase()).indexOf(".wav") === 0 || a5.indexOf(".mp3") === 0 || a5.indexOf(".ogg") === 0 ? t7.currentMode === "wysiwyg" ? i4 += '<div class="vditor-wysiwyg__block" data-type="html-block"\n data-block="0"><pre><code>&lt;audio controls="controls" src="' + r5 + '"&gt;&lt;/audio&gt;</code></pre><pre class="vditor-wysiwyg__preview" data-render="1"><audio controls="controls" src="' + r5 + '"></audio></pre></div>\n' : t7.currentMode === "ir" ? i4 += '<audio controls="controls" src="' + r5 + '"></audio>\n' : i4 += "[" + l3 + "](" + r5 + ")\n" : a5.indexOf(".apng") === 0 || a5.indexOf(".bmp") === 0 || a5.indexOf(".gif") === 0 || a5.indexOf(".ico") === 0 || a5.indexOf(".cur") === 0 || a5.indexOf(".jpg") === 0 || a5.indexOf(".jpeg") === 0 || a5.indexOf(".jfif") === 0 || a5.indexOf(".pjp") === 0 || a5.indexOf(".pjpeg") === 0 || a5.indexOf(".png") === 0 || a5.indexOf(".svg") === 0 || a5.indexOf(".webp") === 0 ? t7.currentMode === "wysiwyg" ? i4 += '<img alt="' + l3 + '" src="' + r5 + '">\n' : i4 += "![" + l3 + "](" + r5 + ")\n" : t7.currentMode === "wysiwyg" ? i4 += '<a href="' + r5 + '">' + l3 + "</a>\n" : i4 += "[" + l3 + "](" + r5 + ")\n";
                              }), (0, N.Hc)(t7.upload.range), document.execCommand("insertHTML", false, i4), t7.upload.range = getSelection().getRangeAt(0).cloneRange();
                            }(r3, e4);
                          }
                        else
                          e4.options.upload.error ? e4.options.upload.error(v2.responseText) : e4.tip.show(v2.responseText);
                        n2 && (n2.value = ""), e4.upload.element.style.display = "none";
                      }
                    }, v2.upload.onprogress = function(t7) {
                      if (t7.lengthComputable) {
                        var n3 = t7.loaded / t7.total * 100;
                        e4.upload.element.style.display = "block", e4.upload.element.style.width = n3 + "%";
                      }
                    }, v2.send(d4), [2];
                }
              });
            });
          }, Ue = function(e4, t6, n2) {
            var r2, o2 = (0, y3.F9)(t6.startContainer);
            if (o2 || (o2 = e4.wysiwyg.element), n2 && n2.inputType !== "formatItalic" && n2.inputType !== "deleteByDrag" && n2.inputType !== "insertFromDrop" && n2.inputType !== "formatBold" && n2.inputType !== "formatRemove" && n2.inputType !== "formatStrikeThrough" && n2.inputType !== "insertUnorderedList" && n2.inputType !== "insertOrderedList" && n2.inputType !== "formatOutdent" && n2.inputType !== "formatIndent" && n2.inputType !== "" || !n2) {
              var a4 = function(e5) {
                for (var t7 = e5.previousSibling; t7; ) {
                  if (t7.nodeType !== 3 && t7.tagName === "A" && !t7.previousSibling && t7.innerHTML.replace(i2.g.ZWSP, "") === "" && t7.nextSibling)
                    return t7;
                  t7 = t7.previousSibling;
                }
                return false;
              }(t6.startContainer);
              a4 && a4.remove(), e4.wysiwyg.element.querySelectorAll("wbr").forEach(function(e5) {
                e5.remove();
              }), t6.insertNode(document.createElement("wbr")), o2.querySelectorAll("[style]").forEach(function(e5) {
                e5.removeAttribute("style");
              }), o2.querySelectorAll(".vditor-comment").forEach(function(e5) {
                e5.textContent.trim() === "" && (e5.classList.remove("vditor-comment", "vditor-comment--focus"), e5.removeAttribute("data-cmtids"));
              }), (r2 = o2.previousElementSibling) === null || r2 === void 0 || r2.querySelectorAll(".vditor-comment").forEach(function(e5) {
                e5.textContent.trim() === "" && (e5.classList.remove("vditor-comment", "vditor-comment--focus"), e5.removeAttribute("data-cmtids"));
              });
              var l2 = "";
              o2.getAttribute("data-type") === "link-ref-defs-block" && (o2 = e4.wysiwyg.element);
              var s4, d4 = o2.isEqualNode(e4.wysiwyg.element), c3 = (0, y3.a1)(o2, "data-type", "footnotes-block");
              if (d4)
                l2 = o2.innerHTML;
              else {
                var u3 = (0, y3.O9)(t6.startContainer);
                if (u3 && !c3) {
                  var p2 = (0, b2.S)(t6.startContainer, "BLOCKQUOTE");
                  o2 = p2 ? (0, y3.F9)(t6.startContainer) || o2 : u3;
                }
                if (c3 && (o2 = c3), l2 = o2.outerHTML, o2.tagName === "UL" || o2.tagName === "OL") {
                  var m4 = o2.previousElementSibling, f2 = o2.nextElementSibling;
                  !m4 || m4.tagName !== "UL" && m4.tagName !== "OL" || (l2 = m4.outerHTML + l2, m4.remove()), !f2 || f2.tagName !== "UL" && f2.tagName !== "OL" || (l2 += f2.outerHTML, f2.remove()), l2 = l2.replace("<div><wbr><br></div>", "<li><p><wbr><br></p></li>");
                }
                o2.innerText.startsWith("```") || (e4.wysiwyg.element.querySelectorAll("[data-type='link-ref-defs-block']").forEach(function(e5) {
                  e5 && !o2.isEqualNode(e5) && (l2 += e5.outerHTML, e5.remove());
                }), e4.wysiwyg.element.querySelectorAll("[data-type='footnotes-block']").forEach(function(e5) {
                  e5 && !o2.isEqualNode(e5) && (l2 += e5.outerHTML, e5.remove());
                }));
              }
              if ((l2 = l2.replace(/<\/(strong|b)><strong data-marker="\W{2}">/g, "").replace(/<\/(em|i)><em data-marker="\W{1}">/g, "").replace(/<\/(s|strike)><s data-marker="~{1,2}">/g, "")) === '<p data-block="0">```<wbr></p>' && e4.hint.recentLanguage && (l2 = '<p data-block="0">```<wbr></p>'.replace("```", "```" + e4.hint.recentLanguage)), w2("SpinVditorDOM", l2, "argument", e4.options.debugger), l2 = e4.lute.SpinVditorDOM(l2), w2("SpinVditorDOM", l2, "result", e4.options.debugger), d4)
                o2.innerHTML = l2;
              else if (o2.outerHTML = l2, c3) {
                var h4 = (0, y3.E2)(e4.wysiwyg.element.querySelector("wbr"), "LI");
                if (h4) {
                  var v2 = e4.wysiwyg.element.querySelector('sup[data-type="footnotes-ref"][data-footnotes-label="' + h4.getAttribute("data-marker") + '"]');
                  v2 && v2.setAttribute("aria-label", h4.textContent.trim().substr(0, 24));
                }
              }
              var g2, E3 = e4.wysiwyg.element.querySelectorAll("[data-type='link-ref-defs-block']");
              E3.forEach(function(e5, t7) {
                t7 === 0 ? s4 = e5 : (s4.insertAdjacentHTML("beforeend", e5.innerHTML), e5.remove());
              }), E3.length > 0 && e4.wysiwyg.element.insertAdjacentElement("beforeend", E3[0]);
              var k3 = e4.wysiwyg.element.querySelectorAll("[data-type='footnotes-block']");
              k3.forEach(function(e5, t7) {
                t7 === 0 ? g2 = e5 : (g2.insertAdjacentHTML("beforeend", e5.innerHTML), e5.remove());
              }), k3.length > 0 && e4.wysiwyg.element.insertAdjacentElement("beforeend", k3[0]), (0, N.ib)(e4.wysiwyg.element, t6), e4.wysiwyg.element.querySelectorAll(".vditor-wysiwyg__preview[data-render='2']").forEach(function(t7) {
                H3(t7, e4);
              }), n2 && (n2.inputType === "deleteContentBackward" || n2.inputType === "deleteContentForward") && e4.options.comment.enable && (e4.wysiwyg.triggerRemoveComment(e4), e4.options.comment.adjustTop(e4.wysiwyg.getComments(e4, true)));
            }
            D2(e4), X2(e4, {enableAddUndoStack: true, enableHint: true, enableInput: true});
          }, We = function(e4, t6) {
            return Object.defineProperty ? Object.defineProperty(e4, "raw", {value: t6}) : e4.raw = t6, e4;
          }, ze = function(e4, t6, n2, r2) {
            return new (n2 || (n2 = Promise))(function(i3, o2) {
              function a4(e5) {
                try {
                  s4(r2.next(e5));
                } catch (e6) {
                  o2(e6);
                }
              }
              function l2(e5) {
                try {
                  s4(r2.throw(e5));
                } catch (e6) {
                  o2(e6);
                }
              }
              function s4(e5) {
                var t7;
                e5.done ? i3(e5.value) : (t7 = e5.value, t7 instanceof n2 ? t7 : new n2(function(e6) {
                  e6(t7);
                })).then(a4, l2);
              }
              s4((r2 = r2.apply(e4, t6 || [])).next());
            });
          }, Ge = function(e4, t6) {
            var n2, r2, i3, o2, a4 = {label: 0, sent: function() {
              if (1 & i3[0])
                throw i3[1];
              return i3[1];
            }, trys: [], ops: []};
            return o2 = {next: l2(0), throw: l2(1), return: l2(2)}, typeof Symbol == "function" && (o2[Symbol.iterator] = function() {
              return this;
            }), o2;
            function l2(o3) {
              return function(l3) {
                return function(o4) {
                  if (n2)
                    throw new TypeError("Generator is already executing.");
                  for (; a4; )
                    try {
                      if (n2 = 1, r2 && (i3 = 2 & o4[0] ? r2.return : o4[0] ? r2.throw || ((i3 = r2.return) && i3.call(r2), 0) : r2.next) && !(i3 = i3.call(r2, o4[1])).done)
                        return i3;
                      switch (r2 = 0, i3 && (o4 = [2 & o4[0], i3.value]), o4[0]) {
                        case 0:
                        case 1:
                          i3 = o4;
                          break;
                        case 4:
                          return a4.label++, {value: o4[1], done: false};
                        case 5:
                          a4.label++, r2 = o4[1], o4 = [0];
                          continue;
                        case 7:
                          o4 = a4.ops.pop(), a4.trys.pop();
                          continue;
                        default:
                          if (!(i3 = a4.trys, (i3 = i3.length > 0 && i3[i3.length - 1]) || o4[0] !== 6 && o4[0] !== 2)) {
                            a4 = 0;
                            continue;
                          }
                          if (o4[0] === 3 && (!i3 || o4[1] > i3[0] && o4[1] < i3[3])) {
                            a4.label = o4[1];
                            break;
                          }
                          if (o4[0] === 6 && a4.label < i3[1]) {
                            a4.label = i3[1], i3 = o4;
                            break;
                          }
                          if (i3 && a4.label < i3[2]) {
                            a4.label = i3[2], a4.ops.push(o4);
                            break;
                          }
                          i3[2] && a4.ops.pop(), a4.trys.pop();
                          continue;
                      }
                      o4 = t6.call(e4, a4);
                    } catch (e5) {
                      o4 = [6, e5], r2 = 0;
                    } finally {
                      n2 = i3 = 0;
                    }
                  if (5 & o4[0])
                    throw o4[1];
                  return {value: o4[0] ? o4[1] : void 0, done: true};
                }([o3, l3]);
              };
            }
          }, Ke = function(e4, t6, n2) {
            if (e4.keyCode === 229 && e4.code === "" && e4.key === "Unidentified" && t6.currentMode !== "sv") {
              var r2 = (0, y3.F9)(n2);
              if (r2 && r2.textContent.trim() === "")
                return t6[t6.currentMode].composingLock = true, false;
            }
            return true;
          }, Fe = function(e4, t6, n2) {
            if (!(n2.key === "Enter" || n2.key === "Tab" || n2.key === "Backspace" || n2.key.indexOf("Arrow") > -1 || (0, d3.yl)(n2) || n2.key === "Escape" || n2.shiftKey || n2.altKey)) {
              var r2 = (0, y3.lG)(e4.startContainer, "P") || (0, y3.lG)(e4.startContainer, "LI");
              if (r2 && (0, N.im)(r2, t6[t6.currentMode].element, e4).start === 0) {
                r2.nodeValue = r2.nodeValue.replace(/\u2006/g, "");
                var o2 = document.createTextNode(i2.g.ZWSP);
                e4.insertNode(o2), e4.setStartAfter(o2);
              }
            }
          }, Ze = function(e4, t6) {
            if (t6 === "ArrowDown" || t6 === "ArrowUp") {
              var n2 = (0, y3.a1)(e4.startContainer, "data-type", "math-inline") || (0, y3.a1)(e4.startContainer, "data-type", "html-entity") || (0, y3.a1)(e4.startContainer, "data-type", "html-inline");
              n2 && (t6 === "ArrowDown" && e4.setStartAfter(n2.parentElement), t6 === "ArrowUp" && e4.setStartBefore(n2.parentElement));
            }
          }, Je = function(e4, t6) {
            var n2 = (0, N.zh)(e4), r2 = (0, y3.F9)(n2.startContainer);
            r2 && (r2.insertAdjacentHTML(t6, '<p data-block="0">' + i2.g.ZWSP + "<wbr>\n</p>"), (0, N.ib)(e4[e4.currentMode].element, n2), pe(e4), lt(e4));
          }, Xe = function(e4) {
            var t6 = (0, y3.lG)(e4, "TABLE");
            return !(!t6 || !t6.rows[0].cells[0].isSameNode(e4)) && t6;
          }, Ye = function(e4) {
            var t6 = (0, y3.lG)(e4, "TABLE");
            return !(!t6 || !t6.lastElementChild.lastElementChild.lastElementChild.isSameNode(e4)) && t6;
          }, Qe = function(e4, t6, n2) {
            n2 === void 0 && (n2 = true);
            var r2 = e4.previousElementSibling;
            return r2 || (r2 = e4.parentElement.previousElementSibling ? e4.parentElement.previousElementSibling.lastElementChild : e4.parentElement.parentElement.tagName === "TBODY" && e4.parentElement.parentElement.previousElementSibling ? e4.parentElement.parentElement.previousElementSibling.lastElementChild.lastElementChild : null), r2 && (t6.selectNodeContents(r2), n2 || t6.collapse(false), (0, N.Hc)(t6)), r2;
          }, $e = function(e4, t6, n2, r2, o2) {
            var a4 = (0, N.im)(r2, e4[e4.currentMode].element, n2);
            if (t6.key === "ArrowDown" && r2.textContent.trimRight().substr(a4.start).indexOf("\n") === -1 || t6.key === "ArrowRight" && a4.start >= r2.textContent.trimRight().length) {
              var l2 = o2.nextElementSibling;
              return !l2 || l2 && (l2.tagName === "TABLE" || l2.getAttribute("data-type")) ? (o2.insertAdjacentHTML("afterend", '<p data-block="0">' + i2.g.ZWSP + "<wbr></p>"), (0, N.ib)(e4[e4.currentMode].element, n2)) : (n2.selectNodeContents(l2), n2.collapse(true), (0, N.Hc)(n2)), t6.preventDefault(), true;
            }
            return false;
          }, et = function(e4, t6, n2, r2, o2) {
            var a4 = (0, N.im)(r2, e4[e4.currentMode].element, n2);
            if (t6.key === "ArrowUp" && r2.textContent.substr(0, a4.start).indexOf("\n") === -1 || (t6.key === "ArrowLeft" || t6.key === "Backspace" && n2.toString() === "") && a4.start === 0) {
              var l2 = o2.previousElementSibling;
              return !l2 || l2 && (l2.tagName === "TABLE" || l2.getAttribute("data-type")) ? (o2.insertAdjacentHTML("beforebegin", '<p data-block="0">' + i2.g.ZWSP + "<wbr></p>"), (0, N.ib)(e4[e4.currentMode].element, n2)) : (n2.selectNodeContents(l2), n2.collapse(false), (0, N.Hc)(n2)), t6.preventDefault(), true;
            }
            return false;
          }, tt = function(e4, t6, n2, r2) {
            r2 === void 0 && (r2 = true);
            var i3 = (0, y3.lG)(t6.startContainer, "LI");
            if (e4[e4.currentMode].element.querySelectorAll("wbr").forEach(function(e5) {
              e5.remove();
            }), t6.insertNode(document.createElement("wbr")), r2 && i3) {
              for (var o2 = "", a4 = 0; a4 < i3.parentElement.childElementCount; a4++) {
                var l2 = i3.parentElement.children[a4].querySelector("input");
                l2 && l2.remove(), o2 += '<p data-block="0">' + i3.parentElement.children[a4].innerHTML.trimLeft() + "</p>";
              }
              i3.parentElement.insertAdjacentHTML("beforebegin", o2), i3.parentElement.remove();
            } else if (i3)
              if (n2 === "check")
                i3.parentElement.querySelectorAll("li").forEach(function(e5) {
                  e5.insertAdjacentHTML("afterbegin", '<input type="checkbox" />' + (e5.textContent.indexOf(" ") === 0 ? "" : " ")), e5.classList.add("vditor-task");
                });
              else {
                i3.querySelector("input") && i3.parentElement.querySelectorAll("li").forEach(function(e5) {
                  e5.querySelector("input").remove(), e5.classList.remove("vditor-task");
                });
                var s4 = void 0;
                n2 === "list" ? (s4 = document.createElement("ul")).setAttribute("data-marker", "*") : (s4 = document.createElement("ol")).setAttribute("data-marker", "1."), s4.setAttribute("data-block", "0"), s4.setAttribute("data-tight", i3.parentElement.getAttribute("data-tight")), s4.innerHTML = i3.parentElement.innerHTML, i3.parentElement.parentNode.replaceChild(s4, i3.parentElement);
              }
            else {
              var d4 = (0, y3.a1)(t6.startContainer, "data-block", "0");
              d4 || (e4[e4.currentMode].element.querySelector("wbr").remove(), (d4 = e4[e4.currentMode].element.querySelector("p")).innerHTML = "<wbr>"), n2 === "check" ? (d4.insertAdjacentHTML("beforebegin", '<ul data-block="0"><li class="vditor-task"><input type="checkbox" /> ' + d4.innerHTML + "</li></ul>"), d4.remove()) : n2 === "list" ? (d4.insertAdjacentHTML("beforebegin", '<ul data-block="0"><li>' + d4.innerHTML + "</li></ul>"), d4.remove()) : n2 === "ordered-list" && (d4.insertAdjacentHTML("beforebegin", '<ol data-block="0"><li>' + d4.innerHTML + "</li></ol>"), d4.remove());
            }
          }, nt = function(e4, t6, n2) {
            var r2 = t6.previousElementSibling;
            if (t6 && r2) {
              var i3 = [t6];
              Array.from(n2.cloneContents().children).forEach(function(e5, n3) {
                e5.nodeType !== 3 && t6 && e5.textContent.trim() !== "" && t6.getAttribute("data-node-id") === e5.getAttribute("data-node-id") && (n3 !== 0 && i3.push(t6), t6 = t6.nextElementSibling);
              }), e4[e4.currentMode].element.querySelectorAll("wbr").forEach(function(e5) {
                e5.remove();
              }), n2.insertNode(document.createElement("wbr"));
              var o2 = r2.parentElement, a4 = "";
              i3.forEach(function(e5) {
                var t7 = e5.getAttribute("data-marker");
                t7.length !== 1 && (t7 = "1" + t7.slice(-1)), a4 += '<li data-node-id="' + e5.getAttribute("data-node-id") + '" data-marker="' + t7 + '">' + e5.innerHTML + "</li>", e5.remove();
              }), r2.insertAdjacentHTML("beforeend", "<" + o2.tagName + ' data-block="0">' + a4 + "</" + o2.tagName + ">"), e4.currentMode === "wysiwyg" ? o2.outerHTML = e4.lute.SpinVditorDOM(o2.outerHTML) : o2.outerHTML = e4.lute.SpinVditorIRDOM(o2.outerHTML), (0, N.ib)(e4[e4.currentMode].element, n2);
              var l2 = (0, y3.O9)(n2.startContainer);
              l2 && l2.querySelectorAll(".vditor-" + e4.currentMode + "__preview[data-render='2']").forEach(function(t7) {
                H3(t7, e4), e4.currentMode === "wysiwyg" && t7.previousElementSibling.setAttribute("style", "display:none");
              }), lt(e4), pe(e4);
            } else
              e4[e4.currentMode].element.focus();
          }, rt = function(e4, t6, n2, r2) {
            var i3 = (0, y3.lG)(t6.parentElement, "LI");
            if (i3) {
              e4[e4.currentMode].element.querySelectorAll("wbr").forEach(function(e5) {
                e5.remove();
              }), n2.insertNode(document.createElement("wbr"));
              var o2 = t6.parentElement, a4 = o2.cloneNode(), l2 = [t6];
              Array.from(n2.cloneContents().children).forEach(function(e5, n3) {
                e5.nodeType !== 3 && t6 && e5.textContent.trim() !== "" && t6.getAttribute("data-node-id") === e5.getAttribute("data-node-id") && (n3 !== 0 && l2.push(t6), t6 = t6.nextElementSibling);
              });
              var s4 = false, d4 = "";
              o2.querySelectorAll("li").forEach(function(e5) {
                s4 && (d4 += e5.outerHTML, e5.nextElementSibling || e5.previousElementSibling ? e5.remove() : e5.parentElement.remove()), e5.isSameNode(l2[l2.length - 1]) && (s4 = true);
              }), l2.reverse().forEach(function(e5) {
                i3.insertAdjacentElement("afterend", e5);
              }), d4 && (a4.innerHTML = d4, l2[0].insertAdjacentElement("beforeend", a4)), e4.currentMode === "wysiwyg" ? r2.outerHTML = e4.lute.SpinVditorDOM(r2.outerHTML) : r2.outerHTML = e4.lute.SpinVditorIRDOM(r2.outerHTML), (0, N.ib)(e4[e4.currentMode].element, n2);
              var c3 = (0, y3.O9)(n2.startContainer);
              c3 && c3.querySelectorAll(".vditor-" + e4.currentMode + "__preview[data-render='2']").forEach(function(t7) {
                H3(t7, e4), e4.currentMode === "wysiwyg" && t7.previousElementSibling.setAttribute("style", "display:none");
              }), lt(e4), pe(e4);
            } else
              e4[e4.currentMode].element.focus();
          }, it = function(e4, t6) {
            for (var n2 = getSelection().getRangeAt(0).startContainer.parentElement, r2 = e4.rows[0].cells.length, i3 = e4.rows.length, o2 = 0, a4 = 0; a4 < i3; a4++)
              for (var l2 = 0; l2 < r2; l2++)
                if (e4.rows[a4].cells[l2].isSameNode(n2)) {
                  o2 = l2;
                  break;
                }
            for (var s4 = 0; s4 < i3; s4++)
              e4.rows[s4].cells[o2].setAttribute("align", t6);
          }, ot = function(e4) {
            var t6 = e4.trimRight().split("\n").pop();
            return t6 !== "" && ((t6.replace(/ |-/g, "") === "" || t6.replace(/ |_/g, "") === "" || t6.replace(/ |\*/g, "") === "") && (t6.replace(/ /g, "").length > 2 && (!(t6.indexOf("-") > -1 && t6.trimLeft().indexOf(" ") === -1 && e4.trimRight().split("\n").length > 1) && (t6.indexOf("    ") !== 0 && t6.indexOf("	") !== 0))));
          }, at = function(e4) {
            var t6 = e4.trimRight().split("\n");
            return (e4 = t6.pop()).indexOf("    ") !== 0 && e4.indexOf("	") !== 0 && ((e4 = e4.trimLeft()) !== "" && t6.length !== 0 && (e4.replace(/-/g, "") === "" || e4.replace(/=/g, "") === ""));
          }, lt = function(e4, t6) {
            t6 === void 0 && (t6 = {enableAddUndoStack: true, enableHint: false, enableInput: true}), e4.currentMode === "wysiwyg" ? X2(e4, t6) : e4.currentMode === "ir" ? Ct(e4, t6) : e4.currentMode === "sv" && De(e4, t6);
          }, st = function(e4, t6, n2, r2) {
            var o2, a4 = e4.startContainer, l2 = (0, y3.lG)(a4, "LI");
            if (l2) {
              if (!(0, d3.yl)(r2) && !r2.altKey && r2.key === "Enter" && !r2.shiftKey && n2 && l2.contains(n2) && n2.nextElementSibling)
                return l2 && !l2.textContent.endsWith("\n") && l2.insertAdjacentText("beforeend", "\n"), e4.insertNode(document.createTextNode("\n\n")), e4.collapse(false), lt(t6), r2.preventDefault(), true;
              if (!((0, d3.yl)(r2) || r2.shiftKey || r2.altKey || r2.key !== "Backspace" || l2.previousElementSibling || e4.toString() !== "" || (0, N.im)(l2, t6[t6.currentMode].element, e4).start !== 0))
                return l2.nextElementSibling ? (l2.parentElement.insertAdjacentHTML("beforebegin", '<p data-block="0"><wbr>' + l2.innerHTML + "</p>"), l2.remove()) : l2.parentElement.outerHTML = '<p data-block="0"><wbr>' + l2.innerHTML + "</p>", (0, N.ib)(t6[t6.currentMode].element, e4), lt(t6), r2.preventDefault(), true;
              if (!(0, d3.yl)(r2) && !r2.shiftKey && !r2.altKey && r2.key === "Backspace" && l2.textContent.trim().replace(i2.g.ZWSP, "") === "" && e4.toString() === "" && ((o2 = l2.previousElementSibling) === null || o2 === void 0 ? void 0 : o2.tagName) === "LI")
                return l2.previousElementSibling.insertAdjacentText("beforeend", "\n\n"), e4.selectNodeContents(l2.previousElementSibling), e4.collapse(false), l2.remove(), (0, N.ib)(t6[t6.currentMode].element, e4), lt(t6), r2.preventDefault(), true;
              if (!(0, d3.yl)(r2) && !r2.altKey && r2.key === "Tab") {
                var s4 = false;
                if ((e4.startOffset === 0 && (a4.nodeType === 3 && !a4.previousSibling || a4.nodeType !== 3 && a4.nodeName === "LI") || l2.classList.contains("vditor-task") && e4.startOffset === 1 && a4.previousSibling.nodeType !== 3 && a4.previousSibling.tagName === "INPUT") && (s4 = true), s4 || e4.toString() !== "")
                  return r2.shiftKey ? rt(t6, l2, e4, l2.parentElement) : nt(t6, l2, e4), r2.preventDefault(), true;
              }
            }
            return false;
          }, dt = function(e4, t6, n2) {
            if (e4.options.tab && n2.key === "Tab")
              return n2.shiftKey || (t6.toString() === "" ? (t6.insertNode(document.createTextNode(e4.options.tab)), t6.collapse(false)) : (t6.extractContents(), t6.insertNode(document.createTextNode(e4.options.tab)), t6.collapse(false))), (0, N.Hc)(t6), lt(e4), n2.preventDefault(), true;
          }, ct = function(e4, t6, n2, r2) {
            if (n2) {
              if (!(0, d3.yl)(e4) && !e4.altKey && e4.key === "Enter") {
                var i3 = String.raw(F || (F = We(["", ""], ["", ""])), n2.textContent).replace(/\\\|/g, "").trim(), o2 = i3.split("|");
                if (i3.startsWith("|") && i3.endsWith("|") && o2.length > 3) {
                  var a4 = o2.map(function() {
                    return "---";
                  }).join("|");
                  return a4 = n2.textContent + "\n" + a4.substring(3, a4.length - 3) + "\n|<wbr>", n2.outerHTML = t6.lute.SpinVditorDOM(a4), (0, N.ib)(t6[t6.currentMode].element, r2), lt(t6), Me(t6), e4.preventDefault(), true;
                }
                if (ot(n2.innerHTML) && n2.previousElementSibling) {
                  var l2 = "", s4 = n2.innerHTML.trimRight().split("\n");
                  return s4.length > 1 && (s4.pop(), l2 = '<p data-block="0">' + s4.join("\n") + "</p>"), n2.insertAdjacentHTML("afterend", l2 + '<hr data-block="0"><p data-block="0"><wbr>\n</p>'), n2.remove(), (0, N.ib)(t6[t6.currentMode].element, r2), lt(t6), Me(t6), e4.preventDefault(), true;
                }
                if (at(n2.innerHTML))
                  return t6.currentMode === "wysiwyg" ? n2.outerHTML = t6.lute.SpinVditorDOM(n2.innerHTML + '<p data-block="0"><wbr>\n</p>') : n2.outerHTML = t6.lute.SpinVditorIRDOM(n2.innerHTML + '<p data-block="0"><wbr>\n</p>'), (0, N.ib)(t6[t6.currentMode].element, r2), lt(t6), Me(t6), e4.preventDefault(), true;
              }
              if (r2.collapsed && n2.previousElementSibling && e4.key === "Backspace" && !(0, d3.yl)(e4) && !e4.altKey && !e4.shiftKey && n2.textContent.trimRight().split("\n").length > 1 && (0, N.im)(n2, t6[t6.currentMode].element, r2).start === 0) {
                var c3 = (0, y3.DX)(n2.previousElementSibling);
                return c3.textContent.endsWith("\n") || (c3.textContent = c3.textContent + "\n"), c3.parentElement.insertAdjacentHTML("beforeend", "<wbr>" + n2.innerHTML), n2.remove(), (0, N.ib)(t6[t6.currentMode].element, r2), false;
              }
              return false;
            }
          }, ut = function(e4, t6, n2) {
            for (var r2 = "", i3 = 0; i3 < n2.parentElement.childElementCount; i3++)
              r2 += '<td align="' + n2.parentElement.children[i3].getAttribute("align") + '"> </td>';
            n2.tagName === "TH" ? n2.parentElement.parentElement.insertAdjacentHTML("afterend", "<tbody><tr>" + r2 + "</tr></tbody>") : n2.parentElement.insertAdjacentHTML("afterend", "<tr>" + r2 + "</tr>"), lt(e4);
          }, pt = function(e4, t6, n2) {
            for (var r2 = "", i3 = 0; i3 < n2.parentElement.childElementCount; i3++)
              n2.tagName === "TH" ? r2 += '<th align="' + n2.parentElement.children[i3].getAttribute("align") + '"> </th>' : r2 += '<td align="' + n2.parentElement.children[i3].getAttribute("align") + '"> </td>';
            if (n2.tagName === "TH") {
              n2.parentElement.parentElement.insertAdjacentHTML("beforebegin", "<thead><tr>" + r2 + "</tr></thead>"), t6.insertNode(document.createElement("wbr"));
              var o2 = n2.parentElement.innerHTML.replace(/<th>/g, "<td>").replace(/<\/th>/g, "</td>");
              n2.parentElement.parentElement.nextElementSibling.insertAdjacentHTML("afterbegin", o2), n2.parentElement.parentElement.remove(), (0, N.ib)(e4.ir.element, t6);
            } else
              n2.parentElement.insertAdjacentHTML("beforebegin", "<tr>" + r2 + "</tr>");
            lt(e4);
          }, mt = function(e4, t6, n2, r2) {
            r2 === void 0 && (r2 = "afterend");
            for (var i3 = 0, o2 = n2.previousElementSibling; o2; )
              i3++, o2 = o2.previousElementSibling;
            for (var a4 = 0; a4 < t6.rows.length; a4++)
              a4 === 0 ? t6.rows[a4].cells[i3].insertAdjacentHTML(r2, "<th> </th>") : t6.rows[a4].cells[i3].insertAdjacentHTML(r2, "<td> </td>");
            lt(e4);
          }, ft = function(e4, t6, n2) {
            if (n2.tagName === "TD") {
              var r2 = n2.parentElement.parentElement;
              n2.parentElement.previousElementSibling ? t6.selectNodeContents(n2.parentElement.previousElementSibling.lastElementChild) : t6.selectNodeContents(r2.previousElementSibling.lastElementChild.lastElementChild), r2.childElementCount === 1 ? r2.remove() : n2.parentElement.remove(), t6.collapse(false), (0, N.Hc)(t6), lt(e4);
            }
          }, ht = function(e4, t6, n2, r2) {
            for (var i3 = 0, o2 = r2.previousElementSibling; o2; )
              i3++, o2 = o2.previousElementSibling;
            (r2.previousElementSibling || r2.nextElementSibling) && (t6.selectNodeContents(r2.previousElementSibling || r2.nextElementSibling), t6.collapse(true));
            for (var a4 = 0; a4 < n2.rows.length; a4++) {
              var l2 = n2.rows[a4].cells;
              if (l2.length === 1) {
                n2.remove(), pe(e4);
                break;
              }
              l2[i3].remove();
            }
            (0, N.Hc)(t6), lt(e4);
          }, vt = function(e4, t6, n2) {
            var r2 = n2.startContainer, i3 = (0, y3.lG)(r2, "TD") || (0, y3.lG)(r2, "TH");
            if (i3) {
              if (!(0, d3.yl)(t6) && !t6.altKey && t6.key === "Enter") {
                i3.lastElementChild && (!i3.lastElementChild || i3.lastElementChild.isSameNode(i3.lastChild) && i3.lastElementChild.tagName === "BR") || i3.insertAdjacentHTML("beforeend", "<br>");
                var o2 = document.createElement("br");
                return n2.insertNode(o2), n2.setStartAfter(o2), lt(e4), Me(e4), t6.preventDefault(), true;
              }
              if (t6.key === "Tab")
                return t6.shiftKey ? (Qe(i3, n2), t6.preventDefault(), true) : ((u3 = i3.nextElementSibling) || (u3 = i3.parentElement.nextElementSibling ? i3.parentElement.nextElementSibling.firstElementChild : i3.parentElement.parentElement.tagName === "THEAD" && i3.parentElement.parentElement.nextElementSibling ? i3.parentElement.parentElement.nextElementSibling.firstElementChild.firstElementChild : null), u3 && (n2.selectNodeContents(u3), (0, N.Hc)(n2)), t6.preventDefault(), true);
              var a4 = i3.parentElement.parentElement.parentElement;
              if (t6.key === "ArrowUp") {
                if (t6.preventDefault(), i3.tagName === "TH")
                  return a4.previousElementSibling ? (n2.selectNodeContents(a4.previousElementSibling), n2.collapse(false), (0, N.Hc)(n2)) : Je(e4, "beforebegin"), true;
                for (var l2 = 0, s4 = i3.parentElement; l2 < s4.cells.length && !s4.cells[l2].isSameNode(i3); l2++)
                  ;
                var c3 = s4.previousElementSibling;
                return c3 || (c3 = s4.parentElement.previousElementSibling.firstChild), n2.selectNodeContents(c3.cells[l2]), n2.collapse(false), (0, N.Hc)(n2), true;
              }
              if (t6.key === "ArrowDown") {
                var u3;
                if (t6.preventDefault(), !(s4 = i3.parentElement).nextElementSibling && i3.tagName === "TD")
                  return a4.nextElementSibling ? (n2.selectNodeContents(a4.nextElementSibling), n2.collapse(true), (0, N.Hc)(n2)) : Je(e4, "afterend"), true;
                for (l2 = 0; l2 < s4.cells.length && !s4.cells[l2].isSameNode(i3); l2++)
                  ;
                return (u3 = s4.nextElementSibling) || (u3 = s4.parentElement.nextElementSibling.firstChild), n2.selectNodeContents(u3.cells[l2]), n2.collapse(true), (0, N.Hc)(n2), true;
              }
              if (e4.currentMode === "wysiwyg" && !(0, d3.yl)(t6) && t6.key === "Enter" && !t6.shiftKey && t6.altKey) {
                var p2 = e4.wysiwyg.popover.querySelector(".vditor-input");
                return p2.focus(), p2.select(), t6.preventDefault(), true;
              }
              if (!(0, d3.yl)(t6) && !t6.shiftKey && !t6.altKey && t6.key === "Backspace" && n2.startOffset === 0 && n2.toString() === "")
                return !Qe(i3, n2, false) && a4 && (a4.textContent.trim() === "" ? (a4.outerHTML = '<p data-block="0"><wbr>\n</p>', (0, N.ib)(e4[e4.currentMode].element, n2)) : (n2.setStartBefore(a4), n2.collapse(true)), lt(e4)), t6.preventDefault(), true;
              if (R2("\u21E7\u2318F", t6))
                return pt(e4, n2, i3), t6.preventDefault(), true;
              if (R2("\u2318=", t6))
                return ut(e4, n2, i3), t6.preventDefault(), true;
              if (R2("\u21E7\u2318G", t6))
                return mt(e4, a4, i3, "beforebegin"), t6.preventDefault(), true;
              if (R2("\u21E7\u2318=", t6))
                return mt(e4, a4, i3), t6.preventDefault(), true;
              if (R2("\u2318-", t6))
                return ft(e4, n2, i3), t6.preventDefault(), true;
              if (R2("\u21E7\u2318-", t6))
                return ht(e4, n2, a4, i3), t6.preventDefault(), true;
              if (R2("\u21E7\u2318L", t6)) {
                if (e4.currentMode === "ir")
                  return it(a4, "left"), lt(e4), t6.preventDefault(), true;
                if (m4 = e4.wysiwyg.popover.querySelector('[data-type="left"]'))
                  return m4.click(), t6.preventDefault(), true;
              }
              if (R2("\u21E7\u2318C", t6)) {
                if (e4.currentMode === "ir")
                  return it(a4, "center"), lt(e4), t6.preventDefault(), true;
                if (m4 = e4.wysiwyg.popover.querySelector('[data-type="center"]'))
                  return m4.click(), t6.preventDefault(), true;
              }
              if (R2("\u21E7\u2318R", t6)) {
                if (e4.currentMode === "ir")
                  return it(a4, "right"), lt(e4), t6.preventDefault(), true;
                var m4;
                if (m4 = e4.wysiwyg.popover.querySelector('[data-type="right"]'))
                  return m4.click(), t6.preventDefault(), true;
              }
            }
            return false;
          }, gt = function(e4, t6, n2, r2) {
            if (n2.tagName === "PRE" && R2("\u2318A", t6))
              return r2.selectNodeContents(n2.firstElementChild), t6.preventDefault(), true;
            if (e4.options.tab && t6.key === "Tab" && !t6.shiftKey && r2.toString() === "")
              return r2.insertNode(document.createTextNode(e4.options.tab)), r2.collapse(false), lt(e4), t6.preventDefault(), true;
            if (t6.key === "Backspace" && !(0, d3.yl)(t6) && !t6.shiftKey && !t6.altKey) {
              var i3 = (0, N.im)(n2, e4[e4.currentMode].element, r2);
              if ((i3.start === 0 || i3.start === 1 && n2.innerText === "\n") && r2.toString() === "")
                return n2.parentElement.outerHTML = '<p data-block="0"><wbr>' + n2.firstElementChild.innerHTML + "</p>", (0, N.ib)(e4[e4.currentMode].element, r2), lt(e4), t6.preventDefault(), true;
            }
            return !(0, d3.yl)(t6) && !t6.altKey && t6.key === "Enter" && (n2.firstElementChild.textContent.endsWith("\n") || n2.firstElementChild.insertAdjacentText("beforeend", "\n"), r2.extractContents(), r2.insertNode(document.createTextNode("\n")), r2.collapse(false), (0, N.Hc)(r2), (0, d3.vU)() || (e4.currentMode === "wysiwyg" ? Ue(e4, r2) : j(e4, r2)), Me(e4), t6.preventDefault(), true);
          }, yt = function(e4, t6, n2, r2) {
            var o2 = t6.startContainer, a4 = (0, y3.lG)(o2, "BLOCKQUOTE");
            if (a4 && t6.toString() === "") {
              if (n2.key === "Backspace" && !(0, d3.yl)(n2) && !n2.shiftKey && !n2.altKey && (0, N.im)(a4, e4[e4.currentMode].element, t6).start === 0)
                return t6.insertNode(document.createElement("wbr")), a4.outerHTML = a4.innerHTML, (0, N.ib)(e4[e4.currentMode].element, t6), lt(e4), n2.preventDefault(), true;
              if (r2 && n2.key === "Enter" && !(0, d3.yl)(n2) && !n2.shiftKey && !n2.altKey && r2.parentElement.tagName === "BLOCKQUOTE") {
                var l2 = false;
                if (r2.innerHTML.replace(i2.g.ZWSP, "") === "\n" || r2.innerHTML.replace(i2.g.ZWSP, "") === "" ? (l2 = true, r2.remove()) : r2.innerHTML.endsWith("\n\n") && (0, N.im)(r2, e4[e4.currentMode].element, t6).start === r2.textContent.length - 1 && (r2.innerHTML = r2.innerHTML.substr(0, r2.innerHTML.length - 2), l2 = true), l2)
                  return a4.insertAdjacentHTML("afterend", '<p data-block="0">' + i2.g.ZWSP + "<wbr>\n</p>"), (0, N.ib)(e4[e4.currentMode].element, t6), lt(e4), n2.preventDefault(), true;
              }
              var s4 = (0, y3.F9)(o2);
              if (e4.currentMode === "wysiwyg" && s4 && R2("\u21E7\u2318;", n2))
                return t6.insertNode(document.createElement("wbr")), s4.outerHTML = '<blockquote data-block="0">' + s4.outerHTML + "</blockquote>", (0, N.ib)(e4.wysiwyg.element, t6), X2(e4), n2.preventDefault(), true;
              if ($e(e4, n2, t6, a4, a4))
                return true;
              if (et(e4, n2, t6, a4, a4))
                return true;
            }
            return false;
          }, bt = function(e4, t6, n2) {
            var r2 = t6.startContainer, i3 = (0, y3.fb)(r2, "vditor-task");
            if (i3) {
              if (R2("\u21E7\u2318J", n2)) {
                var o2 = i3.firstElementChild;
                return o2.checked ? o2.removeAttribute("checked") : o2.setAttribute("checked", "checked"), lt(e4), n2.preventDefault(), true;
              }
              if (n2.key === "Backspace" && !(0, d3.yl)(n2) && !n2.shiftKey && !n2.altKey && t6.toString() === "" && t6.startOffset === 1 && (r2.nodeType === 3 && r2.previousSibling && r2.previousSibling.tagName === "INPUT" || r2.nodeType !== 3)) {
                var a4 = i3.previousElementSibling;
                if (i3.querySelector("input").remove(), a4)
                  (0, y3.DX)(a4).parentElement.insertAdjacentHTML("beforeend", "<wbr>" + i3.innerHTML.trim()), i3.remove();
                else
                  i3.parentElement.insertAdjacentHTML("beforebegin", '<p data-block="0"><wbr>' + (i3.innerHTML.trim() || "\n") + "</p>"), i3.nextElementSibling ? i3.remove() : i3.parentElement.remove();
                return (0, N.ib)(e4[e4.currentMode].element, t6), lt(e4), n2.preventDefault(), true;
              }
              if (n2.key === "Enter" && !(0, d3.yl)(n2) && !n2.shiftKey && !n2.altKey) {
                if (i3.textContent.trim() === "")
                  if ((0, y3.fb)(i3.parentElement, "vditor-task")) {
                    var l2 = (0, y3.O9)(r2);
                    l2 && rt(e4, i3, t6, l2);
                  } else if (i3.nextElementSibling) {
                    var s4 = "", c3 = "", u3 = false;
                    Array.from(i3.parentElement.children).forEach(function(e5) {
                      i3.isSameNode(e5) ? u3 = true : u3 ? s4 += e5.outerHTML : c3 += e5.outerHTML;
                    });
                    var p2 = i3.parentElement.tagName, m4 = i3.parentElement.tagName === "OL" ? "" : ' data-marker="' + i3.parentElement.getAttribute("data-marker") + '"', f2 = "";
                    c3 && (f2 = i3.parentElement.tagName === "UL" ? "" : ' start="1"', c3 = "<" + p2 + ' data-tight="true"' + m4 + ' data-block="0">' + c3 + "</" + p2 + ">"), i3.parentElement.outerHTML = c3 + '<p data-block="0"><wbr>\n</p><' + p2 + '\n data-tight="true"' + m4 + ' data-block="0"' + f2 + ">" + s4 + "</" + p2 + ">";
                  } else
                    i3.parentElement.insertAdjacentHTML("afterend", '<p data-block="0"><wbr>\n</p>'), i3.parentElement.querySelectorAll("li").length === 1 ? i3.parentElement.remove() : i3.remove();
                else
                  r2.nodeType !== 3 && t6.startOffset === 0 && r2.firstChild.tagName === "INPUT" ? t6.setStart(r2.childNodes[1], 1) : (t6.setEndAfter(i3.lastChild), i3.insertAdjacentHTML("afterend", '<li class="vditor-task" data-marker="' + i3.getAttribute("data-marker") + '"><input type="checkbox"> <wbr></li>'), document.querySelector("wbr").after(t6.extractContents()));
                return (0, N.ib)(e4[e4.currentMode].element, t6), lt(e4), Me(e4), n2.preventDefault(), true;
              }
            }
            return false;
          }, wt = function(e4, t6, n2, r2) {
            if (t6.startContainer.nodeType !== 3) {
              var i3 = t6.startContainer.children[t6.startOffset];
              if (i3 && i3.tagName === "HR")
                return t6.selectNodeContents(i3.previousElementSibling), t6.collapse(false), n2.preventDefault(), true;
            }
            if (r2) {
              var o2 = r2.previousElementSibling;
              if (o2 && (0, N.im)(r2, e4[e4.currentMode].element, t6).start === 0 && ((0, d3.vU)() && o2.tagName === "HR" || o2.tagName === "TABLE")) {
                if (o2.tagName === "TABLE") {
                  var a4 = o2.lastElementChild.lastElementChild.lastElementChild;
                  a4.innerHTML = a4.innerHTML.trimLeft() + "<wbr>" + r2.textContent.trim(), r2.remove();
                } else
                  o2.remove();
                return (0, N.ib)(e4[e4.currentMode].element, t6), lt(e4), n2.preventDefault(), true;
              }
            }
            return false;
          }, Et = function(e4) {
            (0, d3.vU)() && e4.startContainer.nodeType !== 3 && e4.startContainer.tagName === "HR" && e4.setStartBefore(e4.startContainer);
          }, kt = function(e4, t6, n2) {
            var r2, i3;
            if (!(0, d3.vU)())
              return false;
            if (e4.key === "ArrowUp" && t6 && ((r2 = t6.previousElementSibling) === null || r2 === void 0 ? void 0 : r2.tagName) === "TABLE") {
              var o2 = t6.previousElementSibling;
              return n2.selectNodeContents(o2.rows[o2.rows.length - 1].lastElementChild), n2.collapse(false), e4.preventDefault(), true;
            }
            return !(e4.key !== "ArrowDown" || !t6 || ((i3 = t6.nextElementSibling) === null || i3 === void 0 ? void 0 : i3.tagName) !== "TABLE") && (n2.selectNodeContents(t6.nextElementSibling.rows[0].cells[0]), n2.collapse(true), e4.preventDefault(), true);
          }, St = function(e4, t6, n2) {
            return ze(void 0, void 0, void 0, function() {
              var r2, o2, a4, l2, s4, d4, c3, u3, p2, m4, f2, h4, v2, g2, b3, w3;
              return Ge(this, function(E3) {
                switch (E3.label) {
                  case 0:
                    return e4[e4.currentMode].element.getAttribute("contenteditable") !== "true" ? [2] : (t6.stopPropagation(), t6.preventDefault(), "clipboardData" in t6 ? (r2 = t6.clipboardData.getData("text/html"), o2 = t6.clipboardData.getData("text/plain"), a4 = t6.clipboardData.files) : (r2 = t6.dataTransfer.getData("text/html"), o2 = t6.dataTransfer.getData("text/plain"), t6.dataTransfer.types.includes("Files") && (a4 = t6.dataTransfer.items)), l2 = {}, s4 = function(t7, n3) {
                      if (!n3)
                        return ["", Lute.WalkContinue];
                      var r3 = t7.TokensStr();
                      if (t7.__internal_object__.Parent.Type === 34 && r3 && r3.indexOf("file://") === -1 && e4.options.upload.linkToImgUrl) {
                        var i3 = new XMLHttpRequest();
                        i3.open("POST", e4.options.upload.linkToImgUrl), e4.options.upload.token && i3.setRequestHeader("X-Upload-Token", e4.options.upload.token), e4.options.upload.withCredentials && (i3.withCredentials = true), Re(e4, i3), i3.setRequestHeader("Content-Type", "application/json; charset=utf-8"), i3.onreadystatechange = function() {
                          if (i3.readyState === XMLHttpRequest.DONE) {
                            if (i3.status === 200) {
                              var t8 = i3.responseText;
                              e4.options.upload.linkToImgFormat && (t8 = e4.options.upload.linkToImgFormat(i3.responseText));
                              var n4 = JSON.parse(t8);
                              if (n4.code !== 0)
                                return void e4.tip.show(n4.msg);
                              var r4 = n4.data.originalURL;
                              if (e4.currentMode === "sv")
                                e4.sv.element.querySelectorAll(".vditor-sv__marker--link").forEach(function(e5) {
                                  e5.textContent === r4 && (e5.textContent = n4.data.url);
                                });
                              else {
                                var o3 = e4[e4.currentMode].element.querySelector('img[src="' + r4 + '"]');
                                o3.src = n4.data.url, e4.currentMode === "ir" && (o3.previousElementSibling.previousElementSibling.innerHTML = n4.data.url);
                              }
                              lt(e4);
                            } else
                              e4.tip.show(i3.responseText);
                            e4.options.upload.linkToImgCallback && e4.options.upload.linkToImgCallback(i3.responseText);
                          }
                        }, i3.send(JSON.stringify({url: r3}));
                      }
                      return e4.currentMode === "ir" ? ['<span class="vditor-ir__marker vditor-ir__marker--link">' + Lute.EscapeHTMLStr(r3) + "</span>", Lute.WalkContinue] : e4.currentMode === "wysiwyg" ? ["", Lute.WalkContinue] : ['<span class="vditor-sv__marker--link">' + Lute.EscapeHTMLStr(r3) + "</span>", Lute.WalkContinue];
                    }, r2.replace(/&amp;/g, "&").replace(/<(|\/)(html|body|meta)[^>]*?>/gi, "").trim() !== '<a href="' + o2 + '">' + o2 + "</a>" && r2.replace(/&amp;/g, "&").replace(/<(|\/)(html|body|meta)[^>]*?>/gi, "").trim() !== '<!--StartFragment--><a href="' + o2 + '">' + o2 + "</a><!--EndFragment-->" || (r2 = ""), (d4 = new DOMParser().parseFromString(r2, "text/html")).body && (r2 = d4.body.innerHTML), r2 = Lute.Sanitize(r2), e4.wysiwyg.getComments(e4), c3 = e4[e4.currentMode].element.scrollHeight, u3 = function(e5, t7, n3) {
                      n3 === void 0 && (n3 = "sv");
                      var r3 = document.createElement("div");
                      r3.innerHTML = e5;
                      var i3 = false;
                      r3.childElementCount === 1 && r3.lastElementChild.style.fontFamily.indexOf("monospace") > -1 && (i3 = true);
                      var o3 = r3.querySelectorAll("pre");
                      if (r3.childElementCount === 1 && o3.length === 1 && o3[0].className !== "vditor-wysiwyg" && o3[0].className !== "vditor-sv" && (i3 = true), e5.indexOf('\n<p class="p1">') === 0 && (i3 = true), r3.childElementCount === 1 && r3.firstElementChild.tagName === "TABLE" && r3.querySelector(".line-number") && r3.querySelector(".line-content") && (i3 = true), i3) {
                        var a5 = t7 || e5;
                        return /\n/.test(a5) || o3.length === 1 ? n3 === "wysiwyg" ? '<div class="vditor-wysiwyg__block" data-block="0" data-type="code-block"><pre><code>' + a5.replace(/&/g, "&amp;").replace(/</g, "&lt;") + "<wbr></code></pre></div>" : "\n```\n" + a5.replace(/&/g, "&amp;").replace(/</g, "&lt;") + "\n```" : n3 === "wysiwyg" ? "<code>" + a5.replace(/&/g, "&amp;").replace(/</g, "&lt;") + "</code><wbr>" : "`" + a5 + "`";
                      }
                      return false;
                    }(r2, o2, e4.currentMode), (p2 = e4.currentMode === "sv" ? (0, y3.a1)(t6.target, "data-type", "code-block") : (0, y3.lG)(t6.target, "CODE")) ? (e4.currentMode === "sv" ? document.execCommand("insertHTML", false, o2.replace(/&/g, "&amp;").replace(/</g, "&lt;")) : (m4 = (0, N.im)(t6.target, e4[e4.currentMode].element), p2.parentElement.tagName !== "PRE" && (o2 += i2.g.ZWSP), p2.textContent = p2.textContent.substring(0, m4.start) + o2 + p2.textContent.substring(m4.end), (0, N.$j)(m4.start + o2.length, m4.start + o2.length, p2.parentElement), ((w3 = p2.parentElement) === null || w3 === void 0 ? void 0 : w3.nextElementSibling.classList.contains("vditor-" + e4.currentMode + "__preview")) && (p2.parentElement.nextElementSibling.innerHTML = p2.outerHTML, H3(p2.parentElement.nextElementSibling, e4))), [3, 8]) : [3, 1]);
                  case 1:
                    return u3 ? (n2.pasteCode(u3), [3, 8]) : [3, 2];
                  case 2:
                    return r2.trim() === "" ? [3, 3] : ((f2 = document.createElement("div")).innerHTML = r2, f2.querySelectorAll("[style]").forEach(function(e5) {
                      e5.removeAttribute("style");
                    }), f2.querySelectorAll(".vditor-copy").forEach(function(e5) {
                      e5.remove();
                    }), e4.currentMode === "ir" ? (l2.HTML2VditorIRDOM = {renderLinkDest: s4}, e4.lute.SetJSRenderers({renderers: l2}), (0, N.oC)(e4.lute.HTML2VditorIRDOM(f2.innerHTML), e4)) : e4.currentMode === "wysiwyg" ? (l2.HTML2VditorDOM = {renderLinkDest: s4}, e4.lute.SetJSRenderers({renderers: l2}), (0, N.oC)(e4.lute.HTML2VditorDOM(f2.innerHTML), e4)) : (l2.Md2VditorSVDOM = {renderLinkDest: s4}, e4.lute.SetJSRenderers({renderers: l2}), _e(e4, e4.lute.HTML2Md(f2.innerHTML).trimRight())), e4.outline.render(e4), [3, 8]);
                  case 3:
                    return a4.length > 0 ? e4.options.upload.url || e4.options.upload.handler ? [4, Ve(e4, a4)] : [3, 5] : [3, 7];
                  case 4:
                    return E3.sent(), [3, 6];
                  case 5:
                    h4 = new FileReader(), "clipboardData" in t6 ? (a4 = t6.clipboardData.files, v2 = a4[0]) : t6.dataTransfer.types.includes("Files") && (a4 = t6.dataTransfer.items, v2 = a4[0].getAsFile()), v2 && v2.type.startsWith("image") && (h4.readAsDataURL(v2), h4.onload = function() {
                      var t7 = "";
                      e4.currentMode === "wysiwyg" ? t7 += '<img alt="' + v2.name + '" src="' + h4.result.toString() + '">\n' : t7 += "![" + v2.name + "](" + h4.result.toString() + ")\n", document.execCommand("insertHTML", false, t7);
                    }), E3.label = 6;
                  case 6:
                    return [3, 8];
                  case 7:
                    o2.trim() !== "" && a4.length === 0 && (e4.currentMode === "ir" ? (l2.Md2VditorIRDOM = {renderLinkDest: s4}, e4.lute.SetJSRenderers({renderers: l2}), (0, N.oC)(e4.lute.Md2VditorIRDOM(o2), e4)) : e4.currentMode === "wysiwyg" ? (l2.Md2VditorDOM = {renderLinkDest: s4}, e4.lute.SetJSRenderers({renderers: l2}), (0, N.oC)(e4.lute.Md2VditorDOM(o2), e4)) : (l2.Md2VditorSVDOM = {renderLinkDest: s4}, e4.lute.SetJSRenderers({renderers: l2}), _e(e4, o2)), e4.outline.render(e4)), E3.label = 8;
                  case 8:
                    return e4.currentMode !== "sv" && ((g2 = (0, y3.F9)((0, N.zh)(e4).startContainer)) && (b3 = (0, N.zh)(e4), e4[e4.currentMode].element.querySelectorAll("wbr").forEach(function(e5) {
                      e5.remove();
                    }), b3.insertNode(document.createElement("wbr")), e4.currentMode === "wysiwyg" ? g2.outerHTML = e4.lute.SpinVditorDOM(g2.outerHTML) : g2.outerHTML = e4.lute.SpinVditorIRDOM(g2.outerHTML), (0, N.ib)(e4[e4.currentMode].element, b3)), e4[e4.currentMode].element.querySelectorAll(".vditor-" + e4.currentMode + "__preview[data-render='2']").forEach(function(t7) {
                      H3(t7, e4);
                    })), e4.wysiwyg.triggerRemoveComment(e4), lt(e4), e4[e4.currentMode].element.scrollHeight - c3 > Math.min(e4[e4.currentMode].element.clientHeight, window.innerHeight) / 2 && Me(e4), [2];
                }
              });
            });
          }, Lt = function(e4) {
            e4.hint.render(e4);
            var t6 = (0, N.zh)(e4).startContainer, n2 = (0, y3.a1)(t6, "data-type", "code-block-info");
            if (n2)
              if (n2.textContent.replace(i2.g.ZWSP, "") === "" && e4.hint.recentLanguage) {
                n2.textContent = i2.g.ZWSP + e4.hint.recentLanguage, (0, N.zh)(e4).selectNodeContents(n2);
              } else {
                var r2 = [], o2 = n2.textContent.substring(0, (0, N.im)(n2, e4.ir.element).start).replace(i2.g.ZWSP, "");
                i2.g.CODE_LANGUAGES.forEach(function(e5) {
                  e5.indexOf(o2.toLowerCase()) > -1 && r2.push({html: e5, value: e5});
                }), e4.hint.genHTML(r2, o2, e4);
              }
          }, Ct = function(e4, t6) {
            t6 === void 0 && (t6 = {enableAddUndoStack: true, enableHint: false, enableInput: true}), t6.enableHint && Lt(e4), clearTimeout(e4.ir.processTimeoutId), e4.ir.processTimeoutId = window.setTimeout(function() {
              if (!e4.ir.composingLock) {
                var n2 = a3(e4);
                typeof e4.options.input == "function" && t6.enableInput && e4.options.input(n2), e4.options.counter.enable && e4.counter.render(e4, n2), e4.options.cache.enable && (0, d3.pK)() && (localStorage.setItem(e4.options.cache.id, n2), e4.options.cache.after && e4.options.cache.after(n2)), e4.devtools && e4.devtools.renderEchart(e4), t6.enableAddUndoStack && e4.undo.addToUndoStack(e4);
              }
            }, e4.options.undoDelay);
          }, Mt = function(e4, t6) {
            var n2 = (0, N.zh)(e4), r2 = (0, y3.F9)(n2.startContainer) || n2.startContainer;
            if (r2) {
              var i3 = r2.querySelector(".vditor-ir__marker--heading");
              i3 ? i3.innerHTML = t6 : (r2.insertAdjacentText("afterbegin", t6), n2.selectNodeContents(r2), n2.collapse(false)), j(e4, n2.cloneRange()), J(e4);
            }
          }, Tt = function(e4, t6, n2) {
            var r2 = (0, y3.a1)(e4.startContainer, "data-type", n2);
            if (r2) {
              r2.firstElementChild.remove(), r2.lastElementChild.remove(), e4.insertNode(document.createElement("wbr"));
              var i3 = document.createElement("div");
              i3.innerHTML = t6.lute.SpinVditorIRDOM(r2.outerHTML), r2.outerHTML = i3.firstElementChild.innerHTML.trim();
            }
          }, At = function(e4, t6, n2, r2) {
            var i3 = (0, N.zh)(e4), o2 = t6.getAttribute("data-type"), a4 = i3.startContainer;
            a4.nodeType === 3 && (a4 = a4.parentElement);
            var l2 = true;
            if (t6.classList.contains("vditor-menu--current"))
              if (o2 === "quote") {
                var s4 = (0, y3.lG)(a4, "BLOCKQUOTE");
                s4 && (i3.insertNode(document.createElement("wbr")), s4.outerHTML = s4.innerHTML.trim() === "" ? '<p data-block="0">' + s4.innerHTML + "</p>" : s4.innerHTML);
              } else if (o2 === "link") {
                var d4 = (0, y3.a1)(i3.startContainer, "data-type", "a");
                if (d4) {
                  var u3 = (0, y3.fb)(i3.startContainer, "vditor-ir__link");
                  u3 ? (i3.insertNode(document.createElement("wbr")), d4.outerHTML = u3.innerHTML) : d4.outerHTML = d4.querySelector(".vditor-ir__link").innerHTML + "<wbr>";
                }
              } else
                o2 === "italic" ? Tt(i3, e4, "em") : o2 === "bold" ? Tt(i3, e4, "strong") : o2 === "strike" ? Tt(i3, e4, "s") : o2 === "inline-code" ? Tt(i3, e4, "code") : o2 !== "check" && o2 !== "list" && o2 !== "ordered-list" || (tt(e4, i3, o2), l2 = false, t6.classList.remove("vditor-menu--current"));
            else {
              e4.ir.element.childNodes.length === 0 && (e4.ir.element.innerHTML = '<p data-block="0"><wbr></p>', (0, N.ib)(e4.ir.element, i3));
              var p2 = (0, y3.F9)(i3.startContainer);
              if (o2 === "line") {
                if (p2) {
                  var m4 = '<hr data-block="0"><p data-block="0"><wbr>\n</p>';
                  p2.innerHTML.trim() === "" ? p2.outerHTML = m4 : p2.insertAdjacentHTML("afterend", m4);
                }
              } else if (o2 === "quote")
                p2 && (i3.insertNode(document.createElement("wbr")), p2.outerHTML = '<blockquote data-block="0">' + p2.outerHTML + "</blockquote>", l2 = false, t6.classList.add("vditor-menu--current"));
              else if (o2 === "link") {
                var f2 = void 0;
                f2 = i3.toString() === "" ? n2 + "<wbr>" + r2 : "" + n2 + i3.toString() + r2.replace(")", "<wbr>)"), document.execCommand("insertHTML", false, f2), l2 = false, t6.classList.add("vditor-menu--current");
              } else if (o2 === "italic" || o2 === "bold" || o2 === "strike" || o2 === "inline-code" || o2 === "code" || o2 === "table") {
                f2 = void 0;
                i3.toString() === "" ? f2 = n2 + "<wbr>" + r2 : (f2 = o2 === "code" || o2 === "table" ? "" + n2 + i3.toString() + "<wbr>" + r2 : "" + n2 + i3.toString() + r2 + "<wbr>", i3.deleteContents()), o2 !== "table" && o2 !== "code" || (f2 = "\n" + f2 + "\n\n");
                var h4 = document.createElement("span");
                h4.innerHTML = f2, i3.insertNode(h4), j(e4, i3), o2 === "table" && (i3.selectNodeContents(getSelection().getRangeAt(0).startContainer.parentElement), (0, N.Hc)(i3));
              } else
                o2 !== "check" && o2 !== "list" && o2 !== "ordered-list" || (tt(e4, i3, o2, false), l2 = false, c2(e4.toolbar.elements, ["check", "list", "ordered-list"]), t6.classList.add("vditor-menu--current"));
            }
            (0, N.ib)(e4.ir.element, i3), Ct(e4), l2 && J(e4);
          }, _t = function(e4, t6, n2, r2) {
            return new (n2 || (n2 = Promise))(function(i3, o2) {
              function a4(e5) {
                try {
                  s4(r2.next(e5));
                } catch (e6) {
                  o2(e6);
                }
              }
              function l2(e5) {
                try {
                  s4(r2.throw(e5));
                } catch (e6) {
                  o2(e6);
                }
              }
              function s4(e5) {
                var t7;
                e5.done ? i3(e5.value) : (t7 = e5.value, t7 instanceof n2 ? t7 : new n2(function(e6) {
                  e6(t7);
                })).then(a4, l2);
              }
              s4((r2 = r2.apply(e4, t6 || [])).next());
            });
          }, xt = function(e4, t6) {
            var n2, r2, i3, o2, a4 = {label: 0, sent: function() {
              if (1 & i3[0])
                throw i3[1];
              return i3[1];
            }, trys: [], ops: []};
            return o2 = {next: l2(0), throw: l2(1), return: l2(2)}, typeof Symbol == "function" && (o2[Symbol.iterator] = function() {
              return this;
            }), o2;
            function l2(o3) {
              return function(l3) {
                return function(o4) {
                  if (n2)
                    throw new TypeError("Generator is already executing.");
                  for (; a4; )
                    try {
                      if (n2 = 1, r2 && (i3 = 2 & o4[0] ? r2.return : o4[0] ? r2.throw || ((i3 = r2.return) && i3.call(r2), 0) : r2.next) && !(i3 = i3.call(r2, o4[1])).done)
                        return i3;
                      switch (r2 = 0, i3 && (o4 = [2 & o4[0], i3.value]), o4[0]) {
                        case 0:
                        case 1:
                          i3 = o4;
                          break;
                        case 4:
                          return a4.label++, {value: o4[1], done: false};
                        case 5:
                          a4.label++, r2 = o4[1], o4 = [0];
                          continue;
                        case 7:
                          o4 = a4.ops.pop(), a4.trys.pop();
                          continue;
                        default:
                          if (!(i3 = a4.trys, (i3 = i3.length > 0 && i3[i3.length - 1]) || o4[0] !== 6 && o4[0] !== 2)) {
                            a4 = 0;
                            continue;
                          }
                          if (o4[0] === 3 && (!i3 || o4[1] > i3[0] && o4[1] < i3[3])) {
                            a4.label = o4[1];
                            break;
                          }
                          if (o4[0] === 6 && a4.label < i3[1]) {
                            a4.label = i3[1], i3 = o4;
                            break;
                          }
                          if (i3 && a4.label < i3[2]) {
                            a4.label = i3[2], a4.ops.push(o4);
                            break;
                          }
                          i3[2] && a4.ops.pop(), a4.trys.pop();
                          continue;
                      }
                      o4 = t6.call(e4, a4);
                    } catch (e5) {
                      o4 = [6, e5], r2 = 0;
                    } finally {
                      n2 = i3 = 0;
                    }
                  if (5 & o4[0])
                    throw o4[1];
                  return {value: o4[0] ? o4[1] : void 0, done: true};
                }([o3, l3]);
              };
            }
          }, Ht = function() {
            function e4(e5) {
              var t6 = this;
              this.splitChar = "", this.lastIndex = -1, this.fillEmoji = function(e6, n2) {
                t6.element.style.display = "none";
                var r2 = decodeURIComponent(e6.getAttribute("data-value")), o2 = window.getSelection().getRangeAt(0);
                if (n2.currentMode === "ir") {
                  var a4 = (0, y3.a1)(o2.startContainer, "data-type", "code-block-info");
                  if (a4)
                    return a4.textContent = i2.g.ZWSP + r2.trimRight(), o2.selectNodeContents(a4), o2.collapse(false), Ct(n2), a4.parentElement.querySelectorAll("code").forEach(function(e7) {
                      e7.className = "language-" + r2.trimRight();
                    }), H3(a4.parentElement.querySelector(".vditor-ir__preview"), n2), void (t6.recentLanguage = r2.trimRight());
                }
                if (n2.currentMode === "wysiwyg" && o2.startContainer.nodeType !== 3) {
                  var l2 = o2.startContainer, s4 = void 0;
                  if ((s4 = l2.classList.contains("vditor-input") ? l2 : l2.firstElementChild) && s4.classList.contains("vditor-input"))
                    return s4.value = r2.trimRight(), o2.selectNodeContents(s4), o2.collapse(false), s4.dispatchEvent(new CustomEvent("input", {detail: 1})), void (t6.recentLanguage = r2.trimRight());
                }
                if (o2.setStart(o2.startContainer, t6.lastIndex), o2.deleteContents(), n2.options.hint.parse ? n2.currentMode === "sv" ? (0, N.oC)(n2.lute.SpinVditorSVDOM(r2), n2) : n2.currentMode === "wysiwyg" ? (0, N.oC)(n2.lute.SpinVditorDOM(r2), n2) : (0, N.oC)(n2.lute.SpinVditorIRDOM(r2), n2) : (0, N.oC)(r2, n2), t6.splitChar === ":" && r2.indexOf(":") > -1 && n2.currentMode !== "sv" && o2.insertNode(document.createTextNode(" ")), o2.collapse(false), (0, N.Hc)(o2), n2.currentMode === "wysiwyg")
                  (d4 = (0, y3.fb)(o2.startContainer, "vditor-wysiwyg__block")) && d4.lastElementChild.classList.contains("vditor-wysiwyg__preview") && (d4.lastElementChild.innerHTML = d4.firstElementChild.innerHTML, H3(d4.lastElementChild, n2));
                else if (n2.currentMode === "ir") {
                  var d4;
                  (d4 = (0, y3.fb)(o2.startContainer, "vditor-ir__marker--pre")) && d4.nextElementSibling.classList.contains("vditor-ir__preview") && (d4.nextElementSibling.innerHTML = d4.innerHTML, H3(d4.nextElementSibling, n2));
                }
                lt(n2);
              }, this.timeId = -1, this.element = document.createElement("div"), this.element.className = "vditor-hint", this.recentLanguage = "", e5.push({key: ":"});
            }
            return e4.prototype.render = function(e5) {
              var t6 = this;
              if (window.getSelection().focusNode) {
                var n2, r2 = getSelection().getRangeAt(0);
                n2 = r2.startContainer.textContent.substring(0, r2.startOffset) || "";
                var i3 = this.getKey(n2, e5.options.hint.extend);
                if (i3 === void 0)
                  this.element.style.display = "none", clearTimeout(this.timeId);
                else if (this.splitChar === ":") {
                  var o2 = i3 === "" ? e5.options.hint.emoji : e5.lute.GetEmojis(), a4 = [];
                  Object.keys(o2).forEach(function(e6) {
                    e6.indexOf(i3.toLowerCase()) === 0 && (o2[e6].indexOf(".") > -1 ? a4.push({html: '<img src="' + o2[e6] + '" title=":' + e6 + ':"/> :' + e6 + ":", value: ":" + e6 + ":"}) : a4.push({html: '<span class="vditor-hint__emoji">' + o2[e6] + "</span>" + e6, value: o2[e6]}));
                  }), this.genHTML(a4, i3, e5);
                } else
                  e5.options.hint.extend.forEach(function(n3) {
                    n3.key === t6.splitChar && (clearTimeout(t6.timeId), t6.timeId = window.setTimeout(function() {
                      return _t(t6, void 0, void 0, function() {
                        var t7;
                        return xt(this, function(r3) {
                          switch (r3.label) {
                            case 0:
                              return t7 = this.genHTML, [4, n3.hint(i3)];
                            case 1:
                              return t7.apply(this, [r3.sent(), i3, e5]), [2];
                          }
                        });
                      });
                    }, e5.options.hint.delay));
                  });
              }
            }, e4.prototype.genHTML = function(e5, t6, n2) {
              var r2 = this;
              if (e5.length !== 0) {
                var i3 = n2[n2.currentMode].element, o2 = (0, N.Ny)(i3), a4 = o2.left + (n2.options.outline.position === "left" ? n2.outline.element.offsetWidth : 0), l2 = o2.top, s4 = "";
                e5.forEach(function(e6, n3) {
                  if (!(n3 > 7)) {
                    var r3 = e6.html;
                    if (t6 !== "") {
                      var i4 = r3.lastIndexOf(">") + 1, o3 = r3.substr(i4), a5 = o3.toLowerCase().indexOf(t6.toLowerCase());
                      a5 > -1 && (o3 = o3.substring(0, a5) + "<b>" + o3.substring(a5, a5 + t6.length) + "</b>" + o3.substring(a5 + t6.length), r3 = r3.substr(0, i4) + o3);
                    }
                    s4 += '<button data-value="' + encodeURIComponent(e6.value) + ' "\n' + (n3 === 0 ? "class='vditor-hint--current'" : "") + "> " + r3 + "</button>";
                  }
                }), this.element.innerHTML = s4;
                var d4 = parseInt(document.defaultView.getComputedStyle(i3, null).getPropertyValue("line-height"), 10);
                this.element.style.top = l2 + (d4 || 22) + "px", this.element.style.left = a4 + "px", this.element.style.display = "block", this.element.style.right = "auto", this.element.querySelectorAll("button").forEach(function(e6) {
                  e6.addEventListener("click", function(t7) {
                    r2.fillEmoji(e6, n2), t7.preventDefault();
                  });
                }), this.element.getBoundingClientRect().bottom > window.innerHeight && (this.element.style.top = l2 - this.element.offsetHeight + "px"), this.element.getBoundingClientRect().right > window.innerWidth && (this.element.style.left = "auto", this.element.style.right = "0");
              } else
                this.element.style.display = "none";
            }, e4.prototype.select = function(e5, t6) {
              if (this.element.querySelectorAll("button").length === 0 || this.element.style.display === "none")
                return false;
              var n2 = this.element.querySelector(".vditor-hint--current");
              if (e5.key === "ArrowDown")
                return e5.preventDefault(), e5.stopPropagation(), n2.removeAttribute("class"), n2.nextElementSibling ? n2.nextElementSibling.className = "vditor-hint--current" : this.element.children[0].className = "vditor-hint--current", true;
              if (e5.key === "ArrowUp") {
                if (e5.preventDefault(), e5.stopPropagation(), n2.removeAttribute("class"), n2.previousElementSibling)
                  n2.previousElementSibling.className = "vditor-hint--current";
                else {
                  var r2 = this.element.children.length;
                  this.element.children[r2 - 1].className = "vditor-hint--current";
                }
                return true;
              }
              return !((0, d3.yl)(e5) || e5.shiftKey || e5.altKey || e5.key !== "Enter" || e5.isComposing) && (e5.preventDefault(), e5.stopPropagation(), this.fillEmoji(n2, t6), true);
            }, e4.prototype.getKey = function(e5, t6) {
              var n2, r2 = this;
              if (this.lastIndex = -1, this.splitChar = "", t6.forEach(function(t7) {
                var n3 = e5.lastIndexOf(t7.key);
                r2.lastIndex < n3 && (r2.splitChar = t7.key, r2.lastIndex = n3);
              }), this.lastIndex === -1)
                return n2;
              var i3 = e5.split(this.splitChar), a4 = i3[i3.length - 1];
              if (i3.length > 1 && a4.trim() === a4)
                if (i3.length === 2 && i3[0] === "" && i3[1].length < 32)
                  n2 = i3[1];
                else {
                  var l2 = i3[i3.length - 2].slice(-1);
                  (0, o.X)(l2) === " " && a4.length < 32 && (n2 = a4);
                }
              return n2;
            }, e4;
          }(), Nt = function() {
            function e4(e5) {
              this.composingLock = false;
              var t6 = document.createElement("div");
              t6.className = "vditor-ir", t6.innerHTML = '<pre class="vditor-reset" placeholder="' + e5.options.placeholder + '"\n contenteditable="true" spellcheck="false"></pre>', this.element = t6.firstElementChild, this.bindEvent(e5), we(e5, this.element), Ee(e5, this.element), ke(e5, this.element), Te(e5, this.element), Ae(e5, this.element), Se(e5, this.element), Le(e5, this.element, this.copy), Ce(e5, this.element, this.copy);
            }
            return e4.prototype.copy = function(e5, t6) {
              var n2 = getSelection().getRangeAt(0);
              if (n2.toString() !== "") {
                e5.stopPropagation(), e5.preventDefault();
                var r2 = document.createElement("div");
                r2.appendChild(n2.cloneContents()), e5.clipboardData.setData("text/plain", t6.lute.VditorIRDOM2Md(r2.innerHTML).trim()), e5.clipboardData.setData("text/html", "");
              }
            }, e4.prototype.bindEvent = function(e5) {
              var t6 = this;
              this.element.addEventListener("paste", function(t7) {
                St(e5, t7, {pasteCode: function(e6) {
                  document.execCommand("insertHTML", false, e6);
                }});
              }), this.element.addEventListener("compositionstart", function(e6) {
                t6.composingLock = true;
              }), this.element.addEventListener("compositionend", function(n2) {
                (0, d3.vU)() || j(e5, getSelection().getRangeAt(0).cloneRange()), t6.composingLock = false;
              }), this.element.addEventListener("input", function(n2) {
                if (n2.inputType !== "deleteByDrag" && n2.inputType !== "insertFromDrop")
                  return t6.preventInput ? (t6.preventInput = false, void Ct(e5, {enableAddUndoStack: true, enableHint: true, enableInput: true})) : void (t6.composingLock || n2.data === "\u2018" || n2.data === "\u201C" || n2.data === "\u300A" || j(e5, getSelection().getRangeAt(0).cloneRange(), false, n2));
              }), this.element.addEventListener("click", function(n2) {
                if (n2.target.tagName === "INPUT")
                  return n2.target.checked ? n2.target.setAttribute("checked", "checked") : n2.target.removeAttribute("checked"), t6.preventInput = true, void Ct(e5);
                var r2 = (0, N.zh)(e5), o2 = (0, y3.fb)(n2.target, "vditor-ir__preview");
                if (o2 || (o2 = (0, y3.fb)(r2.startContainer, "vditor-ir__preview")), o2 && (o2.previousElementSibling.firstElementChild ? r2.selectNodeContents(o2.previousElementSibling.firstElementChild) : r2.selectNodeContents(o2.previousElementSibling), r2.collapse(true), (0, N.Hc)(r2), Me(e5)), n2.target.tagName === "IMG") {
                  var a4 = n2.target.parentElement.querySelector(".vditor-ir__marker--link");
                  a4 && (r2.selectNode(a4), (0, N.Hc)(r2));
                }
                var l2 = (0, y3.a1)(n2.target, "data-type", "a");
                if (!l2 || l2.classList.contains("vditor-ir__node--expand")) {
                  if (n2.target.isEqualNode(t6.element) && t6.element.lastElementChild && r2.collapsed) {
                    var s4 = t6.element.lastElementChild.getBoundingClientRect();
                    n2.y > s4.top + s4.height && (t6.element.lastElementChild.tagName === "P" && t6.element.lastElementChild.textContent.trim().replace(i2.g.ZWSP, "") === "" ? (r2.selectNodeContents(t6.element.lastElementChild), r2.collapse(false)) : (t6.element.insertAdjacentHTML("beforeend", '<p data-block="0">' + i2.g.ZWSP + "<wbr></p>"), (0, N.ib)(t6.element, r2)));
                  }
                  r2.toString() === "" ? P(r2, e5) : setTimeout(function() {
                    P((0, N.zh)(e5), e5);
                  }), O2(n2, e5), J(e5);
                } else
                  window.open(l2.querySelector(":scope > .vditor-ir__marker--link").textContent);
              }), this.element.addEventListener("keyup", function(n2) {
                if (!n2.isComposing && !(0, d3.yl)(n2))
                  if (n2.key === "Enter" && Me(e5), J(e5), n2.key !== "Backspace" && n2.key !== "Delete" || e5.ir.element.innerHTML === "" || e5.ir.element.childNodes.length !== 1 || !e5.ir.element.firstElementChild || e5.ir.element.firstElementChild.tagName !== "P" || e5.ir.element.firstElementChild.childElementCount !== 0 || e5.ir.element.textContent !== "" && e5.ir.element.textContent !== "\n") {
                    var r2 = (0, N.zh)(e5);
                    n2.key === "Backspace" ? ((0, d3.vU)() && r2.startContainer.textContent === "\n" && r2.startOffset === 1 && (r2.startContainer.textContent = "", P(r2, e5)), t6.element.querySelectorAll(".language-math").forEach(function(e6) {
                      var t7 = e6.querySelector("br");
                      t7 && t7.remove();
                    })) : n2.key.indexOf("Arrow") > -1 ? (n2.key !== "ArrowLeft" && n2.key !== "ArrowRight" || Lt(e5), P(r2, e5)) : n2.keyCode === 229 && n2.code === "" && n2.key === "Unidentified" && P(r2, e5);
                    var o2 = (0, y3.fb)(r2.startContainer, "vditor-ir__preview");
                    if (o2) {
                      if (n2.key === "ArrowUp" || n2.key === "ArrowLeft")
                        return o2.previousElementSibling.firstElementChild ? r2.selectNodeContents(o2.previousElementSibling.firstElementChild) : r2.selectNodeContents(o2.previousElementSibling), r2.collapse(false), n2.preventDefault(), true;
                      if (o2.tagName === "SPAN" && (n2.key === "ArrowDown" || n2.key === "ArrowRight"))
                        return o2.parentElement.getAttribute("data-type") === "html-entity" ? (o2.parentElement.insertAdjacentText("afterend", i2.g.ZWSP), r2.setStart(o2.parentElement.nextSibling, 1)) : r2.selectNodeContents(o2.parentElement.lastElementChild), r2.collapse(false), n2.preventDefault(), true;
                    }
                  } else
                    e5.ir.element.innerHTML = "";
              });
            }, e4;
          }(), Dt = function(e4) {
            return e4.currentMode === "sv" ? e4.lute.Md2HTML(a3(e4)) : e4.currentMode === "wysiwyg" ? e4.lute.VditorDOM2HTML(e4.wysiwyg.element.innerHTML) : e4.currentMode === "ir" ? e4.lute.VditorIRDOM2HTML(e4.ir.element.innerHTML) : void 0;
          }, Ot = n(792), It = n(198), jt = function() {
            function e4(e5) {
              this.element = document.createElement("div"), this.element.className = "vditor-outline", this.element.innerHTML = '<div class="vditor-outline__title">' + e5 + '</div>\n<div class="vditor-outline__content"></div>';
            }
            return e4.prototype.render = function(e5) {
              return e5.preview.element.style.display === "block" ? (0, It.k)(e5.preview.element.lastElementChild, this.element.lastElementChild, e5) : (0, It.k)(e5[e5.currentMode].element, this.element.lastElementChild, e5);
            }, e4.prototype.toggle = function(e5, t6) {
              var n2;
              t6 === void 0 && (t6 = true);
              var r2 = (n2 = e5.toolbar.elements.outline) === null || n2 === void 0 ? void 0 : n2.firstElementChild;
              if (t6 && window.innerWidth >= i2.g.MOBILE_WIDTH ? (this.element.style.display = "block", this.render(e5), r2 == null || r2.classList.add("vditor-menu--current")) : (this.element.style.display = "none", r2 == null || r2.classList.remove("vditor-menu--current")), getSelection().rangeCount > 0) {
                var o2 = getSelection().getRangeAt(0);
                e5[e5.currentMode].element.contains(o2.startContainer) ? (0, N.Hc)(o2) : e5[e5.currentMode].element.focus();
              }
              W(e5);
            }, e4;
          }(), Rt = n(207), Pt = function() {
            function e4(e5) {
              var t6 = this;
              this.element = document.createElement("div"), this.element.className = "vditor-preview";
              var n2 = document.createElement("div");
              n2.className = "vditor-reset", e5.options.classes.preview && n2.classList.add(e5.options.classes.preview), n2.style.maxWidth = e5.options.preview.maxWidth + "px", n2.addEventListener("copy", function(n3) {
                if (n3.target.tagName !== "TEXTAREA") {
                  var r3 = document.createElement("div");
                  r3.className = "vditor-reset", r3.appendChild(getSelection().getRangeAt(0).cloneContents()), t6.copyToX(e5, r3), n3.preventDefault();
                }
              }), n2.addEventListener("click", function(r3) {
                var i4 = (0, y3.lG)(r3.target, "SPAN");
                if (i4 && (0, y3.fb)(i4, "vditor-toc")) {
                  var o3 = n2.querySelector("#" + i4.getAttribute("data-target-id"));
                  o3 && (t6.element.scrollTop = o3.offsetTop);
                } else
                  r3.target.tagName === "IMG" && (0, q2.E)(r3.target, e5.options.lang, e5.options.theme);
              });
              var r2 = e5.options.preview.actions, i3 = document.createElement("div");
              i3.className = "vditor-preview__action";
              for (var o2 = [], a4 = 0; a4 < r2.length; a4++) {
                var l2 = r2[a4];
                if (typeof l2 != "object")
                  switch (l2) {
                    case "desktop":
                      o2.push('<button type="button" class="vditor-preview__action--current" data-type="desktop">Desktop</button>');
                      break;
                    case "tablet":
                      o2.push('<button type="button" data-type="tablet">Tablet</button>');
                      break;
                    case "mobile":
                      o2.push('<button type="button" data-type="mobile">Mobile/Wechat</button>');
                      break;
                    case "mp-wechat":
                      o2.push('<button type="button" data-type="mp-wechat" class="vditor-tooltipped vditor-tooltipped__w" aria-label="\u590D\u5236\u5230\u516C\u4F17\u53F7"><svg><use xlink:href="#vditor-icon-mp-wechat"></use></svg></button>');
                      break;
                    case "zhihu":
                      o2.push('<button type="button" data-type="zhihu" class="vditor-tooltipped vditor-tooltipped__w" aria-label="\u590D\u5236\u5230\u77E5\u4E4E"><svg><use xlink:href="#vditor-icon-zhihu"></use></svg></button>');
                  }
                else
                  o2.push('<button type="button" data-type="' + l2.key + '" class="' + l2.className + '"' + (l2.tooltip ? ' aria-label="' + l2.tooltip + '"' : "") + '">' + l2.text + "</button>");
              }
              i3.innerHTML = o2.join(""), r2.length === 0 && (i3.style.display = "none"), this.element.appendChild(i3), this.element.appendChild(n2), i3.addEventListener((0, d3.Le)(), function(o3) {
                var a5 = (0, b2.S)(o3.target, "BUTTON");
                if (a5) {
                  var l3 = a5.getAttribute("data-type"), s4 = r2.find(function(e6) {
                    return (e6 == null ? void 0 : e6.key) === l3;
                  });
                  s4 ? s4.click(l3) : l3 !== "mp-wechat" && l3 !== "zhihu" ? (n2.style.width = l3 === "desktop" ? "auto" : l3 === "tablet" ? "780px" : "360px", n2.scrollWidth > n2.parentElement.clientWidth && (n2.style.width = "auto"), t6.render(e5), i3.querySelectorAll("button").forEach(function(e6) {
                    e6.classList.remove("vditor-preview__action--current");
                  }), a5.classList.add("vditor-preview__action--current")) : t6.copyToX(e5, t6.element.lastElementChild.cloneNode(true), l3);
                }
              });
            }
            return e4.prototype.render = function(e5, t6) {
              var n2 = this;
              if (clearTimeout(this.mdTimeoutId), this.element.style.display !== "none")
                if (t6)
                  this.element.lastElementChild.innerHTML = t6;
                else if (a3(e5).replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "") !== "") {
                  var r2 = new Date().getTime(), i3 = a3(e5);
                  this.mdTimeoutId = window.setTimeout(function() {
                    if (e5.options.preview.url) {
                      var t7 = new XMLHttpRequest();
                      t7.open("POST", e5.options.preview.url), t7.setRequestHeader("Content-Type", "application/json;charset=UTF-8"), t7.onreadystatechange = function() {
                        if (t7.readyState === XMLHttpRequest.DONE)
                          if (t7.status === 200) {
                            var o3 = JSON.parse(t7.responseText);
                            if (o3.code !== 0)
                              return void e5.tip.show(o3.msg);
                            e5.options.preview.transform && (o3.data = e5.options.preview.transform(o3.data)), n2.element.lastElementChild.innerHTML = o3.data, n2.afterRender(e5, r2);
                          } else {
                            var a4 = e5.lute.Md2HTML(i3);
                            e5.options.preview.transform && (a4 = e5.options.preview.transform(a4)), n2.element.lastElementChild.innerHTML = a4, n2.afterRender(e5, r2);
                          }
                      }, t7.send(JSON.stringify({markdownText: i3}));
                    } else {
                      var o2 = e5.lute.Md2HTML(i3);
                      e5.options.preview.transform && (o2 = e5.options.preview.transform(o2)), n2.element.lastElementChild.innerHTML = o2, n2.afterRender(e5, r2);
                    }
                  }, e5.options.preview.delay);
                } else
                  this.element.lastElementChild.innerHTML = "";
              else
                this.element.getAttribute("data-type") === "renderPerformance" && e5.tip.hide();
            }, e4.prototype.afterRender = function(e5, t6) {
              e5.options.preview.parse && e5.options.preview.parse(this.element);
              var n2 = new Date().getTime() - t6;
              new Date().getTime() - t6 > 2600 ? (e5.tip.show(window.VditorI18n.performanceTip.replace("${x}", n2.toString())), e5.preview.element.setAttribute("data-type", "renderPerformance")) : e5.preview.element.getAttribute("data-type") === "renderPerformance" && (e5.tip.hide(), e5.preview.element.removeAttribute("data-type"));
              var r2 = e5.preview.element.querySelector(".vditor-comment--focus");
              r2 && r2.classList.remove("vditor-comment--focus"), (0, S3.O)(e5.preview.element.lastElementChild), (0, M3.s)(e5.options.preview.hljs, e5.preview.element.lastElementChild, e5.options.cdn), (0, A.i)(e5.preview.element.lastElementChild, e5.options.cdn, e5.options.theme), (0, L2.P)(e5.preview.element.lastElementChild, e5.options.cdn), (0, C.v)(e5.preview.element.lastElementChild, e5.options.cdn), (0, k2.p)(e5.preview.element.lastElementChild, e5.options.cdn, e5.options.theme), (0, _.P)(e5.preview.element.lastElementChild, e5.options.cdn, e5.options.theme), (0, x2.B)(e5.preview.element.lastElementChild, e5.options.cdn), (0, E2.Q)(e5.preview.element.lastElementChild, e5.options.cdn), (0, Rt.Y)(e5.preview.element.lastElementChild);
              var i3 = e5.preview.element, o2 = e5.outline.render(e5);
              o2 === "" && (o2 = "[ToC]"), i3.querySelectorAll('[data-type="toc-block"]').forEach(function(t7) {
                t7.innerHTML = o2, (0, T2.H)(t7, {cdn: e5.options.cdn, math: e5.options.preview.math});
              }), (0, T2.H)(e5.preview.element.lastElementChild, {cdn: e5.options.cdn, math: e5.options.preview.math});
            }, e4.prototype.copyToX = function(e5, t6, n2) {
              n2 === void 0 && (n2 = "mp-wechat"), n2 !== "zhihu" ? t6.querySelectorAll(".katex-html .base").forEach(function(e6) {
                e6.style.display = "initial";
              }) : t6.querySelectorAll(".language-math").forEach(function(e6) {
                e6.outerHTML = '<img class="Formula-image" data-eeimg="true" src="//www.zhihu.com/equation?tex=" alt="' + e6.getAttribute("data-math") + '\\" style="display: block; margin: 0 auto; max-width: 100%;">';
              }), t6.style.backgroundColor = "#fff", t6.querySelectorAll("code").forEach(function(e6) {
                e6.style.backgroundImage = "none";
              }), this.element.append(t6);
              var r2 = t6.ownerDocument.createRange();
              r2.selectNode(t6), (0, N.Hc)(r2), document.execCommand("copy"), this.element.lastElementChild.remove(), e5.tip.show("\u5DF2\u590D\u5236\uFF0C\u53EF\u5230" + (n2 === "zhihu" ? "\u77E5\u4E4E" : "\u5FAE\u4FE1\u516C\u4F17\u53F7\u5E73\u53F0") + "\u8FDB\u884C\u7C98\u8D34");
            }, e4;
          }(), qt = function() {
            function e4(e5) {
              this.element = document.createElement("div"), this.element.className = "vditor-resize vditor-resize--" + e5.options.resize.position, this.element.innerHTML = '<div><svg><use xlink:href="#vditor-icon-resize"></use></svg></div>', this.bindEvent(e5);
            }
            return e4.prototype.bindEvent = function(e5) {
              var t6 = this;
              this.element.addEventListener("mousedown", function(n2) {
                var r2 = document, i3 = n2.clientY, o2 = e5.element.offsetHeight, a4 = 63 + e5.element.querySelector(".vditor-toolbar").clientHeight;
                r2.ondragstart = function() {
                  return false;
                }, window.captureEvents && window.captureEvents(), t6.element.classList.add("vditor-resize--selected"), r2.onmousemove = function(t7) {
                  e5.options.resize.position === "top" ? e5.element.style.height = Math.max(a4, o2 + (i3 - t7.clientY)) + "px" : e5.element.style.height = Math.max(a4, o2 + (t7.clientY - i3)) + "px", e5.options.typewriterMode && (e5.sv.element.style.paddingBottom = e5.sv.element.parentElement.offsetHeight / 2 + "px");
                }, r2.onmouseup = function() {
                  e5.options.resize.after && e5.options.resize.after(e5.element.offsetHeight - o2), window.captureEvents && window.captureEvents(), r2.onmousemove = null, r2.onmouseup = null, r2.ondragstart = null, r2.onselectstart = null, r2.onselect = null, t6.element.classList.remove("vditor-resize--selected");
                };
              });
            }, e4;
          }(), Bt = function() {
            function e4(e5) {
              this.composingLock = false, this.element = document.createElement("pre"), this.element.className = "vditor-sv vditor-reset", this.element.setAttribute("placeholder", e5.options.placeholder), this.element.setAttribute("contenteditable", "true"), this.element.setAttribute("spellcheck", "false"), this.bindEvent(e5), we(e5, this.element), ke(e5, this.element), Te(e5, this.element), Ae(e5, this.element), Se(e5, this.element), Le(e5, this.element, this.copy), Ce(e5, this.element, this.copy);
            }
            return e4.prototype.copy = function(e5, t6) {
              e5.stopPropagation(), e5.preventDefault(), e5.clipboardData.setData("text/plain", be(t6[t6.currentMode].element));
            }, e4.prototype.bindEvent = function(e5) {
              var t6 = this;
              this.element.addEventListener("paste", function(t7) {
                St(e5, t7, {pasteCode: function(e6) {
                  document.execCommand("insertHTML", false, e6);
                }});
              }), this.element.addEventListener("scroll", function() {
                if (e5.preview.element.style.display === "block") {
                  var n2 = t6.element.scrollTop, r2 = t6.element.clientHeight, i3 = t6.element.scrollHeight - parseFloat(t6.element.style.paddingBottom || "0"), o2 = e5.preview.element;
                  o2.scrollTop = n2 / r2 > 0.5 ? (n2 + r2) * o2.scrollHeight / i3 - r2 : n2 * o2.scrollHeight / i3;
                }
              }), this.element.addEventListener("compositionstart", function(e6) {
                t6.composingLock = true;
              }), this.element.addEventListener("compositionend", function(n2) {
                (0, d3.vU)() || B2(e5, n2), t6.composingLock = false;
              }), this.element.addEventListener("input", function(n2) {
                if (n2.inputType !== "deleteByDrag" && n2.inputType !== "insertFromDrop" && !t6.composingLock && n2.data !== "\u2018" && n2.data !== "\u201C" && n2.data !== "\u300A")
                  return t6.preventInput ? (t6.preventInput = false, void De(e5, {enableAddUndoStack: true, enableHint: true, enableInput: true})) : void B2(e5, n2);
              }), this.element.addEventListener("keyup", function(t7) {
                t7.isComposing || (0, d3.yl)(t7) || (t7.key !== "Backspace" && t7.key !== "Delete" || e5.sv.element.innerHTML === "" || e5.sv.element.childNodes.length !== 1 || !e5.sv.element.firstElementChild || e5.sv.element.firstElementChild.tagName !== "DIV" || e5.sv.element.firstElementChild.childElementCount !== 2 || e5.sv.element.firstElementChild.textContent !== "" && e5.sv.element.textContent !== "\n" ? t7.key === "Enter" && Me(e5) : e5.sv.element.innerHTML = "");
              });
            }, e4;
          }(), Vt = function() {
            function e4() {
              this.element = document.createElement("div"), this.element.className = "vditor-tip";
            }
            return e4.prototype.show = function(e5, t6) {
              var n2 = this;
              t6 === void 0 && (t6 = 6e3), this.element.className = "vditor-tip vditor-tip--show", t6 === 0 ? (this.element.innerHTML = '<div class="vditor-tip__content">' + e5 + '\n<div class="vditor-tip__close">X</div></div>', this.element.querySelector(".vditor-tip__close").addEventListener("click", function() {
                n2.hide();
              })) : (this.element.innerHTML = '<div class="vditor-tip__content">' + e5 + "</div>", setTimeout(function() {
                n2.hide();
              }, t6)), this.element.removeAttribute("style"), setTimeout(function() {
                n2.element.getBoundingClientRect().top < 46 && (n2.element.style.position = "fixed", n2.element.style.top = "46px");
              }, 150);
            }, e4.prototype.hide = function() {
              this.element.className = "vditor-messageElementtip", this.element.innerHTML = "";
            }, e4;
          }(), Ut = function(e4, t6) {
            if (t6.options.preview.mode !== e4) {
              switch (t6.options.preview.mode = e4, e4) {
                case "both":
                  t6.sv.element.style.display = "block", t6.preview.element.style.display = "block", t6.preview.render(t6), u2(t6.toolbar.elements, ["both"]);
                  break;
                case "editor":
                  t6.sv.element.style.display = "block", t6.preview.element.style.display = "none", c2(t6.toolbar.elements, ["both"]);
              }
              t6.devtools && t6.devtools.renderEchart(t6);
            }
          }, Wt = function() {
            var e4 = function(t6, n2) {
              return e4 = Object.setPrototypeOf || {__proto__: []} instanceof Array && function(e5, t7) {
                e5.__proto__ = t7;
              } || function(e5, t7) {
                for (var n3 in t7)
                  t7.hasOwnProperty(n3) && (e5[n3] = t7[n3]);
              }, e4(t6, n2);
            };
            return function(t6, n2) {
              function r2() {
                this.constructor = t6;
              }
              e4(t6, n2), t6.prototype = n2 === null ? Object.create(n2) : (r2.prototype = n2.prototype, new r2());
            };
          }(), zt = function(e4) {
            function t6(t7, n2) {
              var r2 = e4.call(this, t7, n2) || this;
              return t7.options.preview.mode === "both" && r2.element.children[0].classList.add("vditor-menu--current"), r2.element.children[0].addEventListener((0, d3.Le)(), function(e5) {
                r2.element.firstElementChild.classList.contains(i2.g.CLASS_MENU_DISABLED) || (e5.preventDefault(), t7.currentMode === "sv" && (t7.options.preview.mode === "both" ? Ut("editor", t7) : Ut("both", t7)));
              }), r2;
            }
            return Wt(t6, e4), t6;
          }(he), Gt = function() {
            this.element = document.createElement("div"), this.element.className = "vditor-toolbar__br";
          }, Kt = n(968), Ft = function() {
            var e4 = function(t6, n2) {
              return e4 = Object.setPrototypeOf || {__proto__: []} instanceof Array && function(e5, t7) {
                e5.__proto__ = t7;
              } || function(e5, t7) {
                for (var n3 in t7)
                  t7.hasOwnProperty(n3) && (e5[n3] = t7[n3]);
              }, e4(t6, n2);
            };
            return function(t6, n2) {
              function r2() {
                this.constructor = t6;
              }
              e4(t6, n2), t6.prototype = n2 === null ? Object.create(n2) : (r2.prototype = n2.prototype, new r2());
            };
          }(), Zt = function(e4) {
            function t6(t7, n2) {
              var r2 = e4.call(this, t7, n2) || this, o2 = r2.element.children[0], a4 = document.createElement("div");
              a4.className = "vditor-hint" + (n2.level === 2 ? "" : " vditor-panel--arrow");
              var l2 = "";
              return i2.g.CODE_THEME.forEach(function(e5) {
                l2 += "<button>" + e5 + "</button>";
              }), a4.innerHTML = '<div style="overflow: auto;max-height:' + window.innerHeight / 2 + 'px">' + l2 + "</div>", a4.addEventListener((0, d3.Le)(), function(e5) {
                e5.target.tagName === "BUTTON" && (v(t7, ["subToolbar"]), t7.options.preview.hljs.style = e5.target.textContent, (0, Kt.Y)(e5.target.textContent, t7.options.cdn), e5.preventDefault(), e5.stopPropagation());
              }), r2.element.appendChild(a4), g(t7, a4, o2, n2.level), r2;
            }
            return Ft(t6, e4), t6;
          }(he), Jt = function() {
            var e4 = function(t6, n2) {
              return e4 = Object.setPrototypeOf || {__proto__: []} instanceof Array && function(e5, t7) {
                e5.__proto__ = t7;
              } || function(e5, t7) {
                for (var n3 in t7)
                  t7.hasOwnProperty(n3) && (e5[n3] = t7[n3]);
              }, e4(t6, n2);
            };
            return function(t6, n2) {
              function r2() {
                this.constructor = t6;
              }
              e4(t6, n2), t6.prototype = n2 === null ? Object.create(n2) : (r2.prototype = n2.prototype, new r2());
            };
          }(), Xt = function(e4) {
            function t6(t7, n2) {
              var r2 = e4.call(this, t7, n2) || this, i3 = r2.element.children[0], o2 = document.createElement("div");
              o2.className = "vditor-hint" + (n2.level === 2 ? "" : " vditor-panel--arrow");
              var a4 = "";
              return Object.keys(t7.options.preview.theme.list).forEach(function(e5) {
                a4 += '<button data-type="' + e5 + '">' + t7.options.preview.theme.list[e5] + "</button>";
              }), o2.innerHTML = '<div style="overflow: auto;max-height:' + window.innerHeight / 2 + 'px">' + a4 + "</div>", o2.addEventListener((0, d3.Le)(), function(e5) {
                e5.target.tagName === "BUTTON" && (v(t7, ["subToolbar"]), t7.options.preview.theme.current = e5.target.getAttribute("data-type"), (0, V.Z)(t7.options.preview.theme.current, t7.options.preview.theme.path), e5.preventDefault(), e5.stopPropagation());
              }), r2.element.appendChild(o2), g(t7, o2, i3, n2.level), r2;
            }
            return Jt(t6, e4), t6;
          }(he), Yt = function() {
            function e4(e5) {
              this.element = document.createElement("span"), this.element.className = "vditor-counter vditor-tooltipped vditor-tooltipped__nw", this.render(e5, "");
            }
            return e4.prototype.render = function(e5, t6) {
              var n2 = t6.endsWith("\n") ? t6.length - 1 : t6.length;
              if (e5.options.counter.type === "text" && e5[e5.currentMode]) {
                var r2 = e5[e5.currentMode].element.cloneNode(true);
                r2.querySelectorAll(".vditor-wysiwyg__preview").forEach(function(e6) {
                  e6.remove();
                }), n2 = r2.textContent.length;
              }
              typeof e5.options.counter.max == "number" ? (n2 > e5.options.counter.max ? this.element.className = "vditor-counter vditor-counter--error" : this.element.className = "vditor-counter", this.element.innerHTML = n2 + "/" + e5.options.counter.max) : this.element.innerHTML = "" + n2, this.element.setAttribute("aria-label", e5.options.counter.type), e5.options.counter.after && e5.options.counter.after(n2, {enable: e5.options.counter.enable, max: e5.options.counter.max, type: e5.options.counter.type});
            }, e4;
          }(), Qt = function() {
            var e4 = function(t6, n2) {
              return e4 = Object.setPrototypeOf || {__proto__: []} instanceof Array && function(e5, t7) {
                e5.__proto__ = t7;
              } || function(e5, t7) {
                for (var n3 in t7)
                  t7.hasOwnProperty(n3) && (e5[n3] = t7[n3]);
              }, e4(t6, n2);
            };
            return function(t6, n2) {
              function r2() {
                this.constructor = t6;
              }
              e4(t6, n2), t6.prototype = n2 === null ? Object.create(n2) : (r2.prototype = n2.prototype, new r2());
            };
          }(), $t = function(e4) {
            function t6(t7, n2) {
              var r2 = e4.call(this, t7, n2) || this;
              return r2.element.children[0].innerHTML = n2.icon, r2.element.children[0].addEventListener((0, d3.Le)(), function(e5) {
                e5.preventDefault(), e5.currentTarget.classList.contains(i2.g.CLASS_MENU_DISABLED) || n2.click(e5, t7);
              }), r2;
            }
            return Qt(t6, e4), t6;
          }(he), en = function() {
            var e4 = function(t6, n2) {
              return e4 = Object.setPrototypeOf || {__proto__: []} instanceof Array && function(e5, t7) {
                e5.__proto__ = t7;
              } || function(e5, t7) {
                for (var n3 in t7)
                  t7.hasOwnProperty(n3) && (e5[n3] = t7[n3]);
              }, e4(t6, n2);
            };
            return function(t6, n2) {
              function r2() {
                this.constructor = t6;
              }
              e4(t6, n2), t6.prototype = n2 === null ? Object.create(n2) : (r2.prototype = n2.prototype, new r2());
            };
          }(), tn = function(e4) {
            function t6(t7, n2) {
              var r2 = e4.call(this, t7, n2) || this;
              return r2.element.firstElementChild.addEventListener((0, d3.Le)(), function(e5) {
                var n3 = r2.element.firstElementChild;
                n3.classList.contains(i2.g.CLASS_MENU_DISABLED) || (e5.preventDefault(), n3.classList.contains("vditor-menu--current") ? (n3.classList.remove("vditor-menu--current"), t7.devtools.element.style.display = "none", W(t7)) : (n3.classList.add("vditor-menu--current"), t7.devtools.element.style.display = "block", W(t7), t7.devtools.renderEchart(t7)));
              }), r2;
            }
            return en(t6, e4), t6;
          }(he), nn = function() {
            this.element = document.createElement("div"), this.element.className = "vditor-toolbar__divider";
          }, rn = function() {
            var e4 = function(t6, n2) {
              return e4 = Object.setPrototypeOf || {__proto__: []} instanceof Array && function(e5, t7) {
                e5.__proto__ = t7;
              } || function(e5, t7) {
                for (var n3 in t7)
                  t7.hasOwnProperty(n3) && (e5[n3] = t7[n3]);
              }, e4(t6, n2);
            };
            return function(t6, n2) {
              function r2() {
                this.constructor = t6;
              }
              e4(t6, n2), t6.prototype = n2 === null ? Object.create(n2) : (r2.prototype = n2.prototype, new r2());
            };
          }(), on = function(e4) {
            function t6(t7, n2) {
              var r2 = e4.call(this, t7, n2) || this, i3 = document.createElement("div");
              i3.className = "vditor-panel vditor-panel--arrow";
              var o2 = "";
              return Object.keys(t7.options.hint.emoji).forEach(function(e5) {
                var n3 = t7.options.hint.emoji[e5];
                n3.indexOf(".") > -1 ? o2 += '<button data-value=":' + e5 + ': " data-key=":' + e5 + ':"><img\ndata-value=":' + e5 + ': " data-key=":' + e5 + ':" class="vditor-emojis__icon" src="' + n3 + '"/></button>' : o2 += '<button data-value="' + n3 + ' "\n data-key="' + e5 + '"><span class="vditor-emojis__icon">' + n3 + "</span></button>";
              }), i3.innerHTML = '<div class="vditor-emojis" style="max-height: ' + (t7.options.height === "auto" ? "auto" : t7.options.height - 80) + 'px">' + o2 + '</div><div class="vditor-emojis__tail">\n    <span class="vditor-emojis__tip"></span><span>' + (t7.options.hint.emojiTail || "") + "</span>\n</div>", r2.element.appendChild(i3), g(t7, i3, r2.element.firstElementChild, n2.level), r2.bindEvent(t7), r2;
            }
            return rn(t6, e4), t6.prototype.bindEvent = function(e5) {
              var t7 = this;
              this.element.lastElementChild.addEventListener((0, d3.Le)(), function(n2) {
                var r2 = (0, b2.S)(n2.target, "BUTTON");
                if (r2) {
                  n2.preventDefault();
                  var i3 = r2.getAttribute("data-value"), o2 = (0, N.zh)(e5), a4 = i3;
                  if (e5.currentMode === "wysiwyg" ? a4 = e5.lute.SpinVditorDOM(i3) : e5.currentMode === "ir" && (a4 = e5.lute.SpinVditorIRDOM(i3)), i3.indexOf(":") > -1 && e5.currentMode !== "sv") {
                    var l2 = document.createElement("div");
                    l2.innerHTML = a4, a4 = l2.firstElementChild.firstElementChild.outerHTML + " ", (0, N.oC)(a4, e5);
                  } else
                    o2.extractContents(), o2.insertNode(document.createTextNode(i3));
                  o2.collapse(false), (0, N.Hc)(o2), t7.element.lastElementChild.style.display = "none", lt(e5);
                }
              }), this.element.lastElementChild.addEventListener("mouseover", function(e6) {
                var n2 = (0, b2.S)(e6.target, "BUTTON");
                n2 && (t7.element.querySelector(".vditor-emojis__tip").innerHTML = n2.getAttribute("data-key"));
              });
            }, t6;
          }(he), an = function(e4, t6, n2) {
            var r2 = document.createElement("a");
            "download" in r2 ? (r2.download = n2, r2.style.display = "none", r2.href = URL.createObjectURL(new Blob([t6])), document.body.appendChild(r2), r2.click(), r2.remove()) : e4.tip.show(window.VditorI18n.downloadTip, 0);
          }, ln = function() {
            var e4 = function(t6, n2) {
              return e4 = Object.setPrototypeOf || {__proto__: []} instanceof Array && function(e5, t7) {
                e5.__proto__ = t7;
              } || function(e5, t7) {
                for (var n3 in t7)
                  t7.hasOwnProperty(n3) && (e5[n3] = t7[n3]);
              }, e4(t6, n2);
            };
            return function(t6, n2) {
              function r2() {
                this.constructor = t6;
              }
              e4(t6, n2), t6.prototype = n2 === null ? Object.create(n2) : (r2.prototype = n2.prototype, new r2());
            };
          }(), sn = function(e4) {
            function t6(t7, n2) {
              var r2 = e4.call(this, t7, n2) || this, i3 = r2.element.children[0], o2 = document.createElement("div");
              return o2.className = "vditor-hint" + (n2.level === 2 ? "" : " vditor-panel--arrow"), o2.innerHTML = '<button data-type="markdown">Markdown</button>\n<button data-type="pdf">PDF</button>\n<button data-type="html">HTML</button>', o2.addEventListener((0, d3.Le)(), function(e5) {
                var n3 = e5.target;
                if (n3.tagName === "BUTTON") {
                  switch (n3.getAttribute("data-type")) {
                    case "markdown":
                      !function(e6) {
                        var t8 = a3(e6);
                        an(e6, t8, t8.substr(0, 10) + ".md");
                      }(t7);
                      break;
                    case "pdf":
                      !function(e6) {
                        e6.tip.show(window.VditorI18n.generate, 3800);
                        var t8 = document.querySelector("#vditorExportIframe");
                        t8.contentDocument.open(), t8.contentDocument.write('<link rel="stylesheet" href="' + e6.options.cdn + '/dist/index.css"/>\n<script src="' + e6.options.cdn + `/dist/method.min.js"></script>
<div id="preview" style="width: 800px"></div>
<script>
window.addEventListener("message", (e) => {
  if(!e.data) {
    return;
  }
  Vditor.preview(document.getElementById('preview'), e.data, {
    markdown: {
      theme: "` + e6.options.preview.theme + '"\n    },\n    hljs: {\n      style: "' + e6.options.preview.hljs.style + '"\n    }\n  });\n  setTimeout(() => {\n        window.print();\n    }, 3600);\n}, false);\n</script>'), t8.contentDocument.close(), setTimeout(function() {
                          t8.contentWindow.postMessage(a3(e6), "*");
                        }, 200);
                      }(t7);
                      break;
                    case "html":
                      !function(e6) {
                        var t8 = Dt(e6), n4 = '<html><head><link rel="stylesheet" type="text/css" href="' + e6.options.cdn + '/dist/index.css"/>\n<script src="' + e6.options.cdn + "/dist/js/i18n/" + e6.options.lang + '.js"></script>\n<script src="' + e6.options.cdn + '/dist/method.min.js"></script></head>\n<body><div class="vditor-reset" id="preview">' + t8 + "</div>\n<script>\n    const previewElement = document.getElementById('preview')\n    Vditor.setContentTheme('" + e6.options.preview.theme.current + "', '" + e6.options.preview.theme.path + "');\n    Vditor.codeRender(previewElement);\n    Vditor.highlightRender(" + JSON.stringify(e6.options.preview.hljs) + ", previewElement, '" + e6.options.cdn + "');\n    Vditor.mathRender(previewElement, {\n        cdn: '" + e6.options.cdn + "',\n        math: " + JSON.stringify(e6.options.preview.math) + ",\n    });\n    Vditor.mermaidRender(previewElement, '" + e6.options.cdn + "', '" + e6.options.theme + "');\n    Vditor.flowchartRender(previewElement, '" + e6.options.cdn + "');\n    Vditor.graphvizRender(previewElement, '" + e6.options.cdn + "');\n    Vditor.chartRender(previewElement, '" + e6.options.cdn + "', '" + e6.options.theme + "');\n    Vditor.mindmapRender(previewElement, '" + e6.options.cdn + "', '" + e6.options.theme + "');\n    Vditor.abcRender(previewElement, '" + e6.options.cdn + `');
    Vditor.mediaRender(previewElement);
    Vditor.speechRender(previewElement);
</script>
<script src="` + e6.options.cdn + "/dist/js/icons/" + e6.options.icon + '.js"></script></body></html>';
                        an(e6, n4, t8.substr(0, 10) + ".html");
                      }(t7);
                  }
                  v(t7, ["subToolbar"]), e5.preventDefault(), e5.stopPropagation();
                }
              }), r2.element.appendChild(o2), g(t7, o2, i3, n2.level), r2;
            }
            return ln(t6, e4), t6;
          }(he), dn = function() {
            var e4 = function(t6, n2) {
              return e4 = Object.setPrototypeOf || {__proto__: []} instanceof Array && function(e5, t7) {
                e5.__proto__ = t7;
              } || function(e5, t7) {
                for (var n3 in t7)
                  t7.hasOwnProperty(n3) && (e5[n3] = t7[n3]);
              }, e4(t6, n2);
            };
            return function(t6, n2) {
              function r2() {
                this.constructor = t6;
              }
              e4(t6, n2), t6.prototype = n2 === null ? Object.create(n2) : (r2.prototype = n2.prototype, new r2());
            };
          }(), cn = function(e4) {
            function t6(t7, n2) {
              var r2 = e4.call(this, t7, n2) || this;
              return r2._bindEvent(t7, n2), r2;
            }
            return dn(t6, e4), t6.prototype._bindEvent = function(e5, t7) {
              this.element.children[0].addEventListener((0, d3.Le)(), function(n2) {
                n2.preventDefault(), e5.element.className.includes("vditor--fullscreen") ? (t7.level || (this.innerHTML = t7.icon), e5.element.style.zIndex = "", document.body.style.overflow = "", e5.element.classList.remove("vditor--fullscreen"), Object.keys(e5.toolbar.elements).forEach(function(t8) {
                  var n3 = e5.toolbar.elements[t8].firstChild;
                  n3 && (n3.className = n3.className.replace("__s", "__n"));
                }), e5.counter && (e5.counter.element.className = e5.counter.element.className.replace("__s", "__n"))) : (t7.level || (this.innerHTML = '<svg><use xlink:href="#vditor-icon-contract"></use></svg>'), e5.element.style.zIndex = e5.options.fullscreen.index.toString(), document.body.style.overflow = "hidden", e5.element.classList.add("vditor--fullscreen"), Object.keys(e5.toolbar.elements).forEach(function(t8) {
                  var n3 = e5.toolbar.elements[t8].firstChild;
                  n3 && (n3.className = n3.className.replace("__n", "__s"));
                }), e5.counter && (e5.counter.element.className = e5.counter.element.className.replace("__n", "__s"))), e5.devtools && e5.devtools.renderEchart(e5), t7.click && t7.click(n2, e5), W(e5), z2(e5);
              });
            }, t6;
          }(he), un = function() {
            var e4 = function(t6, n2) {
              return e4 = Object.setPrototypeOf || {__proto__: []} instanceof Array && function(e5, t7) {
                e5.__proto__ = t7;
              } || function(e5, t7) {
                for (var n3 in t7)
                  t7.hasOwnProperty(n3) && (e5[n3] = t7[n3]);
              }, e4(t6, n2);
            };
            return function(t6, n2) {
              function r2() {
                this.constructor = t6;
              }
              e4(t6, n2), t6.prototype = n2 === null ? Object.create(n2) : (r2.prototype = n2.prototype, new r2());
            };
          }(), pn = function(e4) {
            function t6(t7, n2) {
              var r2 = e4.call(this, t7, n2) || this, i3 = document.createElement("div");
              return i3.className = "vditor-hint vditor-panel--arrow", i3.innerHTML = '<button data-tag="h1" data-value="# ">' + window.VditorI18n.heading1 + " " + (0, d3.ns)("&lt;\u2325\u23181>") + '</button>\n<button data-tag="h2" data-value="## ">' + window.VditorI18n.heading2 + " &lt;" + (0, d3.ns)("\u2325\u23182") + '></button>\n<button data-tag="h3" data-value="### ">' + window.VditorI18n.heading3 + " &lt;" + (0, d3.ns)("\u2325\u23183") + '></button>\n<button data-tag="h4" data-value="#### ">' + window.VditorI18n.heading4 + " &lt;" + (0, d3.ns)("\u2325\u23184") + '></button>\n<button data-tag="h5" data-value="##### ">' + window.VditorI18n.heading5 + " &lt;" + (0, d3.ns)("\u2325\u23185") + '></button>\n<button data-tag="h6" data-value="###### ">' + window.VditorI18n.heading6 + " &lt;" + (0, d3.ns)("\u2325\u23186") + "></button>", r2.element.appendChild(i3), r2._bindEvent(t7, i3), r2;
            }
            return un(t6, e4), t6.prototype._bindEvent = function(e5, t7) {
              var n2 = this.element.children[0];
              n2.addEventListener((0, d3.Le)(), function(r3) {
                r3.preventDefault(), n2.classList.contains(i2.g.CLASS_MENU_DISABLED) || (n2.blur(), n2.classList.contains("vditor-menu--current") ? (e5.currentMode === "wysiwyg" ? (te(e5), X2(e5)) : e5.currentMode === "ir" && Mt(e5, ""), n2.classList.remove("vditor-menu--current")) : (v(e5, ["subToolbar"]), t7.style.display = "block"));
              });
              for (var r2 = 0; r2 < 6; r2++)
                t7.children.item(r2).addEventListener((0, d3.Le)(), function(r3) {
                  r3.preventDefault(), e5.currentMode === "wysiwyg" ? (ee(e5, r3.target.getAttribute("data-tag")), X2(e5), n2.classList.add("vditor-menu--current")) : e5.currentMode === "ir" ? (Mt(e5, r3.target.getAttribute("data-value")), n2.classList.add("vditor-menu--current")) : Oe(e5, r3.target.getAttribute("data-value")), t7.style.display = "none";
                });
            }, t6;
          }(he), mn = function() {
            var e4 = function(t6, n2) {
              return e4 = Object.setPrototypeOf || {__proto__: []} instanceof Array && function(e5, t7) {
                e5.__proto__ = t7;
              } || function(e5, t7) {
                for (var n3 in t7)
                  t7.hasOwnProperty(n3) && (e5[n3] = t7[n3]);
              }, e4(t6, n2);
            };
            return function(t6, n2) {
              function r2() {
                this.constructor = t6;
              }
              e4(t6, n2), t6.prototype = n2 === null ? Object.create(n2) : (r2.prototype = n2.prototype, new r2());
            };
          }(), fn = function(e4) {
            function t6(t7, n2) {
              var r2 = e4.call(this, t7, n2) || this;
              return r2.element.children[0].addEventListener((0, d3.Le)(), function(e5) {
                e5.preventDefault(), t7.tip.show('<div style="margin-bottom:14px;font-size: 14px;line-height: 22px;min-width:300px;max-width: 360px;display: flex;">\n<div style="margin-top: 14px;flex: 1">\n    <div>Markdown \u4F7F\u7528\u6307\u5357</div>\n    <ul style="list-style: none">\n        <li><a href="https://ld246.com/article/1583308420519" target="_blank">\u8BED\u6CD5\u901F\u67E5\u624B\u518C</a></li>\n        <li><a href="https://ld246.com/article/1583129520165" target="_blank">\u57FA\u7840\u8BED\u6CD5</a></li>\n        <li><a href="https://ld246.com/article/1583305480675" target="_blank">\u6269\u5C55\u8BED\u6CD5</a></li>\n        <li><a href="https://ld246.com/article/1582778815353" target="_blank">\u952E\u76D8\u5FEB\u6377\u952E</a></li>\n    </ul>\n</div>\n<div style="margin-top: 14px;flex: 1">\n    <div>Vditor \u652F\u6301</div>\n    <ul style="list-style: none">\n        <li><a href="https://github.com/Vanessa219/vditor/issues" target="_blank">Issues</a></li>\n        <li><a href="https://ld246.com/tag/vditor" target="_blank">\u5B98\u65B9\u8BA8\u8BBA\u533A</a></li>\n        <li><a href="https://ld246.com/article/1549638745630" target="_blank">\u5F00\u53D1\u624B\u518C</a></li>\n        <li><a href="https://ld246.com/guide/markdown" target="_blank">\u6F14\u793A\u5730\u5740</a></li>\n    </ul>\n</div></div>', 0);
              }), r2;
            }
            return mn(t6, e4), t6;
          }(he), hn = function() {
            var e4 = function(t6, n2) {
              return e4 = Object.setPrototypeOf || {__proto__: []} instanceof Array && function(e5, t7) {
                e5.__proto__ = t7;
              } || function(e5, t7) {
                for (var n3 in t7)
                  t7.hasOwnProperty(n3) && (e5[n3] = t7[n3]);
              }, e4(t6, n2);
            };
            return function(t6, n2) {
              function r2() {
                this.constructor = t6;
              }
              e4(t6, n2), t6.prototype = n2 === null ? Object.create(n2) : (r2.prototype = n2.prototype, new r2());
            };
          }(), vn = function(e4) {
            function t6(t7, n2) {
              var r2 = e4.call(this, t7, n2) || this;
              return r2.element.children[0].addEventListener((0, d3.Le)(), function(e5) {
                if (e5.preventDefault(), !r2.element.firstElementChild.classList.contains(i2.g.CLASS_MENU_DISABLED) && t7.currentMode !== "sv") {
                  var n3 = (0, N.zh)(t7), o2 = (0, y3.lG)(n3.startContainer, "LI");
                  o2 && nt(t7, o2, n3);
                }
              }), r2;
            }
            return hn(t6, e4), t6;
          }(he), gn = function() {
            var e4 = function(t6, n2) {
              return e4 = Object.setPrototypeOf || {__proto__: []} instanceof Array && function(e5, t7) {
                e5.__proto__ = t7;
              } || function(e5, t7) {
                for (var n3 in t7)
                  t7.hasOwnProperty(n3) && (e5[n3] = t7[n3]);
              }, e4(t6, n2);
            };
            return function(t6, n2) {
              function r2() {
                this.constructor = t6;
              }
              e4(t6, n2), t6.prototype = n2 === null ? Object.create(n2) : (r2.prototype = n2.prototype, new r2());
            };
          }(), yn = function(e4) {
            function t6(t7, n2) {
              var r2 = e4.call(this, t7, n2) || this;
              return r2.element.children[0].addEventListener((0, d3.Le)(), function(e5) {
                e5.preventDefault(), t7.tip.show('<div style="max-width: 520px; font-size: 14px;line-height: 22px;margin-bottom: 14px;">\n<p style="text-align: center;margin: 14px 0">\n    <em>\u4E0B\u4E00\u4EE3\u7684 Markdown \u7F16\u8F91\u5668\uFF0C\u4E3A\u672A\u6765\u800C\u6784\u5EFA</em>\n</p>\n<div style="display: flex;margin-bottom: 14px;flex-wrap: wrap;align-items: center">\n    <img src="https://unpkg.com/vditor/dist/images/logo.png" style="margin: 0 auto;height: 68px"/>\n    <div>&nbsp;&nbsp;</div>\n    <div style="flex: 1;min-width: 250px">\n        Vditor \u662F\u4E00\u6B3E\u6D4F\u89C8\u5668\u7AEF\u7684 Markdown \u7F16\u8F91\u5668\uFF0C\u652F\u6301\u6240\u89C1\u5373\u6240\u5F97\u3001\u5373\u65F6\u6E32\u67D3\uFF08\u7C7B\u4F3C Typora\uFF09\u548C\u5206\u5C4F\u9884\u89C8\u6A21\u5F0F\u3002\n        \u5B83\u4F7F\u7528 TypeScript \u5B9E\u73B0\uFF0C\u652F\u6301\u539F\u751F JavaScript \u4EE5\u53CA Vue\u3001React\u3001Angular \u548C Svelte \u7B49\u6846\u67B6\u3002\n    </div>\n</div>\n<div style="display: flex;flex-wrap: wrap;">\n    <ul style="list-style: none;flex: 1;min-width:148px">\n        <li>\n        \u9879\u76EE\u5730\u5740\uFF1A<a href="https://b3log.org/vditor" target="_blank">b3log.org/vditor</a>\n        </li>\n        <li>\n        \u5F00\u6E90\u534F\u8BAE\uFF1AMIT\n        </li>\n    </ul>\n    <ul style="list-style: none;margin-right: 18px">\n        <li>\n        \u7EC4\u4EF6\u7248\u672C\uFF1AVditor v' + i2.H + "-mar / Lute v" + Lute.Version + '-mar\n        </li>\n        <li>\n        \u8D5E\u52A9\u6350\u8D60\uFF1A<a href="https://ld246.com/sponsor" target="_blank">https://ld246.com/sponsor</a>\n        </li>\n    </ul>\n</div>\n</div>', 0);
              }), r2;
            }
            return gn(t6, e4), t6;
          }(he), bn = function() {
            var e4 = function(t6, n2) {
              return e4 = Object.setPrototypeOf || {__proto__: []} instanceof Array && function(e5, t7) {
                e5.__proto__ = t7;
              } || function(e5, t7) {
                for (var n3 in t7)
                  t7.hasOwnProperty(n3) && (e5[n3] = t7[n3]);
              }, e4(t6, n2);
            };
            return function(t6, n2) {
              function r2() {
                this.constructor = t6;
              }
              e4(t6, n2), t6.prototype = n2 === null ? Object.create(n2) : (r2.prototype = n2.prototype, new r2());
            };
          }(), wn = function(e4) {
            function t6(t7, n2) {
              var r2 = e4.call(this, t7, n2) || this;
              return r2.element.children[0].addEventListener((0, d3.Le)(), function(e5) {
                e5.preventDefault(), r2.element.firstElementChild.classList.contains(i2.g.CLASS_MENU_DISABLED) || t7.currentMode === "sv" || Je(t7, "afterend");
              }), r2;
            }
            return bn(t6, e4), t6;
          }(he), En = function() {
            var e4 = function(t6, n2) {
              return e4 = Object.setPrototypeOf || {__proto__: []} instanceof Array && function(e5, t7) {
                e5.__proto__ = t7;
              } || function(e5, t7) {
                for (var n3 in t7)
                  t7.hasOwnProperty(n3) && (e5[n3] = t7[n3]);
              }, e4(t6, n2);
            };
            return function(t6, n2) {
              function r2() {
                this.constructor = t6;
              }
              e4(t6, n2), t6.prototype = n2 === null ? Object.create(n2) : (r2.prototype = n2.prototype, new r2());
            };
          }(), kn = function(e4) {
            function t6(t7, n2) {
              var r2 = e4.call(this, t7, n2) || this;
              return r2.element.children[0].addEventListener((0, d3.Le)(), function(e5) {
                e5.preventDefault(), r2.element.firstElementChild.classList.contains(i2.g.CLASS_MENU_DISABLED) || t7.currentMode === "sv" || Je(t7, "beforebegin");
              }), r2;
            }
            return En(t6, e4), t6;
          }(he), Sn = function() {
            var e4 = function(t6, n2) {
              return e4 = Object.setPrototypeOf || {__proto__: []} instanceof Array && function(e5, t7) {
                e5.__proto__ = t7;
              } || function(e5, t7) {
                for (var n3 in t7)
                  t7.hasOwnProperty(n3) && (e5[n3] = t7[n3]);
              }, e4(t6, n2);
            };
            return function(t6, n2) {
              function r2() {
                this.constructor = t6;
              }
              e4(t6, n2), t6.prototype = n2 === null ? Object.create(n2) : (r2.prototype = n2.prototype, new r2());
            };
          }(), Ln = function(e4) {
            function t6(t7, n2) {
              var r2 = e4.call(this, t7, n2) || this;
              return r2.element.children[0].addEventListener((0, d3.Le)(), function(e5) {
                if (e5.preventDefault(), !r2.element.firstElementChild.classList.contains(i2.g.CLASS_MENU_DISABLED) && t7.currentMode !== "sv") {
                  var n3 = (0, N.zh)(t7), o2 = (0, y3.lG)(n3.startContainer, "LI");
                  o2 && rt(t7, o2, n3, o2.parentElement);
                }
              }), r2;
            }
            return Sn(t6, e4), t6;
          }(he), Cn = function() {
            var e4 = function(t6, n2) {
              return e4 = Object.setPrototypeOf || {__proto__: []} instanceof Array && function(e5, t7) {
                e5.__proto__ = t7;
              } || function(e5, t7) {
                for (var n3 in t7)
                  t7.hasOwnProperty(n3) && (e5[n3] = t7[n3]);
              }, e4(t6, n2);
            };
            return function(t6, n2) {
              function r2() {
                this.constructor = t6;
              }
              e4(t6, n2), t6.prototype = n2 === null ? Object.create(n2) : (r2.prototype = n2.prototype, new r2());
            };
          }(), Mn = function(e4) {
            function t6(t7, n2) {
              var r2 = e4.call(this, t7, n2) || this;
              return t7.options.outline && r2.element.firstElementChild.classList.add("vditor-menu--current"), r2.element.children[0].addEventListener((0, d3.Le)(), function(e5) {
                e5.preventDefault(), t7.toolbar.elements.outline.firstElementChild.classList.contains(i2.g.CLASS_MENU_DISABLED) || (t7.options.outline.enable = !r2.element.firstElementChild.classList.contains("vditor-menu--current"), t7.outline.toggle(t7, t7.options.outline.enable));
              }), r2;
            }
            return Cn(t6, e4), t6;
          }(he), Tn = function() {
            var e4 = function(t6, n2) {
              return e4 = Object.setPrototypeOf || {__proto__: []} instanceof Array && function(e5, t7) {
                e5.__proto__ = t7;
              } || function(e5, t7) {
                for (var n3 in t7)
                  t7.hasOwnProperty(n3) && (e5[n3] = t7[n3]);
              }, e4(t6, n2);
            };
            return function(t6, n2) {
              function r2() {
                this.constructor = t6;
              }
              e4(t6, n2), t6.prototype = n2 === null ? Object.create(n2) : (r2.prototype = n2.prototype, new r2());
            };
          }(), An = function(e4) {
            function t6(t7, n2) {
              var r2 = e4.call(this, t7, n2) || this;
              return r2._bindEvent(t7), r2;
            }
            return Tn(t6, e4), t6.prototype._bindEvent = function(e5) {
              var t7 = this;
              this.element.children[0].addEventListener((0, d3.Le)(), function(n2) {
                n2.preventDefault();
                var r2 = t7.element.firstElementChild;
                if (!r2.classList.contains(i2.g.CLASS_MENU_DISABLED)) {
                  var o2 = i2.g.EDIT_TOOLBARS.concat(["both", "edit-mode", "devtools"]);
                  r2.classList.contains("vditor-menu--current") ? (r2.classList.remove("vditor-menu--current"), e5.currentMode === "sv" ? (e5.sv.element.style.display = "block", e5.options.preview.mode === "both" ? e5.preview.element.style.display = "block" : e5.preview.element.style.display = "none") : (e5[e5.currentMode].element.parentElement.style.display = "block", e5.preview.element.style.display = "none"), p(e5.toolbar.elements, o2), e5.outline.render(e5)) : (m3(e5.toolbar.elements, o2), e5.preview.element.style.display = "block", e5.currentMode === "sv" ? e5.sv.element.style.display = "none" : e5[e5.currentMode].element.parentElement.style.display = "none", e5.preview.render(e5), r2.classList.add("vditor-menu--current"), v(e5, ["subToolbar", "hint", "popover"]), setTimeout(function() {
                    e5.outline.render(e5);
                  }, e5.options.preview.delay + 10)), W(e5);
                }
              });
            }, t6;
          }(he), _n = function() {
            function e4(e5) {
              var t6;
              if (this.SAMPLE_RATE = 5e3, this.isRecording = false, this.readyFlag = false, this.leftChannel = [], this.rightChannel = [], this.recordingLength = 0, typeof AudioContext != "undefined")
                t6 = new AudioContext();
              else {
                if (!webkitAudioContext)
                  return;
                t6 = new webkitAudioContext();
              }
              this.DEFAULT_SAMPLE_RATE = t6.sampleRate;
              var n2 = t6.createGain();
              t6.createMediaStreamSource(e5).connect(n2), this.recorder = t6.createScriptProcessor(2048, 2, 1), this.recorder.onaudioprocess = null, n2.connect(this.recorder), this.recorder.connect(t6.destination), this.readyFlag = true;
            }
            return e4.prototype.cloneChannelData = function(e5, t6) {
              this.leftChannel.push(new Float32Array(e5)), this.rightChannel.push(new Float32Array(t6)), this.recordingLength += 2048;
            }, e4.prototype.startRecordingNewWavFile = function() {
              this.readyFlag && (this.isRecording = true, this.leftChannel.length = this.rightChannel.length = 0, this.recordingLength = 0);
            }, e4.prototype.stopRecording = function() {
              this.isRecording = false;
            }, e4.prototype.buildWavFileBlob = function() {
              for (var e5 = this.mergeBuffers(this.leftChannel), t6 = this.mergeBuffers(this.rightChannel), n2 = new Float32Array(e5.length), r2 = 0; r2 < e5.length; ++r2)
                n2[r2] = 0.5 * (e5[r2] + t6[r2]);
              this.DEFAULT_SAMPLE_RATE > this.SAMPLE_RATE && (n2 = this.downSampleBuffer(n2, this.SAMPLE_RATE));
              var i3 = 44 + 2 * n2.length, o2 = new ArrayBuffer(i3), a4 = new DataView(o2);
              this.writeUTFBytes(a4, 0, "RIFF"), a4.setUint32(4, i3, true), this.writeUTFBytes(a4, 8, "WAVE"), this.writeUTFBytes(a4, 12, "fmt "), a4.setUint32(16, 16, true), a4.setUint16(20, 1, true), a4.setUint16(22, 1, true), a4.setUint32(24, this.SAMPLE_RATE, true), a4.setUint32(28, 2 * this.SAMPLE_RATE, true), a4.setUint16(32, 2, true), a4.setUint16(34, 16, true);
              var l2 = 2 * n2.length;
              this.writeUTFBytes(a4, 36, "data"), a4.setUint32(40, l2, true);
              for (var s4 = n2.length, d4 = 44, c3 = 0; c3 < s4; c3++)
                a4.setInt16(d4, 32767 * n2[c3], true), d4 += 2;
              return new Blob([a4], {type: "audio/wav"});
            }, e4.prototype.downSampleBuffer = function(e5, t6) {
              if (t6 === this.DEFAULT_SAMPLE_RATE)
                return e5;
              if (t6 > this.DEFAULT_SAMPLE_RATE)
                return e5;
              for (var n2 = this.DEFAULT_SAMPLE_RATE / t6, r2 = Math.round(e5.length / n2), i3 = new Float32Array(r2), o2 = 0, a4 = 0; o2 < i3.length; ) {
                for (var l2 = Math.round((o2 + 1) * n2), s4 = 0, d4 = 0, c3 = a4; c3 < l2 && c3 < e5.length; c3++)
                  s4 += e5[c3], d4++;
                i3[o2] = s4 / d4, o2++, a4 = l2;
              }
              return i3;
            }, e4.prototype.mergeBuffers = function(e5) {
              for (var t6 = new Float32Array(this.recordingLength), n2 = 0, r2 = e5.length, i3 = 0; i3 < r2; ++i3) {
                var o2 = e5[i3];
                t6.set(o2, n2), n2 += o2.length;
              }
              return t6;
            }, e4.prototype.writeUTFBytes = function(e5, t6, n2) {
              for (var r2 = n2.length, i3 = 0; i3 < r2; i3++)
                e5.setUint8(t6 + i3, n2.charCodeAt(i3));
            }, e4;
          }(), xn = function() {
            var e4 = function(t6, n2) {
              return e4 = Object.setPrototypeOf || {__proto__: []} instanceof Array && function(e5, t7) {
                e5.__proto__ = t7;
              } || function(e5, t7) {
                for (var n3 in t7)
                  t7.hasOwnProperty(n3) && (e5[n3] = t7[n3]);
              }, e4(t6, n2);
            };
            return function(t6, n2) {
              function r2() {
                this.constructor = t6;
              }
              e4(t6, n2), t6.prototype = n2 === null ? Object.create(n2) : (r2.prototype = n2.prototype, new r2());
            };
          }(), Hn = function(e4) {
            function t6(t7, n2) {
              var r2 = e4.call(this, t7, n2) || this;
              return r2._bindEvent(t7), r2;
            }
            return xn(t6, e4), t6.prototype._bindEvent = function(e5) {
              var t7, n2 = this;
              this.element.children[0].addEventListener((0, d3.Le)(), function(r2) {
                if (r2.preventDefault(), !n2.element.firstElementChild.classList.contains(i2.g.CLASS_MENU_DISABLED)) {
                  var o2 = e5[e5.currentMode].element;
                  if (t7)
                    if (t7.isRecording) {
                      t7.stopRecording(), e5.tip.hide();
                      var a4 = new File([t7.buildWavFileBlob()], "record" + new Date().getTime() + ".wav", {type: "video/webm"});
                      Ve(e5, [a4]), n2.element.children[0].classList.remove("vditor-menu--current");
                    } else
                      e5.tip.show(window.VditorI18n.recording), o2.setAttribute("contenteditable", "false"), t7.startRecordingNewWavFile(), n2.element.children[0].classList.add("vditor-menu--current");
                  else
                    navigator.mediaDevices.getUserMedia({audio: true}).then(function(r3) {
                      (t7 = new _n(r3)).recorder.onaudioprocess = function(e6) {
                        if (t7.isRecording) {
                          var n3 = e6.inputBuffer.getChannelData(0), r4 = e6.inputBuffer.getChannelData(1);
                          t7.cloneChannelData(n3, r4);
                        }
                      }, t7.startRecordingNewWavFile(), e5.tip.show(window.VditorI18n.recording), o2.setAttribute("contenteditable", "false"), n2.element.children[0].classList.add("vditor-menu--current");
                    }).catch(function() {
                      e5.tip.show(window.VditorI18n["record-tip"]);
                    });
                }
              });
            }, t6;
          }(he), Nn = function() {
            var e4 = function(t6, n2) {
              return e4 = Object.setPrototypeOf || {__proto__: []} instanceof Array && function(e5, t7) {
                e5.__proto__ = t7;
              } || function(e5, t7) {
                for (var n3 in t7)
                  t7.hasOwnProperty(n3) && (e5[n3] = t7[n3]);
              }, e4(t6, n2);
            };
            return function(t6, n2) {
              function r2() {
                this.constructor = t6;
              }
              e4(t6, n2), t6.prototype = n2 === null ? Object.create(n2) : (r2.prototype = n2.prototype, new r2());
            };
          }(), Dn = function(e4) {
            function t6(t7, n2) {
              var r2 = e4.call(this, t7, n2) || this;
              return m3({redo: r2.element}, ["redo"]), r2.element.children[0].addEventListener((0, d3.Le)(), function(e5) {
                e5.preventDefault(), r2.element.firstElementChild.classList.contains(i2.g.CLASS_MENU_DISABLED) || t7.undo.redo(t7);
              }), r2;
            }
            return Nn(t6, e4), t6;
          }(he), On = function() {
            var e4 = function(t6, n2) {
              return e4 = Object.setPrototypeOf || {__proto__: []} instanceof Array && function(e5, t7) {
                e5.__proto__ = t7;
              } || function(e5, t7) {
                for (var n3 in t7)
                  t7.hasOwnProperty(n3) && (e5[n3] = t7[n3]);
              }, e4(t6, n2);
            };
            return function(t6, n2) {
              function r2() {
                this.constructor = t6;
              }
              e4(t6, n2), t6.prototype = n2 === null ? Object.create(n2) : (r2.prototype = n2.prototype, new r2());
            };
          }(), In = function(e4) {
            function t6(t7, n2) {
              var r2 = e4.call(this, t7, n2) || this;
              return m3({undo: r2.element}, ["undo"]), r2.element.children[0].addEventListener((0, d3.Le)(), function(e5) {
                e5.preventDefault(), r2.element.firstElementChild.classList.contains(i2.g.CLASS_MENU_DISABLED) || t7.undo.undo(t7);
              }), r2;
            }
            return On(t6, e4), t6;
          }(he), jn = function() {
            var e4 = function(t6, n2) {
              return e4 = Object.setPrototypeOf || {__proto__: []} instanceof Array && function(e5, t7) {
                e5.__proto__ = t7;
              } || function(e5, t7) {
                for (var n3 in t7)
                  t7.hasOwnProperty(n3) && (e5[n3] = t7[n3]);
              }, e4(t6, n2);
            };
            return function(t6, n2) {
              function r2() {
                this.constructor = t6;
              }
              e4(t6, n2), t6.prototype = n2 === null ? Object.create(n2) : (r2.prototype = n2.prototype, new r2());
            };
          }(), Rn = function(e4) {
            function t6(t7, n2) {
              var r2 = e4.call(this, t7, n2) || this, i3 = '<input type="file"';
              return t7.options.upload.multiple && (i3 += ' multiple="multiple"'), t7.options.upload.accept && (i3 += ' accept="' + t7.options.upload.accept + '"'), r2.element.children[0].innerHTML = "" + (n2.icon || '<svg><use xlink:href="#vditor-icon-upload"></use></svg>') + i3 + ">", r2._bindEvent(t7), r2;
            }
            return jn(t6, e4), t6.prototype._bindEvent = function(e5) {
              var t7 = this;
              this.element.children[0].addEventListener((0, d3.Le)(), function(e6) {
                if (t7.element.firstElementChild.classList.contains(i2.g.CLASS_MENU_DISABLED))
                  return e6.stopPropagation(), void e6.preventDefault();
              }), this.element.querySelector("input").addEventListener("change", function(n2) {
                if (t7.element.firstElementChild.classList.contains(i2.g.CLASS_MENU_DISABLED))
                  return n2.stopPropagation(), void n2.preventDefault();
                n2.target.files.length !== 0 && Ve(e5, n2.target.files, n2.target);
              });
            }, t6;
          }(he), Pn = function() {
            function e4(e5) {
              var t6 = this, n2 = e5.options;
              this.elements = {}, this.element = document.createElement("div"), this.element.className = "vditor-toolbar", n2.toolbar.forEach(function(n3, r2) {
                var i3 = t6.genItem(e5, n3, r2);
                if (t6.element.appendChild(i3), n3.toolbar) {
                  var o2 = document.createElement("div");
                  o2.className = "vditor-hint vditor-panel--arrow", o2.addEventListener((0, d3.Le)(), function(e6) {
                    o2.style.display = "none";
                  }), n3.toolbar.forEach(function(n4, i4) {
                    n4.level = 2, o2.appendChild(t6.genItem(e5, n4, r2 + i4));
                  }), i3.appendChild(o2), g(e5, o2, i3.children[0]);
                }
              }), e5.options.toolbarConfig.hide && this.element.classList.add("vditor-toolbar--hide"), e5.options.toolbarConfig.pin && this.element.classList.add("vditor-toolbar--pin"), e5.options.counter.enable && (e5.counter = new Yt(e5), this.element.appendChild(e5.counter.element));
            }
            return e4.prototype.genItem = function(e5, t6, n2) {
              var r2;
              switch (t6.name) {
                case "bold":
                case "italic":
                case "more":
                case "strike":
                case "line":
                case "quote":
                case "list":
                case "ordered-list":
                case "check":
                case "code":
                case "inline-code":
                case "link":
                case "table":
                  r2 = new he(e5, t6);
                  break;
                case "emoji":
                  r2 = new on(e5, t6);
                  break;
                case "headings":
                  r2 = new pn(e5, t6);
                  break;
                case "|":
                  r2 = new nn();
                  break;
                case "br":
                  r2 = new Gt();
                  break;
                case "undo":
                  r2 = new In(e5, t6);
                  break;
                case "redo":
                  r2 = new Dn(e5, t6);
                  break;
                case "help":
                  r2 = new fn(e5, t6);
                  break;
                case "both":
                  r2 = new zt(e5, t6);
                  break;
                case "preview":
                  r2 = new An(e5, t6);
                  break;
                case "fullscreen":
                  r2 = new cn(e5, t6);
                  break;
                case "upload":
                  r2 = new Rn(e5, t6);
                  break;
                case "record":
                  r2 = new Hn(e5, t6);
                  break;
                case "info":
                  r2 = new yn(e5, t6);
                  break;
                case "edit-mode":
                  r2 = new ye(e5, t6);
                  break;
                case "devtools":
                  r2 = new tn(e5, t6);
                  break;
                case "outdent":
                  r2 = new Ln(e5, t6);
                  break;
                case "indent":
                  r2 = new vn(e5, t6);
                  break;
                case "outline":
                  r2 = new Mn(e5, t6);
                  break;
                case "insert-after":
                  r2 = new wn(e5, t6);
                  break;
                case "insert-before":
                  r2 = new kn(e5, t6);
                  break;
                case "code-theme":
                  r2 = new Zt(e5, t6);
                  break;
                case "content-theme":
                  r2 = new Xt(e5, t6);
                  break;
                case "export":
                  r2 = new sn(e5, t6);
                  break;
                default:
                  r2 = new $t(e5, t6);
              }
              if (r2) {
                var i3 = t6.name;
                return i3 !== "br" && i3 !== "|" || (i3 += n2), this.elements[i3] = r2.element, r2.element;
              }
            }, e4;
          }(), qn = n(694), Bn = function() {
            function e4() {
              this.stackSize = 50, this.resetStack(), this.dmp = new qn();
            }
            return e4.prototype.clearStack = function(e5) {
              this.resetStack(), this.resetIcon(e5);
            }, e4.prototype.resetIcon = function(e5) {
              e5.toolbar && (this[e5.currentMode].undoStack.length > 1 ? p(e5.toolbar.elements, ["undo"]) : m3(e5.toolbar.elements, ["undo"]), this[e5.currentMode].redoStack.length !== 0 ? p(e5.toolbar.elements, ["redo"]) : m3(e5.toolbar.elements, ["redo"]));
            }, e4.prototype.undo = function(e5) {
              if (e5[e5.currentMode].element.getAttribute("contenteditable") !== "false" && !(this[e5.currentMode].undoStack.length < 2)) {
                var t6 = this[e5.currentMode].undoStack.pop();
                t6 && (this[e5.currentMode].redoStack.push(t6), this.renderDiff(t6, e5), this[e5.currentMode].hasUndo = true, v(e5, ["hint"]));
              }
            }, e4.prototype.redo = function(e5) {
              if (e5[e5.currentMode].element.getAttribute("contenteditable") !== "false") {
                var t6 = this[e5.currentMode].redoStack.pop();
                t6 && (this[e5.currentMode].undoStack.push(t6), this.renderDiff(t6, e5, true));
              }
            }, e4.prototype.recordFirstPosition = function(e5, t6) {
              if (getSelection().rangeCount !== 0 && !(this[e5.currentMode].undoStack.length !== 1 || this[e5.currentMode].undoStack[0].length === 0 || this[e5.currentMode].redoStack.length > 0 || (0, d3.vU)() && t6.key === "Backspace" || (0, d3.G6)())) {
                var n2 = this.addCaret(e5);
                n2.replace("<wbr>", "").replace(" vditor-ir__node--expand", "") === this[e5.currentMode].undoStack[0][0].diffs[0][1].replace("<wbr>", "") && (this[e5.currentMode].undoStack[0][0].diffs[0][1] = n2, this[e5.currentMode].lastText = n2);
              }
            }, e4.prototype.addToUndoStack = function(e5) {
              var t6 = this.addCaret(e5, true), n2 = this.dmp.diff_main(t6, this[e5.currentMode].lastText, true), r2 = this.dmp.patch_make(t6, this[e5.currentMode].lastText, n2);
              r2.length === 0 && this[e5.currentMode].undoStack.length > 0 || (this[e5.currentMode].lastText = t6, this[e5.currentMode].undoStack.push(r2), this[e5.currentMode].undoStack.length > this.stackSize && this[e5.currentMode].undoStack.shift(), this[e5.currentMode].hasUndo && (this[e5.currentMode].redoStack = [], this[e5.currentMode].hasUndo = false, m3(e5.toolbar.elements, ["redo"])), this[e5.currentMode].undoStack.length > 1 && p(e5.toolbar.elements, ["undo"]));
            }, e4.prototype.renderDiff = function(e5, t6, n2) {
              var r2;
              if (n2 === void 0 && (n2 = false), n2) {
                var i3 = this.dmp.patch_deepCopy(e5).reverse();
                i3.forEach(function(e6) {
                  e6.diffs.forEach(function(e7) {
                    e7[0] = -e7[0];
                  });
                }), r2 = this.dmp.patch_apply(i3, this[t6.currentMode].lastText)[0];
              } else
                r2 = this.dmp.patch_apply(e5, this[t6.currentMode].lastText)[0];
              if (this[t6.currentMode].lastText = r2, t6[t6.currentMode].element.innerHTML = r2, t6.currentMode !== "sv" && t6[t6.currentMode].element.querySelectorAll(".vditor-" + t6.currentMode + "__preview[data-render='2']").forEach(function(e6) {
                H3(e6, t6);
              }), t6[t6.currentMode].element.querySelector("wbr"))
                (0, N.ib)(t6[t6.currentMode].element, t6[t6.currentMode].element.ownerDocument.createRange()), Me(t6);
              else {
                var o2 = getSelection().getRangeAt(0);
                o2.setEndBefore(t6[t6.currentMode].element), o2.collapse(false);
              }
              D2(t6), lt(t6, {enableAddUndoStack: false, enableHint: false, enableInput: true}), pe(t6), t6[t6.currentMode].element.querySelectorAll(".vditor-" + t6.currentMode + "__preview[data-render='2']").forEach(function(e6) {
                H3(e6, t6);
              }), this[t6.currentMode].undoStack.length > 1 ? p(t6.toolbar.elements, ["undo"]) : m3(t6.toolbar.elements, ["undo"]), this[t6.currentMode].redoStack.length !== 0 ? p(t6.toolbar.elements, ["redo"]) : m3(t6.toolbar.elements, ["redo"]);
            }, e4.prototype.resetStack = function() {
              this.ir = {hasUndo: false, lastText: "", redoStack: [], undoStack: []}, this.sv = {hasUndo: false, lastText: "", redoStack: [], undoStack: []}, this.wysiwyg = {hasUndo: false, lastText: "", redoStack: [], undoStack: []};
            }, e4.prototype.addCaret = function(e5, t6) {
              var n2;
              if (t6 === void 0 && (t6 = false), getSelection().rangeCount !== 0 && !e5[e5.currentMode].element.querySelector("wbr")) {
                var r2 = getSelection().getRangeAt(0);
                if (e5[e5.currentMode].element.contains(r2.startContainer)) {
                  n2 = r2.cloneRange();
                  var i3 = document.createElement("span");
                  i3.className = "vditor-wbr", r2.insertNode(i3);
                }
              }
              e5.ir.element.cloneNode(true).querySelectorAll(".vditor-" + e5.currentMode + "__preview[data-render='1']").forEach(function(e6) {
                (e6.firstElementChild.classList.contains("language-echarts") || e6.firstElementChild.classList.contains("language-plantuml") || e6.firstElementChild.classList.contains("language-mindmap")) && (e6.firstElementChild.removeAttribute("_echarts_instance_"), e6.firstElementChild.removeAttribute("data-processed"), e6.firstElementChild.innerHTML = e6.previousElementSibling.firstElementChild.innerHTML, e6.setAttribute("data-render", "2")), e6.firstElementChild.classList.contains("language-math") && (e6.setAttribute("data-render", "2"), e6.firstElementChild.textContent = e6.firstElementChild.getAttribute("data-math"), e6.firstElementChild.removeAttribute("data-math"));
              });
              var o2 = e5[e5.currentMode].element.innerHTML;
              return e5[e5.currentMode].element.querySelectorAll(".vditor-wbr").forEach(function(e6) {
                e6.remove();
              }), t6 && n2 && (0, N.Hc)(n2), o2.replace('<span class="vditor-wbr"></span>', "<wbr>");
            }, e4;
          }(), Vn = n(224), Un = function() {
            function e4(e5) {
              this.defaultOptions = {rtl: false, after: void 0, cache: {enable: true}, cdn: i2.g.CDN, classes: {preview: ""}, comment: {enable: false}, counter: {enable: false, type: "markdown"}, debugger: false, fullscreen: {index: 90}, height: "auto", hint: {delay: 200, emoji: {"+1": "\u{1F44D}", "-1": "\u{1F44E}", confused: "\u{1F615}", eyes: "\u{1F440}\uFE0F", heart: "\u2764\uFE0F", rocket: "\u{1F680}\uFE0F", smile: "\u{1F604}", tada: "\u{1F389}\uFE0F"}, emojiPath: i2.g.CDN + "/dist/images/emoji", extend: [], parse: true}, icon: "ant", lang: "zh_CN", mode: "ir", outline: {enable: false, position: "left"}, placeholder: "", preview: {actions: ["desktop", "tablet", "mobile", "mp-wechat", "zhihu"], delay: 1e3, hljs: i2.g.HLJS_OPTIONS, markdown: i2.g.MARKDOWN_OPTIONS, math: i2.g.MATH_OPTIONS, maxWidth: 800, mode: "both", theme: i2.g.THEME_OPTIONS}, resize: {enable: false, position: "bottom"}, theme: "classic", toolbar: ["emoji", "headings", "bold", "italic", "strike", "link", "|", "list", "ordered-list", "check", "outdent", "indent", "|", "quote", "line", "code", "inline-code", "insert-before", "insert-after", "|", "upload", "record", "table", "|", "undo", "redo", "|", "fullscreen", "edit-mode", {name: "more", toolbar: ["both", "code-theme", "content-theme", "export", "outline", "preview", "devtools", "info", "help"]}], toolbarConfig: {hide: false, pin: false}, typewriterMode: false, undoDelay: 800, upload: {extraData: {}, fieldName: "file[]", filename: function(e6) {
                return e6.replace(/\W/g, "");
              }, linkToImgUrl: "", max: 10485760, multiple: true, url: "", withCredentials: false}, value: "", width: "auto"}, this.options = e5;
            }
            return e4.prototype.merge = function() {
              var e5, t6, n2;
              this.options && (this.options.toolbar ? this.options.toolbar = this.mergeToolbar(this.options.toolbar) : this.options.toolbar = this.mergeToolbar(this.defaultOptions.toolbar), ((t6 = (e5 = this.options.preview) === null || e5 === void 0 ? void 0 : e5.theme) === null || t6 === void 0 ? void 0 : t6.list) && (this.defaultOptions.preview.theme.list = this.options.preview.theme.list), ((n2 = this.options.hint) === null || n2 === void 0 ? void 0 : n2.emoji) && (this.defaultOptions.hint.emoji = this.options.hint.emoji), this.options.comment && (this.defaultOptions.comment = this.options.comment));
              var r2 = (0, Vn.T)(this.defaultOptions, this.options);
              if (r2.cache.enable && !r2.cache.id)
                throw new Error("need options.cache.id, see https://ld246.com/article/1549638745630#options");
              return r2;
            }, e4.prototype.mergeToolbar = function(e5) {
              var t6 = this, n2 = [{icon: '<svg><use xlink:href="#vditor-icon-export"></use></svg>', name: "export", tipPosition: "ne"}, {hotkey: "\u2318E", icon: '<svg><use xlink:href="#vditor-icon-emoji"></use></svg>', name: "emoji", tipPosition: "ne"}, {hotkey: "\u2318H", icon: '<svg><use xlink:href="#vditor-icon-headings"></use></svg>', name: "headings", tipPosition: "ne"}, {hotkey: "\u2318B", icon: '<svg><use xlink:href="#vditor-icon-bold"></use></svg>', name: "bold", prefix: "**", suffix: "**", tipPosition: "ne"}, {hotkey: "\u2318I", icon: '<svg><use xlink:href="#vditor-icon-italic"></use></svg>', name: "italic", prefix: "*", suffix: "*", tipPosition: "ne"}, {hotkey: "\u2318D", icon: '<svg><use xlink:href="#vditor-icon-strike"></use></svg>', name: "strike", prefix: "~~", suffix: "~~", tipPosition: "ne"}, {hotkey: "\u2318K", icon: '<svg><use xlink:href="#vditor-icon-link"></use></svg>', name: "link", prefix: "[", suffix: "](https://)", tipPosition: "n"}, {name: "|"}, {hotkey: "\u2318L", icon: '<svg><use xlink:href="#vditor-icon-list"></use></svg>', name: "list", prefix: "* ", tipPosition: "n"}, {hotkey: "\u2318O", icon: '<svg><use xlink:href="#vditor-icon-ordered-list"></use></svg>', name: "ordered-list", prefix: "1. ", tipPosition: "n"}, {hotkey: "\u2318J", icon: '<svg><use xlink:href="#vditor-icon-check"></use></svg>', name: "check", prefix: "* [ ] ", tipPosition: "n"}, {hotkey: "\u21E7\u2318I", icon: '<svg><use xlink:href="#vditor-icon-outdent"></use></svg>', name: "outdent", tipPosition: "n"}, {hotkey: "\u21E7\u2318O", icon: '<svg><use xlink:href="#vditor-icon-indent"></use></svg>', name: "indent", tipPosition: "n"}, {name: "|"}, {hotkey: "\u2318;", icon: '<svg><use xlink:href="#vditor-icon-quote"></use></svg>', name: "quote", prefix: "> ", tipPosition: "n"}, {hotkey: "\u21E7\u2318H", icon: '<svg><use xlink:href="#vditor-icon-line"></use></svg>', name: "line", prefix: "---", tipPosition: "n"}, {hotkey: "\u2318U", icon: '<svg><use xlink:href="#vditor-icon-code"></use></svg>', name: "code", prefix: "```", suffix: "\n```", tipPosition: "n"}, {hotkey: "\u2318G", icon: '<svg><use xlink:href="#vditor-icon-inline-code"></use></svg>', name: "inline-code", prefix: "`", suffix: "`", tipPosition: "n"}, {hotkey: "\u21E7\u2318B", icon: '<svg><use xlink:href="#vditor-icon-before"></use></svg>', name: "insert-before", tipPosition: "n"}, {hotkey: "\u21E7\u2318E", icon: '<svg><use xlink:href="#vditor-icon-after"></use></svg>', name: "insert-after", tipPosition: "n"}, {name: "|"}, {icon: '<svg><use xlink:href="#vditor-icon-upload"></use></svg>', name: "upload", tipPosition: "n"}, {icon: '<svg><use xlink:href="#vditor-icon-record"></use></svg>', name: "record", tipPosition: "n"}, {hotkey: "\u2318M", icon: '<svg><use xlink:href="#vditor-icon-table"></use></svg>', name: "table", prefix: "| col1", suffix: " | col2 | col3 |\n| --- | --- | --- |\n|  |  |  |\n|  |  |  |", tipPosition: "n"}, {name: "|"}, {hotkey: "\u2318Z", icon: '<svg><use xlink:href="#vditor-icon-undo"></use></svg>', name: "undo", tipPosition: "nw"}, {hotkey: "\u2318Y", icon: '<svg><use xlink:href="#vditor-icon-redo"></use></svg>', name: "redo", tipPosition: "nw"}, {name: "|"}, {icon: '<svg><use xlink:href="#vditor-icon-more"></use></svg>', name: "more", tipPosition: "e"}, {hotkey: "\u2318'", icon: '<svg><use xlink:href="#vditor-icon-fullscreen"></use></svg>', name: "fullscreen", tipPosition: "nw"}, {icon: '<svg><use xlink:href="#vditor-icon-edit"></use></svg>', name: "edit-mode", tipPosition: "nw"}, {hotkey: "\u2318P", icon: '<svg><use xlink:href="#vditor-icon-both"></use></svg>', name: "both", tipPosition: "nw"}, {icon: '<svg><use xlink:href="#vditor-icon-preview"></use></svg>', name: "preview", tipPosition: "nw"}, {icon: '<svg><use xlink:href="#vditor-icon-align-center"></use></svg>', name: "outline", tipPosition: "nw"}, {icon: '<svg><use xlink:href="#vditor-icon-theme"></use></svg>', name: "content-theme", tipPosition: "nw"}, {icon: '<svg><use xlink:href="#vditor-icon-code-theme"></use></svg>', name: "code-theme", tipPosition: "nw"}, {icon: '<svg><use xlink:href="#vditor-icon-bug"></use></svg>', name: "devtools", tipPosition: "nw"}, {icon: '<svg><use xlink:href="#vditor-icon-info"></use></svg>', name: "info", tipPosition: "nw"}, {icon: '<svg><use xlink:href="#vditor-icon-help"></use></svg>', name: "help", tipPosition: "nw"}, {name: "br"}], r2 = [];
              return e5.forEach(function(e6) {
                var i3 = e6;
                n2.forEach(function(t7) {
                  typeof e6 == "string" && t7.name === e6 && (i3 = t7), typeof e6 == "object" && t7.name === e6.name && (i3 = Object.assign({}, t7, e6));
                }), e6.toolbar && (i3.toolbar = t6.mergeToolbar(e6.toolbar)), r2.push(i3);
              }), r2;
            }, e4;
          }(), Wn = function() {
            function e4(e5) {
              var t6 = this;
              this.composingLock = false, this.commentIds = [];
              var n2 = document.createElement("div");
              n2.className = "vditor-wysiwyg", n2.innerHTML = '<pre class="vditor-reset" placeholder="' + e5.options.placeholder + '"\n contenteditable="true" spellcheck="false"></pre>\n<div class="vditor-panel vditor-panel--none"></div>\n<div class="vditor-panel vditor-panel--none">\n    <button type="button" aria-label="' + window.VditorI18n.comment + '" class="vditor-icon vditor-tooltipped vditor-tooltipped__n">\n        <svg><use xlink:href="#vditor-icon-comment"></use></svg>\n    </button>\n</div>', this.element = n2.firstElementChild, this.popover = n2.firstElementChild.nextElementSibling, this.selectPopover = n2.lastElementChild, this.bindEvent(e5), we(e5, this.element), Ee(e5, this.element), ke(e5, this.element), Te(e5, this.element), Ae(e5, this.element), Se(e5, this.element), Le(e5, this.element, this.copy), Ce(e5, this.element, this.copy), e5.options.comment.enable && (this.selectPopover.querySelector("button").onclick = function() {
                var n3, r2, o2 = Lute.NewNodeID(), a4 = getSelection().getRangeAt(0), l2 = a4.cloneRange(), s4 = a4.extractContents(), d4 = false, c3 = false;
                s4.childNodes.forEach(function(e6, t7) {
                  var i3 = false;
                  if (e6.nodeType === 3 ? i3 = true : e6.classList.contains("vditor-comment") ? e6.classList.contains("vditor-comment") && e6.setAttribute("data-cmtids", e6.getAttribute("data-cmtids") + " " + o2) : i3 = true, i3)
                    if (e6.nodeType !== 3 && e6.getAttribute("data-block") === "0" && t7 === 0 && l2.startOffset > 0)
                      e6.innerHTML = '<span class="vditor-comment" data-cmtids="' + o2 + '">' + e6.innerHTML + "</span>", n3 = e6;
                    else if (e6.nodeType !== 3 && e6.getAttribute("data-block") === "0" && t7 === s4.childNodes.length - 1 && l2.endOffset < l2.endContainer.textContent.length)
                      e6.innerHTML = '<span class="vditor-comment" data-cmtids="' + o2 + '">' + e6.innerHTML + "</span>", r2 = e6;
                    else if (e6.nodeType !== 3 && e6.getAttribute("data-block") === "0")
                      t7 === 0 ? d4 = true : t7 === s4.childNodes.length - 1 && (c3 = true), e6.innerHTML = '<span class="vditor-comment" data-cmtids="' + o2 + '">' + e6.innerHTML + "</span>";
                    else {
                      var a5 = document.createElement("span");
                      a5.classList.add("vditor-comment"), a5.setAttribute("data-cmtids", o2), e6.parentNode.insertBefore(a5, e6), a5.appendChild(e6);
                    }
                });
                var u3 = (0, y3.F9)(l2.startContainer);
                u3 && (n3 ? (u3.insertAdjacentHTML("beforeend", n3.innerHTML), n3.remove()) : u3.textContent.trim().replace(i2.g.ZWSP, "") === "" && d4 && u3.remove());
                var p2 = (0, y3.F9)(l2.endContainer);
                p2 && (r2 ? (p2.insertAdjacentHTML("afterbegin", r2.innerHTML), r2.remove()) : p2.textContent.trim().replace(i2.g.ZWSP, "") === "" && c3 && p2.remove()), a4.insertNode(s4), e5.options.comment.add(o2, a4.toString(), t6.getComments(e5, true)), X2(e5, {enableAddUndoStack: true, enableHint: false, enableInput: false}), t6.hideComment();
              });
            }
            return e4.prototype.getComments = function(e5, t6) {
              var n2 = this;
              if (t6 === void 0 && (t6 = false), e5.currentMode !== "wysiwyg" || !e5.options.comment.enable)
                return [];
              this.commentIds = [], this.element.querySelectorAll(".vditor-comment").forEach(function(e6) {
                n2.commentIds = n2.commentIds.concat(e6.getAttribute("data-cmtids").split(" "));
              }), this.commentIds = Array.from(new Set(this.commentIds));
              var r2 = [];
              return t6 ? (this.commentIds.forEach(function(e6) {
                r2.push({id: e6, top: n2.element.querySelector('.vditor-comment[data-cmtids="' + e6 + '"]').offsetTop});
              }), r2) : void 0;
            }, e4.prototype.triggerRemoveComment = function(e5) {
              var t6, n2, r2;
              if (e5.currentMode === "wysiwyg" && e5.options.comment.enable && e5.wysiwyg.commentIds.length > 0) {
                var i3 = JSON.parse(JSON.stringify(this.commentIds));
                this.getComments(e5);
                var o2 = (t6 = i3, n2 = this.commentIds, r2 = new Set(n2), t6.filter(function(e6) {
                  return !r2.has(e6);
                }));
                o2.length > 0 && e5.options.comment.remove(o2);
              }
            }, e4.prototype.showComment = function() {
              var e5 = (0, N.Ny)(this.element);
              this.selectPopover.setAttribute("style", "left:" + e5.left + "px;display:block;top:" + Math.max(-8, e5.top - 21) + "px");
            }, e4.prototype.hideComment = function() {
              this.selectPopover.setAttribute("style", "display:none");
            }, e4.prototype.unbindListener = function() {
              window.removeEventListener("scroll", this.scrollListener);
            }, e4.prototype.copy = function(e5, t6) {
              var n2 = getSelection().getRangeAt(0);
              if (n2.toString() !== "") {
                e5.stopPropagation(), e5.preventDefault();
                var r2 = (0, y3.lG)(n2.startContainer, "CODE"), i3 = (0, y3.lG)(n2.endContainer, "CODE");
                if (r2 && i3 && i3.isSameNode(r2)) {
                  var o2 = "";
                  return o2 = r2.parentElement.tagName === "PRE" ? n2.toString() : "`" + n2.toString() + "`", e5.clipboardData.setData("text/plain", o2), void e5.clipboardData.setData("text/html", "");
                }
                var a4 = (0, y3.lG)(n2.startContainer, "A"), l2 = (0, y3.lG)(n2.endContainer, "A");
                if (a4 && l2 && l2.isSameNode(a4)) {
                  var s4 = a4.getAttribute("title") || "";
                  return s4 && (s4 = ' "' + s4 + '"'), e5.clipboardData.setData("text/plain", "[" + n2.toString() + "](" + a4.getAttribute("href") + s4 + ")"), void e5.clipboardData.setData("text/html", "");
                }
                var d4 = document.createElement("div");
                d4.appendChild(n2.cloneContents()), e5.clipboardData.setData("text/plain", t6.lute.VditorDOM2Md(d4.innerHTML).trim()), e5.clipboardData.setData("text/html", "");
              }
            }, e4.prototype.bindEvent = function(e5) {
              var t6 = this;
              this.unbindListener(), window.addEventListener("scroll", this.scrollListener = function() {
                if (v(e5, ["hint"]), t6.popover.style.display === "block" && t6.selectPopover.style.display === "block") {
                  var n2 = parseInt(t6.popover.getAttribute("data-top"), 10);
                  if (e5.options.height === "auto") {
                    if (e5.options.toolbarConfig.pin) {
                      var r2 = Math.max(n2, window.scrollY - e5.element.offsetTop - 8) + "px";
                      t6.popover.style.display === "block" && (t6.popover.style.top = r2), t6.selectPopover.style.display === "block" && (t6.selectPopover.style.top = r2);
                    }
                  } else if (e5.options.toolbarConfig.pin && e5.toolbar.element.getBoundingClientRect().top === 0) {
                    var i3 = Math.max(window.scrollY - e5.element.offsetTop - 8, Math.min(n2 - e5.wysiwyg.element.scrollTop, t6.element.clientHeight - 21)) + "px";
                    t6.popover.style.display === "block" && (t6.popover.style.top = i3), t6.selectPopover.style.display === "block" && (t6.selectPopover.style.top = i3);
                  }
                }
              }), this.element.addEventListener("scroll", function() {
                if (v(e5, ["hint"]), e5.options.comment && e5.options.comment.enable && e5.options.comment.scroll && e5.options.comment.scroll(e5.wysiwyg.element.scrollTop), t6.popover.style.display === "block") {
                  var n2 = parseInt(t6.popover.getAttribute("data-top"), 10) - e5.wysiwyg.element.scrollTop, r2 = -8;
                  e5.options.toolbarConfig.pin && e5.toolbar.element.getBoundingClientRect().top === 0 && (r2 = window.scrollY - e5.element.offsetTop + r2);
                  var i3 = Math.max(r2, Math.min(n2, t6.element.clientHeight - 21)) + "px";
                  t6.popover.style.top = i3, t6.selectPopover.style.top = i3;
                }
              }), this.element.addEventListener("paste", function(t7) {
                St(e5, t7, {pasteCode: function(t8) {
                  var n2 = (0, N.zh)(e5), r2 = document.createElement("template");
                  r2.innerHTML = t8, n2.insertNode(r2.content.cloneNode(true));
                  var i3 = (0, y3.a1)(n2.startContainer, "data-block", "0");
                  i3 ? i3.outerHTML = e5.lute.SpinVditorDOM(i3.outerHTML) : e5.wysiwyg.element.innerHTML = e5.lute.SpinVditorDOM(e5.wysiwyg.element.innerHTML), (0, N.ib)(e5.wysiwyg.element, n2);
                }});
              }), this.element.addEventListener("compositionstart", function() {
                t6.composingLock = true;
              }), this.element.addEventListener("compositionend", function(n2) {
                var r2 = (0, b2.W)(getSelection().getRangeAt(0).startContainer);
                r2 && r2.textContent === "" ? D2(e5) : ((0, d3.vU)() || Ue(e5, getSelection().getRangeAt(0).cloneRange(), n2), t6.composingLock = false);
              }), this.element.addEventListener("input", function(n2) {
                if (n2.inputType !== "deleteByDrag" && n2.inputType !== "insertFromDrop") {
                  if (t6.preventInput)
                    return t6.preventInput = false, void X2(e5);
                  if (t6.composingLock || n2.data === "\u2018" || n2.data === "\u201C" || n2.data === "\u300A")
                    X2(e5);
                  else {
                    var r2 = getSelection().getRangeAt(0), i3 = (0, y3.F9)(r2.startContainer);
                    if (i3 || ($3(e5, r2), i3 = (0, y3.F9)(r2.startContainer)), i3) {
                      for (var o2 = (0, N.im)(i3, e5.wysiwyg.element, r2).start, l2 = true, s4 = o2 - 1; s4 > i3.textContent.substr(0, o2).lastIndexOf("\n"); s4--)
                        if (i3.textContent.charAt(s4) !== " " && i3.textContent.charAt(s4) !== "	") {
                          l2 = false;
                          break;
                        }
                      o2 === 0 && (l2 = false);
                      var d4 = true;
                      for (s4 = o2 - 1; s4 < i3.textContent.length; s4++)
                        if (i3.textContent.charAt(s4) !== " " && i3.textContent.charAt(s4) !== "\n") {
                          d4 = false;
                          break;
                        }
                      var c3 = (0, b2.W)(getSelection().getRangeAt(0).startContainer);
                      c3 && c3.textContent === "" && (D2(e5), c3.remove()), l2 && i3.getAttribute("data-type") !== "code-block" || d4 || at(i3.innerHTML) || ot(i3.innerHTML) && i3.previousElementSibling ? typeof e5.options.input == "function" && e5.options.input(a3(e5)) : Ue(e5, r2, n2);
                    }
                  }
                }
              }), this.element.addEventListener("click", function(n2) {
                if (n2.target.tagName === "INPUT") {
                  var r2 = n2.target;
                  return r2.checked ? r2.setAttribute("checked", "checked") : r2.removeAttribute("checked"), t6.preventInput = true, void X2(e5);
                }
                if (n2.target.tagName !== "IMG" || n2.target.parentElement.classList.contains("vditor-wysiwyg__preview")) {
                  n2.target.tagName === "A" && window.open(n2.target.getAttribute("href"));
                  var o2 = (0, N.zh)(e5);
                  if (n2.target.isEqualNode(t6.element) && t6.element.lastElementChild && o2.collapsed) {
                    var a4 = t6.element.lastElementChild.getBoundingClientRect();
                    n2.y > a4.top + a4.height && (t6.element.lastElementChild.tagName === "P" && t6.element.lastElementChild.textContent.trim().replace(i2.g.ZWSP, "") === "" ? (o2.selectNodeContents(t6.element.lastElementChild), o2.collapse(false)) : (t6.element.insertAdjacentHTML("beforeend", '<p data-block="0">' + i2.g.ZWSP + "<wbr></p>"), (0, N.ib)(t6.element, o2)));
                  }
                  ie(e5);
                  var l2 = (0, y3.fb)(n2.target, "vditor-wysiwyg__preview");
                  l2 || (l2 = (0, y3.fb)((0, N.zh)(e5).startContainer, "vditor-wysiwyg__preview")), l2 && ne(l2, e5), O2(n2, e5);
                } else
                  n2.target.getAttribute("data-type") === "link-ref" ? ae(e5, n2.target) : function(e6, t7) {
                    var n3 = e6.target;
                    t7.wysiwyg.popover.innerHTML = "";
                    var r3 = function() {
                      n3.setAttribute("src", o3.value), n3.setAttribute("alt", l3.value), n3.setAttribute("title", d4.value);
                    }, i3 = document.createElement("span");
                    i3.setAttribute("aria-label", window.VditorI18n.imageURL), i3.className = "vditor-tooltipped vditor-tooltipped__n";
                    var o3 = document.createElement("input");
                    i3.appendChild(o3), o3.className = "vditor-input", o3.setAttribute("placeholder", window.VditorI18n.imageURL), o3.value = n3.getAttribute("src") || "", o3.oninput = function() {
                      r3();
                    }, o3.onkeydown = function(e7) {
                      re(t7, e7);
                    };
                    var a5 = document.createElement("span");
                    a5.setAttribute("aria-label", window.VditorI18n.alternateText), a5.className = "vditor-tooltipped vditor-tooltipped__n";
                    var l3 = document.createElement("input");
                    a5.appendChild(l3), l3.className = "vditor-input", l3.setAttribute("placeholder", window.VditorI18n.alternateText), l3.style.width = "52px", l3.value = n3.getAttribute("alt") || "", l3.oninput = function() {
                      r3();
                    }, l3.onkeydown = function(e7) {
                      re(t7, e7);
                    };
                    var s4 = document.createElement("span");
                    s4.setAttribute("aria-label", window.VditorI18n.title), s4.className = "vditor-tooltipped vditor-tooltipped__n";
                    var d4 = document.createElement("input");
                    s4.appendChild(d4), d4.className = "vditor-input", d4.setAttribute("placeholder", window.VditorI18n.title), d4.value = n3.getAttribute("title") || "", d4.oninput = function() {
                      r3();
                    }, d4.onkeydown = function(e7) {
                      re(t7, e7);
                    }, de(n3, t7), t7.wysiwyg.popover.insertAdjacentElement("beforeend", i3), t7.wysiwyg.popover.insertAdjacentElement("beforeend", a5), t7.wysiwyg.popover.insertAdjacentElement("beforeend", s4), oe(t7, n3);
                  }(n2, e5);
              }), this.element.addEventListener("keyup", function(t7) {
                if (!t7.isComposing && !(0, d3.yl)(t7)) {
                  t7.key === "Enter" && Me(e5), t7.key !== "Backspace" && t7.key !== "Delete" || e5.wysiwyg.element.innerHTML === "" || e5.wysiwyg.element.childNodes.length !== 1 || !e5.wysiwyg.element.firstElementChild || e5.wysiwyg.element.firstElementChild.tagName !== "P" || e5.wysiwyg.element.firstElementChild.childElementCount !== 0 || e5.wysiwyg.element.textContent !== "" && e5.wysiwyg.element.textContent !== "\n" || (e5.wysiwyg.element.innerHTML = "");
                  var n2 = (0, N.zh)(e5);
                  if (t7.key === "Backspace" && (0, d3.vU)() && n2.startContainer.textContent === "\n" && n2.startOffset === 1 && (n2.startContainer.textContent = ""), $3(e5, n2), ie(e5), t7.key === "ArrowDown" || t7.key === "ArrowRight" || t7.key === "Backspace" || t7.key === "ArrowLeft" || t7.key === "ArrowUp") {
                    t7.key !== "ArrowLeft" && t7.key !== "ArrowRight" || e5.hint.render(e5);
                    var r2 = (0, y3.fb)(n2.startContainer, "vditor-wysiwyg__preview");
                    if (!r2 && n2.startContainer.nodeType !== 3 && n2.startOffset > 0)
                      (o2 = n2.startContainer).classList.contains("vditor-wysiwyg__block") && (r2 = o2.lastElementChild);
                    if (r2)
                      if (r2.previousElementSibling.style.display !== "none") {
                        var i3 = r2.previousElementSibling;
                        if (i3.tagName === "PRE" && (i3 = i3.firstElementChild), t7.key === "ArrowDown" || t7.key === "ArrowRight") {
                          var o2, a4 = function(e6) {
                            for (var t8 = e6; t8 && !t8.nextSibling; )
                              t8 = t8.parentElement;
                            return t8.nextSibling;
                          }(o2 = r2.parentElement);
                          if (a4 && a4.nodeType !== 3) {
                            var l2 = a4.querySelector(".vditor-wysiwyg__preview");
                            if (l2)
                              return void ne(l2, e5);
                          }
                          if (a4.nodeType === 3) {
                            for (; a4.textContent.length === 0 && a4.nextSibling; )
                              a4 = a4.nextSibling;
                            n2.setStart(a4, 1);
                          } else
                            n2.setStart(a4.firstChild, 0);
                        } else
                          n2.selectNodeContents(i3), n2.collapse(false);
                      } else
                        t7.key === "ArrowDown" || t7.key === "ArrowRight" ? ne(r2, e5) : ne(r2, e5, false);
                  }
                }
              });
            }, e4;
          }(), zn = function() {
            var e4 = function(t6, n2) {
              return e4 = Object.setPrototypeOf || {__proto__: []} instanceof Array && function(e5, t7) {
                e5.__proto__ = t7;
              } || function(e5, t7) {
                for (var n3 in t7)
                  t7.hasOwnProperty(n3) && (e5[n3] = t7[n3]);
              }, e4(t6, n2);
            };
            return function(t6, n2) {
              function r2() {
                this.constructor = t6;
              }
              e4(t6, n2), t6.prototype = n2 === null ? Object.create(n2) : (r2.prototype = n2.prototype, new r2());
            };
          }();
          const Gn = function(e4) {
            function t6(t7, n2) {
              var r2 = e4.call(this) || this;
              r2.version = i2.H, typeof t7 == "string" && (n2 ? n2.cache ? n2.cache.id || (n2.cache.id = "vditor" + t7) : n2.cache = {id: "vditor" + t7} : n2 = {cache: {id: "vditor" + t7}}, t7 = document.getElementById(t7));
              var o2 = new Un(n2).merge();
              if (o2.i18n)
                window.VditorI18n = o2.i18n, r2.init(t7, o2);
              else {
                if (!["en_US", "ja_JP", "ko_KR", "ru_RU", "zh_CN", "zh_TW"].includes(o2.lang))
                  throw new Error("options.lang error, see https://ld246.com/article/1549638745630#options");
                var a4 = "vditorI18nScript", s4 = a4 + o2.lang;
                document.querySelectorAll('head script[id^="vditorI18nScript"]').forEach(function(e5) {
                  e5.id !== s4 && document.head.removeChild(e5);
                }), (0, l.G)(o2.cdn + "/dist/js/i18n/" + o2.lang + ".js", s4).then(function() {
                  r2.init(t7, o2);
                });
              }
              return r2;
            }
            return zn(t6, e4), t6.prototype.setTheme = function(e5, t7, n2, r2) {
              this.vditor.options.theme = e5, U(this.vditor), t7 && (this.vditor.options.preview.theme.current = t7, (0, V.Z)(t7, r2 || this.vditor.options.preview.theme.path)), n2 && (this.vditor.options.preview.hljs.style = n2, (0, Kt.Y)(n2, this.vditor.options.cdn));
            }, t6.prototype.getValue = function() {
              return a3(this.vditor);
            }, t6.prototype.getCurrentMode = function() {
              return this.vditor.currentMode;
            }, t6.prototype.focus = function() {
              this.vditor.currentMode === "sv" ? this.vditor.sv.element.focus() : this.vditor.currentMode === "wysiwyg" ? this.vditor.wysiwyg.element.focus() : this.vditor.currentMode === "ir" && this.vditor.ir.element.focus();
            }, t6.prototype.blur = function() {
              this.vditor.currentMode === "sv" ? this.vditor.sv.element.blur() : this.vditor.currentMode === "wysiwyg" ? this.vditor.wysiwyg.element.blur() : this.vditor.currentMode === "ir" && this.vditor.ir.element.blur();
            }, t6.prototype.disabled = function() {
              v(this.vditor, ["subToolbar", "hint", "popover"]), m3(this.vditor.toolbar.elements, i2.g.EDIT_TOOLBARS.concat(["undo", "redo", "fullscreen", "edit-mode"])), this.vditor[this.vditor.currentMode].element.setAttribute("contenteditable", "false");
            }, t6.prototype.enable = function() {
              p(this.vditor.toolbar.elements, i2.g.EDIT_TOOLBARS.concat(["undo", "redo", "fullscreen", "edit-mode"])), this.vditor.undo.resetIcon(this.vditor), this.vditor[this.vditor.currentMode].element.setAttribute("contenteditable", "true");
            }, t6.prototype.getSelection = function() {
              return this.vditor.currentMode === "wysiwyg" ? be(this.vditor.wysiwyg.element) : this.vditor.currentMode === "sv" ? be(this.vditor.sv.element) : this.vditor.currentMode === "ir" ? be(this.vditor.ir.element) : void 0;
            }, t6.prototype.renderPreview = function(e5) {
              this.vditor.preview.render(this.vditor, e5);
            }, t6.prototype.getCursorPosition = function() {
              return (0, N.Ny)(this.vditor[this.vditor.currentMode].element);
            }, t6.prototype.isUploading = function() {
              return this.vditor.upload.isUploading;
            }, t6.prototype.clearCache = function() {
              localStorage.removeItem(this.vditor.options.cache.id);
            }, t6.prototype.disabledCache = function() {
              this.vditor.options.cache.enable = false;
            }, t6.prototype.enableCache = function() {
              if (!this.vditor.options.cache.id)
                throw new Error("need options.cache.id, see https://ld246.com/article/1549638745630#options");
              this.vditor.options.cache.enable = true;
            }, t6.prototype.html2md = function(e5) {
              return this.vditor.lute.HTML2Md(e5);
            }, t6.prototype.exportJSON = function(e5) {
              return this.vditor.lute.RenderJSON(e5);
            }, t6.prototype.getHTML = function() {
              return Dt(this.vditor);
            }, t6.prototype.tip = function(e5, t7) {
              this.vditor.tip.show(e5, t7);
            }, t6.prototype.setPreviewMode = function(e5) {
              Ut(e5, this.vditor);
            }, t6.prototype.deleteValue = function() {
              window.getSelection().isCollapsed || document.execCommand("delete", false);
            }, t6.prototype.updateValue = function(e5) {
              document.execCommand("insertHTML", false, e5);
            }, t6.prototype.insertValue = function(e5, t7) {
              t7 === void 0 && (t7 = true);
              var n2 = (0, N.zh)(this.vditor);
              n2.collapse(true);
              var r2 = document.createElement("template");
              r2.innerHTML = e5, n2.insertNode(r2.content.cloneNode(true)), this.vditor.currentMode === "sv" ? (this.vditor.sv.preventInput = true, t7 && B2(this.vditor)) : this.vditor.currentMode === "wysiwyg" ? (this.vditor.wysiwyg.preventInput = true, t7 && Ue(this.vditor, getSelection().getRangeAt(0))) : this.vditor.currentMode === "ir" && (this.vditor.ir.preventInput = true, t7 && j(this.vditor, getSelection().getRangeAt(0), true));
            }, t6.prototype.setValue = function(e5, t7) {
              var n2 = this;
              t7 === void 0 && (t7 = false), this.vditor.currentMode === "sv" ? (this.vditor.sv.element.innerHTML = "<div data-block='0'>" + this.vditor.lute.SpinVditorSVDOM(e5) + "</div>", De(this.vditor, {enableAddUndoStack: true, enableHint: false, enableInput: false})) : this.vditor.currentMode === "wysiwyg" ? me(this.vditor, e5, {enableAddUndoStack: true, enableHint: false, enableInput: false}) : (this.vditor.ir.element.innerHTML = this.vditor.lute.Md2VditorIRDOM(e5), this.vditor.ir.element.querySelectorAll(".vditor-ir__preview[data-render='2']").forEach(function(e6) {
                H3(e6, n2.vditor);
              }), Ct(this.vditor, {enableAddUndoStack: true, enableHint: false, enableInput: false})), this.vditor.outline.render(this.vditor), e5 || (v(this.vditor, ["emoji", "headings", "submenu", "hint"]), this.vditor.wysiwyg.popover && (this.vditor.wysiwyg.popover.style.display = "none"), this.clearCache()), t7 && this.clearStack();
            }, t6.prototype.clearStack = function() {
              this.vditor.undo.clearStack(this.vditor), this.vditor.undo.addToUndoStack(this.vditor);
            }, t6.prototype.destroy = function() {
              this.vditor.element.innerHTML = this.vditor.originalInnerHTML, this.vditor.element.classList.remove("vditor"), this.vditor.element.removeAttribute("style");
              var e5 = document.getElementById("vditorIconScript");
              e5 && e5.remove(), this.clearCache(), G2(), this.vditor.wysiwyg.unbindListener();
            }, t6.prototype.getCommentIds = function() {
              return this.vditor.currentMode !== "wysiwyg" ? [] : this.vditor.wysiwyg.getComments(this.vditor, true);
            }, t6.prototype.hlCommentIds = function(e5) {
              if (this.vditor.currentMode === "wysiwyg") {
                var t7 = function(t8) {
                  t8.classList.remove("vditor-comment--hover"), e5.forEach(function(e6) {
                    t8.getAttribute("data-cmtids").indexOf(e6) > -1 && t8.classList.add("vditor-comment--hover");
                  });
                };
                this.vditor.wysiwyg.element.querySelectorAll(".vditor-comment").forEach(function(e6) {
                  t7(e6);
                }), this.vditor.preview.element.style.display !== "none" && this.vditor.preview.element.querySelectorAll(".vditor-comment").forEach(function(e6) {
                  t7(e6);
                });
              }
            }, t6.prototype.unHlCommentIds = function(e5) {
              if (this.vditor.currentMode === "wysiwyg") {
                var t7 = function(t8) {
                  e5.forEach(function(e6) {
                    t8.getAttribute("data-cmtids").indexOf(e6) > -1 && t8.classList.remove("vditor-comment--hover");
                  });
                };
                this.vditor.wysiwyg.element.querySelectorAll(".vditor-comment").forEach(function(e6) {
                  t7(e6);
                }), this.vditor.preview.element.style.display !== "none" && this.vditor.preview.element.querySelectorAll(".vditor-comment").forEach(function(e6) {
                  t7(e6);
                });
              }
            }, t6.prototype.removeCommentIds = function(e5) {
              var t7 = this;
              if (this.vditor.currentMode === "wysiwyg") {
                var n2 = function(e6, n3) {
                  var r2 = e6.getAttribute("data-cmtids").split(" ");
                  r2.find(function(e7, t8) {
                    if (e7 === n3)
                      return r2.splice(t8, 1), true;
                  }), r2.length === 0 ? (e6.outerHTML = e6.innerHTML, (0, N.zh)(t7.vditor).collapse(true)) : e6.setAttribute("data-cmtids", r2.join(" "));
                };
                e5.forEach(function(e6) {
                  t7.vditor.wysiwyg.element.querySelectorAll(".vditor-comment").forEach(function(t8) {
                    n2(t8, e6);
                  }), t7.vditor.preview.element.style.display !== "none" && t7.vditor.preview.element.querySelectorAll(".vditor-comment").forEach(function(t8) {
                    n2(t8, e6);
                  });
                }), X2(this.vditor, {enableAddUndoStack: true, enableHint: false, enableInput: false});
              }
            }, t6.prototype.init = function(e5, t7) {
              var n2 = this;
              this.vditor = {currentMode: t7.mode, element: e5, hint: new Ht(t7.hint.extend), lute: void 0, options: t7, originalInnerHTML: e5.innerHTML, outline: new jt(window.VditorI18n.outline), tip: new Vt()}, this.vditor.sv = new Bt(this.vditor), this.vditor.undo = new Bn(), this.vditor.wysiwyg = new Wn(this.vditor), this.vditor.ir = new Nt(this.vditor), this.vditor.toolbar = new Pn(this.vditor), t7.resize.enable && (this.vditor.resize = new qt(this.vditor)), this.vditor.toolbar.elements.devtools && (this.vditor.devtools = new s3()), (t7.upload.url || t7.upload.handler) && (this.vditor.upload = new Be()), (0, l.G)(t7._lutePath || t7.cdn + "/dist/js/lute/lute.min.js", "vditorLuteScript").then(function() {
                n2.vditor.lute = (0, Ot.X)({autoSpace: n2.vditor.options.preview.markdown.autoSpace, codeBlockPreview: n2.vditor.options.preview.markdown.codeBlockPreview, emojiSite: n2.vditor.options.hint.emojiPath, emojis: n2.vditor.options.hint.emoji, fixTermTypo: n2.vditor.options.preview.markdown.fixTermTypo, footnotes: n2.vditor.options.preview.markdown.footnotes, headingAnchor: false, inlineMathDigit: n2.vditor.options.preview.math.inlineDigit, linkBase: n2.vditor.options.preview.markdown.linkBase, linkPrefix: n2.vditor.options.preview.markdown.linkPrefix, listStyle: n2.vditor.options.preview.markdown.listStyle, mark: n2.vditor.options.preview.markdown.mark, mathBlockPreview: n2.vditor.options.preview.markdown.mathBlockPreview, paragraphBeginningSpace: n2.vditor.options.preview.markdown.paragraphBeginningSpace, sanitize: n2.vditor.options.preview.markdown.sanitize, toc: n2.vditor.options.preview.markdown.toc}), n2.vditor.preview = new Pt(n2.vditor), function(e6) {
                  e6.element.innerHTML = "", e6.element.classList.add("vditor"), e6.options.rtl && e6.element.setAttribute("dir", "rtl"), U(e6), (0, V.Z)(e6.options.preview.theme.current, e6.options.preview.theme.path), typeof e6.options.height == "number" ? e6.element.style.height = e6.options.height + "px" : e6.element.style.height = e6.options.height, typeof e6.options.minHeight == "number" && (e6.element.style.minHeight = e6.options.minHeight + "px"), typeof e6.options.width == "number" ? e6.element.style.width = e6.options.width + "px" : e6.element.style.width = e6.options.width, e6.element.appendChild(e6.toolbar.element);
                  var t8 = document.createElement("div");
                  if (t8.className = "vditor-content", e6.options.outline.position === "left" && t8.appendChild(e6.outline.element), t8.appendChild(e6.wysiwyg.element.parentElement), t8.appendChild(e6.sv.element), t8.appendChild(e6.ir.element.parentElement), t8.appendChild(e6.preview.element), e6.toolbar.elements.devtools && t8.appendChild(e6.devtools.element), e6.options.outline.position === "right" && (e6.outline.element.classList.add("vditor-outline--right"), t8.appendChild(e6.outline.element)), e6.upload && t8.appendChild(e6.upload.element), e6.options.resize.enable && t8.appendChild(e6.resize.element), t8.appendChild(e6.hint.element), t8.appendChild(e6.tip.element), e6.element.appendChild(t8), t8.addEventListener("click", function() {
                    v(e6, ["subToolbar"]);
                  }), e6.toolbar.elements.export && e6.element.insertAdjacentHTML("beforeend", '<iframe id="vditorExportIframe" style="width: 100%;height: 0;border: 0"></iframe>'), ge(e6, e6.options.mode, Z(e6)), document.execCommand("DefaultParagraphSeparator", false, "p"), navigator.userAgent.indexOf("iPhone") > -1 && window.visualViewport !== void 0) {
                    var n3 = false, r2 = function(t9) {
                      n3 || (n3 = true, requestAnimationFrame(function() {
                        n3 = false;
                        var t10 = e6.toolbar.element;
                        t10.style.transform = "none", t10.getBoundingClientRect().top < 0 && (t10.style.transform = "translate(0, " + -t10.getBoundingClientRect().top + "px)");
                      }));
                    };
                    window.visualViewport.addEventListener("scroll", r2), window.visualViewport.addEventListener("resize", r2);
                  }
                }(n2.vditor), t7.after && t7.after(), t7.icon && (0, l.J)(t7.cdn + "/dist/js/icons/" + t7.icon + ".js", "vditorIconScript");
              });
            }, t6;
          }(t5.default);
        })(), r = r.default;
      })());
    }
  });

  // node_modules/@babel/runtime/helpers/interopRequireDefault.js
  var require_interopRequireDefault = __commonJS({
    "node_modules/@babel/runtime/helpers/interopRequireDefault.js"(exports, module) {
      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          "default": obj
        };
      }
      module.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports["default"] = module.exports;
    }
  });

  // node_modules/color-name/index.js
  var require_color_name = __commonJS({
    "node_modules/color-name/index.js"(exports, module) {
      "use strict";
      module.exports = {
        "aliceblue": [240, 248, 255],
        "antiquewhite": [250, 235, 215],
        "aqua": [0, 255, 255],
        "aquamarine": [127, 255, 212],
        "azure": [240, 255, 255],
        "beige": [245, 245, 220],
        "bisque": [255, 228, 196],
        "black": [0, 0, 0],
        "blanchedalmond": [255, 235, 205],
        "blue": [0, 0, 255],
        "blueviolet": [138, 43, 226],
        "brown": [165, 42, 42],
        "burlywood": [222, 184, 135],
        "cadetblue": [95, 158, 160],
        "chartreuse": [127, 255, 0],
        "chocolate": [210, 105, 30],
        "coral": [255, 127, 80],
        "cornflowerblue": [100, 149, 237],
        "cornsilk": [255, 248, 220],
        "crimson": [220, 20, 60],
        "cyan": [0, 255, 255],
        "darkblue": [0, 0, 139],
        "darkcyan": [0, 139, 139],
        "darkgoldenrod": [184, 134, 11],
        "darkgray": [169, 169, 169],
        "darkgreen": [0, 100, 0],
        "darkgrey": [169, 169, 169],
        "darkkhaki": [189, 183, 107],
        "darkmagenta": [139, 0, 139],
        "darkolivegreen": [85, 107, 47],
        "darkorange": [255, 140, 0],
        "darkorchid": [153, 50, 204],
        "darkred": [139, 0, 0],
        "darksalmon": [233, 150, 122],
        "darkseagreen": [143, 188, 143],
        "darkslateblue": [72, 61, 139],
        "darkslategray": [47, 79, 79],
        "darkslategrey": [47, 79, 79],
        "darkturquoise": [0, 206, 209],
        "darkviolet": [148, 0, 211],
        "deeppink": [255, 20, 147],
        "deepskyblue": [0, 191, 255],
        "dimgray": [105, 105, 105],
        "dimgrey": [105, 105, 105],
        "dodgerblue": [30, 144, 255],
        "firebrick": [178, 34, 34],
        "floralwhite": [255, 250, 240],
        "forestgreen": [34, 139, 34],
        "fuchsia": [255, 0, 255],
        "gainsboro": [220, 220, 220],
        "ghostwhite": [248, 248, 255],
        "gold": [255, 215, 0],
        "goldenrod": [218, 165, 32],
        "gray": [128, 128, 128],
        "green": [0, 128, 0],
        "greenyellow": [173, 255, 47],
        "grey": [128, 128, 128],
        "honeydew": [240, 255, 240],
        "hotpink": [255, 105, 180],
        "indianred": [205, 92, 92],
        "indigo": [75, 0, 130],
        "ivory": [255, 255, 240],
        "khaki": [240, 230, 140],
        "lavender": [230, 230, 250],
        "lavenderblush": [255, 240, 245],
        "lawngreen": [124, 252, 0],
        "lemonchiffon": [255, 250, 205],
        "lightblue": [173, 216, 230],
        "lightcoral": [240, 128, 128],
        "lightcyan": [224, 255, 255],
        "lightgoldenrodyellow": [250, 250, 210],
        "lightgray": [211, 211, 211],
        "lightgreen": [144, 238, 144],
        "lightgrey": [211, 211, 211],
        "lightpink": [255, 182, 193],
        "lightsalmon": [255, 160, 122],
        "lightseagreen": [32, 178, 170],
        "lightskyblue": [135, 206, 250],
        "lightslategray": [119, 136, 153],
        "lightslategrey": [119, 136, 153],
        "lightsteelblue": [176, 196, 222],
        "lightyellow": [255, 255, 224],
        "lime": [0, 255, 0],
        "limegreen": [50, 205, 50],
        "linen": [250, 240, 230],
        "magenta": [255, 0, 255],
        "maroon": [128, 0, 0],
        "mediumaquamarine": [102, 205, 170],
        "mediumblue": [0, 0, 205],
        "mediumorchid": [186, 85, 211],
        "mediumpurple": [147, 112, 219],
        "mediumseagreen": [60, 179, 113],
        "mediumslateblue": [123, 104, 238],
        "mediumspringgreen": [0, 250, 154],
        "mediumturquoise": [72, 209, 204],
        "mediumvioletred": [199, 21, 133],
        "midnightblue": [25, 25, 112],
        "mintcream": [245, 255, 250],
        "mistyrose": [255, 228, 225],
        "moccasin": [255, 228, 181],
        "navajowhite": [255, 222, 173],
        "navy": [0, 0, 128],
        "oldlace": [253, 245, 230],
        "olive": [128, 128, 0],
        "olivedrab": [107, 142, 35],
        "orange": [255, 165, 0],
        "orangered": [255, 69, 0],
        "orchid": [218, 112, 214],
        "palegoldenrod": [238, 232, 170],
        "palegreen": [152, 251, 152],
        "paleturquoise": [175, 238, 238],
        "palevioletred": [219, 112, 147],
        "papayawhip": [255, 239, 213],
        "peachpuff": [255, 218, 185],
        "peru": [205, 133, 63],
        "pink": [255, 192, 203],
        "plum": [221, 160, 221],
        "powderblue": [176, 224, 230],
        "purple": [128, 0, 128],
        "rebeccapurple": [102, 51, 153],
        "red": [255, 0, 0],
        "rosybrown": [188, 143, 143],
        "royalblue": [65, 105, 225],
        "saddlebrown": [139, 69, 19],
        "salmon": [250, 128, 114],
        "sandybrown": [244, 164, 96],
        "seagreen": [46, 139, 87],
        "seashell": [255, 245, 238],
        "sienna": [160, 82, 45],
        "silver": [192, 192, 192],
        "skyblue": [135, 206, 235],
        "slateblue": [106, 90, 205],
        "slategray": [112, 128, 144],
        "slategrey": [112, 128, 144],
        "snow": [255, 250, 250],
        "springgreen": [0, 255, 127],
        "steelblue": [70, 130, 180],
        "tan": [210, 180, 140],
        "teal": [0, 128, 128],
        "thistle": [216, 191, 216],
        "tomato": [255, 99, 71],
        "turquoise": [64, 224, 208],
        "violet": [238, 130, 238],
        "wheat": [245, 222, 179],
        "white": [255, 255, 255],
        "whitesmoke": [245, 245, 245],
        "yellow": [255, 255, 0],
        "yellowgreen": [154, 205, 50]
      };
    }
  });

  // node_modules/color-convert/conversions.js
  var require_conversions = __commonJS({
    "node_modules/color-convert/conversions.js"(exports, module) {
      var cssKeywords = require_color_name();
      var reverseKeywords = {};
      for (const key of Object.keys(cssKeywords)) {
        reverseKeywords[cssKeywords[key]] = key;
      }
      var convert = {
        rgb: {channels: 3, labels: "rgb"},
        hsl: {channels: 3, labels: "hsl"},
        hsv: {channels: 3, labels: "hsv"},
        hwb: {channels: 3, labels: "hwb"},
        cmyk: {channels: 4, labels: "cmyk"},
        xyz: {channels: 3, labels: "xyz"},
        lab: {channels: 3, labels: "lab"},
        lch: {channels: 3, labels: "lch"},
        hex: {channels: 1, labels: ["hex"]},
        keyword: {channels: 1, labels: ["keyword"]},
        ansi16: {channels: 1, labels: ["ansi16"]},
        ansi256: {channels: 1, labels: ["ansi256"]},
        hcg: {channels: 3, labels: ["h", "c", "g"]},
        apple: {channels: 3, labels: ["r16", "g16", "b16"]},
        gray: {channels: 1, labels: ["gray"]}
      };
      module.exports = convert;
      for (const model of Object.keys(convert)) {
        if (!("channels" in convert[model])) {
          throw new Error("missing channels property: " + model);
        }
        if (!("labels" in convert[model])) {
          throw new Error("missing channel labels property: " + model);
        }
        if (convert[model].labels.length !== convert[model].channels) {
          throw new Error("channel and label counts mismatch: " + model);
        }
        const {channels, labels} = convert[model];
        delete convert[model].channels;
        delete convert[model].labels;
        Object.defineProperty(convert[model], "channels", {value: channels});
        Object.defineProperty(convert[model], "labels", {value: labels});
      }
      convert.rgb.hsl = function(rgb) {
        const r = rgb[0] / 255;
        const g = rgb[1] / 255;
        const b2 = rgb[2] / 255;
        const min = Math.min(r, g, b2);
        const max = Math.max(r, g, b2);
        const delta = max - min;
        let h3;
        let s3;
        if (max === min) {
          h3 = 0;
        } else if (r === max) {
          h3 = (g - b2) / delta;
        } else if (g === max) {
          h3 = 2 + (b2 - r) / delta;
        } else if (b2 === max) {
          h3 = 4 + (r - g) / delta;
        }
        h3 = Math.min(h3 * 60, 360);
        if (h3 < 0) {
          h3 += 360;
        }
        const l = (min + max) / 2;
        if (max === min) {
          s3 = 0;
        } else if (l <= 0.5) {
          s3 = delta / (max + min);
        } else {
          s3 = delta / (2 - max - min);
        }
        return [h3, s3 * 100, l * 100];
      };
      convert.rgb.hsv = function(rgb) {
        let rdif;
        let gdif;
        let bdif;
        let h3;
        let s3;
        const r = rgb[0] / 255;
        const g = rgb[1] / 255;
        const b2 = rgb[2] / 255;
        const v = Math.max(r, g, b2);
        const diff = v - Math.min(r, g, b2);
        const diffc = function(c2) {
          return (v - c2) / 6 / diff + 1 / 2;
        };
        if (diff === 0) {
          h3 = 0;
          s3 = 0;
        } else {
          s3 = diff / v;
          rdif = diffc(r);
          gdif = diffc(g);
          bdif = diffc(b2);
          if (r === v) {
            h3 = bdif - gdif;
          } else if (g === v) {
            h3 = 1 / 3 + rdif - bdif;
          } else if (b2 === v) {
            h3 = 2 / 3 + gdif - rdif;
          }
          if (h3 < 0) {
            h3 += 1;
          } else if (h3 > 1) {
            h3 -= 1;
          }
        }
        return [
          h3 * 360,
          s3 * 100,
          v * 100
        ];
      };
      convert.rgb.hwb = function(rgb) {
        const r = rgb[0];
        const g = rgb[1];
        let b2 = rgb[2];
        const h3 = convert.rgb.hsl(rgb)[0];
        const w2 = 1 / 255 * Math.min(r, Math.min(g, b2));
        b2 = 1 - 1 / 255 * Math.max(r, Math.max(g, b2));
        return [h3, w2 * 100, b2 * 100];
      };
      convert.rgb.cmyk = function(rgb) {
        const r = rgb[0] / 255;
        const g = rgb[1] / 255;
        const b2 = rgb[2] / 255;
        const k2 = Math.min(1 - r, 1 - g, 1 - b2);
        const c2 = (1 - r - k2) / (1 - k2) || 0;
        const m3 = (1 - g - k2) / (1 - k2) || 0;
        const y3 = (1 - b2 - k2) / (1 - k2) || 0;
        return [c2 * 100, m3 * 100, y3 * 100, k2 * 100];
      };
      function comparativeDistance(x2, y3) {
        return (x2[0] - y3[0]) ** 2 + (x2[1] - y3[1]) ** 2 + (x2[2] - y3[2]) ** 2;
      }
      convert.rgb.keyword = function(rgb) {
        const reversed = reverseKeywords[rgb];
        if (reversed) {
          return reversed;
        }
        let currentClosestDistance = Infinity;
        let currentClosestKeyword;
        for (const keyword of Object.keys(cssKeywords)) {
          const value = cssKeywords[keyword];
          const distance = comparativeDistance(rgb, value);
          if (distance < currentClosestDistance) {
            currentClosestDistance = distance;
            currentClosestKeyword = keyword;
          }
        }
        return currentClosestKeyword;
      };
      convert.keyword.rgb = function(keyword) {
        return cssKeywords[keyword];
      };
      convert.rgb.xyz = function(rgb) {
        let r = rgb[0] / 255;
        let g = rgb[1] / 255;
        let b2 = rgb[2] / 255;
        r = r > 0.04045 ? ((r + 0.055) / 1.055) ** 2.4 : r / 12.92;
        g = g > 0.04045 ? ((g + 0.055) / 1.055) ** 2.4 : g / 12.92;
        b2 = b2 > 0.04045 ? ((b2 + 0.055) / 1.055) ** 2.4 : b2 / 12.92;
        const x2 = r * 0.4124 + g * 0.3576 + b2 * 0.1805;
        const y3 = r * 0.2126 + g * 0.7152 + b2 * 0.0722;
        const z2 = r * 0.0193 + g * 0.1192 + b2 * 0.9505;
        return [x2 * 100, y3 * 100, z2 * 100];
      };
      convert.rgb.lab = function(rgb) {
        const xyz = convert.rgb.xyz(rgb);
        let x2 = xyz[0];
        let y3 = xyz[1];
        let z2 = xyz[2];
        x2 /= 95.047;
        y3 /= 100;
        z2 /= 108.883;
        x2 = x2 > 8856e-6 ? x2 ** (1 / 3) : 7.787 * x2 + 16 / 116;
        y3 = y3 > 8856e-6 ? y3 ** (1 / 3) : 7.787 * y3 + 16 / 116;
        z2 = z2 > 8856e-6 ? z2 ** (1 / 3) : 7.787 * z2 + 16 / 116;
        const l = 116 * y3 - 16;
        const a3 = 500 * (x2 - y3);
        const b2 = 200 * (y3 - z2);
        return [l, a3, b2];
      };
      convert.hsl.rgb = function(hsl) {
        const h3 = hsl[0] / 360;
        const s3 = hsl[1] / 100;
        const l = hsl[2] / 100;
        let t22;
        let t32;
        let val;
        if (s3 === 0) {
          val = l * 255;
          return [val, val, val];
        }
        if (l < 0.5) {
          t22 = l * (1 + s3);
        } else {
          t22 = l + s3 - l * s3;
        }
        const t1 = 2 * l - t22;
        const rgb = [0, 0, 0];
        for (let i2 = 0; i2 < 3; i2++) {
          t32 = h3 + 1 / 3 * -(i2 - 1);
          if (t32 < 0) {
            t32++;
          }
          if (t32 > 1) {
            t32--;
          }
          if (6 * t32 < 1) {
            val = t1 + (t22 - t1) * 6 * t32;
          } else if (2 * t32 < 1) {
            val = t22;
          } else if (3 * t32 < 2) {
            val = t1 + (t22 - t1) * (2 / 3 - t32) * 6;
          } else {
            val = t1;
          }
          rgb[i2] = val * 255;
        }
        return rgb;
      };
      convert.hsl.hsv = function(hsl) {
        const h3 = hsl[0];
        let s3 = hsl[1] / 100;
        let l = hsl[2] / 100;
        let smin = s3;
        const lmin = Math.max(l, 0.01);
        l *= 2;
        s3 *= l <= 1 ? l : 2 - l;
        smin *= lmin <= 1 ? lmin : 2 - lmin;
        const v = (l + s3) / 2;
        const sv = l === 0 ? 2 * smin / (lmin + smin) : 2 * s3 / (l + s3);
        return [h3, sv * 100, v * 100];
      };
      convert.hsv.rgb = function(hsv) {
        const h3 = hsv[0] / 60;
        const s3 = hsv[1] / 100;
        let v = hsv[2] / 100;
        const hi = Math.floor(h3) % 6;
        const f = h3 - Math.floor(h3);
        const p = 255 * v * (1 - s3);
        const q2 = 255 * v * (1 - s3 * f);
        const t4 = 255 * v * (1 - s3 * (1 - f));
        v *= 255;
        switch (hi) {
          case 0:
            return [v, t4, p];
          case 1:
            return [q2, v, p];
          case 2:
            return [p, v, t4];
          case 3:
            return [p, q2, v];
          case 4:
            return [t4, p, v];
          case 5:
            return [v, p, q2];
        }
      };
      convert.hsv.hsl = function(hsv) {
        const h3 = hsv[0];
        const s3 = hsv[1] / 100;
        const v = hsv[2] / 100;
        const vmin = Math.max(v, 0.01);
        let sl;
        let l;
        l = (2 - s3) * v;
        const lmin = (2 - s3) * vmin;
        sl = s3 * vmin;
        sl /= lmin <= 1 ? lmin : 2 - lmin;
        sl = sl || 0;
        l /= 2;
        return [h3, sl * 100, l * 100];
      };
      convert.hwb.rgb = function(hwb) {
        const h3 = hwb[0] / 360;
        let wh = hwb[1] / 100;
        let bl = hwb[2] / 100;
        const ratio = wh + bl;
        let f;
        if (ratio > 1) {
          wh /= ratio;
          bl /= ratio;
        }
        const i2 = Math.floor(6 * h3);
        const v = 1 - bl;
        f = 6 * h3 - i2;
        if ((i2 & 1) !== 0) {
          f = 1 - f;
        }
        const n = wh + f * (v - wh);
        let r;
        let g;
        let b2;
        switch (i2) {
          default:
          case 6:
          case 0:
            r = v;
            g = n;
            b2 = wh;
            break;
          case 1:
            r = n;
            g = v;
            b2 = wh;
            break;
          case 2:
            r = wh;
            g = v;
            b2 = n;
            break;
          case 3:
            r = wh;
            g = n;
            b2 = v;
            break;
          case 4:
            r = n;
            g = wh;
            b2 = v;
            break;
          case 5:
            r = v;
            g = wh;
            b2 = n;
            break;
        }
        return [r * 255, g * 255, b2 * 255];
      };
      convert.cmyk.rgb = function(cmyk) {
        const c2 = cmyk[0] / 100;
        const m3 = cmyk[1] / 100;
        const y3 = cmyk[2] / 100;
        const k2 = cmyk[3] / 100;
        const r = 1 - Math.min(1, c2 * (1 - k2) + k2);
        const g = 1 - Math.min(1, m3 * (1 - k2) + k2);
        const b2 = 1 - Math.min(1, y3 * (1 - k2) + k2);
        return [r * 255, g * 255, b2 * 255];
      };
      convert.xyz.rgb = function(xyz) {
        const x2 = xyz[0] / 100;
        const y3 = xyz[1] / 100;
        const z2 = xyz[2] / 100;
        let r;
        let g;
        let b2;
        r = x2 * 3.2406 + y3 * -1.5372 + z2 * -0.4986;
        g = x2 * -0.9689 + y3 * 1.8758 + z2 * 0.0415;
        b2 = x2 * 0.0557 + y3 * -0.204 + z2 * 1.057;
        r = r > 31308e-7 ? 1.055 * r ** (1 / 2.4) - 0.055 : r * 12.92;
        g = g > 31308e-7 ? 1.055 * g ** (1 / 2.4) - 0.055 : g * 12.92;
        b2 = b2 > 31308e-7 ? 1.055 * b2 ** (1 / 2.4) - 0.055 : b2 * 12.92;
        r = Math.min(Math.max(0, r), 1);
        g = Math.min(Math.max(0, g), 1);
        b2 = Math.min(Math.max(0, b2), 1);
        return [r * 255, g * 255, b2 * 255];
      };
      convert.xyz.lab = function(xyz) {
        let x2 = xyz[0];
        let y3 = xyz[1];
        let z2 = xyz[2];
        x2 /= 95.047;
        y3 /= 100;
        z2 /= 108.883;
        x2 = x2 > 8856e-6 ? x2 ** (1 / 3) : 7.787 * x2 + 16 / 116;
        y3 = y3 > 8856e-6 ? y3 ** (1 / 3) : 7.787 * y3 + 16 / 116;
        z2 = z2 > 8856e-6 ? z2 ** (1 / 3) : 7.787 * z2 + 16 / 116;
        const l = 116 * y3 - 16;
        const a3 = 500 * (x2 - y3);
        const b2 = 200 * (y3 - z2);
        return [l, a3, b2];
      };
      convert.lab.xyz = function(lab) {
        const l = lab[0];
        const a3 = lab[1];
        const b2 = lab[2];
        let x2;
        let y3;
        let z2;
        y3 = (l + 16) / 116;
        x2 = a3 / 500 + y3;
        z2 = y3 - b2 / 200;
        const y22 = y3 ** 3;
        const x22 = x2 ** 3;
        const z22 = z2 ** 3;
        y3 = y22 > 8856e-6 ? y22 : (y3 - 16 / 116) / 7.787;
        x2 = x22 > 8856e-6 ? x22 : (x2 - 16 / 116) / 7.787;
        z2 = z22 > 8856e-6 ? z22 : (z2 - 16 / 116) / 7.787;
        x2 *= 95.047;
        y3 *= 100;
        z2 *= 108.883;
        return [x2, y3, z2];
      };
      convert.lab.lch = function(lab) {
        const l = lab[0];
        const a3 = lab[1];
        const b2 = lab[2];
        let h3;
        const hr = Math.atan2(b2, a3);
        h3 = hr * 360 / 2 / Math.PI;
        if (h3 < 0) {
          h3 += 360;
        }
        const c2 = Math.sqrt(a3 * a3 + b2 * b2);
        return [l, c2, h3];
      };
      convert.lch.lab = function(lch) {
        const l = lch[0];
        const c2 = lch[1];
        const h3 = lch[2];
        const hr = h3 / 360 * 2 * Math.PI;
        const a3 = c2 * Math.cos(hr);
        const b2 = c2 * Math.sin(hr);
        return [l, a3, b2];
      };
      convert.rgb.ansi16 = function(args, saturation = null) {
        const [r, g, b2] = args;
        let value = saturation === null ? convert.rgb.hsv(args)[2] : saturation;
        value = Math.round(value / 50);
        if (value === 0) {
          return 30;
        }
        let ansi = 30 + (Math.round(b2 / 255) << 2 | Math.round(g / 255) << 1 | Math.round(r / 255));
        if (value === 2) {
          ansi += 60;
        }
        return ansi;
      };
      convert.hsv.ansi16 = function(args) {
        return convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);
      };
      convert.rgb.ansi256 = function(args) {
        const r = args[0];
        const g = args[1];
        const b2 = args[2];
        if (r === g && g === b2) {
          if (r < 8) {
            return 16;
          }
          if (r > 248) {
            return 231;
          }
          return Math.round((r - 8) / 247 * 24) + 232;
        }
        const ansi = 16 + 36 * Math.round(r / 255 * 5) + 6 * Math.round(g / 255 * 5) + Math.round(b2 / 255 * 5);
        return ansi;
      };
      convert.ansi16.rgb = function(args) {
        let color = args % 10;
        if (color === 0 || color === 7) {
          if (args > 50) {
            color += 3.5;
          }
          color = color / 10.5 * 255;
          return [color, color, color];
        }
        const mult = (~~(args > 50) + 1) * 0.5;
        const r = (color & 1) * mult * 255;
        const g = (color >> 1 & 1) * mult * 255;
        const b2 = (color >> 2 & 1) * mult * 255;
        return [r, g, b2];
      };
      convert.ansi256.rgb = function(args) {
        if (args >= 232) {
          const c2 = (args - 232) * 10 + 8;
          return [c2, c2, c2];
        }
        args -= 16;
        let rem;
        const r = Math.floor(args / 36) / 5 * 255;
        const g = Math.floor((rem = args % 36) / 6) / 5 * 255;
        const b2 = rem % 6 / 5 * 255;
        return [r, g, b2];
      };
      convert.rgb.hex = function(args) {
        const integer = ((Math.round(args[0]) & 255) << 16) + ((Math.round(args[1]) & 255) << 8) + (Math.round(args[2]) & 255);
        const string = integer.toString(16).toUpperCase();
        return "000000".substring(string.length) + string;
      };
      convert.hex.rgb = function(args) {
        const match2 = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
        if (!match2) {
          return [0, 0, 0];
        }
        let colorString = match2[0];
        if (match2[0].length === 3) {
          colorString = colorString.split("").map((char) => {
            return char + char;
          }).join("");
        }
        const integer = parseInt(colorString, 16);
        const r = integer >> 16 & 255;
        const g = integer >> 8 & 255;
        const b2 = integer & 255;
        return [r, g, b2];
      };
      convert.rgb.hcg = function(rgb) {
        const r = rgb[0] / 255;
        const g = rgb[1] / 255;
        const b2 = rgb[2] / 255;
        const max = Math.max(Math.max(r, g), b2);
        const min = Math.min(Math.min(r, g), b2);
        const chroma = max - min;
        let grayscale;
        let hue;
        if (chroma < 1) {
          grayscale = min / (1 - chroma);
        } else {
          grayscale = 0;
        }
        if (chroma <= 0) {
          hue = 0;
        } else if (max === r) {
          hue = (g - b2) / chroma % 6;
        } else if (max === g) {
          hue = 2 + (b2 - r) / chroma;
        } else {
          hue = 4 + (r - g) / chroma;
        }
        hue /= 6;
        hue %= 1;
        return [hue * 360, chroma * 100, grayscale * 100];
      };
      convert.hsl.hcg = function(hsl) {
        const s3 = hsl[1] / 100;
        const l = hsl[2] / 100;
        const c2 = l < 0.5 ? 2 * s3 * l : 2 * s3 * (1 - l);
        let f = 0;
        if (c2 < 1) {
          f = (l - 0.5 * c2) / (1 - c2);
        }
        return [hsl[0], c2 * 100, f * 100];
      };
      convert.hsv.hcg = function(hsv) {
        const s3 = hsv[1] / 100;
        const v = hsv[2] / 100;
        const c2 = s3 * v;
        let f = 0;
        if (c2 < 1) {
          f = (v - c2) / (1 - c2);
        }
        return [hsv[0], c2 * 100, f * 100];
      };
      convert.hcg.rgb = function(hcg) {
        const h3 = hcg[0] / 360;
        const c2 = hcg[1] / 100;
        const g = hcg[2] / 100;
        if (c2 === 0) {
          return [g * 255, g * 255, g * 255];
        }
        const pure = [0, 0, 0];
        const hi = h3 % 1 * 6;
        const v = hi % 1;
        const w2 = 1 - v;
        let mg = 0;
        switch (Math.floor(hi)) {
          case 0:
            pure[0] = 1;
            pure[1] = v;
            pure[2] = 0;
            break;
          case 1:
            pure[0] = w2;
            pure[1] = 1;
            pure[2] = 0;
            break;
          case 2:
            pure[0] = 0;
            pure[1] = 1;
            pure[2] = v;
            break;
          case 3:
            pure[0] = 0;
            pure[1] = w2;
            pure[2] = 1;
            break;
          case 4:
            pure[0] = v;
            pure[1] = 0;
            pure[2] = 1;
            break;
          default:
            pure[0] = 1;
            pure[1] = 0;
            pure[2] = w2;
        }
        mg = (1 - c2) * g;
        return [
          (c2 * pure[0] + mg) * 255,
          (c2 * pure[1] + mg) * 255,
          (c2 * pure[2] + mg) * 255
        ];
      };
      convert.hcg.hsv = function(hcg) {
        const c2 = hcg[1] / 100;
        const g = hcg[2] / 100;
        const v = c2 + g * (1 - c2);
        let f = 0;
        if (v > 0) {
          f = c2 / v;
        }
        return [hcg[0], f * 100, v * 100];
      };
      convert.hcg.hsl = function(hcg) {
        const c2 = hcg[1] / 100;
        const g = hcg[2] / 100;
        const l = g * (1 - c2) + 0.5 * c2;
        let s3 = 0;
        if (l > 0 && l < 0.5) {
          s3 = c2 / (2 * l);
        } else if (l >= 0.5 && l < 1) {
          s3 = c2 / (2 * (1 - l));
        }
        return [hcg[0], s3 * 100, l * 100];
      };
      convert.hcg.hwb = function(hcg) {
        const c2 = hcg[1] / 100;
        const g = hcg[2] / 100;
        const v = c2 + g * (1 - c2);
        return [hcg[0], (v - c2) * 100, (1 - v) * 100];
      };
      convert.hwb.hcg = function(hwb) {
        const w2 = hwb[1] / 100;
        const b2 = hwb[2] / 100;
        const v = 1 - b2;
        const c2 = v - w2;
        let g = 0;
        if (c2 < 1) {
          g = (v - c2) / (1 - c2);
        }
        return [hwb[0], c2 * 100, g * 100];
      };
      convert.apple.rgb = function(apple) {
        return [apple[0] / 65535 * 255, apple[1] / 65535 * 255, apple[2] / 65535 * 255];
      };
      convert.rgb.apple = function(rgb) {
        return [rgb[0] / 255 * 65535, rgb[1] / 255 * 65535, rgb[2] / 255 * 65535];
      };
      convert.gray.rgb = function(args) {
        return [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];
      };
      convert.gray.hsl = function(args) {
        return [0, 0, args[0]];
      };
      convert.gray.hsv = convert.gray.hsl;
      convert.gray.hwb = function(gray) {
        return [0, 100, gray[0]];
      };
      convert.gray.cmyk = function(gray) {
        return [0, 0, 0, gray[0]];
      };
      convert.gray.lab = function(gray) {
        return [gray[0], 0, 0];
      };
      convert.gray.hex = function(gray) {
        const val = Math.round(gray[0] / 100 * 255) & 255;
        const integer = (val << 16) + (val << 8) + val;
        const string = integer.toString(16).toUpperCase();
        return "000000".substring(string.length) + string;
      };
      convert.rgb.gray = function(rgb) {
        const val = (rgb[0] + rgb[1] + rgb[2]) / 3;
        return [val / 255 * 100];
      };
    }
  });

  // node_modules/color-convert/route.js
  var require_route = __commonJS({
    "node_modules/color-convert/route.js"(exports, module) {
      var conversions = require_conversions();
      function buildGraph() {
        const graph = {};
        const models = Object.keys(conversions);
        for (let len = models.length, i2 = 0; i2 < len; i2++) {
          graph[models[i2]] = {
            distance: -1,
            parent: null
          };
        }
        return graph;
      }
      function deriveBFS(fromModel) {
        const graph = buildGraph();
        const queue = [fromModel];
        graph[fromModel].distance = 0;
        while (queue.length) {
          const current = queue.pop();
          const adjacents = Object.keys(conversions[current]);
          for (let len = adjacents.length, i2 = 0; i2 < len; i2++) {
            const adjacent = adjacents[i2];
            const node = graph[adjacent];
            if (node.distance === -1) {
              node.distance = graph[current].distance + 1;
              node.parent = current;
              queue.unshift(adjacent);
            }
          }
        }
        return graph;
      }
      function link(from, to) {
        return function(args) {
          return to(from(args));
        };
      }
      function wrapConversion(toModel, graph) {
        const path = [graph[toModel].parent, toModel];
        let fn = conversions[graph[toModel].parent][toModel];
        let cur = graph[toModel].parent;
        while (graph[cur].parent) {
          path.unshift(graph[cur].parent);
          fn = link(conversions[graph[cur].parent][cur], fn);
          cur = graph[cur].parent;
        }
        fn.conversion = path;
        return fn;
      }
      module.exports = function(fromModel) {
        const graph = deriveBFS(fromModel);
        const conversion = {};
        const models = Object.keys(graph);
        for (let len = models.length, i2 = 0; i2 < len; i2++) {
          const toModel = models[i2];
          const node = graph[toModel];
          if (node.parent === null) {
            continue;
          }
          conversion[toModel] = wrapConversion(toModel, graph);
        }
        return conversion;
      };
    }
  });

  // node_modules/color-convert/index.js
  var require_color_convert = __commonJS({
    "node_modules/color-convert/index.js"(exports, module) {
      var conversions = require_conversions();
      var route = require_route();
      var convert = {};
      var models = Object.keys(conversions);
      function wrapRaw(fn) {
        const wrappedFn = function(...args) {
          const arg0 = args[0];
          if (arg0 === void 0 || arg0 === null) {
            return arg0;
          }
          if (arg0.length > 1) {
            args = arg0;
          }
          return fn(args);
        };
        if ("conversion" in fn) {
          wrappedFn.conversion = fn.conversion;
        }
        return wrappedFn;
      }
      function wrapRounded(fn) {
        const wrappedFn = function(...args) {
          const arg0 = args[0];
          if (arg0 === void 0 || arg0 === null) {
            return arg0;
          }
          if (arg0.length > 1) {
            args = arg0;
          }
          const result = fn(args);
          if (typeof result === "object") {
            for (let len = result.length, i2 = 0; i2 < len; i2++) {
              result[i2] = Math.round(result[i2]);
            }
          }
          return result;
        };
        if ("conversion" in fn) {
          wrappedFn.conversion = fn.conversion;
        }
        return wrappedFn;
      }
      models.forEach((fromModel) => {
        convert[fromModel] = {};
        Object.defineProperty(convert[fromModel], "channels", {value: conversions[fromModel].channels});
        Object.defineProperty(convert[fromModel], "labels", {value: conversions[fromModel].labels});
        const routes = route(fromModel);
        const routeModels = Object.keys(routes);
        routeModels.forEach((toModel) => {
          const fn = routes[toModel];
          convert[fromModel][toModel] = wrapRounded(fn);
          convert[fromModel][toModel].raw = wrapRaw(fn);
        });
      });
      module.exports = convert;
    }
  });

  // node_modules/ansi-styles/index.js
  var require_ansi_styles = __commonJS({
    "node_modules/ansi-styles/index.js"(exports, module) {
      "use strict";
      var wrapAnsi16 = (fn, offset) => (...args) => {
        const code = fn(...args);
        return `[${code + offset}m`;
      };
      var wrapAnsi256 = (fn, offset) => (...args) => {
        const code = fn(...args);
        return `[${38 + offset};5;${code}m`;
      };
      var wrapAnsi16m = (fn, offset) => (...args) => {
        const rgb = fn(...args);
        return `[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;
      };
      var ansi2ansi = (n) => n;
      var rgb2rgb = (r, g, b2) => [r, g, b2];
      var setLazyProperty = (object, property, get) => {
        Object.defineProperty(object, property, {
          get: () => {
            const value = get();
            Object.defineProperty(object, property, {
              value,
              enumerable: true,
              configurable: true
            });
            return value;
          },
          enumerable: true,
          configurable: true
        });
      };
      var colorConvert;
      var makeDynamicStyles = (wrap, targetSpace, identity, isBackground) => {
        if (colorConvert === void 0) {
          colorConvert = require_color_convert();
        }
        const offset = isBackground ? 10 : 0;
        const styles = {};
        for (const [sourceSpace, suite] of Object.entries(colorConvert)) {
          const name = sourceSpace === "ansi16" ? "ansi" : sourceSpace;
          if (sourceSpace === targetSpace) {
            styles[name] = wrap(identity, offset);
          } else if (typeof suite === "object") {
            styles[name] = wrap(suite[targetSpace], offset);
          }
        }
        return styles;
      };
      function assembleStyles() {
        const codes = new Map();
        const styles = {
          modifier: {
            reset: [0, 0],
            bold: [1, 22],
            dim: [2, 22],
            italic: [3, 23],
            underline: [4, 24],
            inverse: [7, 27],
            hidden: [8, 28],
            strikethrough: [9, 29]
          },
          color: {
            black: [30, 39],
            red: [31, 39],
            green: [32, 39],
            yellow: [33, 39],
            blue: [34, 39],
            magenta: [35, 39],
            cyan: [36, 39],
            white: [37, 39],
            blackBright: [90, 39],
            redBright: [91, 39],
            greenBright: [92, 39],
            yellowBright: [93, 39],
            blueBright: [94, 39],
            magentaBright: [95, 39],
            cyanBright: [96, 39],
            whiteBright: [97, 39]
          },
          bgColor: {
            bgBlack: [40, 49],
            bgRed: [41, 49],
            bgGreen: [42, 49],
            bgYellow: [43, 49],
            bgBlue: [44, 49],
            bgMagenta: [45, 49],
            bgCyan: [46, 49],
            bgWhite: [47, 49],
            bgBlackBright: [100, 49],
            bgRedBright: [101, 49],
            bgGreenBright: [102, 49],
            bgYellowBright: [103, 49],
            bgBlueBright: [104, 49],
            bgMagentaBright: [105, 49],
            bgCyanBright: [106, 49],
            bgWhiteBright: [107, 49]
          }
        };
        styles.color.gray = styles.color.blackBright;
        styles.bgColor.bgGray = styles.bgColor.bgBlackBright;
        styles.color.grey = styles.color.blackBright;
        styles.bgColor.bgGrey = styles.bgColor.bgBlackBright;
        for (const [groupName, group] of Object.entries(styles)) {
          for (const [styleName, style] of Object.entries(group)) {
            styles[styleName] = {
              open: `[${style[0]}m`,
              close: `[${style[1]}m`
            };
            group[styleName] = styles[styleName];
            codes.set(style[0], style[1]);
          }
          Object.defineProperty(styles, groupName, {
            value: group,
            enumerable: false
          });
        }
        Object.defineProperty(styles, "codes", {
          value: codes,
          enumerable: false
        });
        styles.color.close = "[39m";
        styles.bgColor.close = "[49m";
        setLazyProperty(styles.color, "ansi", () => makeDynamicStyles(wrapAnsi16, "ansi16", ansi2ansi, false));
        setLazyProperty(styles.color, "ansi256", () => makeDynamicStyles(wrapAnsi256, "ansi256", ansi2ansi, false));
        setLazyProperty(styles.color, "ansi16m", () => makeDynamicStyles(wrapAnsi16m, "rgb", rgb2rgb, false));
        setLazyProperty(styles.bgColor, "ansi", () => makeDynamicStyles(wrapAnsi16, "ansi16", ansi2ansi, true));
        setLazyProperty(styles.bgColor, "ansi256", () => makeDynamicStyles(wrapAnsi256, "ansi256", ansi2ansi, true));
        setLazyProperty(styles.bgColor, "ansi16m", () => makeDynamicStyles(wrapAnsi16m, "rgb", rgb2rgb, true));
        return styles;
      }
      Object.defineProperty(module, "exports", {
        enumerable: true,
        get: assembleStyles
      });
    }
  });

  // node_modules/pretty-format/build/collections.js
  var require_collections = __commonJS({
    "node_modules/pretty-format/build/collections.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.printIteratorEntries = printIteratorEntries;
      exports.printIteratorValues = printIteratorValues;
      exports.printListItems = printListItems;
      exports.printObjectProperties = printObjectProperties;
      var getKeysOfEnumerableProperties = (object) => {
        const keys = Object.keys(object).sort();
        if (Object.getOwnPropertySymbols) {
          Object.getOwnPropertySymbols(object).forEach((symbol) => {
            if (Object.getOwnPropertyDescriptor(object, symbol).enumerable) {
              keys.push(symbol);
            }
          });
        }
        return keys;
      };
      function printIteratorEntries(iterator, config, indentation, depth, refs, printer, separator = ": ") {
        let result = "";
        let current = iterator.next();
        if (!current.done) {
          result += config.spacingOuter;
          const indentationNext = indentation + config.indent;
          while (!current.done) {
            const name = printer(current.value[0], config, indentationNext, depth, refs);
            const value = printer(current.value[1], config, indentationNext, depth, refs);
            result += indentationNext + name + separator + value;
            current = iterator.next();
            if (!current.done) {
              result += "," + config.spacingInner;
            } else if (!config.min) {
              result += ",";
            }
          }
          result += config.spacingOuter + indentation;
        }
        return result;
      }
      function printIteratorValues(iterator, config, indentation, depth, refs, printer) {
        let result = "";
        let current = iterator.next();
        if (!current.done) {
          result += config.spacingOuter;
          const indentationNext = indentation + config.indent;
          while (!current.done) {
            result += indentationNext + printer(current.value, config, indentationNext, depth, refs);
            current = iterator.next();
            if (!current.done) {
              result += "," + config.spacingInner;
            } else if (!config.min) {
              result += ",";
            }
          }
          result += config.spacingOuter + indentation;
        }
        return result;
      }
      function printListItems(list, config, indentation, depth, refs, printer) {
        let result = "";
        if (list.length) {
          result += config.spacingOuter;
          const indentationNext = indentation + config.indent;
          for (let i2 = 0; i2 < list.length; i2++) {
            result += indentationNext + printer(list[i2], config, indentationNext, depth, refs);
            if (i2 < list.length - 1) {
              result += "," + config.spacingInner;
            } else if (!config.min) {
              result += ",";
            }
          }
          result += config.spacingOuter + indentation;
        }
        return result;
      }
      function printObjectProperties(val, config, indentation, depth, refs, printer) {
        let result = "";
        const keys = getKeysOfEnumerableProperties(val);
        if (keys.length) {
          result += config.spacingOuter;
          const indentationNext = indentation + config.indent;
          for (let i2 = 0; i2 < keys.length; i2++) {
            const key = keys[i2];
            const name = printer(key, config, indentationNext, depth, refs);
            const value = printer(val[key], config, indentationNext, depth, refs);
            result += indentationNext + name + ": " + value;
            if (i2 < keys.length - 1) {
              result += "," + config.spacingInner;
            } else if (!config.min) {
              result += ",";
            }
          }
          result += config.spacingOuter + indentation;
        }
        return result;
      }
    }
  });

  // node_modules/pretty-format/build/plugins/AsymmetricMatcher.js
  var require_AsymmetricMatcher = __commonJS({
    "node_modules/pretty-format/build/plugins/AsymmetricMatcher.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = exports.test = exports.serialize = void 0;
      var _collections = require_collections();
      var Symbol2 = global["jest-symbol-do-not-touch"] || global.Symbol;
      var asymmetricMatcher = typeof Symbol2 === "function" && Symbol2.for ? Symbol2.for("jest.asymmetricMatcher") : 1267621;
      var SPACE = " ";
      var serialize = (val, config, indentation, depth, refs, printer) => {
        const stringedValue = val.toString();
        if (stringedValue === "ArrayContaining" || stringedValue === "ArrayNotContaining") {
          if (++depth > config.maxDepth) {
            return "[" + stringedValue + "]";
          }
          return stringedValue + SPACE + "[" + (0, _collections.printListItems)(val.sample, config, indentation, depth, refs, printer) + "]";
        }
        if (stringedValue === "ObjectContaining" || stringedValue === "ObjectNotContaining") {
          if (++depth > config.maxDepth) {
            return "[" + stringedValue + "]";
          }
          return stringedValue + SPACE + "{" + (0, _collections.printObjectProperties)(val.sample, config, indentation, depth, refs, printer) + "}";
        }
        if (stringedValue === "StringMatching" || stringedValue === "StringNotMatching") {
          return stringedValue + SPACE + printer(val.sample, config, indentation, depth, refs);
        }
        if (stringedValue === "StringContaining" || stringedValue === "StringNotContaining") {
          return stringedValue + SPACE + printer(val.sample, config, indentation, depth, refs);
        }
        return val.toAsymmetricMatcher();
      };
      exports.serialize = serialize;
      var test = (val) => val && val.$$typeof === asymmetricMatcher;
      exports.test = test;
      var plugin = {
        serialize,
        test
      };
      var _default = plugin;
      exports.default = _default;
    }
  });

  // node_modules/ansi-regex/index.js
  var require_ansi_regex = __commonJS({
    "node_modules/ansi-regex/index.js"(exports, module) {
      "use strict";
      module.exports = ({onlyFirst = false} = {}) => {
        const pattern = [
          "[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)",
          "(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))"
        ].join("|");
        return new RegExp(pattern, onlyFirst ? void 0 : "g");
      };
    }
  });

  // node_modules/pretty-format/build/plugins/ConvertAnsi.js
  var require_ConvertAnsi = __commonJS({
    "node_modules/pretty-format/build/plugins/ConvertAnsi.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = exports.serialize = exports.test = void 0;
      var _ansiRegex = _interopRequireDefault(require_ansi_regex());
      var _ansiStyles = _interopRequireDefault(require_ansi_styles());
      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {default: obj};
      }
      var toHumanReadableAnsi = (text) => text.replace((0, _ansiRegex.default)(), (match2) => {
        switch (match2) {
          case _ansiStyles.default.red.close:
          case _ansiStyles.default.green.close:
          case _ansiStyles.default.cyan.close:
          case _ansiStyles.default.gray.close:
          case _ansiStyles.default.white.close:
          case _ansiStyles.default.yellow.close:
          case _ansiStyles.default.bgRed.close:
          case _ansiStyles.default.bgGreen.close:
          case _ansiStyles.default.bgYellow.close:
          case _ansiStyles.default.inverse.close:
          case _ansiStyles.default.dim.close:
          case _ansiStyles.default.bold.close:
          case _ansiStyles.default.reset.open:
          case _ansiStyles.default.reset.close:
            return "</>";
          case _ansiStyles.default.red.open:
            return "<red>";
          case _ansiStyles.default.green.open:
            return "<green>";
          case _ansiStyles.default.cyan.open:
            return "<cyan>";
          case _ansiStyles.default.gray.open:
            return "<gray>";
          case _ansiStyles.default.white.open:
            return "<white>";
          case _ansiStyles.default.yellow.open:
            return "<yellow>";
          case _ansiStyles.default.bgRed.open:
            return "<bgRed>";
          case _ansiStyles.default.bgGreen.open:
            return "<bgGreen>";
          case _ansiStyles.default.bgYellow.open:
            return "<bgYellow>";
          case _ansiStyles.default.inverse.open:
            return "<inverse>";
          case _ansiStyles.default.dim.open:
            return "<dim>";
          case _ansiStyles.default.bold.open:
            return "<bold>";
          default:
            return "";
        }
      });
      var test = (val) => typeof val === "string" && !!val.match((0, _ansiRegex.default)());
      exports.test = test;
      var serialize = (val, config, indentation, depth, refs, printer) => printer(toHumanReadableAnsi(val), config, indentation, depth, refs);
      exports.serialize = serialize;
      var plugin = {
        serialize,
        test
      };
      var _default = plugin;
      exports.default = _default;
    }
  });

  // node_modules/pretty-format/build/plugins/DOMCollection.js
  var require_DOMCollection = __commonJS({
    "node_modules/pretty-format/build/plugins/DOMCollection.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = exports.serialize = exports.test = void 0;
      var _collections = require_collections();
      var SPACE = " ";
      var OBJECT_NAMES = ["DOMStringMap", "NamedNodeMap"];
      var ARRAY_REGEXP = /^(HTML\w*Collection|NodeList)$/;
      var testName = (name) => OBJECT_NAMES.indexOf(name) !== -1 || ARRAY_REGEXP.test(name);
      var test = (val) => val && val.constructor && !!val.constructor.name && testName(val.constructor.name);
      exports.test = test;
      var isNamedNodeMap = (collection) => collection.constructor.name === "NamedNodeMap";
      var serialize = (collection, config, indentation, depth, refs, printer) => {
        const name = collection.constructor.name;
        if (++depth > config.maxDepth) {
          return "[" + name + "]";
        }
        return (config.min ? "" : name + SPACE) + (OBJECT_NAMES.indexOf(name) !== -1 ? "{" + (0, _collections.printObjectProperties)(isNamedNodeMap(collection) ? Array.from(collection).reduce((props, attribute) => {
          props[attribute.name] = attribute.value;
          return props;
        }, {}) : {...collection}, config, indentation, depth, refs, printer) + "}" : "[" + (0, _collections.printListItems)(Array.from(collection), config, indentation, depth, refs, printer) + "]");
      };
      exports.serialize = serialize;
      var plugin = {
        serialize,
        test
      };
      var _default = plugin;
      exports.default = _default;
    }
  });

  // node_modules/pretty-format/build/plugins/lib/escapeHTML.js
  var require_escapeHTML = __commonJS({
    "node_modules/pretty-format/build/plugins/lib/escapeHTML.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = escapeHTML;
      function escapeHTML(str) {
        return str.replace(/</g, "&lt;").replace(/>/g, "&gt;");
      }
    }
  });

  // node_modules/pretty-format/build/plugins/lib/markup.js
  var require_markup = __commonJS({
    "node_modules/pretty-format/build/plugins/lib/markup.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.printElementAsLeaf = exports.printElement = exports.printComment = exports.printText = exports.printChildren = exports.printProps = void 0;
      var _escapeHTML = _interopRequireDefault(require_escapeHTML());
      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {default: obj};
      }
      var printProps = (keys, props, config, indentation, depth, refs, printer) => {
        const indentationNext = indentation + config.indent;
        const colors = config.colors;
        return keys.map((key) => {
          const value = props[key];
          let printed = printer(value, config, indentationNext, depth, refs);
          if (typeof value !== "string") {
            if (printed.indexOf("\n") !== -1) {
              printed = config.spacingOuter + indentationNext + printed + config.spacingOuter + indentation;
            }
            printed = "{" + printed + "}";
          }
          return config.spacingInner + indentation + colors.prop.open + key + colors.prop.close + "=" + colors.value.open + printed + colors.value.close;
        }).join("");
      };
      exports.printProps = printProps;
      var printChildren = (children, config, indentation, depth, refs, printer) => children.map((child) => config.spacingOuter + indentation + (typeof child === "string" ? printText(child, config) : printer(child, config, indentation, depth, refs))).join("");
      exports.printChildren = printChildren;
      var printText = (text, config) => {
        const contentColor = config.colors.content;
        return contentColor.open + (0, _escapeHTML.default)(text) + contentColor.close;
      };
      exports.printText = printText;
      var printComment = (comment, config) => {
        const commentColor = config.colors.comment;
        return commentColor.open + "<!--" + (0, _escapeHTML.default)(comment) + "-->" + commentColor.close;
      };
      exports.printComment = printComment;
      var printElement = (type, printedProps, printedChildren, config, indentation) => {
        const tagColor = config.colors.tag;
        return tagColor.open + "<" + type + (printedProps && tagColor.close + printedProps + config.spacingOuter + indentation + tagColor.open) + (printedChildren ? ">" + tagColor.close + printedChildren + config.spacingOuter + indentation + tagColor.open + "</" + type : (printedProps && !config.min ? "" : " ") + "/") + ">" + tagColor.close;
      };
      exports.printElement = printElement;
      var printElementAsLeaf = (type, config) => {
        const tagColor = config.colors.tag;
        return tagColor.open + "<" + type + tagColor.close + " \u2026" + tagColor.open + " />" + tagColor.close;
      };
      exports.printElementAsLeaf = printElementAsLeaf;
    }
  });

  // node_modules/pretty-format/build/plugins/DOMElement.js
  var require_DOMElement = __commonJS({
    "node_modules/pretty-format/build/plugins/DOMElement.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = exports.serialize = exports.test = void 0;
      var _markup = require_markup();
      var ELEMENT_NODE = 1;
      var TEXT_NODE = 3;
      var COMMENT_NODE = 8;
      var FRAGMENT_NODE = 11;
      var ELEMENT_REGEXP = /^((HTML|SVG)\w*)?Element$/;
      var testNode = (val) => {
        var _val$hasAttribute;
        const constructorName = val.constructor.name;
        const {nodeType, tagName} = val;
        const isCustomElement = typeof tagName === "string" && tagName.includes("-") || ((_val$hasAttribute = val.hasAttribute) === null || _val$hasAttribute === void 0 ? void 0 : _val$hasAttribute.call(val, "is"));
        return nodeType === ELEMENT_NODE && (ELEMENT_REGEXP.test(constructorName) || isCustomElement) || nodeType === TEXT_NODE && constructorName === "Text" || nodeType === COMMENT_NODE && constructorName === "Comment" || nodeType === FRAGMENT_NODE && constructorName === "DocumentFragment";
      };
      var test = (val) => {
        var _val$constructor;
        return (val === null || val === void 0 ? void 0 : (_val$constructor = val.constructor) === null || _val$constructor === void 0 ? void 0 : _val$constructor.name) && testNode(val);
      };
      exports.test = test;
      function nodeIsText(node) {
        return node.nodeType === TEXT_NODE;
      }
      function nodeIsComment(node) {
        return node.nodeType === COMMENT_NODE;
      }
      function nodeIsFragment(node) {
        return node.nodeType === FRAGMENT_NODE;
      }
      var serialize = (node, config, indentation, depth, refs, printer) => {
        if (nodeIsText(node)) {
          return (0, _markup.printText)(node.data, config);
        }
        if (nodeIsComment(node)) {
          return (0, _markup.printComment)(node.data, config);
        }
        const type = nodeIsFragment(node) ? `DocumentFragment` : node.tagName.toLowerCase();
        if (++depth > config.maxDepth) {
          return (0, _markup.printElementAsLeaf)(type, config);
        }
        return (0, _markup.printElement)(type, (0, _markup.printProps)(nodeIsFragment(node) ? [] : Array.from(node.attributes).map((attr) => attr.name).sort(), nodeIsFragment(node) ? {} : Array.from(node.attributes).reduce((props, attribute) => {
          props[attribute.name] = attribute.value;
          return props;
        }, {}), config, indentation + config.indent, depth, refs, printer), (0, _markup.printChildren)(Array.prototype.slice.call(node.childNodes || node.children), config, indentation + config.indent, depth, refs, printer), config, indentation);
      };
      exports.serialize = serialize;
      var plugin = {
        serialize,
        test
      };
      var _default = plugin;
      exports.default = _default;
    }
  });

  // node_modules/pretty-format/build/plugins/Immutable.js
  var require_Immutable = __commonJS({
    "node_modules/pretty-format/build/plugins/Immutable.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = exports.test = exports.serialize = void 0;
      var _collections = require_collections();
      var IS_ITERABLE_SENTINEL = "@@__IMMUTABLE_ITERABLE__@@";
      var IS_LIST_SENTINEL = "@@__IMMUTABLE_LIST__@@";
      var IS_KEYED_SENTINEL = "@@__IMMUTABLE_KEYED__@@";
      var IS_MAP_SENTINEL = "@@__IMMUTABLE_MAP__@@";
      var IS_ORDERED_SENTINEL = "@@__IMMUTABLE_ORDERED__@@";
      var IS_RECORD_SENTINEL = "@@__IMMUTABLE_RECORD__@@";
      var IS_SEQ_SENTINEL = "@@__IMMUTABLE_SEQ__@@";
      var IS_SET_SENTINEL = "@@__IMMUTABLE_SET__@@";
      var IS_STACK_SENTINEL = "@@__IMMUTABLE_STACK__@@";
      var getImmutableName = (name) => "Immutable." + name;
      var printAsLeaf = (name) => "[" + name + "]";
      var SPACE = " ";
      var LAZY = "\u2026";
      var printImmutableEntries = (val, config, indentation, depth, refs, printer, type) => ++depth > config.maxDepth ? printAsLeaf(getImmutableName(type)) : getImmutableName(type) + SPACE + "{" + (0, _collections.printIteratorEntries)(val.entries(), config, indentation, depth, refs, printer) + "}";
      function getRecordEntries(val) {
        let i2 = 0;
        return {
          next() {
            if (i2 < val._keys.length) {
              const key = val._keys[i2++];
              return {
                done: false,
                value: [key, val.get(key)]
              };
            }
            return {
              done: true,
              value: void 0
            };
          }
        };
      }
      var printImmutableRecord = (val, config, indentation, depth, refs, printer) => {
        const name = getImmutableName(val._name || "Record");
        return ++depth > config.maxDepth ? printAsLeaf(name) : name + SPACE + "{" + (0, _collections.printIteratorEntries)(getRecordEntries(val), config, indentation, depth, refs, printer) + "}";
      };
      var printImmutableSeq = (val, config, indentation, depth, refs, printer) => {
        const name = getImmutableName("Seq");
        if (++depth > config.maxDepth) {
          return printAsLeaf(name);
        }
        if (val[IS_KEYED_SENTINEL]) {
          return name + SPACE + "{" + (val._iter || val._object ? (0, _collections.printIteratorEntries)(val.entries(), config, indentation, depth, refs, printer) : LAZY) + "}";
        }
        return name + SPACE + "[" + (val._iter || val._array || val._collection || val._iterable ? (0, _collections.printIteratorValues)(val.values(), config, indentation, depth, refs, printer) : LAZY) + "]";
      };
      var printImmutableValues = (val, config, indentation, depth, refs, printer, type) => ++depth > config.maxDepth ? printAsLeaf(getImmutableName(type)) : getImmutableName(type) + SPACE + "[" + (0, _collections.printIteratorValues)(val.values(), config, indentation, depth, refs, printer) + "]";
      var serialize = (val, config, indentation, depth, refs, printer) => {
        if (val[IS_MAP_SENTINEL]) {
          return printImmutableEntries(val, config, indentation, depth, refs, printer, val[IS_ORDERED_SENTINEL] ? "OrderedMap" : "Map");
        }
        if (val[IS_LIST_SENTINEL]) {
          return printImmutableValues(val, config, indentation, depth, refs, printer, "List");
        }
        if (val[IS_SET_SENTINEL]) {
          return printImmutableValues(val, config, indentation, depth, refs, printer, val[IS_ORDERED_SENTINEL] ? "OrderedSet" : "Set");
        }
        if (val[IS_STACK_SENTINEL]) {
          return printImmutableValues(val, config, indentation, depth, refs, printer, "Stack");
        }
        if (val[IS_SEQ_SENTINEL]) {
          return printImmutableSeq(val, config, indentation, depth, refs, printer);
        }
        return printImmutableRecord(val, config, indentation, depth, refs, printer);
      };
      exports.serialize = serialize;
      var test = (val) => val && (val[IS_ITERABLE_SENTINEL] === true || val[IS_RECORD_SENTINEL] === true);
      exports.test = test;
      var plugin = {
        serialize,
        test
      };
      var _default = plugin;
      exports.default = _default;
    }
  });

  // node_modules/react-is/cjs/react-is.development.js
  var require_react_is_development = __commonJS({
    "node_modules/react-is/cjs/react-is.development.js"(exports) {
      "use strict";
      if (true) {
        (function() {
          "use strict";
          var REACT_ELEMENT_TYPE = 60103;
          var REACT_PORTAL_TYPE = 60106;
          var REACT_FRAGMENT_TYPE = 60107;
          var REACT_STRICT_MODE_TYPE = 60108;
          var REACT_PROFILER_TYPE = 60114;
          var REACT_PROVIDER_TYPE = 60109;
          var REACT_CONTEXT_TYPE = 60110;
          var REACT_FORWARD_REF_TYPE = 60112;
          var REACT_SUSPENSE_TYPE = 60113;
          var REACT_SUSPENSE_LIST_TYPE = 60120;
          var REACT_MEMO_TYPE = 60115;
          var REACT_LAZY_TYPE = 60116;
          var REACT_BLOCK_TYPE = 60121;
          var REACT_SERVER_BLOCK_TYPE = 60122;
          var REACT_FUNDAMENTAL_TYPE = 60117;
          var REACT_SCOPE_TYPE = 60119;
          var REACT_OPAQUE_ID_TYPE = 60128;
          var REACT_DEBUG_TRACING_MODE_TYPE = 60129;
          var REACT_OFFSCREEN_TYPE = 60130;
          var REACT_LEGACY_HIDDEN_TYPE = 60131;
          if (typeof Symbol === "function" && Symbol.for) {
            var symbolFor = Symbol.for;
            REACT_ELEMENT_TYPE = symbolFor("react.element");
            REACT_PORTAL_TYPE = symbolFor("react.portal");
            REACT_FRAGMENT_TYPE = symbolFor("react.fragment");
            REACT_STRICT_MODE_TYPE = symbolFor("react.strict_mode");
            REACT_PROFILER_TYPE = symbolFor("react.profiler");
            REACT_PROVIDER_TYPE = symbolFor("react.provider");
            REACT_CONTEXT_TYPE = symbolFor("react.context");
            REACT_FORWARD_REF_TYPE = symbolFor("react.forward_ref");
            REACT_SUSPENSE_TYPE = symbolFor("react.suspense");
            REACT_SUSPENSE_LIST_TYPE = symbolFor("react.suspense_list");
            REACT_MEMO_TYPE = symbolFor("react.memo");
            REACT_LAZY_TYPE = symbolFor("react.lazy");
            REACT_BLOCK_TYPE = symbolFor("react.block");
            REACT_SERVER_BLOCK_TYPE = symbolFor("react.server.block");
            REACT_FUNDAMENTAL_TYPE = symbolFor("react.fundamental");
            REACT_SCOPE_TYPE = symbolFor("react.scope");
            REACT_OPAQUE_ID_TYPE = symbolFor("react.opaque.id");
            REACT_DEBUG_TRACING_MODE_TYPE = symbolFor("react.debug_trace_mode");
            REACT_OFFSCREEN_TYPE = symbolFor("react.offscreen");
            REACT_LEGACY_HIDDEN_TYPE = symbolFor("react.legacy_hidden");
          }
          var enableScopeAPI = false;
          function isValidElementType(type) {
            if (typeof type === "string" || typeof type === "function") {
              return true;
            }
            if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || type === REACT_DEBUG_TRACING_MODE_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI) {
              return true;
            }
            if (typeof type === "object" && type !== null) {
              if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) {
                return true;
              }
            }
            return false;
          }
          function typeOf(object) {
            if (typeof object === "object" && object !== null) {
              var $$typeof = object.$$typeof;
              switch ($$typeof) {
                case REACT_ELEMENT_TYPE:
                  var type = object.type;
                  switch (type) {
                    case REACT_FRAGMENT_TYPE:
                    case REACT_PROFILER_TYPE:
                    case REACT_STRICT_MODE_TYPE:
                    case REACT_SUSPENSE_TYPE:
                    case REACT_SUSPENSE_LIST_TYPE:
                      return type;
                    default:
                      var $$typeofType = type && type.$$typeof;
                      switch ($$typeofType) {
                        case REACT_CONTEXT_TYPE:
                        case REACT_FORWARD_REF_TYPE:
                        case REACT_LAZY_TYPE:
                        case REACT_MEMO_TYPE:
                        case REACT_PROVIDER_TYPE:
                          return $$typeofType;
                        default:
                          return $$typeof;
                      }
                  }
                case REACT_PORTAL_TYPE:
                  return $$typeof;
              }
            }
            return void 0;
          }
          var ContextConsumer = REACT_CONTEXT_TYPE;
          var ContextProvider = REACT_PROVIDER_TYPE;
          var Element = REACT_ELEMENT_TYPE;
          var ForwardRef = REACT_FORWARD_REF_TYPE;
          var Fragment = REACT_FRAGMENT_TYPE;
          var Lazy = REACT_LAZY_TYPE;
          var Memo = REACT_MEMO_TYPE;
          var Portal = REACT_PORTAL_TYPE;
          var Profiler = REACT_PROFILER_TYPE;
          var StrictMode = REACT_STRICT_MODE_TYPE;
          var Suspense = REACT_SUSPENSE_TYPE;
          var hasWarnedAboutDeprecatedIsAsyncMode = false;
          var hasWarnedAboutDeprecatedIsConcurrentMode = false;
          function isAsyncMode(object) {
            {
              if (!hasWarnedAboutDeprecatedIsAsyncMode) {
                hasWarnedAboutDeprecatedIsAsyncMode = true;
                console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 18+.");
              }
            }
            return false;
          }
          function isConcurrentMode(object) {
            {
              if (!hasWarnedAboutDeprecatedIsConcurrentMode) {
                hasWarnedAboutDeprecatedIsConcurrentMode = true;
                console["warn"]("The ReactIs.isConcurrentMode() alias has been deprecated, and will be removed in React 18+.");
              }
            }
            return false;
          }
          function isContextConsumer(object) {
            return typeOf(object) === REACT_CONTEXT_TYPE;
          }
          function isContextProvider(object) {
            return typeOf(object) === REACT_PROVIDER_TYPE;
          }
          function isElement(object) {
            return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
          }
          function isForwardRef(object) {
            return typeOf(object) === REACT_FORWARD_REF_TYPE;
          }
          function isFragment(object) {
            return typeOf(object) === REACT_FRAGMENT_TYPE;
          }
          function isLazy(object) {
            return typeOf(object) === REACT_LAZY_TYPE;
          }
          function isMemo(object) {
            return typeOf(object) === REACT_MEMO_TYPE;
          }
          function isPortal(object) {
            return typeOf(object) === REACT_PORTAL_TYPE;
          }
          function isProfiler(object) {
            return typeOf(object) === REACT_PROFILER_TYPE;
          }
          function isStrictMode(object) {
            return typeOf(object) === REACT_STRICT_MODE_TYPE;
          }
          function isSuspense(object) {
            return typeOf(object) === REACT_SUSPENSE_TYPE;
          }
          exports.ContextConsumer = ContextConsumer;
          exports.ContextProvider = ContextProvider;
          exports.Element = Element;
          exports.ForwardRef = ForwardRef;
          exports.Fragment = Fragment;
          exports.Lazy = Lazy;
          exports.Memo = Memo;
          exports.Portal = Portal;
          exports.Profiler = Profiler;
          exports.StrictMode = StrictMode;
          exports.Suspense = Suspense;
          exports.isAsyncMode = isAsyncMode;
          exports.isConcurrentMode = isConcurrentMode;
          exports.isContextConsumer = isContextConsumer;
          exports.isContextProvider = isContextProvider;
          exports.isElement = isElement;
          exports.isForwardRef = isForwardRef;
          exports.isFragment = isFragment;
          exports.isLazy = isLazy;
          exports.isMemo = isMemo;
          exports.isPortal = isPortal;
          exports.isProfiler = isProfiler;
          exports.isStrictMode = isStrictMode;
          exports.isSuspense = isSuspense;
          exports.isValidElementType = isValidElementType;
          exports.typeOf = typeOf;
        })();
      }
    }
  });

  // node_modules/react-is/index.js
  var require_react_is = __commonJS({
    "node_modules/react-is/index.js"(exports, module) {
      "use strict";
      if (false) {
        module.exports = null;
      } else {
        module.exports = require_react_is_development();
      }
    }
  });

  // node_modules/pretty-format/build/plugins/ReactElement.js
  var require_ReactElement = __commonJS({
    "node_modules/pretty-format/build/plugins/ReactElement.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = exports.test = exports.serialize = void 0;
      var ReactIs = _interopRequireWildcard(require_react_is());
      var _markup = require_markup();
      function _getRequireWildcardCache() {
        if (typeof WeakMap !== "function")
          return null;
        var cache = new WeakMap();
        _getRequireWildcardCache = function() {
          return cache;
        };
        return cache;
      }
      function _interopRequireWildcard(obj) {
        if (obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return {default: obj};
        }
        var cache = _getRequireWildcardCache();
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      var getChildren = (arg, children = []) => {
        if (Array.isArray(arg)) {
          arg.forEach((item) => {
            getChildren(item, children);
          });
        } else if (arg != null && arg !== false) {
          children.push(arg);
        }
        return children;
      };
      var getType = (element) => {
        const type = element.type;
        if (typeof type === "string") {
          return type;
        }
        if (typeof type === "function") {
          return type.displayName || type.name || "Unknown";
        }
        if (ReactIs.isFragment(element)) {
          return "React.Fragment";
        }
        if (ReactIs.isSuspense(element)) {
          return "React.Suspense";
        }
        if (typeof type === "object" && type !== null) {
          if (ReactIs.isContextProvider(element)) {
            return "Context.Provider";
          }
          if (ReactIs.isContextConsumer(element)) {
            return "Context.Consumer";
          }
          if (ReactIs.isForwardRef(element)) {
            if (type.displayName) {
              return type.displayName;
            }
            const functionName = type.render.displayName || type.render.name || "";
            return functionName !== "" ? "ForwardRef(" + functionName + ")" : "ForwardRef";
          }
          if (ReactIs.isMemo(element)) {
            const functionName = type.displayName || type.type.displayName || type.type.name || "";
            return functionName !== "" ? "Memo(" + functionName + ")" : "Memo";
          }
        }
        return "UNDEFINED";
      };
      var getPropKeys = (element) => {
        const {props} = element;
        return Object.keys(props).filter((key) => key !== "children" && props[key] !== void 0).sort();
      };
      var serialize = (element, config, indentation, depth, refs, printer) => ++depth > config.maxDepth ? (0, _markup.printElementAsLeaf)(getType(element), config) : (0, _markup.printElement)(getType(element), (0, _markup.printProps)(getPropKeys(element), element.props, config, indentation + config.indent, depth, refs, printer), (0, _markup.printChildren)(getChildren(element.props.children), config, indentation + config.indent, depth, refs, printer), config, indentation);
      exports.serialize = serialize;
      var test = (val) => val && ReactIs.isElement(val);
      exports.test = test;
      var plugin = {
        serialize,
        test
      };
      var _default = plugin;
      exports.default = _default;
    }
  });

  // node_modules/pretty-format/build/plugins/ReactTestComponent.js
  var require_ReactTestComponent = __commonJS({
    "node_modules/pretty-format/build/plugins/ReactTestComponent.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = exports.test = exports.serialize = void 0;
      var _markup = require_markup();
      var Symbol2 = global["jest-symbol-do-not-touch"] || global.Symbol;
      var testSymbol = typeof Symbol2 === "function" && Symbol2.for ? Symbol2.for("react.test.json") : 245830487;
      var getPropKeys = (object) => {
        const {props} = object;
        return props ? Object.keys(props).filter((key) => props[key] !== void 0).sort() : [];
      };
      var serialize = (object, config, indentation, depth, refs, printer) => ++depth > config.maxDepth ? (0, _markup.printElementAsLeaf)(object.type, config) : (0, _markup.printElement)(object.type, object.props ? (0, _markup.printProps)(getPropKeys(object), object.props, config, indentation + config.indent, depth, refs, printer) : "", object.children ? (0, _markup.printChildren)(object.children, config, indentation + config.indent, depth, refs, printer) : "", config, indentation);
      exports.serialize = serialize;
      var test = (val) => val && val.$$typeof === testSymbol;
      exports.test = test;
      var plugin = {
        serialize,
        test
      };
      var _default = plugin;
      exports.default = _default;
    }
  });

  // node_modules/pretty-format/build/index.js
  var require_build = __commonJS({
    "node_modules/pretty-format/build/index.js"(exports, module) {
      "use strict";
      var _ansiStyles = _interopRequireDefault(require_ansi_styles());
      var _collections = require_collections();
      var _AsymmetricMatcher = _interopRequireDefault(require_AsymmetricMatcher());
      var _ConvertAnsi = _interopRequireDefault(require_ConvertAnsi());
      var _DOMCollection = _interopRequireDefault(require_DOMCollection());
      var _DOMElement = _interopRequireDefault(require_DOMElement());
      var _Immutable = _interopRequireDefault(require_Immutable());
      var _ReactElement = _interopRequireDefault(require_ReactElement());
      var _ReactTestComponent = _interopRequireDefault(require_ReactTestComponent());
      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {default: obj};
      }
      var toString = Object.prototype.toString;
      var toISOString = Date.prototype.toISOString;
      var errorToString = Error.prototype.toString;
      var regExpToString = RegExp.prototype.toString;
      var getConstructorName = (val) => typeof val.constructor === "function" && val.constructor.name || "Object";
      var isWindow = (val) => typeof window !== "undefined" && val === window;
      var SYMBOL_REGEXP = /^Symbol\((.*)\)(.*)$/;
      var NEWLINE_REGEXP = /\n/gi;
      var PrettyFormatPluginError = class extends Error {
        constructor(message, stack) {
          super(message);
          this.stack = stack;
          this.name = this.constructor.name;
        }
      };
      function isToStringedArrayType(toStringed) {
        return toStringed === "[object Array]" || toStringed === "[object ArrayBuffer]" || toStringed === "[object DataView]" || toStringed === "[object Float32Array]" || toStringed === "[object Float64Array]" || toStringed === "[object Int8Array]" || toStringed === "[object Int16Array]" || toStringed === "[object Int32Array]" || toStringed === "[object Uint8Array]" || toStringed === "[object Uint8ClampedArray]" || toStringed === "[object Uint16Array]" || toStringed === "[object Uint32Array]";
      }
      function printNumber(val) {
        return Object.is(val, -0) ? "-0" : String(val);
      }
      function printBigInt(val) {
        return String(`${val}n`);
      }
      function printFunction(val, printFunctionName) {
        if (!printFunctionName) {
          return "[Function]";
        }
        return "[Function " + (val.name || "anonymous") + "]";
      }
      function printSymbol(val) {
        return String(val).replace(SYMBOL_REGEXP, "Symbol($1)");
      }
      function printError(val) {
        return "[" + errorToString.call(val) + "]";
      }
      function printBasicValue(val, printFunctionName, escapeRegex, escapeString) {
        if (val === true || val === false) {
          return "" + val;
        }
        if (val === void 0) {
          return "undefined";
        }
        if (val === null) {
          return "null";
        }
        const typeOf = typeof val;
        if (typeOf === "number") {
          return printNumber(val);
        }
        if (typeOf === "bigint") {
          return printBigInt(val);
        }
        if (typeOf === "string") {
          if (escapeString) {
            return '"' + val.replace(/"|\\/g, "\\$&") + '"';
          }
          return '"' + val + '"';
        }
        if (typeOf === "function") {
          return printFunction(val, printFunctionName);
        }
        if (typeOf === "symbol") {
          return printSymbol(val);
        }
        const toStringed = toString.call(val);
        if (toStringed === "[object WeakMap]") {
          return "WeakMap {}";
        }
        if (toStringed === "[object WeakSet]") {
          return "WeakSet {}";
        }
        if (toStringed === "[object Function]" || toStringed === "[object GeneratorFunction]") {
          return printFunction(val, printFunctionName);
        }
        if (toStringed === "[object Symbol]") {
          return printSymbol(val);
        }
        if (toStringed === "[object Date]") {
          return isNaN(+val) ? "Date { NaN }" : toISOString.call(val);
        }
        if (toStringed === "[object Error]") {
          return printError(val);
        }
        if (toStringed === "[object RegExp]") {
          if (escapeRegex) {
            return regExpToString.call(val).replace(/[\\^$*+?.()|[\]{}]/g, "\\$&");
          }
          return regExpToString.call(val);
        }
        if (val instanceof Error) {
          return printError(val);
        }
        return null;
      }
      function printComplexValue(val, config, indentation, depth, refs, hasCalledToJSON) {
        if (refs.indexOf(val) !== -1) {
          return "[Circular]";
        }
        refs = refs.slice();
        refs.push(val);
        const hitMaxDepth = ++depth > config.maxDepth;
        const min = config.min;
        if (config.callToJSON && !hitMaxDepth && val.toJSON && typeof val.toJSON === "function" && !hasCalledToJSON) {
          return printer(val.toJSON(), config, indentation, depth, refs, true);
        }
        const toStringed = toString.call(val);
        if (toStringed === "[object Arguments]") {
          return hitMaxDepth ? "[Arguments]" : (min ? "" : "Arguments ") + "[" + (0, _collections.printListItems)(val, config, indentation, depth, refs, printer) + "]";
        }
        if (isToStringedArrayType(toStringed)) {
          return hitMaxDepth ? "[" + val.constructor.name + "]" : (min ? "" : val.constructor.name + " ") + "[" + (0, _collections.printListItems)(val, config, indentation, depth, refs, printer) + "]";
        }
        if (toStringed === "[object Map]") {
          return hitMaxDepth ? "[Map]" : "Map {" + (0, _collections.printIteratorEntries)(val.entries(), config, indentation, depth, refs, printer, " => ") + "}";
        }
        if (toStringed === "[object Set]") {
          return hitMaxDepth ? "[Set]" : "Set {" + (0, _collections.printIteratorValues)(val.values(), config, indentation, depth, refs, printer) + "}";
        }
        return hitMaxDepth || isWindow(val) ? "[" + getConstructorName(val) + "]" : (min ? "" : getConstructorName(val) + " ") + "{" + (0, _collections.printObjectProperties)(val, config, indentation, depth, refs, printer) + "}";
      }
      function isNewPlugin(plugin) {
        return plugin.serialize != null;
      }
      function printPlugin(plugin, val, config, indentation, depth, refs) {
        let printed;
        try {
          printed = isNewPlugin(plugin) ? plugin.serialize(val, config, indentation, depth, refs, printer) : plugin.print(val, (valChild) => printer(valChild, config, indentation, depth, refs), (str) => {
            const indentationNext = indentation + config.indent;
            return indentationNext + str.replace(NEWLINE_REGEXP, "\n" + indentationNext);
          }, {
            edgeSpacing: config.spacingOuter,
            min: config.min,
            spacing: config.spacingInner
          }, config.colors);
        } catch (error) {
          throw new PrettyFormatPluginError(error.message, error.stack);
        }
        if (typeof printed !== "string") {
          throw new Error(`pretty-format: Plugin must return type "string" but instead returned "${typeof printed}".`);
        }
        return printed;
      }
      function findPlugin(plugins, val) {
        for (let p = 0; p < plugins.length; p++) {
          try {
            if (plugins[p].test(val)) {
              return plugins[p];
            }
          } catch (error) {
            throw new PrettyFormatPluginError(error.message, error.stack);
          }
        }
        return null;
      }
      function printer(val, config, indentation, depth, refs, hasCalledToJSON) {
        const plugin = findPlugin(config.plugins, val);
        if (plugin !== null) {
          return printPlugin(plugin, val, config, indentation, depth, refs);
        }
        const basicResult = printBasicValue(val, config.printFunctionName, config.escapeRegex, config.escapeString);
        if (basicResult !== null) {
          return basicResult;
        }
        return printComplexValue(val, config, indentation, depth, refs, hasCalledToJSON);
      }
      var DEFAULT_THEME = {
        comment: "gray",
        content: "reset",
        prop: "yellow",
        tag: "cyan",
        value: "green"
      };
      var DEFAULT_THEME_KEYS = Object.keys(DEFAULT_THEME);
      var DEFAULT_OPTIONS = {
        callToJSON: true,
        escapeRegex: false,
        escapeString: true,
        highlight: false,
        indent: 2,
        maxDepth: Infinity,
        min: false,
        plugins: [],
        printFunctionName: true,
        theme: DEFAULT_THEME
      };
      function validateOptions(options) {
        Object.keys(options).forEach((key) => {
          if (!DEFAULT_OPTIONS.hasOwnProperty(key)) {
            throw new Error(`pretty-format: Unknown option "${key}".`);
          }
        });
        if (options.min && options.indent !== void 0 && options.indent !== 0) {
          throw new Error('pretty-format: Options "min" and "indent" cannot be used together.');
        }
        if (options.theme !== void 0) {
          if (options.theme === null) {
            throw new Error(`pretty-format: Option "theme" must not be null.`);
          }
          if (typeof options.theme !== "object") {
            throw new Error(`pretty-format: Option "theme" must be of type "object" but instead received "${typeof options.theme}".`);
          }
        }
      }
      var getColorsHighlight = (options) => DEFAULT_THEME_KEYS.reduce((colors, key) => {
        const value = options.theme && options.theme[key] !== void 0 ? options.theme[key] : DEFAULT_THEME[key];
        const color = value && _ansiStyles.default[value];
        if (color && typeof color.close === "string" && typeof color.open === "string") {
          colors[key] = color;
        } else {
          throw new Error(`pretty-format: Option "theme" has a key "${key}" whose value "${value}" is undefined in ansi-styles.`);
        }
        return colors;
      }, Object.create(null));
      var getColorsEmpty = () => DEFAULT_THEME_KEYS.reduce((colors, key) => {
        colors[key] = {
          close: "",
          open: ""
        };
        return colors;
      }, Object.create(null));
      var getPrintFunctionName = (options) => options && options.printFunctionName !== void 0 ? options.printFunctionName : DEFAULT_OPTIONS.printFunctionName;
      var getEscapeRegex = (options) => options && options.escapeRegex !== void 0 ? options.escapeRegex : DEFAULT_OPTIONS.escapeRegex;
      var getEscapeString = (options) => options && options.escapeString !== void 0 ? options.escapeString : DEFAULT_OPTIONS.escapeString;
      var getConfig = (options) => ({
        callToJSON: options && options.callToJSON !== void 0 ? options.callToJSON : DEFAULT_OPTIONS.callToJSON,
        colors: options && options.highlight ? getColorsHighlight(options) : getColorsEmpty(),
        escapeRegex: getEscapeRegex(options),
        escapeString: getEscapeString(options),
        indent: options && options.min ? "" : createIndent(options && options.indent !== void 0 ? options.indent : DEFAULT_OPTIONS.indent),
        maxDepth: options && options.maxDepth !== void 0 ? options.maxDepth : DEFAULT_OPTIONS.maxDepth,
        min: options && options.min !== void 0 ? options.min : DEFAULT_OPTIONS.min,
        plugins: options && options.plugins !== void 0 ? options.plugins : DEFAULT_OPTIONS.plugins,
        printFunctionName: getPrintFunctionName(options),
        spacingInner: options && options.min ? " " : "\n",
        spacingOuter: options && options.min ? "" : "\n"
      });
      function createIndent(indent) {
        return new Array(indent + 1).join(" ");
      }
      function prettyFormat(val, options) {
        if (options) {
          validateOptions(options);
          if (options.plugins) {
            const plugin = findPlugin(options.plugins, val);
            if (plugin !== null) {
              return printPlugin(plugin, val, getConfig(options), "", 0, []);
            }
          }
        }
        const basicResult = printBasicValue(val, getPrintFunctionName(options), getEscapeRegex(options), getEscapeString(options));
        if (basicResult !== null) {
          return basicResult;
        }
        return printComplexValue(val, getConfig(options), "", 0, []);
      }
      prettyFormat.plugins = {
        AsymmetricMatcher: _AsymmetricMatcher.default,
        ConvertAnsi: _ConvertAnsi.default,
        DOMCollection: _DOMCollection.default,
        DOMElement: _DOMElement.default,
        Immutable: _Immutable.default,
        ReactElement: _ReactElement.default,
        ReactTestComponent: _ReactTestComponent.default
      };
      module.exports = prettyFormat;
    }
  });

  // node_modules/@testing-library/dom/dist/get-user-code-frame.js
  var require_get_user_code_frame = __commonJS({
    "node_modules/@testing-library/dom/dist/get-user-code-frame.js"(exports, module) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.getUserCodeFrame = getUserCodeFrame;
      var chalk = null;
      var readFileSync = null;
      var codeFrameColumns = null;
      try {
        const nodeRequire = module && module.require;
        readFileSync = nodeRequire.call(module, "fs").readFileSync;
        codeFrameColumns = nodeRequire.call(module, "@babel/code-frame").codeFrameColumns;
        chalk = nodeRequire.call(module, "chalk");
      } catch {
      }
      function getCodeFrame(frame) {
        const locationStart = frame.indexOf("(") + 1;
        const locationEnd = frame.indexOf(")");
        const frameLocation = frame.slice(locationStart, locationEnd);
        const frameLocationElements = frameLocation.split(":");
        const [filename, line, column] = [frameLocationElements[0], parseInt(frameLocationElements[1], 10), parseInt(frameLocationElements[2], 10)];
        let rawFileContents = "";
        try {
          rawFileContents = readFileSync(filename, "utf-8");
        } catch {
          return "";
        }
        const codeFrame = codeFrameColumns(rawFileContents, {
          start: {
            line,
            column
          }
        }, {
          highlightCode: true,
          linesBelow: 0
        });
        return `${chalk.dim(frameLocation)}
${codeFrame}
`;
      }
      function getUserCodeFrame() {
        if (!readFileSync || !codeFrameColumns) {
          return "";
        }
        const err = new Error();
        const firstClientCodeFrame = err.stack.split("\n").slice(1).find((frame) => !frame.includes("node_modules/"));
        return getCodeFrame(firstClientCodeFrame);
      }
    }
  });

  // node_modules/@testing-library/dom/dist/helpers.js
  var require_helpers = __commonJS({
    "node_modules/@testing-library/dom/dist/helpers.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.getWindowFromNode = getWindowFromNode;
      exports.getDocument = getDocument;
      exports.runWithRealTimers = runWithRealTimers;
      exports.checkContainerType = checkContainerType;
      exports.jestFakeTimersAreEnabled = jestFakeTimersAreEnabled;
      exports.TEXT_NODE = exports.setTimeout = exports.setImmediate = exports.clearTimeout = void 0;
      var globalObj = typeof window === "undefined" ? global : window;
      var TEXT_NODE = 3;
      exports.TEXT_NODE = TEXT_NODE;
      function runWithRealTimers(callback) {
        return hasJestTimers() ? runWithJestRealTimers(callback).callbackReturnValue : callback();
      }
      function hasJestTimers() {
        return typeof jest !== "undefined" && jest !== null && typeof jest.useRealTimers === "function";
      }
      function runWithJestRealTimers(callback) {
        const timerAPI = {
          clearInterval,
          clearTimeout,
          setInterval,
          setTimeout
        };
        if (typeof setImmediate === "function") {
          timerAPI.setImmediate = setImmediate;
        }
        if (typeof clearImmediate === "function") {
          timerAPI.clearImmediate = clearImmediate;
        }
        jest.useRealTimers();
        const callbackReturnValue = callback();
        const usedFakeTimers = Object.entries(timerAPI).some(([name, func]) => func !== globalObj[name]);
        if (usedFakeTimers) {
          var _timerAPI$setTimeout;
          jest.useFakeTimers((_timerAPI$setTimeout = timerAPI.setTimeout) != null && _timerAPI$setTimeout.clock ? "modern" : "legacy");
        }
        return {
          callbackReturnValue,
          usedFakeTimers
        };
      }
      function jestFakeTimersAreEnabled() {
        return hasJestTimers() ? runWithJestRealTimers(() => {
        }).usedFakeTimers : false;
      }
      function setImmediatePolyfill(fn) {
        return globalObj.setTimeout(fn, 0);
      }
      function getTimeFunctions() {
        return {
          clearTimeoutFn: globalObj.clearTimeout,
          setImmediateFn: globalObj.setImmediate || setImmediatePolyfill,
          setTimeoutFn: globalObj.setTimeout
        };
      }
      var {
        clearTimeoutFn,
        setImmediateFn,
        setTimeoutFn
      } = runWithRealTimers(getTimeFunctions);
      exports.setTimeout = setTimeoutFn;
      exports.setImmediate = setImmediateFn;
      exports.clearTimeout = clearTimeoutFn;
      function getDocument() {
        if (typeof window === "undefined") {
          throw new Error("Could not find default container");
        }
        return window.document;
      }
      function getWindowFromNode(node) {
        if (node.defaultView) {
          return node.defaultView;
        } else if (node.ownerDocument && node.ownerDocument.defaultView) {
          return node.ownerDocument.defaultView;
        } else if (node.window) {
          return node.window;
        } else if (node.then instanceof Function) {
          throw new Error(`It looks like you passed a Promise object instead of a DOM node. Did you do something like \`fireEvent.click(screen.findBy...\` when you meant to use a \`getBy\` query \`fireEvent.click(screen.getBy...\`, or await the findBy query \`fireEvent.click(await screen.findBy...\`?`);
        } else if (Array.isArray(node)) {
          throw new Error(`It looks like you passed an Array instead of a DOM node. Did you do something like \`fireEvent.click(screen.getAllBy...\` when you meant to use a \`getBy\` query \`fireEvent.click(screen.getBy...\`?`);
        } else if (typeof node.debug === "function" && typeof node.logTestingPlaygroundURL === "function") {
          throw new Error(`It looks like you passed a \`screen\` object. Did you do something like \`fireEvent.click(screen, ...\` when you meant to use a query, e.g. \`fireEvent.click(screen.getBy..., \`?`);
        } else {
          throw new Error(`Unable to find the "window" object for the given node. Please file an issue with the code that's causing you to see this error: https://github.com/testing-library/dom-testing-library/issues/new`);
        }
      }
      function checkContainerType(container) {
        if (!container || !(typeof container.querySelector === "function") || !(typeof container.querySelectorAll === "function")) {
          throw new TypeError(`Expected container to be an Element, a Document or a DocumentFragment but got ${getTypeName(container)}.`);
        }
        function getTypeName(object) {
          if (typeof object === "object") {
            return object === null ? "null" : object.constructor.name;
          }
          return typeof object;
        }
      }
    }
  });

  // node_modules/@testing-library/dom/dist/pretty-dom.js
  var require_pretty_dom = __commonJS({
    "node_modules/@testing-library/dom/dist/pretty-dom.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault();
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.prettyDOM = prettyDOM;
      Object.defineProperty(exports, "prettyFormat", {
        enumerable: true,
        get: function() {
          return _prettyFormat.default;
        }
      });
      exports.logDOM = void 0;
      var _prettyFormat = _interopRequireDefault(require_build());
      var _getUserCodeFrame = require_get_user_code_frame();
      var _helpers = require_helpers();
      function inCypress(dom) {
        const window2 = dom.ownerDocument && dom.ownerDocument.defaultView || void 0;
        return typeof global !== "undefined" && global.Cypress || typeof window2 !== "undefined" && window2.Cypress;
      }
      var inNode = () => typeof process !== "undefined" && process.versions !== void 0 && process.versions.node !== void 0;
      var getMaxLength = (dom) => inCypress(dom) ? 0 : typeof process !== "undefined" && process.env.DEBUG_PRINT_LIMIT || 7e3;
      var {
        DOMElement,
        DOMCollection
      } = _prettyFormat.default.plugins;
      function prettyDOM(dom, maxLength, options) {
        if (!dom) {
          dom = (0, _helpers.getDocument)().body;
        }
        if (typeof maxLength !== "number") {
          maxLength = getMaxLength(dom);
        }
        if (maxLength === 0) {
          return "";
        }
        if (dom.documentElement) {
          dom = dom.documentElement;
        }
        let domTypeName = typeof dom;
        if (domTypeName === "object") {
          domTypeName = dom.constructor.name;
        } else {
          dom = {};
        }
        if (!("outerHTML" in dom)) {
          throw new TypeError(`Expected an element or document but got ${domTypeName}`);
        }
        const debugContent = (0, _prettyFormat.default)(dom, {
          plugins: [DOMElement, DOMCollection],
          printFunctionName: false,
          highlight: inNode(),
          ...options
        });
        return maxLength !== void 0 && dom.outerHTML.length > maxLength ? `${debugContent.slice(0, maxLength)}...` : debugContent;
      }
      var logDOM = (...args) => {
        const userCodeFrame = (0, _getUserCodeFrame.getUserCodeFrame)();
        if (userCodeFrame) {
          console.log(`${prettyDOM(...args)}

${userCodeFrame}`);
        } else {
          console.log(prettyDOM(...args));
        }
      };
      exports.logDOM = logDOM;
    }
  });

  // node_modules/@testing-library/dom/dist/config.js
  var require_config = __commonJS({
    "node_modules/@testing-library/dom/dist/config.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.runWithExpensiveErrorDiagnosticsDisabled = runWithExpensiveErrorDiagnosticsDisabled;
      exports.configure = configure;
      exports.getConfig = getConfig;
      exports.DEFAULT_IGNORE_TAGS = void 0;
      var _prettyDom = require_pretty_dom();
      var config = {
        testIdAttribute: "data-testid",
        asyncUtilTimeout: 1e3,
        asyncWrapper: (cb) => cb(),
        eventWrapper: (cb) => cb(),
        defaultHidden: false,
        showOriginalStackTrace: false,
        throwSuggestions: false,
        getElementError(message, container) {
          const error = new Error([message, (0, _prettyDom.prettyDOM)(container)].filter(Boolean).join("\n\n"));
          error.name = "TestingLibraryElementError";
          return error;
        },
        _disableExpensiveErrorDiagnostics: false,
        computedStyleSupportsPseudoElements: false
      };
      var DEFAULT_IGNORE_TAGS = "script, style";
      exports.DEFAULT_IGNORE_TAGS = DEFAULT_IGNORE_TAGS;
      function runWithExpensiveErrorDiagnosticsDisabled(callback) {
        try {
          config._disableExpensiveErrorDiagnostics = true;
          return callback();
        } finally {
          config._disableExpensiveErrorDiagnostics = false;
        }
      }
      function configure(newConfig) {
        if (typeof newConfig === "function") {
          newConfig = newConfig(config);
        }
        config = {
          ...config,
          ...newConfig
        };
      }
      function getConfig() {
        return config;
      }
    }
  });

  // node_modules/@testing-library/dom/dist/label-helpers.js
  var require_label_helpers = __commonJS({
    "node_modules/@testing-library/dom/dist/label-helpers.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.getLabels = getLabels;
      exports.getRealLabels = getRealLabels;
      exports.getLabelContent = getLabelContent;
      var _helpers = require_helpers();
      var labelledNodeNames = ["button", "meter", "output", "progress", "select", "textarea", "input"];
      function getTextContent(node) {
        if (labelledNodeNames.includes(node.nodeName.toLowerCase())) {
          return "";
        }
        if (node.nodeType === _helpers.TEXT_NODE)
          return node.textContent;
        return Array.from(node.childNodes).map((childNode) => getTextContent(childNode)).join("");
      }
      function getLabelContent(element) {
        let textContent;
        if (element.tagName.toLowerCase() === "label") {
          textContent = getTextContent(element);
        } else {
          textContent = element.value || element.textContent;
        }
        return textContent;
      }
      function getRealLabels(element) {
        if (element.labels !== void 0) {
          var _labels;
          return (_labels = element.labels) != null ? _labels : [];
        }
        if (!isLabelable(element))
          return [];
        const labels = element.ownerDocument.querySelectorAll("label");
        return Array.from(labels).filter((label) => label.control === element);
      }
      function isLabelable(element) {
        return /BUTTON|METER|OUTPUT|PROGRESS|SELECT|TEXTAREA/.test(element.tagName) || element.tagName === "INPUT" && element.getAttribute("type") !== "hidden";
      }
      function getLabels(container, element, {
        selector = "*"
      } = {}) {
        const ariaLabelledBy = element.getAttribute("aria-labelledby");
        const labelsId = ariaLabelledBy ? ariaLabelledBy.split(" ") : [];
        return labelsId.length ? labelsId.map((labelId) => {
          const labellingElement = container.querySelector(`[id="${labelId}"]`);
          return labellingElement ? {
            content: getLabelContent(labellingElement),
            formControl: null
          } : {
            content: "",
            formControl: null
          };
        }) : Array.from(getRealLabels(element)).map((label) => {
          const textToMatch = getLabelContent(label);
          const formControlSelector = "button, input, meter, output, progress, select, textarea";
          const labelledFormControl = Array.from(label.querySelectorAll(formControlSelector)).filter((formControlElement) => formControlElement.matches(selector))[0];
          return {
            content: textToMatch,
            formControl: labelledFormControl
          };
        });
      }
    }
  });

  // node_modules/@testing-library/dom/dist/matches.js
  var require_matches = __commonJS({
    "node_modules/@testing-library/dom/dist/matches.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.fuzzyMatches = fuzzyMatches;
      exports.matches = matches;
      exports.getDefaultNormalizer = getDefaultNormalizer;
      exports.makeNormalizer = makeNormalizer;
      function assertNotNullOrUndefined(matcher) {
        if (matcher === null || matcher === void 0) {
          throw new Error(`It looks like ${matcher} was passed instead of a matcher. Did you do something like getByText(${matcher})?`);
        }
      }
      function fuzzyMatches(textToMatch, node, matcher, normalizer) {
        if (typeof textToMatch !== "string") {
          return false;
        }
        assertNotNullOrUndefined(matcher);
        const normalizedText = normalizer(textToMatch);
        if (typeof matcher === "string" || typeof matcher === "number") {
          return normalizedText.toLowerCase().includes(matcher.toString().toLowerCase());
        } else if (typeof matcher === "function") {
          return matcher(normalizedText, node);
        } else {
          return matcher.test(normalizedText);
        }
      }
      function matches(textToMatch, node, matcher, normalizer) {
        if (typeof textToMatch !== "string") {
          return false;
        }
        assertNotNullOrUndefined(matcher);
        const normalizedText = normalizer(textToMatch);
        if (matcher instanceof Function) {
          return matcher(normalizedText, node);
        } else if (matcher instanceof RegExp) {
          return matcher.test(normalizedText);
        } else {
          return normalizedText === String(matcher);
        }
      }
      function getDefaultNormalizer({
        trim = true,
        collapseWhitespace = true
      } = {}) {
        return (text) => {
          let normalizedText = text;
          normalizedText = trim ? normalizedText.trim() : normalizedText;
          normalizedText = collapseWhitespace ? normalizedText.replace(/\s+/g, " ") : normalizedText;
          return normalizedText;
        };
      }
      function makeNormalizer({
        trim,
        collapseWhitespace,
        normalizer
      }) {
        if (normalizer) {
          if (typeof trim !== "undefined" || typeof collapseWhitespace !== "undefined") {
            throw new Error('trim and collapseWhitespace are not supported with a normalizer. If you want to use the default trim and collapseWhitespace logic in your normalizer, use "getDefaultNormalizer({trim, collapseWhitespace})" and compose that into your normalizer');
          }
          return normalizer;
        } else {
          return getDefaultNormalizer({
            trim,
            collapseWhitespace
          });
        }
      }
    }
  });

  // node_modules/@testing-library/dom/dist/get-node-text.js
  var require_get_node_text = __commonJS({
    "node_modules/@testing-library/dom/dist/get-node-text.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.getNodeText = getNodeText;
      var _helpers = require_helpers();
      function getNodeText(node) {
        if (node.matches("input[type=submit], input[type=button]")) {
          return node.value;
        }
        return Array.from(node.childNodes).filter((child) => child.nodeType === _helpers.TEXT_NODE && Boolean(child.textContent)).map((c2) => c2.textContent).join("");
      }
    }
  });

  // node_modules/dom-accessibility-api/dist/polyfills/array.from.js
  var require_array_from = __commonJS({
    "node_modules/dom-accessibility-api/dist/polyfills/array.from.js"(exports) {
      "use strict";
      exports.__esModule = true;
      exports.default = arrayFrom;
      var toStr = Object.prototype.toString;
      function isCallable(fn) {
        return typeof fn === "function" || toStr.call(fn) === "[object Function]";
      }
      function toInteger2(value) {
        var number = Number(value);
        if (isNaN(number)) {
          return 0;
        }
        if (number === 0 || !isFinite(number)) {
          return number;
        }
        return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));
      }
      var maxSafeInteger = Math.pow(2, 53) - 1;
      function toLength(value) {
        var len = toInteger2(value);
        return Math.min(Math.max(len, 0), maxSafeInteger);
      }
      function arrayFrom(arrayLike, mapFn) {
        var C = Array;
        var items = Object(arrayLike);
        if (arrayLike == null) {
          throw new TypeError("Array.from requires an array-like object - not null or undefined");
        }
        if (typeof mapFn !== "undefined") {
          if (!isCallable(mapFn)) {
            throw new TypeError("Array.from: when provided, the second argument must be a function");
          }
        }
        var len = toLength(items.length);
        var A = isCallable(C) ? Object(new C(len)) : new Array(len);
        var k2 = 0;
        var kValue;
        while (k2 < len) {
          kValue = items[k2];
          if (mapFn) {
            A[k2] = mapFn(kValue, k2);
          } else {
            A[k2] = kValue;
          }
          k2 += 1;
        }
        A.length = len;
        return A;
      }
    }
  });

  // node_modules/dom-accessibility-api/dist/polyfills/SetLike.js
  var require_SetLike = __commonJS({
    "node_modules/dom-accessibility-api/dist/polyfills/SetLike.js"(exports) {
      "use strict";
      exports.__esModule = true;
      exports.default = void 0;
      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      function _defineProperties(target, props) {
        for (var i2 = 0; i2 < props.length; i2++) {
          var descriptor = props[i2];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      function _createClass(Constructor, protoProps, staticProps) {
        if (protoProps)
          _defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          _defineProperties(Constructor, staticProps);
        Object.defineProperty(Constructor, "prototype", {writable: false});
        return Constructor;
      }
      function _defineProperty(obj, key, value) {
        if (key in obj) {
          Object.defineProperty(obj, key, {value, enumerable: true, configurable: true, writable: true});
        } else {
          obj[key] = value;
        }
        return obj;
      }
      var SetLike = /* @__PURE__ */ function() {
        function SetLike2() {
          var items = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
          _classCallCheck(this, SetLike2);
          _defineProperty(this, "items", void 0);
          this.items = items;
        }
        _createClass(SetLike2, [{
          key: "add",
          value: function add(value) {
            if (this.has(value) === false) {
              this.items.push(value);
            }
            return this;
          }
        }, {
          key: "clear",
          value: function clear() {
            this.items = [];
          }
        }, {
          key: "delete",
          value: function _delete(value) {
            var previousLength = this.items.length;
            this.items = this.items.filter(function(item) {
              return item !== value;
            });
            return previousLength !== this.items.length;
          }
        }, {
          key: "forEach",
          value: function forEach(callbackfn) {
            var _this = this;
            this.items.forEach(function(item) {
              callbackfn(item, item, _this);
            });
          }
        }, {
          key: "has",
          value: function has(value) {
            return this.items.indexOf(value) !== -1;
          }
        }, {
          key: "size",
          get: function get() {
            return this.items.length;
          }
        }]);
        return SetLike2;
      }();
      var _default = typeof Set === "undefined" ? Set : SetLike;
      exports.default = _default;
    }
  });

  // node_modules/dom-accessibility-api/dist/getRole.js
  var require_getRole = __commonJS({
    "node_modules/dom-accessibility-api/dist/getRole.js"(exports) {
      "use strict";
      exports.__esModule = true;
      exports.default = getRole;
      exports.getLocalName = getLocalName;
      function getLocalName(element) {
        var _element$localName;
        return (_element$localName = element.localName) !== null && _element$localName !== void 0 ? _element$localName : element.tagName.toLowerCase();
      }
      var localNameToRoleMappings = {
        article: "article",
        aside: "complementary",
        button: "button",
        datalist: "listbox",
        dd: "definition",
        details: "group",
        dialog: "dialog",
        dt: "term",
        fieldset: "group",
        figure: "figure",
        form: "form",
        footer: "contentinfo",
        h1: "heading",
        h2: "heading",
        h3: "heading",
        h4: "heading",
        h5: "heading",
        h6: "heading",
        header: "banner",
        hr: "separator",
        html: "document",
        legend: "legend",
        li: "listitem",
        math: "math",
        main: "main",
        menu: "list",
        nav: "navigation",
        ol: "list",
        optgroup: "group",
        option: "option",
        output: "status",
        progress: "progressbar",
        section: "region",
        summary: "button",
        table: "table",
        tbody: "rowgroup",
        textarea: "textbox",
        tfoot: "rowgroup",
        td: "cell",
        th: "columnheader",
        thead: "rowgroup",
        tr: "row",
        ul: "list"
      };
      var prohibitedAttributes = {
        caption: new Set(["aria-label", "aria-labelledby"]),
        code: new Set(["aria-label", "aria-labelledby"]),
        deletion: new Set(["aria-label", "aria-labelledby"]),
        emphasis: new Set(["aria-label", "aria-labelledby"]),
        generic: new Set(["aria-label", "aria-labelledby", "aria-roledescription"]),
        insertion: new Set(["aria-label", "aria-labelledby"]),
        paragraph: new Set(["aria-label", "aria-labelledby"]),
        presentation: new Set(["aria-label", "aria-labelledby"]),
        strong: new Set(["aria-label", "aria-labelledby"]),
        subscript: new Set(["aria-label", "aria-labelledby"]),
        superscript: new Set(["aria-label", "aria-labelledby"])
      };
      function hasGlobalAriaAttributes(element, role) {
        return [
          "aria-atomic",
          "aria-busy",
          "aria-controls",
          "aria-current",
          "aria-describedby",
          "aria-details",
          "aria-dropeffect",
          "aria-flowto",
          "aria-grabbed",
          "aria-hidden",
          "aria-keyshortcuts",
          "aria-label",
          "aria-labelledby",
          "aria-live",
          "aria-owns",
          "aria-relevant",
          "aria-roledescription"
        ].some(function(attributeName) {
          var _prohibitedAttributes;
          return element.hasAttribute(attributeName) && !((_prohibitedAttributes = prohibitedAttributes[role]) !== null && _prohibitedAttributes !== void 0 && _prohibitedAttributes.has(attributeName));
        });
      }
      function ignorePresentationalRole(element, implicitRole) {
        return hasGlobalAriaAttributes(element, implicitRole);
      }
      function getRole(element) {
        var explicitRole = getExplicitRole(element);
        if (explicitRole === null || explicitRole === "presentation") {
          var implicitRole = getImplicitRole(element);
          if (explicitRole !== "presentation" || ignorePresentationalRole(element, implicitRole || "")) {
            return implicitRole;
          }
        }
        return explicitRole;
      }
      function getImplicitRole(element) {
        var mappedByTag = localNameToRoleMappings[getLocalName(element)];
        if (mappedByTag !== void 0) {
          return mappedByTag;
        }
        switch (getLocalName(element)) {
          case "a":
          case "area":
          case "link":
            if (element.hasAttribute("href")) {
              return "link";
            }
            break;
          case "img":
            if (element.getAttribute("alt") === "" && !ignorePresentationalRole(element, "img")) {
              return "presentation";
            }
            return "img";
          case "input": {
            var _ref = element, type = _ref.type;
            switch (type) {
              case "button":
              case "image":
              case "reset":
              case "submit":
                return "button";
              case "checkbox":
              case "radio":
                return type;
              case "range":
                return "slider";
              case "email":
              case "tel":
              case "text":
              case "url":
                if (element.hasAttribute("list")) {
                  return "combobox";
                }
                return "textbox";
              case "search":
                if (element.hasAttribute("list")) {
                  return "combobox";
                }
                return "searchbox";
              case "number":
                return "spinbutton";
              default:
                return null;
            }
          }
          case "select":
            if (element.hasAttribute("multiple") || element.size > 1) {
              return "listbox";
            }
            return "combobox";
        }
        return null;
      }
      function getExplicitRole(element) {
        var role = element.getAttribute("role");
        if (role !== null) {
          var explicitRole = role.trim().split(" ")[0];
          if (explicitRole.length > 0) {
            return explicitRole;
          }
        }
        return null;
      }
    }
  });

  // node_modules/dom-accessibility-api/dist/util.js
  var require_util = __commonJS({
    "node_modules/dom-accessibility-api/dist/util.js"(exports) {
      "use strict";
      function _typeof3(obj) {
        "@babel/helpers - typeof";
        return _typeof3 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
          return typeof obj2;
        } : function(obj2) {
          return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        }, _typeof3(obj);
      }
      exports.__esModule = true;
      exports.hasAnyConcreteRoles = hasAnyConcreteRoles;
      exports.isElement = isElement;
      exports.isHTMLFieldSetElement = isHTMLFieldSetElement;
      exports.isHTMLInputElement = isHTMLInputElement;
      exports.isHTMLLegendElement = isHTMLLegendElement;
      exports.isHTMLOptGroupElement = isHTMLOptGroupElement;
      exports.isHTMLSelectElement = isHTMLSelectElement;
      exports.isHTMLSlotElement = isHTMLSlotElement;
      exports.isHTMLTableCaptionElement = isHTMLTableCaptionElement;
      exports.isHTMLTableElement = isHTMLTableElement;
      exports.isHTMLTextAreaElement = isHTMLTextAreaElement;
      exports.isSVGElement = isSVGElement;
      exports.isSVGSVGElement = isSVGSVGElement;
      exports.isSVGTitleElement = isSVGTitleElement;
      exports.queryIdRefs = queryIdRefs;
      exports.safeWindow = safeWindow;
      var _getRole = _interopRequireWildcard(require_getRole());
      exports.getLocalName = _getRole.getLocalName;
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = new WeakMap();
        var cacheNodeInterop = new WeakMap();
        return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || _typeof3(obj) !== "object" && typeof obj !== "function") {
          return {default: obj};
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      function isElement(node) {
        return node !== null && node.nodeType === node.ELEMENT_NODE;
      }
      function isHTMLTableCaptionElement(node) {
        return isElement(node) && (0, _getRole.getLocalName)(node) === "caption";
      }
      function isHTMLInputElement(node) {
        return isElement(node) && (0, _getRole.getLocalName)(node) === "input";
      }
      function isHTMLOptGroupElement(node) {
        return isElement(node) && (0, _getRole.getLocalName)(node) === "optgroup";
      }
      function isHTMLSelectElement(node) {
        return isElement(node) && (0, _getRole.getLocalName)(node) === "select";
      }
      function isHTMLTableElement(node) {
        return isElement(node) && (0, _getRole.getLocalName)(node) === "table";
      }
      function isHTMLTextAreaElement(node) {
        return isElement(node) && (0, _getRole.getLocalName)(node) === "textarea";
      }
      function safeWindow(node) {
        var _ref = node.ownerDocument === null ? node : node.ownerDocument, defaultView = _ref.defaultView;
        if (defaultView === null) {
          throw new TypeError("no window available");
        }
        return defaultView;
      }
      function isHTMLFieldSetElement(node) {
        return isElement(node) && (0, _getRole.getLocalName)(node) === "fieldset";
      }
      function isHTMLLegendElement(node) {
        return isElement(node) && (0, _getRole.getLocalName)(node) === "legend";
      }
      function isHTMLSlotElement(node) {
        return isElement(node) && (0, _getRole.getLocalName)(node) === "slot";
      }
      function isSVGElement(node) {
        return isElement(node) && node.ownerSVGElement !== void 0;
      }
      function isSVGSVGElement(node) {
        return isElement(node) && (0, _getRole.getLocalName)(node) === "svg";
      }
      function isSVGTitleElement(node) {
        return isSVGElement(node) && (0, _getRole.getLocalName)(node) === "title";
      }
      function queryIdRefs(node, attributeName) {
        if (isElement(node) && node.hasAttribute(attributeName)) {
          var ids = node.getAttribute(attributeName).split(" ");
          var root = node.getRootNode ? node.getRootNode() : node.ownerDocument;
          return ids.map(function(id) {
            return root.getElementById(id);
          }).filter(function(element) {
            return element !== null;
          });
        }
        return [];
      }
      function hasAnyConcreteRoles(node, roles) {
        if (isElement(node)) {
          return roles.indexOf((0, _getRole.default)(node)) !== -1;
        }
        return false;
      }
    }
  });

  // node_modules/dom-accessibility-api/dist/accessible-name-and-description.js
  var require_accessible_name_and_description = __commonJS({
    "node_modules/dom-accessibility-api/dist/accessible-name-and-description.js"(exports) {
      "use strict";
      exports.__esModule = true;
      exports.computeTextAlternative = computeTextAlternative;
      var _array = _interopRequireDefault(require_array_from());
      var _SetLike = _interopRequireDefault(require_SetLike());
      var _util = require_util();
      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {default: obj};
      }
      function asFlatString(s3) {
        return s3.trim().replace(/\s\s+/g, " ");
      }
      function isHidden(node, getComputedStyleImplementation) {
        if (!(0, _util.isElement)(node)) {
          return false;
        }
        if (node.hasAttribute("hidden") || node.getAttribute("aria-hidden") === "true") {
          return true;
        }
        var style = getComputedStyleImplementation(node);
        return style.getPropertyValue("display") === "none" || style.getPropertyValue("visibility") === "hidden";
      }
      function isControl(node) {
        return (0, _util.hasAnyConcreteRoles)(node, ["button", "combobox", "listbox", "textbox"]) || hasAbstractRole(node, "range");
      }
      function hasAbstractRole(node, role) {
        if (!(0, _util.isElement)(node)) {
          return false;
        }
        switch (role) {
          case "range":
            return (0, _util.hasAnyConcreteRoles)(node, ["meter", "progressbar", "scrollbar", "slider", "spinbutton"]);
          default:
            throw new TypeError("No knowledge about abstract role '".concat(role, "'. This is likely a bug :("));
        }
      }
      function querySelectorAllSubtree(element, selectors) {
        var elements = (0, _array.default)(element.querySelectorAll(selectors));
        (0, _util.queryIdRefs)(element, "aria-owns").forEach(function(root) {
          elements.push.apply(elements, (0, _array.default)(root.querySelectorAll(selectors)));
        });
        return elements;
      }
      function querySelectedOptions(listbox) {
        if ((0, _util.isHTMLSelectElement)(listbox)) {
          return listbox.selectedOptions || querySelectorAllSubtree(listbox, "[selected]");
        }
        return querySelectorAllSubtree(listbox, '[aria-selected="true"]');
      }
      function isMarkedPresentational(node) {
        return (0, _util.hasAnyConcreteRoles)(node, ["none", "presentation"]);
      }
      function isNativeHostLanguageTextAlternativeElement(node) {
        return (0, _util.isHTMLTableCaptionElement)(node);
      }
      function allowsNameFromContent(node) {
        return (0, _util.hasAnyConcreteRoles)(node, ["button", "cell", "checkbox", "columnheader", "gridcell", "heading", "label", "legend", "link", "menuitem", "menuitemcheckbox", "menuitemradio", "option", "radio", "row", "rowheader", "switch", "tab", "tooltip", "treeitem"]);
      }
      function isDescendantOfNativeHostLanguageTextAlternativeElement(node) {
        return false;
      }
      function computeTooltipAttributeValue(node) {
        return null;
      }
      function getValueOfTextbox(element) {
        if ((0, _util.isHTMLInputElement)(element) || (0, _util.isHTMLTextAreaElement)(element)) {
          return element.value;
        }
        return element.textContent || "";
      }
      function getTextualContent(declaration) {
        var content = declaration.getPropertyValue("content");
        if (/^["'].*["']$/.test(content)) {
          return content.slice(1, -1);
        }
        return "";
      }
      function isLabelableElement(element) {
        var localName = (0, _util.getLocalName)(element);
        return localName === "button" || localName === "input" && element.getAttribute("type") !== "hidden" || localName === "meter" || localName === "output" || localName === "progress" || localName === "select" || localName === "textarea";
      }
      function findLabelableElement(element) {
        if (isLabelableElement(element)) {
          return element;
        }
        var labelableElement = null;
        element.childNodes.forEach(function(childNode) {
          if (labelableElement === null && (0, _util.isElement)(childNode)) {
            var descendantLabelableElement = findLabelableElement(childNode);
            if (descendantLabelableElement !== null) {
              labelableElement = descendantLabelableElement;
            }
          }
        });
        return labelableElement;
      }
      function getControlOfLabel(label) {
        if (label.control !== void 0) {
          return label.control;
        }
        var htmlFor = label.getAttribute("for");
        if (htmlFor !== null) {
          return label.ownerDocument.getElementById(htmlFor);
        }
        return findLabelableElement(label);
      }
      function getLabels(element) {
        var labelsProperty = element.labels;
        if (labelsProperty === null) {
          return labelsProperty;
        }
        if (labelsProperty !== void 0) {
          return (0, _array.default)(labelsProperty);
        }
        if (!isLabelableElement(element)) {
          return null;
        }
        var document2 = element.ownerDocument;
        return (0, _array.default)(document2.querySelectorAll("label")).filter(function(label) {
          return getControlOfLabel(label) === element;
        });
      }
      function getSlotContents(slot) {
        var assignedNodes = slot.assignedNodes();
        if (assignedNodes.length === 0) {
          return (0, _array.default)(slot.childNodes);
        }
        return assignedNodes;
      }
      function computeTextAlternative(root) {
        var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        var consultedNodes = new _SetLike.default();
        var window2 = (0, _util.safeWindow)(root);
        var _options$compute = options.compute, compute = _options$compute === void 0 ? "name" : _options$compute, _options$computedStyl = options.computedStyleSupportsPseudoElements, computedStyleSupportsPseudoElements = _options$computedStyl === void 0 ? options.getComputedStyle !== void 0 : _options$computedStyl, _options$getComputedS = options.getComputedStyle, getComputedStyle2 = _options$getComputedS === void 0 ? window2.getComputedStyle.bind(window2) : _options$getComputedS, _options$hidden = options.hidden, hidden = _options$hidden === void 0 ? false : _options$hidden;
        function computeMiscTextAlternative(node, context) {
          var accumulatedText = "";
          if ((0, _util.isElement)(node) && computedStyleSupportsPseudoElements) {
            var pseudoBefore = getComputedStyle2(node, "::before");
            var beforeContent = getTextualContent(pseudoBefore);
            accumulatedText = "".concat(beforeContent, " ").concat(accumulatedText);
          }
          var childNodes = (0, _util.isHTMLSlotElement)(node) ? getSlotContents(node) : (0, _array.default)(node.childNodes).concat((0, _util.queryIdRefs)(node, "aria-owns"));
          childNodes.forEach(function(child) {
            var result = computeTextAlternative2(child, {
              isEmbeddedInLabel: context.isEmbeddedInLabel,
              isReferenced: false,
              recursion: true
            });
            var display = (0, _util.isElement)(child) ? getComputedStyle2(child).getPropertyValue("display") : "inline";
            var separator = display !== "inline" ? " " : "";
            accumulatedText += "".concat(separator).concat(result).concat(separator);
          });
          if ((0, _util.isElement)(node) && computedStyleSupportsPseudoElements) {
            var pseudoAfter = getComputedStyle2(node, "::after");
            var afterContent = getTextualContent(pseudoAfter);
            accumulatedText = "".concat(accumulatedText, " ").concat(afterContent);
          }
          return accumulatedText.trim();
        }
        function computeElementTextAlternative(node) {
          if (!(0, _util.isElement)(node)) {
            return null;
          }
          function useAttribute(element, attributeName) {
            var attribute = element.getAttributeNode(attributeName);
            if (attribute !== null && !consultedNodes.has(attribute) && attribute.value.trim() !== "") {
              consultedNodes.add(attribute);
              return attribute.value;
            }
            return null;
          }
          if ((0, _util.isHTMLFieldSetElement)(node)) {
            consultedNodes.add(node);
            var children = (0, _array.default)(node.childNodes);
            for (var i2 = 0; i2 < children.length; i2 += 1) {
              var child = children[i2];
              if ((0, _util.isHTMLLegendElement)(child)) {
                return computeTextAlternative2(child, {
                  isEmbeddedInLabel: false,
                  isReferenced: false,
                  recursion: false
                });
              }
            }
          } else if ((0, _util.isHTMLTableElement)(node)) {
            consultedNodes.add(node);
            var _children = (0, _array.default)(node.childNodes);
            for (var _i = 0; _i < _children.length; _i += 1) {
              var _child = _children[_i];
              if ((0, _util.isHTMLTableCaptionElement)(_child)) {
                return computeTextAlternative2(_child, {
                  isEmbeddedInLabel: false,
                  isReferenced: false,
                  recursion: false
                });
              }
            }
          } else if ((0, _util.isSVGSVGElement)(node)) {
            consultedNodes.add(node);
            var _children2 = (0, _array.default)(node.childNodes);
            for (var _i2 = 0; _i2 < _children2.length; _i2 += 1) {
              var _child2 = _children2[_i2];
              if ((0, _util.isSVGTitleElement)(_child2)) {
                return _child2.textContent;
              }
            }
            return null;
          } else if ((0, _util.getLocalName)(node) === "img" || (0, _util.getLocalName)(node) === "area") {
            var nameFromAlt = useAttribute(node, "alt");
            if (nameFromAlt !== null) {
              return nameFromAlt;
            }
          } else if ((0, _util.isHTMLOptGroupElement)(node)) {
            var nameFromLabel = useAttribute(node, "label");
            if (nameFromLabel !== null) {
              return nameFromLabel;
            }
          }
          if ((0, _util.isHTMLInputElement)(node) && (node.type === "button" || node.type === "submit" || node.type === "reset")) {
            var nameFromValue = useAttribute(node, "value");
            if (nameFromValue !== null) {
              return nameFromValue;
            }
            if (node.type === "submit") {
              return "Submit";
            }
            if (node.type === "reset") {
              return "Reset";
            }
          }
          var labels = getLabels(node);
          if (labels !== null && labels.length !== 0) {
            consultedNodes.add(node);
            return (0, _array.default)(labels).map(function(element) {
              return computeTextAlternative2(element, {
                isEmbeddedInLabel: true,
                isReferenced: false,
                recursion: true
              });
            }).filter(function(label) {
              return label.length > 0;
            }).join(" ");
          }
          if ((0, _util.isHTMLInputElement)(node) && node.type === "image") {
            var _nameFromAlt = useAttribute(node, "alt");
            if (_nameFromAlt !== null) {
              return _nameFromAlt;
            }
            var nameFromTitle = useAttribute(node, "title");
            if (nameFromTitle !== null) {
              return nameFromTitle;
            }
            return "Submit Query";
          }
          if ((0, _util.hasAnyConcreteRoles)(node, ["button"])) {
            var nameFromSubTree = computeMiscTextAlternative(node, {
              isEmbeddedInLabel: false,
              isReferenced: false
            });
            if (nameFromSubTree !== "") {
              return nameFromSubTree;
            }
            return useAttribute(node, "title");
          }
          return useAttribute(node, "title");
        }
        function computeTextAlternative2(current, context) {
          if (consultedNodes.has(current)) {
            return "";
          }
          if (!hidden && isHidden(current, getComputedStyle2) && !context.isReferenced) {
            consultedNodes.add(current);
            return "";
          }
          var labelElements = (0, _util.queryIdRefs)(current, "aria-labelledby");
          if (compute === "name" && !context.isReferenced && labelElements.length > 0) {
            return labelElements.map(function(element) {
              return computeTextAlternative2(element, {
                isEmbeddedInLabel: context.isEmbeddedInLabel,
                isReferenced: true,
                recursion: false
              });
            }).join(" ");
          }
          var skipToStep2E = context.recursion && isControl(current) && compute === "name";
          if (!skipToStep2E) {
            var ariaLabel = ((0, _util.isElement)(current) && current.getAttribute("aria-label") || "").trim();
            if (ariaLabel !== "" && compute === "name") {
              consultedNodes.add(current);
              return ariaLabel;
            }
            if (!isMarkedPresentational(current)) {
              var elementTextAlternative = computeElementTextAlternative(current);
              if (elementTextAlternative !== null) {
                consultedNodes.add(current);
                return elementTextAlternative;
              }
            }
          }
          if ((0, _util.hasAnyConcreteRoles)(current, ["menu"])) {
            consultedNodes.add(current);
            return "";
          }
          if (skipToStep2E || context.isEmbeddedInLabel || context.isReferenced) {
            if ((0, _util.hasAnyConcreteRoles)(current, ["combobox", "listbox"])) {
              consultedNodes.add(current);
              var selectedOptions = querySelectedOptions(current);
              if (selectedOptions.length === 0) {
                return (0, _util.isHTMLInputElement)(current) ? current.value : "";
              }
              return (0, _array.default)(selectedOptions).map(function(selectedOption) {
                return computeTextAlternative2(selectedOption, {
                  isEmbeddedInLabel: context.isEmbeddedInLabel,
                  isReferenced: false,
                  recursion: true
                });
              }).join(" ");
            }
            if (hasAbstractRole(current, "range")) {
              consultedNodes.add(current);
              if (current.hasAttribute("aria-valuetext")) {
                return current.getAttribute("aria-valuetext");
              }
              if (current.hasAttribute("aria-valuenow")) {
                return current.getAttribute("aria-valuenow");
              }
              return current.getAttribute("value") || "";
            }
            if ((0, _util.hasAnyConcreteRoles)(current, ["textbox"])) {
              consultedNodes.add(current);
              return getValueOfTextbox(current);
            }
          }
          if (allowsNameFromContent(current) || (0, _util.isElement)(current) && context.isReferenced || isNativeHostLanguageTextAlternativeElement(current) || isDescendantOfNativeHostLanguageTextAlternativeElement(current)) {
            consultedNodes.add(current);
            return computeMiscTextAlternative(current, {
              isEmbeddedInLabel: context.isEmbeddedInLabel,
              isReferenced: false
            });
          }
          if (current.nodeType === current.TEXT_NODE) {
            consultedNodes.add(current);
            return current.textContent || "";
          }
          if (context.recursion) {
            consultedNodes.add(current);
            return computeMiscTextAlternative(current, {
              isEmbeddedInLabel: context.isEmbeddedInLabel,
              isReferenced: false
            });
          }
          var tooltipAttributeValue = computeTooltipAttributeValue(current);
          if (tooltipAttributeValue !== null) {
            consultedNodes.add(current);
            return tooltipAttributeValue;
          }
          consultedNodes.add(current);
          return "";
        }
        return asFlatString(computeTextAlternative2(root, {
          isEmbeddedInLabel: false,
          isReferenced: compute === "description",
          recursion: false
        }));
      }
    }
  });

  // node_modules/dom-accessibility-api/dist/accessible-description.js
  var require_accessible_description = __commonJS({
    "node_modules/dom-accessibility-api/dist/accessible-description.js"(exports) {
      "use strict";
      exports.__esModule = true;
      exports.computeAccessibleDescription = computeAccessibleDescription;
      var _accessibleNameAndDescription = require_accessible_name_and_description();
      var _util = require_util();
      function ownKeys(object, enumerableOnly) {
        var keys = Object.keys(object);
        if (Object.getOwnPropertySymbols) {
          var symbols = Object.getOwnPropertySymbols(object);
          enumerableOnly && (symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
          })), keys.push.apply(keys, symbols);
        }
        return keys;
      }
      function _objectSpread(target) {
        for (var i2 = 1; i2 < arguments.length; i2++) {
          var source = arguments[i2] != null ? arguments[i2] : {};
          i2 % 2 ? ownKeys(Object(source), true).forEach(function(key) {
            _defineProperty(target, key, source[key]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
        }
        return target;
      }
      function _defineProperty(obj, key, value) {
        if (key in obj) {
          Object.defineProperty(obj, key, {value, enumerable: true, configurable: true, writable: true});
        } else {
          obj[key] = value;
        }
        return obj;
      }
      function computeAccessibleDescription(root) {
        var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        var description = (0, _util.queryIdRefs)(root, "aria-describedby").map(function(element) {
          return (0, _accessibleNameAndDescription.computeTextAlternative)(element, _objectSpread(_objectSpread({}, options), {}, {
            compute: "description"
          }));
        }).join(" ");
        if (description === "") {
          var title = root.getAttribute("title");
          description = title === null ? "" : title;
        }
        return description;
      }
    }
  });

  // node_modules/dom-accessibility-api/dist/accessible-name.js
  var require_accessible_name = __commonJS({
    "node_modules/dom-accessibility-api/dist/accessible-name.js"(exports) {
      "use strict";
      exports.__esModule = true;
      exports.computeAccessibleName = computeAccessibleName;
      var _accessibleNameAndDescription = require_accessible_name_and_description();
      var _util = require_util();
      function prohibitsNaming(node) {
        return (0, _util.hasAnyConcreteRoles)(node, ["caption", "code", "deletion", "emphasis", "generic", "insertion", "paragraph", "presentation", "strong", "subscript", "superscript"]);
      }
      function computeAccessibleName(root) {
        var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        if (prohibitsNaming(root)) {
          return "";
        }
        return (0, _accessibleNameAndDescription.computeTextAlternative)(root, options);
      }
    }
  });

  // node_modules/dom-accessibility-api/dist/is-inaccessible.js
  var require_is_inaccessible = __commonJS({
    "node_modules/dom-accessibility-api/dist/is-inaccessible.js"(exports) {
      "use strict";
      exports.__esModule = true;
      exports.isInaccessible = isInaccessible;
      exports.isSubtreeInaccessible = isSubtreeInaccessible;
      function isInaccessible(element) {
        var _element$ownerDocumen;
        var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        var _options$getComputedS = options.getComputedStyle, getComputedStyle2 = _options$getComputedS === void 0 ? (_element$ownerDocumen = element.ownerDocument.defaultView) === null || _element$ownerDocumen === void 0 ? void 0 : _element$ownerDocumen.getComputedStyle : _options$getComputedS, _options$isSubtreeIna = options.isSubtreeInaccessible, isSubtreeInaccessibleImpl = _options$isSubtreeIna === void 0 ? isSubtreeInaccessible : _options$isSubtreeIna;
        if (typeof getComputedStyle2 !== "function") {
          throw new TypeError("Owner document of the element needs to have an associated window.");
        }
        if (getComputedStyle2(element).visibility === "hidden") {
          return true;
        }
        var currentElement = element;
        while (currentElement) {
          if (isSubtreeInaccessibleImpl(currentElement, {
            getComputedStyle: getComputedStyle2
          })) {
            return true;
          }
          currentElement = currentElement.parentElement;
        }
        return false;
      }
      function isSubtreeInaccessible(element) {
        var _element$ownerDocumen2;
        var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        var _options$getComputedS2 = options.getComputedStyle, getComputedStyle2 = _options$getComputedS2 === void 0 ? (_element$ownerDocumen2 = element.ownerDocument.defaultView) === null || _element$ownerDocumen2 === void 0 ? void 0 : _element$ownerDocumen2.getComputedStyle : _options$getComputedS2;
        if (typeof getComputedStyle2 !== "function") {
          throw new TypeError("Owner document of the element needs to have an associated window.");
        }
        if (element.hidden === true) {
          return true;
        }
        if (element.getAttribute("aria-hidden") === "true") {
          return true;
        }
        if (getComputedStyle2(element).display === "none") {
          return true;
        }
        return false;
      }
    }
  });

  // node_modules/dom-accessibility-api/dist/index.js
  var require_dist = __commonJS({
    "node_modules/dom-accessibility-api/dist/index.js"(exports) {
      "use strict";
      exports.__esModule = true;
      var _exportNames = {
        computeAccessibleDescription: true,
        computeAccessibleName: true,
        getRole: true
      };
      exports.getRole = exports.computeAccessibleName = exports.computeAccessibleDescription = void 0;
      var _accessibleDescription = require_accessible_description();
      exports.computeAccessibleDescription = _accessibleDescription.computeAccessibleDescription;
      var _accessibleName = require_accessible_name();
      exports.computeAccessibleName = _accessibleName.computeAccessibleName;
      var _getRole = _interopRequireDefault(require_getRole());
      exports.getRole = _getRole.default;
      var _isInaccessible = require_is_inaccessible();
      Object.keys(_isInaccessible).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key))
          return;
        if (key in exports && exports[key] === _isInaccessible[key])
          return;
        exports[key] = _isInaccessible[key];
      });
      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {default: obj};
      }
    }
  });

  // node_modules/@babel/runtime-corejs3/helpers/interopRequireDefault.js
  var require_interopRequireDefault2 = __commonJS({
    "node_modules/@babel/runtime-corejs3/helpers/interopRequireDefault.js"(exports, module) {
      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          "default": obj
        };
      }
      module.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports["default"] = module.exports;
    }
  });

  // node_modules/core-js-pure/internals/global.js
  var require_global = __commonJS({
    "node_modules/core-js-pure/internals/global.js"(exports, module) {
      var check = function(it) {
        return it && it.Math == Math && it;
      };
      module.exports = check(typeof globalThis == "object" && globalThis) || check(typeof window == "object" && window) || check(typeof self == "object" && self) || check(typeof global == "object" && global) || function() {
        return this;
      }() || Function("return this")();
    }
  });

  // node_modules/core-js-pure/internals/fails.js
  var require_fails = __commonJS({
    "node_modules/core-js-pure/internals/fails.js"(exports, module) {
      module.exports = function(exec) {
        try {
          return !!exec();
        } catch (error) {
          return true;
        }
      };
    }
  });

  // node_modules/core-js-pure/internals/function-bind-native.js
  var require_function_bind_native = __commonJS({
    "node_modules/core-js-pure/internals/function-bind-native.js"(exports, module) {
      var fails = require_fails();
      module.exports = !fails(function() {
        var test = function() {
        }.bind();
        return typeof test != "function" || test.hasOwnProperty("prototype");
      });
    }
  });

  // node_modules/core-js-pure/internals/function-apply.js
  var require_function_apply = __commonJS({
    "node_modules/core-js-pure/internals/function-apply.js"(exports, module) {
      var NATIVE_BIND = require_function_bind_native();
      var FunctionPrototype = Function.prototype;
      var apply = FunctionPrototype.apply;
      var call = FunctionPrototype.call;
      module.exports = typeof Reflect == "object" && Reflect.apply || (NATIVE_BIND ? call.bind(apply) : function() {
        return call.apply(apply, arguments);
      });
    }
  });

  // node_modules/core-js-pure/internals/function-uncurry-this.js
  var require_function_uncurry_this = __commonJS({
    "node_modules/core-js-pure/internals/function-uncurry-this.js"(exports, module) {
      var NATIVE_BIND = require_function_bind_native();
      var FunctionPrototype = Function.prototype;
      var call = FunctionPrototype.call;
      var uncurryThisWithBind = NATIVE_BIND && FunctionPrototype.bind.bind(call, call);
      module.exports = NATIVE_BIND ? uncurryThisWithBind : function(fn) {
        return function() {
          return call.apply(fn, arguments);
        };
      };
    }
  });

  // node_modules/core-js-pure/internals/classof-raw.js
  var require_classof_raw = __commonJS({
    "node_modules/core-js-pure/internals/classof-raw.js"(exports, module) {
      var uncurryThis = require_function_uncurry_this();
      var toString = uncurryThis({}.toString);
      var stringSlice = uncurryThis("".slice);
      module.exports = function(it) {
        return stringSlice(toString(it), 8, -1);
      };
    }
  });

  // node_modules/core-js-pure/internals/function-uncurry-this-clause.js
  var require_function_uncurry_this_clause = __commonJS({
    "node_modules/core-js-pure/internals/function-uncurry-this-clause.js"(exports, module) {
      var classofRaw = require_classof_raw();
      var uncurryThis = require_function_uncurry_this();
      module.exports = function(fn) {
        if (classofRaw(fn) === "Function")
          return uncurryThis(fn);
      };
    }
  });

  // node_modules/core-js-pure/internals/document-all.js
  var require_document_all = __commonJS({
    "node_modules/core-js-pure/internals/document-all.js"(exports, module) {
      var documentAll = typeof document == "object" && document.all;
      var IS_HTMLDDA = typeof documentAll == "undefined" && documentAll !== void 0;
      module.exports = {
        all: documentAll,
        IS_HTMLDDA
      };
    }
  });

  // node_modules/core-js-pure/internals/is-callable.js
  var require_is_callable = __commonJS({
    "node_modules/core-js-pure/internals/is-callable.js"(exports, module) {
      var $documentAll = require_document_all();
      var documentAll = $documentAll.all;
      module.exports = $documentAll.IS_HTMLDDA ? function(argument) {
        return typeof argument == "function" || argument === documentAll;
      } : function(argument) {
        return typeof argument == "function";
      };
    }
  });

  // node_modules/core-js-pure/internals/descriptors.js
  var require_descriptors = __commonJS({
    "node_modules/core-js-pure/internals/descriptors.js"(exports, module) {
      var fails = require_fails();
      module.exports = !fails(function() {
        return Object.defineProperty({}, 1, {get: function() {
          return 7;
        }})[1] != 7;
      });
    }
  });

  // node_modules/core-js-pure/internals/function-call.js
  var require_function_call = __commonJS({
    "node_modules/core-js-pure/internals/function-call.js"(exports, module) {
      var NATIVE_BIND = require_function_bind_native();
      var call = Function.prototype.call;
      module.exports = NATIVE_BIND ? call.bind(call) : function() {
        return call.apply(call, arguments);
      };
    }
  });

  // node_modules/core-js-pure/internals/object-property-is-enumerable.js
  var require_object_property_is_enumerable = __commonJS({
    "node_modules/core-js-pure/internals/object-property-is-enumerable.js"(exports) {
      "use strict";
      var $propertyIsEnumerable = {}.propertyIsEnumerable;
      var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
      var NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({1: 2}, 1);
      exports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
        var descriptor = getOwnPropertyDescriptor(this, V);
        return !!descriptor && descriptor.enumerable;
      } : $propertyIsEnumerable;
    }
  });

  // node_modules/core-js-pure/internals/create-property-descriptor.js
  var require_create_property_descriptor = __commonJS({
    "node_modules/core-js-pure/internals/create-property-descriptor.js"(exports, module) {
      module.exports = function(bitmap, value) {
        return {
          enumerable: !(bitmap & 1),
          configurable: !(bitmap & 2),
          writable: !(bitmap & 4),
          value
        };
      };
    }
  });

  // node_modules/core-js-pure/internals/indexed-object.js
  var require_indexed_object = __commonJS({
    "node_modules/core-js-pure/internals/indexed-object.js"(exports, module) {
      var uncurryThis = require_function_uncurry_this();
      var fails = require_fails();
      var classof = require_classof_raw();
      var $Object = Object;
      var split = uncurryThis("".split);
      module.exports = fails(function() {
        return !$Object("z").propertyIsEnumerable(0);
      }) ? function(it) {
        return classof(it) == "String" ? split(it, "") : $Object(it);
      } : $Object;
    }
  });

  // node_modules/core-js-pure/internals/is-null-or-undefined.js
  var require_is_null_or_undefined = __commonJS({
    "node_modules/core-js-pure/internals/is-null-or-undefined.js"(exports, module) {
      module.exports = function(it) {
        return it === null || it === void 0;
      };
    }
  });

  // node_modules/core-js-pure/internals/require-object-coercible.js
  var require_require_object_coercible = __commonJS({
    "node_modules/core-js-pure/internals/require-object-coercible.js"(exports, module) {
      var isNullOrUndefined = require_is_null_or_undefined();
      var $TypeError = TypeError;
      module.exports = function(it) {
        if (isNullOrUndefined(it))
          throw $TypeError("Can't call method on " + it);
        return it;
      };
    }
  });

  // node_modules/core-js-pure/internals/to-indexed-object.js
  var require_to_indexed_object = __commonJS({
    "node_modules/core-js-pure/internals/to-indexed-object.js"(exports, module) {
      var IndexedObject = require_indexed_object();
      var requireObjectCoercible = require_require_object_coercible();
      module.exports = function(it) {
        return IndexedObject(requireObjectCoercible(it));
      };
    }
  });

  // node_modules/core-js-pure/internals/is-object.js
  var require_is_object = __commonJS({
    "node_modules/core-js-pure/internals/is-object.js"(exports, module) {
      var isCallable = require_is_callable();
      var $documentAll = require_document_all();
      var documentAll = $documentAll.all;
      module.exports = $documentAll.IS_HTMLDDA ? function(it) {
        return typeof it == "object" ? it !== null : isCallable(it) || it === documentAll;
      } : function(it) {
        return typeof it == "object" ? it !== null : isCallable(it);
      };
    }
  });

  // node_modules/core-js-pure/internals/path.js
  var require_path = __commonJS({
    "node_modules/core-js-pure/internals/path.js"(exports, module) {
      module.exports = {};
    }
  });

  // node_modules/core-js-pure/internals/get-built-in.js
  var require_get_built_in = __commonJS({
    "node_modules/core-js-pure/internals/get-built-in.js"(exports, module) {
      var path = require_path();
      var global2 = require_global();
      var isCallable = require_is_callable();
      var aFunction = function(variable) {
        return isCallable(variable) ? variable : void 0;
      };
      module.exports = function(namespace, method) {
        return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global2[namespace]) : path[namespace] && path[namespace][method] || global2[namespace] && global2[namespace][method];
      };
    }
  });

  // node_modules/core-js-pure/internals/object-is-prototype-of.js
  var require_object_is_prototype_of = __commonJS({
    "node_modules/core-js-pure/internals/object-is-prototype-of.js"(exports, module) {
      var uncurryThis = require_function_uncurry_this();
      module.exports = uncurryThis({}.isPrototypeOf);
    }
  });

  // node_modules/core-js-pure/internals/engine-user-agent.js
  var require_engine_user_agent = __commonJS({
    "node_modules/core-js-pure/internals/engine-user-agent.js"(exports, module) {
      var getBuiltIn = require_get_built_in();
      module.exports = getBuiltIn("navigator", "userAgent") || "";
    }
  });

  // node_modules/core-js-pure/internals/engine-v8-version.js
  var require_engine_v8_version = __commonJS({
    "node_modules/core-js-pure/internals/engine-v8-version.js"(exports, module) {
      var global2 = require_global();
      var userAgent = require_engine_user_agent();
      var process2 = global2.process;
      var Deno = global2.Deno;
      var versions = process2 && process2.versions || Deno && Deno.version;
      var v8 = versions && versions.v8;
      var match2;
      var version;
      if (v8) {
        match2 = v8.split(".");
        version = match2[0] > 0 && match2[0] < 4 ? 1 : +(match2[0] + match2[1]);
      }
      if (!version && userAgent) {
        match2 = userAgent.match(/Edge\/(\d+)/);
        if (!match2 || match2[1] >= 74) {
          match2 = userAgent.match(/Chrome\/(\d+)/);
          if (match2)
            version = +match2[1];
        }
      }
      module.exports = version;
    }
  });

  // node_modules/core-js-pure/internals/symbol-constructor-detection.js
  var require_symbol_constructor_detection = __commonJS({
    "node_modules/core-js-pure/internals/symbol-constructor-detection.js"(exports, module) {
      var V8_VERSION = require_engine_v8_version();
      var fails = require_fails();
      module.exports = !!Object.getOwnPropertySymbols && !fails(function() {
        var symbol = Symbol();
        return !String(symbol) || !(Object(symbol) instanceof Symbol) || !Symbol.sham && V8_VERSION && V8_VERSION < 41;
      });
    }
  });

  // node_modules/core-js-pure/internals/use-symbol-as-uid.js
  var require_use_symbol_as_uid = __commonJS({
    "node_modules/core-js-pure/internals/use-symbol-as-uid.js"(exports, module) {
      var NATIVE_SYMBOL = require_symbol_constructor_detection();
      module.exports = NATIVE_SYMBOL && !Symbol.sham && typeof Symbol.iterator == "symbol";
    }
  });

  // node_modules/core-js-pure/internals/is-symbol.js
  var require_is_symbol = __commonJS({
    "node_modules/core-js-pure/internals/is-symbol.js"(exports, module) {
      var getBuiltIn = require_get_built_in();
      var isCallable = require_is_callable();
      var isPrototypeOf = require_object_is_prototype_of();
      var USE_SYMBOL_AS_UID = require_use_symbol_as_uid();
      var $Object = Object;
      module.exports = USE_SYMBOL_AS_UID ? function(it) {
        return typeof it == "symbol";
      } : function(it) {
        var $Symbol = getBuiltIn("Symbol");
        return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, $Object(it));
      };
    }
  });

  // node_modules/core-js-pure/internals/try-to-string.js
  var require_try_to_string = __commonJS({
    "node_modules/core-js-pure/internals/try-to-string.js"(exports, module) {
      var $String = String;
      module.exports = function(argument) {
        try {
          return $String(argument);
        } catch (error) {
          return "Object";
        }
      };
    }
  });

  // node_modules/core-js-pure/internals/a-callable.js
  var require_a_callable = __commonJS({
    "node_modules/core-js-pure/internals/a-callable.js"(exports, module) {
      var isCallable = require_is_callable();
      var tryToString = require_try_to_string();
      var $TypeError = TypeError;
      module.exports = function(argument) {
        if (isCallable(argument))
          return argument;
        throw $TypeError(tryToString(argument) + " is not a function");
      };
    }
  });

  // node_modules/core-js-pure/internals/get-method.js
  var require_get_method = __commonJS({
    "node_modules/core-js-pure/internals/get-method.js"(exports, module) {
      var aCallable = require_a_callable();
      var isNullOrUndefined = require_is_null_or_undefined();
      module.exports = function(V, P) {
        var func = V[P];
        return isNullOrUndefined(func) ? void 0 : aCallable(func);
      };
    }
  });

  // node_modules/core-js-pure/internals/ordinary-to-primitive.js
  var require_ordinary_to_primitive = __commonJS({
    "node_modules/core-js-pure/internals/ordinary-to-primitive.js"(exports, module) {
      var call = require_function_call();
      var isCallable = require_is_callable();
      var isObject = require_is_object();
      var $TypeError = TypeError;
      module.exports = function(input, pref) {
        var fn, val;
        if (pref === "string" && isCallable(fn = input.toString) && !isObject(val = call(fn, input)))
          return val;
        if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input)))
          return val;
        if (pref !== "string" && isCallable(fn = input.toString) && !isObject(val = call(fn, input)))
          return val;
        throw $TypeError("Can't convert object to primitive value");
      };
    }
  });

  // node_modules/core-js-pure/internals/is-pure.js
  var require_is_pure = __commonJS({
    "node_modules/core-js-pure/internals/is-pure.js"(exports, module) {
      module.exports = true;
    }
  });

  // node_modules/core-js-pure/internals/define-global-property.js
  var require_define_global_property = __commonJS({
    "node_modules/core-js-pure/internals/define-global-property.js"(exports, module) {
      var global2 = require_global();
      var defineProperty = Object.defineProperty;
      module.exports = function(key, value) {
        try {
          defineProperty(global2, key, {value, configurable: true, writable: true});
        } catch (error) {
          global2[key] = value;
        }
        return value;
      };
    }
  });

  // node_modules/core-js-pure/internals/shared-store.js
  var require_shared_store = __commonJS({
    "node_modules/core-js-pure/internals/shared-store.js"(exports, module) {
      var global2 = require_global();
      var defineGlobalProperty = require_define_global_property();
      var SHARED = "__core-js_shared__";
      var store = global2[SHARED] || defineGlobalProperty(SHARED, {});
      module.exports = store;
    }
  });

  // node_modules/core-js-pure/internals/shared.js
  var require_shared = __commonJS({
    "node_modules/core-js-pure/internals/shared.js"(exports, module) {
      var IS_PURE = require_is_pure();
      var store = require_shared_store();
      (module.exports = function(key, value) {
        return store[key] || (store[key] = value !== void 0 ? value : {});
      })("versions", []).push({
        version: "3.26.1",
        mode: IS_PURE ? "pure" : "global",
        copyright: "\xA9 2014-2022 Denis Pushkarev (zloirock.ru)",
        license: "https://github.com/zloirock/core-js/blob/v3.26.1/LICENSE",
        source: "https://github.com/zloirock/core-js"
      });
    }
  });

  // node_modules/core-js-pure/internals/to-object.js
  var require_to_object = __commonJS({
    "node_modules/core-js-pure/internals/to-object.js"(exports, module) {
      var requireObjectCoercible = require_require_object_coercible();
      var $Object = Object;
      module.exports = function(argument) {
        return $Object(requireObjectCoercible(argument));
      };
    }
  });

  // node_modules/core-js-pure/internals/has-own-property.js
  var require_has_own_property = __commonJS({
    "node_modules/core-js-pure/internals/has-own-property.js"(exports, module) {
      var uncurryThis = require_function_uncurry_this();
      var toObject = require_to_object();
      var hasOwnProperty = uncurryThis({}.hasOwnProperty);
      module.exports = Object.hasOwn || function hasOwn(it, key) {
        return hasOwnProperty(toObject(it), key);
      };
    }
  });

  // node_modules/core-js-pure/internals/uid.js
  var require_uid = __commonJS({
    "node_modules/core-js-pure/internals/uid.js"(exports, module) {
      var uncurryThis = require_function_uncurry_this();
      var id = 0;
      var postfix = Math.random();
      var toString = uncurryThis(1 .toString);
      module.exports = function(key) {
        return "Symbol(" + (key === void 0 ? "" : key) + ")_" + toString(++id + postfix, 36);
      };
    }
  });

  // node_modules/core-js-pure/internals/well-known-symbol.js
  var require_well_known_symbol = __commonJS({
    "node_modules/core-js-pure/internals/well-known-symbol.js"(exports, module) {
      var global2 = require_global();
      var shared = require_shared();
      var hasOwn = require_has_own_property();
      var uid = require_uid();
      var NATIVE_SYMBOL = require_symbol_constructor_detection();
      var USE_SYMBOL_AS_UID = require_use_symbol_as_uid();
      var WellKnownSymbolsStore = shared("wks");
      var Symbol2 = global2.Symbol;
      var symbolFor = Symbol2 && Symbol2["for"];
      var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol2 : Symbol2 && Symbol2.withoutSetter || uid;
      module.exports = function(name) {
        if (!hasOwn(WellKnownSymbolsStore, name) || !(NATIVE_SYMBOL || typeof WellKnownSymbolsStore[name] == "string")) {
          var description = "Symbol." + name;
          if (NATIVE_SYMBOL && hasOwn(Symbol2, name)) {
            WellKnownSymbolsStore[name] = Symbol2[name];
          } else if (USE_SYMBOL_AS_UID && symbolFor) {
            WellKnownSymbolsStore[name] = symbolFor(description);
          } else {
            WellKnownSymbolsStore[name] = createWellKnownSymbol(description);
          }
        }
        return WellKnownSymbolsStore[name];
      };
    }
  });

  // node_modules/core-js-pure/internals/to-primitive.js
  var require_to_primitive = __commonJS({
    "node_modules/core-js-pure/internals/to-primitive.js"(exports, module) {
      var call = require_function_call();
      var isObject = require_is_object();
      var isSymbol = require_is_symbol();
      var getMethod = require_get_method();
      var ordinaryToPrimitive = require_ordinary_to_primitive();
      var wellKnownSymbol = require_well_known_symbol();
      var $TypeError = TypeError;
      var TO_PRIMITIVE = wellKnownSymbol("toPrimitive");
      module.exports = function(input, pref) {
        if (!isObject(input) || isSymbol(input))
          return input;
        var exoticToPrim = getMethod(input, TO_PRIMITIVE);
        var result;
        if (exoticToPrim) {
          if (pref === void 0)
            pref = "default";
          result = call(exoticToPrim, input, pref);
          if (!isObject(result) || isSymbol(result))
            return result;
          throw $TypeError("Can't convert object to primitive value");
        }
        if (pref === void 0)
          pref = "number";
        return ordinaryToPrimitive(input, pref);
      };
    }
  });

  // node_modules/core-js-pure/internals/to-property-key.js
  var require_to_property_key = __commonJS({
    "node_modules/core-js-pure/internals/to-property-key.js"(exports, module) {
      var toPrimitive = require_to_primitive();
      var isSymbol = require_is_symbol();
      module.exports = function(argument) {
        var key = toPrimitive(argument, "string");
        return isSymbol(key) ? key : key + "";
      };
    }
  });

  // node_modules/core-js-pure/internals/document-create-element.js
  var require_document_create_element = __commonJS({
    "node_modules/core-js-pure/internals/document-create-element.js"(exports, module) {
      var global2 = require_global();
      var isObject = require_is_object();
      var document2 = global2.document;
      var EXISTS = isObject(document2) && isObject(document2.createElement);
      module.exports = function(it) {
        return EXISTS ? document2.createElement(it) : {};
      };
    }
  });

  // node_modules/core-js-pure/internals/ie8-dom-define.js
  var require_ie8_dom_define = __commonJS({
    "node_modules/core-js-pure/internals/ie8-dom-define.js"(exports, module) {
      var DESCRIPTORS = require_descriptors();
      var fails = require_fails();
      var createElement = require_document_create_element();
      module.exports = !DESCRIPTORS && !fails(function() {
        return Object.defineProperty(createElement("div"), "a", {
          get: function() {
            return 7;
          }
        }).a != 7;
      });
    }
  });

  // node_modules/core-js-pure/internals/object-get-own-property-descriptor.js
  var require_object_get_own_property_descriptor = __commonJS({
    "node_modules/core-js-pure/internals/object-get-own-property-descriptor.js"(exports) {
      var DESCRIPTORS = require_descriptors();
      var call = require_function_call();
      var propertyIsEnumerableModule = require_object_property_is_enumerable();
      var createPropertyDescriptor = require_create_property_descriptor();
      var toIndexedObject = require_to_indexed_object();
      var toPropertyKey = require_to_property_key();
      var hasOwn = require_has_own_property();
      var IE8_DOM_DEFINE = require_ie8_dom_define();
      var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
      exports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O2, P) {
        O2 = toIndexedObject(O2);
        P = toPropertyKey(P);
        if (IE8_DOM_DEFINE)
          try {
            return $getOwnPropertyDescriptor(O2, P);
          } catch (error) {
          }
        if (hasOwn(O2, P))
          return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O2, P), O2[P]);
      };
    }
  });

  // node_modules/core-js-pure/internals/is-forced.js
  var require_is_forced = __commonJS({
    "node_modules/core-js-pure/internals/is-forced.js"(exports, module) {
      var fails = require_fails();
      var isCallable = require_is_callable();
      var replacement = /#|\.prototype\./;
      var isForced = function(feature, detection) {
        var value = data[normalize(feature)];
        return value == POLYFILL ? true : value == NATIVE ? false : isCallable(detection) ? fails(detection) : !!detection;
      };
      var normalize = isForced.normalize = function(string) {
        return String(string).replace(replacement, ".").toLowerCase();
      };
      var data = isForced.data = {};
      var NATIVE = isForced.NATIVE = "N";
      var POLYFILL = isForced.POLYFILL = "P";
      module.exports = isForced;
    }
  });

  // node_modules/core-js-pure/internals/function-bind-context.js
  var require_function_bind_context = __commonJS({
    "node_modules/core-js-pure/internals/function-bind-context.js"(exports, module) {
      var uncurryThis = require_function_uncurry_this_clause();
      var aCallable = require_a_callable();
      var NATIVE_BIND = require_function_bind_native();
      var bind = uncurryThis(uncurryThis.bind);
      module.exports = function(fn, that) {
        aCallable(fn);
        return that === void 0 ? fn : NATIVE_BIND ? bind(fn, that) : function() {
          return fn.apply(that, arguments);
        };
      };
    }
  });

  // node_modules/core-js-pure/internals/v8-prototype-define-bug.js
  var require_v8_prototype_define_bug = __commonJS({
    "node_modules/core-js-pure/internals/v8-prototype-define-bug.js"(exports, module) {
      var DESCRIPTORS = require_descriptors();
      var fails = require_fails();
      module.exports = DESCRIPTORS && fails(function() {
        return Object.defineProperty(function() {
        }, "prototype", {
          value: 42,
          writable: false
        }).prototype != 42;
      });
    }
  });

  // node_modules/core-js-pure/internals/an-object.js
  var require_an_object = __commonJS({
    "node_modules/core-js-pure/internals/an-object.js"(exports, module) {
      var isObject = require_is_object();
      var $String = String;
      var $TypeError = TypeError;
      module.exports = function(argument) {
        if (isObject(argument))
          return argument;
        throw $TypeError($String(argument) + " is not an object");
      };
    }
  });

  // node_modules/core-js-pure/internals/object-define-property.js
  var require_object_define_property = __commonJS({
    "node_modules/core-js-pure/internals/object-define-property.js"(exports) {
      var DESCRIPTORS = require_descriptors();
      var IE8_DOM_DEFINE = require_ie8_dom_define();
      var V8_PROTOTYPE_DEFINE_BUG = require_v8_prototype_define_bug();
      var anObject = require_an_object();
      var toPropertyKey = require_to_property_key();
      var $TypeError = TypeError;
      var $defineProperty = Object.defineProperty;
      var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
      var ENUMERABLE = "enumerable";
      var CONFIGURABLE = "configurable";
      var WRITABLE = "writable";
      exports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O2, P, Attributes) {
        anObject(O2);
        P = toPropertyKey(P);
        anObject(Attributes);
        if (typeof O2 === "function" && P === "prototype" && "value" in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {
          var current = $getOwnPropertyDescriptor(O2, P);
          if (current && current[WRITABLE]) {
            O2[P] = Attributes.value;
            Attributes = {
              configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],
              enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],
              writable: false
            };
          }
        }
        return $defineProperty(O2, P, Attributes);
      } : $defineProperty : function defineProperty(O2, P, Attributes) {
        anObject(O2);
        P = toPropertyKey(P);
        anObject(Attributes);
        if (IE8_DOM_DEFINE)
          try {
            return $defineProperty(O2, P, Attributes);
          } catch (error) {
          }
        if ("get" in Attributes || "set" in Attributes)
          throw $TypeError("Accessors not supported");
        if ("value" in Attributes)
          O2[P] = Attributes.value;
        return O2;
      };
    }
  });

  // node_modules/core-js-pure/internals/create-non-enumerable-property.js
  var require_create_non_enumerable_property = __commonJS({
    "node_modules/core-js-pure/internals/create-non-enumerable-property.js"(exports, module) {
      var DESCRIPTORS = require_descriptors();
      var definePropertyModule = require_object_define_property();
      var createPropertyDescriptor = require_create_property_descriptor();
      module.exports = DESCRIPTORS ? function(object, key, value) {
        return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));
      } : function(object, key, value) {
        object[key] = value;
        return object;
      };
    }
  });

  // node_modules/core-js-pure/internals/export.js
  var require_export = __commonJS({
    "node_modules/core-js-pure/internals/export.js"(exports, module) {
      "use strict";
      var global2 = require_global();
      var apply = require_function_apply();
      var uncurryThis = require_function_uncurry_this_clause();
      var isCallable = require_is_callable();
      var getOwnPropertyDescriptor = require_object_get_own_property_descriptor().f;
      var isForced = require_is_forced();
      var path = require_path();
      var bind = require_function_bind_context();
      var createNonEnumerableProperty = require_create_non_enumerable_property();
      var hasOwn = require_has_own_property();
      var wrapConstructor = function(NativeConstructor) {
        var Wrapper = function(a3, b2, c2) {
          if (this instanceof Wrapper) {
            switch (arguments.length) {
              case 0:
                return new NativeConstructor();
              case 1:
                return new NativeConstructor(a3);
              case 2:
                return new NativeConstructor(a3, b2);
            }
            return new NativeConstructor(a3, b2, c2);
          }
          return apply(NativeConstructor, this, arguments);
        };
        Wrapper.prototype = NativeConstructor.prototype;
        return Wrapper;
      };
      module.exports = function(options, source) {
        var TARGET = options.target;
        var GLOBAL = options.global;
        var STATIC = options.stat;
        var PROTO = options.proto;
        var nativeSource = GLOBAL ? global2 : STATIC ? global2[TARGET] : (global2[TARGET] || {}).prototype;
        var target = GLOBAL ? path : path[TARGET] || createNonEnumerableProperty(path, TARGET, {})[TARGET];
        var targetPrototype = target.prototype;
        var FORCED, USE_NATIVE, VIRTUAL_PROTOTYPE;
        var key, sourceProperty, targetProperty, nativeProperty, resultProperty, descriptor;
        for (key in source) {
          FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? "." : "#") + key, options.forced);
          USE_NATIVE = !FORCED && nativeSource && hasOwn(nativeSource, key);
          targetProperty = target[key];
          if (USE_NATIVE)
            if (options.dontCallGetSet) {
              descriptor = getOwnPropertyDescriptor(nativeSource, key);
              nativeProperty = descriptor && descriptor.value;
            } else
              nativeProperty = nativeSource[key];
          sourceProperty = USE_NATIVE && nativeProperty ? nativeProperty : source[key];
          if (USE_NATIVE && typeof targetProperty == typeof sourceProperty)
            continue;
          if (options.bind && USE_NATIVE)
            resultProperty = bind(sourceProperty, global2);
          else if (options.wrap && USE_NATIVE)
            resultProperty = wrapConstructor(sourceProperty);
          else if (PROTO && isCallable(sourceProperty))
            resultProperty = uncurryThis(sourceProperty);
          else
            resultProperty = sourceProperty;
          if (options.sham || sourceProperty && sourceProperty.sham || targetProperty && targetProperty.sham) {
            createNonEnumerableProperty(resultProperty, "sham", true);
          }
          createNonEnumerableProperty(target, key, resultProperty);
          if (PROTO) {
            VIRTUAL_PROTOTYPE = TARGET + "Prototype";
            if (!hasOwn(path, VIRTUAL_PROTOTYPE)) {
              createNonEnumerableProperty(path, VIRTUAL_PROTOTYPE, {});
            }
            createNonEnumerableProperty(path[VIRTUAL_PROTOTYPE], key, sourceProperty);
            if (options.real && targetPrototype && !targetPrototype[key]) {
              createNonEnumerableProperty(targetPrototype, key, sourceProperty);
            }
          }
        }
      };
    }
  });

  // node_modules/core-js-pure/modules/es.object.define-property.js
  var require_es_object_define_property = __commonJS({
    "node_modules/core-js-pure/modules/es.object.define-property.js"() {
      var $3 = require_export();
      var DESCRIPTORS = require_descriptors();
      var defineProperty = require_object_define_property().f;
      $3({target: "Object", stat: true, forced: Object.defineProperty !== defineProperty, sham: !DESCRIPTORS}, {
        defineProperty
      });
    }
  });

  // node_modules/core-js-pure/es/object/define-property.js
  var require_define_property = __commonJS({
    "node_modules/core-js-pure/es/object/define-property.js"(exports, module) {
      require_es_object_define_property();
      var path = require_path();
      var Object2 = path.Object;
      var defineProperty = module.exports = function defineProperty2(it, key, desc) {
        return Object2.defineProperty(it, key, desc);
      };
      if (Object2.defineProperty.sham)
        defineProperty.sham = true;
    }
  });

  // node_modules/core-js-pure/stable/object/define-property.js
  var require_define_property2 = __commonJS({
    "node_modules/core-js-pure/stable/object/define-property.js"(exports, module) {
      var parent = require_define_property();
      module.exports = parent;
    }
  });

  // node_modules/@babel/runtime-corejs3/core-js-stable/object/define-property.js
  var require_define_property3 = __commonJS({
    "node_modules/@babel/runtime-corejs3/core-js-stable/object/define-property.js"(exports, module) {
      module.exports = require_define_property2();
    }
  });

  // node_modules/core-js-pure/internals/add-to-unscopables.js
  var require_add_to_unscopables = __commonJS({
    "node_modules/core-js-pure/internals/add-to-unscopables.js"(exports, module) {
      module.exports = function() {
      };
    }
  });

  // node_modules/core-js-pure/internals/iterators.js
  var require_iterators = __commonJS({
    "node_modules/core-js-pure/internals/iterators.js"(exports, module) {
      module.exports = {};
    }
  });

  // node_modules/core-js-pure/internals/weak-map-basic-detection.js
  var require_weak_map_basic_detection = __commonJS({
    "node_modules/core-js-pure/internals/weak-map-basic-detection.js"(exports, module) {
      var global2 = require_global();
      var isCallable = require_is_callable();
      var WeakMap2 = global2.WeakMap;
      module.exports = isCallable(WeakMap2) && /native code/.test(String(WeakMap2));
    }
  });

  // node_modules/core-js-pure/internals/shared-key.js
  var require_shared_key = __commonJS({
    "node_modules/core-js-pure/internals/shared-key.js"(exports, module) {
      var shared = require_shared();
      var uid = require_uid();
      var keys = shared("keys");
      module.exports = function(key) {
        return keys[key] || (keys[key] = uid(key));
      };
    }
  });

  // node_modules/core-js-pure/internals/hidden-keys.js
  var require_hidden_keys = __commonJS({
    "node_modules/core-js-pure/internals/hidden-keys.js"(exports, module) {
      module.exports = {};
    }
  });

  // node_modules/core-js-pure/internals/internal-state.js
  var require_internal_state = __commonJS({
    "node_modules/core-js-pure/internals/internal-state.js"(exports, module) {
      var NATIVE_WEAK_MAP = require_weak_map_basic_detection();
      var global2 = require_global();
      var isObject = require_is_object();
      var createNonEnumerableProperty = require_create_non_enumerable_property();
      var hasOwn = require_has_own_property();
      var shared = require_shared_store();
      var sharedKey = require_shared_key();
      var hiddenKeys = require_hidden_keys();
      var OBJECT_ALREADY_INITIALIZED = "Object already initialized";
      var TypeError2 = global2.TypeError;
      var WeakMap2 = global2.WeakMap;
      var set;
      var get;
      var has;
      var enforce = function(it) {
        return has(it) ? get(it) : set(it, {});
      };
      var getterFor = function(TYPE) {
        return function(it) {
          var state;
          if (!isObject(it) || (state = get(it)).type !== TYPE) {
            throw TypeError2("Incompatible receiver, " + TYPE + " required");
          }
          return state;
        };
      };
      if (NATIVE_WEAK_MAP || shared.state) {
        store = shared.state || (shared.state = new WeakMap2());
        store.get = store.get;
        store.has = store.has;
        store.set = store.set;
        set = function(it, metadata) {
          if (store.has(it))
            throw TypeError2(OBJECT_ALREADY_INITIALIZED);
          metadata.facade = it;
          store.set(it, metadata);
          return metadata;
        };
        get = function(it) {
          return store.get(it) || {};
        };
        has = function(it) {
          return store.has(it);
        };
      } else {
        STATE = sharedKey("state");
        hiddenKeys[STATE] = true;
        set = function(it, metadata) {
          if (hasOwn(it, STATE))
            throw TypeError2(OBJECT_ALREADY_INITIALIZED);
          metadata.facade = it;
          createNonEnumerableProperty(it, STATE, metadata);
          return metadata;
        };
        get = function(it) {
          return hasOwn(it, STATE) ? it[STATE] : {};
        };
        has = function(it) {
          return hasOwn(it, STATE);
        };
      }
      var store;
      var STATE;
      module.exports = {
        set,
        get,
        has,
        enforce,
        getterFor
      };
    }
  });

  // node_modules/core-js-pure/internals/function-name.js
  var require_function_name = __commonJS({
    "node_modules/core-js-pure/internals/function-name.js"(exports, module) {
      var DESCRIPTORS = require_descriptors();
      var hasOwn = require_has_own_property();
      var FunctionPrototype = Function.prototype;
      var getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;
      var EXISTS = hasOwn(FunctionPrototype, "name");
      var PROPER = EXISTS && function something() {
      }.name === "something";
      var CONFIGURABLE = EXISTS && (!DESCRIPTORS || DESCRIPTORS && getDescriptor(FunctionPrototype, "name").configurable);
      module.exports = {
        EXISTS,
        PROPER,
        CONFIGURABLE
      };
    }
  });

  // node_modules/core-js-pure/internals/math-trunc.js
  var require_math_trunc = __commonJS({
    "node_modules/core-js-pure/internals/math-trunc.js"(exports, module) {
      var ceil = Math.ceil;
      var floor = Math.floor;
      module.exports = Math.trunc || function trunc(x2) {
        var n = +x2;
        return (n > 0 ? floor : ceil)(n);
      };
    }
  });

  // node_modules/core-js-pure/internals/to-integer-or-infinity.js
  var require_to_integer_or_infinity = __commonJS({
    "node_modules/core-js-pure/internals/to-integer-or-infinity.js"(exports, module) {
      var trunc = require_math_trunc();
      module.exports = function(argument) {
        var number = +argument;
        return number !== number || number === 0 ? 0 : trunc(number);
      };
    }
  });

  // node_modules/core-js-pure/internals/to-absolute-index.js
  var require_to_absolute_index = __commonJS({
    "node_modules/core-js-pure/internals/to-absolute-index.js"(exports, module) {
      var toIntegerOrInfinity = require_to_integer_or_infinity();
      var max = Math.max;
      var min = Math.min;
      module.exports = function(index, length) {
        var integer = toIntegerOrInfinity(index);
        return integer < 0 ? max(integer + length, 0) : min(integer, length);
      };
    }
  });

  // node_modules/core-js-pure/internals/to-length.js
  var require_to_length = __commonJS({
    "node_modules/core-js-pure/internals/to-length.js"(exports, module) {
      var toIntegerOrInfinity = require_to_integer_or_infinity();
      var min = Math.min;
      module.exports = function(argument) {
        return argument > 0 ? min(toIntegerOrInfinity(argument), 9007199254740991) : 0;
      };
    }
  });

  // node_modules/core-js-pure/internals/length-of-array-like.js
  var require_length_of_array_like = __commonJS({
    "node_modules/core-js-pure/internals/length-of-array-like.js"(exports, module) {
      var toLength = require_to_length();
      module.exports = function(obj) {
        return toLength(obj.length);
      };
    }
  });

  // node_modules/core-js-pure/internals/array-includes.js
  var require_array_includes = __commonJS({
    "node_modules/core-js-pure/internals/array-includes.js"(exports, module) {
      var toIndexedObject = require_to_indexed_object();
      var toAbsoluteIndex = require_to_absolute_index();
      var lengthOfArrayLike = require_length_of_array_like();
      var createMethod = function(IS_INCLUDES) {
        return function($this, el, fromIndex) {
          var O2 = toIndexedObject($this);
          var length = lengthOfArrayLike(O2);
          var index = toAbsoluteIndex(fromIndex, length);
          var value;
          if (IS_INCLUDES && el != el)
            while (length > index) {
              value = O2[index++];
              if (value != value)
                return true;
            }
          else
            for (; length > index; index++) {
              if ((IS_INCLUDES || index in O2) && O2[index] === el)
                return IS_INCLUDES || index || 0;
            }
          return !IS_INCLUDES && -1;
        };
      };
      module.exports = {
        includes: createMethod(true),
        indexOf: createMethod(false)
      };
    }
  });

  // node_modules/core-js-pure/internals/object-keys-internal.js
  var require_object_keys_internal = __commonJS({
    "node_modules/core-js-pure/internals/object-keys-internal.js"(exports, module) {
      var uncurryThis = require_function_uncurry_this();
      var hasOwn = require_has_own_property();
      var toIndexedObject = require_to_indexed_object();
      var indexOf = require_array_includes().indexOf;
      var hiddenKeys = require_hidden_keys();
      var push = uncurryThis([].push);
      module.exports = function(object, names) {
        var O2 = toIndexedObject(object);
        var i2 = 0;
        var result = [];
        var key;
        for (key in O2)
          !hasOwn(hiddenKeys, key) && hasOwn(O2, key) && push(result, key);
        while (names.length > i2)
          if (hasOwn(O2, key = names[i2++])) {
            ~indexOf(result, key) || push(result, key);
          }
        return result;
      };
    }
  });

  // node_modules/core-js-pure/internals/enum-bug-keys.js
  var require_enum_bug_keys = __commonJS({
    "node_modules/core-js-pure/internals/enum-bug-keys.js"(exports, module) {
      module.exports = [
        "constructor",
        "hasOwnProperty",
        "isPrototypeOf",
        "propertyIsEnumerable",
        "toLocaleString",
        "toString",
        "valueOf"
      ];
    }
  });

  // node_modules/core-js-pure/internals/object-keys.js
  var require_object_keys = __commonJS({
    "node_modules/core-js-pure/internals/object-keys.js"(exports, module) {
      var internalObjectKeys = require_object_keys_internal();
      var enumBugKeys = require_enum_bug_keys();
      module.exports = Object.keys || function keys(O2) {
        return internalObjectKeys(O2, enumBugKeys);
      };
    }
  });

  // node_modules/core-js-pure/internals/object-define-properties.js
  var require_object_define_properties = __commonJS({
    "node_modules/core-js-pure/internals/object-define-properties.js"(exports) {
      var DESCRIPTORS = require_descriptors();
      var V8_PROTOTYPE_DEFINE_BUG = require_v8_prototype_define_bug();
      var definePropertyModule = require_object_define_property();
      var anObject = require_an_object();
      var toIndexedObject = require_to_indexed_object();
      var objectKeys = require_object_keys();
      exports.f = DESCRIPTORS && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O2, Properties) {
        anObject(O2);
        var props = toIndexedObject(Properties);
        var keys = objectKeys(Properties);
        var length = keys.length;
        var index = 0;
        var key;
        while (length > index)
          definePropertyModule.f(O2, key = keys[index++], props[key]);
        return O2;
      };
    }
  });

  // node_modules/core-js-pure/internals/html.js
  var require_html = __commonJS({
    "node_modules/core-js-pure/internals/html.js"(exports, module) {
      var getBuiltIn = require_get_built_in();
      module.exports = getBuiltIn("document", "documentElement");
    }
  });

  // node_modules/core-js-pure/internals/object-create.js
  var require_object_create = __commonJS({
    "node_modules/core-js-pure/internals/object-create.js"(exports, module) {
      var anObject = require_an_object();
      var definePropertiesModule = require_object_define_properties();
      var enumBugKeys = require_enum_bug_keys();
      var hiddenKeys = require_hidden_keys();
      var html = require_html();
      var documentCreateElement = require_document_create_element();
      var sharedKey = require_shared_key();
      var GT = ">";
      var LT = "<";
      var PROTOTYPE = "prototype";
      var SCRIPT = "script";
      var IE_PROTO = sharedKey("IE_PROTO");
      var EmptyConstructor = function() {
      };
      var scriptTag = function(content) {
        return LT + SCRIPT + GT + content + LT + "/" + SCRIPT + GT;
      };
      var NullProtoObjectViaActiveX = function(activeXDocument2) {
        activeXDocument2.write(scriptTag(""));
        activeXDocument2.close();
        var temp = activeXDocument2.parentWindow.Object;
        activeXDocument2 = null;
        return temp;
      };
      var NullProtoObjectViaIFrame = function() {
        var iframe = documentCreateElement("iframe");
        var JS = "java" + SCRIPT + ":";
        var iframeDocument;
        iframe.style.display = "none";
        html.appendChild(iframe);
        iframe.src = String(JS);
        iframeDocument = iframe.contentWindow.document;
        iframeDocument.open();
        iframeDocument.write(scriptTag("document.F=Object"));
        iframeDocument.close();
        return iframeDocument.F;
      };
      var activeXDocument;
      var NullProtoObject = function() {
        try {
          activeXDocument = new ActiveXObject("htmlfile");
        } catch (error) {
        }
        NullProtoObject = typeof document != "undefined" ? document.domain && activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame() : NullProtoObjectViaActiveX(activeXDocument);
        var length = enumBugKeys.length;
        while (length--)
          delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];
        return NullProtoObject();
      };
      hiddenKeys[IE_PROTO] = true;
      module.exports = Object.create || function create(O2, Properties) {
        var result;
        if (O2 !== null) {
          EmptyConstructor[PROTOTYPE] = anObject(O2);
          result = new EmptyConstructor();
          EmptyConstructor[PROTOTYPE] = null;
          result[IE_PROTO] = O2;
        } else
          result = NullProtoObject();
        return Properties === void 0 ? result : definePropertiesModule.f(result, Properties);
      };
    }
  });

  // node_modules/core-js-pure/internals/correct-prototype-getter.js
  var require_correct_prototype_getter = __commonJS({
    "node_modules/core-js-pure/internals/correct-prototype-getter.js"(exports, module) {
      var fails = require_fails();
      module.exports = !fails(function() {
        function F() {
        }
        F.prototype.constructor = null;
        return Object.getPrototypeOf(new F()) !== F.prototype;
      });
    }
  });

  // node_modules/core-js-pure/internals/object-get-prototype-of.js
  var require_object_get_prototype_of = __commonJS({
    "node_modules/core-js-pure/internals/object-get-prototype-of.js"(exports, module) {
      var hasOwn = require_has_own_property();
      var isCallable = require_is_callable();
      var toObject = require_to_object();
      var sharedKey = require_shared_key();
      var CORRECT_PROTOTYPE_GETTER = require_correct_prototype_getter();
      var IE_PROTO = sharedKey("IE_PROTO");
      var $Object = Object;
      var ObjectPrototype = $Object.prototype;
      module.exports = CORRECT_PROTOTYPE_GETTER ? $Object.getPrototypeOf : function(O2) {
        var object = toObject(O2);
        if (hasOwn(object, IE_PROTO))
          return object[IE_PROTO];
        var constructor = object.constructor;
        if (isCallable(constructor) && object instanceof constructor) {
          return constructor.prototype;
        }
        return object instanceof $Object ? ObjectPrototype : null;
      };
    }
  });

  // node_modules/core-js-pure/internals/define-built-in.js
  var require_define_built_in = __commonJS({
    "node_modules/core-js-pure/internals/define-built-in.js"(exports, module) {
      var createNonEnumerableProperty = require_create_non_enumerable_property();
      module.exports = function(target, key, value, options) {
        if (options && options.enumerable)
          target[key] = value;
        else
          createNonEnumerableProperty(target, key, value);
        return target;
      };
    }
  });

  // node_modules/core-js-pure/internals/iterators-core.js
  var require_iterators_core = __commonJS({
    "node_modules/core-js-pure/internals/iterators-core.js"(exports, module) {
      "use strict";
      var fails = require_fails();
      var isCallable = require_is_callable();
      var isObject = require_is_object();
      var create = require_object_create();
      var getPrototypeOf = require_object_get_prototype_of();
      var defineBuiltIn = require_define_built_in();
      var wellKnownSymbol = require_well_known_symbol();
      var IS_PURE = require_is_pure();
      var ITERATOR = wellKnownSymbol("iterator");
      var BUGGY_SAFARI_ITERATORS = false;
      var IteratorPrototype;
      var PrototypeOfArrayIteratorPrototype;
      var arrayIterator;
      if ([].keys) {
        arrayIterator = [].keys();
        if (!("next" in arrayIterator))
          BUGGY_SAFARI_ITERATORS = true;
        else {
          PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));
          if (PrototypeOfArrayIteratorPrototype !== Object.prototype)
            IteratorPrototype = PrototypeOfArrayIteratorPrototype;
        }
      }
      var NEW_ITERATOR_PROTOTYPE = !isObject(IteratorPrototype) || fails(function() {
        var test = {};
        return IteratorPrototype[ITERATOR].call(test) !== test;
      });
      if (NEW_ITERATOR_PROTOTYPE)
        IteratorPrototype = {};
      else if (IS_PURE)
        IteratorPrototype = create(IteratorPrototype);
      if (!isCallable(IteratorPrototype[ITERATOR])) {
        defineBuiltIn(IteratorPrototype, ITERATOR, function() {
          return this;
        });
      }
      module.exports = {
        IteratorPrototype,
        BUGGY_SAFARI_ITERATORS
      };
    }
  });

  // node_modules/core-js-pure/internals/to-string-tag-support.js
  var require_to_string_tag_support = __commonJS({
    "node_modules/core-js-pure/internals/to-string-tag-support.js"(exports, module) {
      var wellKnownSymbol = require_well_known_symbol();
      var TO_STRING_TAG = wellKnownSymbol("toStringTag");
      var test = {};
      test[TO_STRING_TAG] = "z";
      module.exports = String(test) === "[object z]";
    }
  });

  // node_modules/core-js-pure/internals/classof.js
  var require_classof = __commonJS({
    "node_modules/core-js-pure/internals/classof.js"(exports, module) {
      var TO_STRING_TAG_SUPPORT = require_to_string_tag_support();
      var isCallable = require_is_callable();
      var classofRaw = require_classof_raw();
      var wellKnownSymbol = require_well_known_symbol();
      var TO_STRING_TAG = wellKnownSymbol("toStringTag");
      var $Object = Object;
      var CORRECT_ARGUMENTS = classofRaw(function() {
        return arguments;
      }()) == "Arguments";
      var tryGet = function(it, key) {
        try {
          return it[key];
        } catch (error) {
        }
      };
      module.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function(it) {
        var O2, tag, result;
        return it === void 0 ? "Undefined" : it === null ? "Null" : typeof (tag = tryGet(O2 = $Object(it), TO_STRING_TAG)) == "string" ? tag : CORRECT_ARGUMENTS ? classofRaw(O2) : (result = classofRaw(O2)) == "Object" && isCallable(O2.callee) ? "Arguments" : result;
      };
    }
  });

  // node_modules/core-js-pure/internals/object-to-string.js
  var require_object_to_string = __commonJS({
    "node_modules/core-js-pure/internals/object-to-string.js"(exports, module) {
      "use strict";
      var TO_STRING_TAG_SUPPORT = require_to_string_tag_support();
      var classof = require_classof();
      module.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {
        return "[object " + classof(this) + "]";
      };
    }
  });

  // node_modules/core-js-pure/internals/set-to-string-tag.js
  var require_set_to_string_tag = __commonJS({
    "node_modules/core-js-pure/internals/set-to-string-tag.js"(exports, module) {
      var TO_STRING_TAG_SUPPORT = require_to_string_tag_support();
      var defineProperty = require_object_define_property().f;
      var createNonEnumerableProperty = require_create_non_enumerable_property();
      var hasOwn = require_has_own_property();
      var toString = require_object_to_string();
      var wellKnownSymbol = require_well_known_symbol();
      var TO_STRING_TAG = wellKnownSymbol("toStringTag");
      module.exports = function(it, TAG, STATIC, SET_METHOD) {
        if (it) {
          var target = STATIC ? it : it.prototype;
          if (!hasOwn(target, TO_STRING_TAG)) {
            defineProperty(target, TO_STRING_TAG, {configurable: true, value: TAG});
          }
          if (SET_METHOD && !TO_STRING_TAG_SUPPORT) {
            createNonEnumerableProperty(target, "toString", toString);
          }
        }
      };
    }
  });

  // node_modules/core-js-pure/internals/iterator-create-constructor.js
  var require_iterator_create_constructor = __commonJS({
    "node_modules/core-js-pure/internals/iterator-create-constructor.js"(exports, module) {
      "use strict";
      var IteratorPrototype = require_iterators_core().IteratorPrototype;
      var create = require_object_create();
      var createPropertyDescriptor = require_create_property_descriptor();
      var setToStringTag = require_set_to_string_tag();
      var Iterators = require_iterators();
      var returnThis = function() {
        return this;
      };
      module.exports = function(IteratorConstructor, NAME, next, ENUMERABLE_NEXT) {
        var TO_STRING_TAG = NAME + " Iterator";
        IteratorConstructor.prototype = create(IteratorPrototype, {next: createPropertyDescriptor(+!ENUMERABLE_NEXT, next)});
        setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);
        Iterators[TO_STRING_TAG] = returnThis;
        return IteratorConstructor;
      };
    }
  });

  // node_modules/core-js-pure/internals/a-possible-prototype.js
  var require_a_possible_prototype = __commonJS({
    "node_modules/core-js-pure/internals/a-possible-prototype.js"(exports, module) {
      var isCallable = require_is_callable();
      var $String = String;
      var $TypeError = TypeError;
      module.exports = function(argument) {
        if (typeof argument == "object" || isCallable(argument))
          return argument;
        throw $TypeError("Can't set " + $String(argument) + " as a prototype");
      };
    }
  });

  // node_modules/core-js-pure/internals/object-set-prototype-of.js
  var require_object_set_prototype_of = __commonJS({
    "node_modules/core-js-pure/internals/object-set-prototype-of.js"(exports, module) {
      var uncurryThis = require_function_uncurry_this();
      var anObject = require_an_object();
      var aPossiblePrototype = require_a_possible_prototype();
      module.exports = Object.setPrototypeOf || ("__proto__" in {} ? function() {
        var CORRECT_SETTER = false;
        var test = {};
        var setter;
        try {
          setter = uncurryThis(Object.getOwnPropertyDescriptor(Object.prototype, "__proto__").set);
          setter(test, []);
          CORRECT_SETTER = test instanceof Array;
        } catch (error) {
        }
        return function setPrototypeOf(O2, proto) {
          anObject(O2);
          aPossiblePrototype(proto);
          if (CORRECT_SETTER)
            setter(O2, proto);
          else
            O2.__proto__ = proto;
          return O2;
        };
      }() : void 0);
    }
  });

  // node_modules/core-js-pure/internals/iterator-define.js
  var require_iterator_define = __commonJS({
    "node_modules/core-js-pure/internals/iterator-define.js"(exports, module) {
      "use strict";
      var $3 = require_export();
      var call = require_function_call();
      var IS_PURE = require_is_pure();
      var FunctionName = require_function_name();
      var isCallable = require_is_callable();
      var createIteratorConstructor = require_iterator_create_constructor();
      var getPrototypeOf = require_object_get_prototype_of();
      var setPrototypeOf = require_object_set_prototype_of();
      var setToStringTag = require_set_to_string_tag();
      var createNonEnumerableProperty = require_create_non_enumerable_property();
      var defineBuiltIn = require_define_built_in();
      var wellKnownSymbol = require_well_known_symbol();
      var Iterators = require_iterators();
      var IteratorsCore = require_iterators_core();
      var PROPER_FUNCTION_NAME = FunctionName.PROPER;
      var CONFIGURABLE_FUNCTION_NAME = FunctionName.CONFIGURABLE;
      var IteratorPrototype = IteratorsCore.IteratorPrototype;
      var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
      var ITERATOR = wellKnownSymbol("iterator");
      var KEYS = "keys";
      var VALUES = "values";
      var ENTRIES = "entries";
      var returnThis = function() {
        return this;
      };
      module.exports = function(Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
        createIteratorConstructor(IteratorConstructor, NAME, next);
        var getIterationMethod = function(KIND) {
          if (KIND === DEFAULT && defaultIterator)
            return defaultIterator;
          if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype)
            return IterablePrototype[KIND];
          switch (KIND) {
            case KEYS:
              return function keys() {
                return new IteratorConstructor(this, KIND);
              };
            case VALUES:
              return function values() {
                return new IteratorConstructor(this, KIND);
              };
            case ENTRIES:
              return function entries() {
                return new IteratorConstructor(this, KIND);
              };
          }
          return function() {
            return new IteratorConstructor(this);
          };
        };
        var TO_STRING_TAG = NAME + " Iterator";
        var INCORRECT_VALUES_NAME = false;
        var IterablePrototype = Iterable.prototype;
        var nativeIterator = IterablePrototype[ITERATOR] || IterablePrototype["@@iterator"] || DEFAULT && IterablePrototype[DEFAULT];
        var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
        var anyNativeIterator = NAME == "Array" ? IterablePrototype.entries || nativeIterator : nativeIterator;
        var CurrentIteratorPrototype, methods, KEY;
        if (anyNativeIterator) {
          CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));
          if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
            if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {
              if (setPrototypeOf) {
                setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);
              } else if (!isCallable(CurrentIteratorPrototype[ITERATOR])) {
                defineBuiltIn(CurrentIteratorPrototype, ITERATOR, returnThis);
              }
            }
            setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);
            if (IS_PURE)
              Iterators[TO_STRING_TAG] = returnThis;
          }
        }
        if (PROPER_FUNCTION_NAME && DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {
          if (!IS_PURE && CONFIGURABLE_FUNCTION_NAME) {
            createNonEnumerableProperty(IterablePrototype, "name", VALUES);
          } else {
            INCORRECT_VALUES_NAME = true;
            defaultIterator = function values() {
              return call(nativeIterator, this);
            };
          }
        }
        if (DEFAULT) {
          methods = {
            values: getIterationMethod(VALUES),
            keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
            entries: getIterationMethod(ENTRIES)
          };
          if (FORCED)
            for (KEY in methods) {
              if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
                defineBuiltIn(IterablePrototype, KEY, methods[KEY]);
              }
            }
          else
            $3({target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME}, methods);
        }
        if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {
          defineBuiltIn(IterablePrototype, ITERATOR, defaultIterator, {name: DEFAULT});
        }
        Iterators[NAME] = defaultIterator;
        return methods;
      };
    }
  });

  // node_modules/core-js-pure/internals/create-iter-result-object.js
  var require_create_iter_result_object = __commonJS({
    "node_modules/core-js-pure/internals/create-iter-result-object.js"(exports, module) {
      module.exports = function(value, done) {
        return {value, done};
      };
    }
  });

  // node_modules/core-js-pure/modules/es.array.iterator.js
  var require_es_array_iterator = __commonJS({
    "node_modules/core-js-pure/modules/es.array.iterator.js"(exports, module) {
      "use strict";
      var toIndexedObject = require_to_indexed_object();
      var addToUnscopables = require_add_to_unscopables();
      var Iterators = require_iterators();
      var InternalStateModule = require_internal_state();
      var defineProperty = require_object_define_property().f;
      var defineIterator = require_iterator_define();
      var createIterResultObject = require_create_iter_result_object();
      var IS_PURE = require_is_pure();
      var DESCRIPTORS = require_descriptors();
      var ARRAY_ITERATOR = "Array Iterator";
      var setInternalState = InternalStateModule.set;
      var getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);
      module.exports = defineIterator(Array, "Array", function(iterated, kind) {
        setInternalState(this, {
          type: ARRAY_ITERATOR,
          target: toIndexedObject(iterated),
          index: 0,
          kind
        });
      }, function() {
        var state = getInternalState(this);
        var target = state.target;
        var kind = state.kind;
        var index = state.index++;
        if (!target || index >= target.length) {
          state.target = void 0;
          return createIterResultObject(void 0, true);
        }
        if (kind == "keys")
          return createIterResultObject(index, false);
        if (kind == "values")
          return createIterResultObject(target[index], false);
        return createIterResultObject([index, target[index]], false);
      }, "values");
      var values = Iterators.Arguments = Iterators.Array;
      addToUnscopables("keys");
      addToUnscopables("values");
      addToUnscopables("entries");
      if (!IS_PURE && DESCRIPTORS && values.name !== "values")
        try {
          defineProperty(values, "name", {value: "values"});
        } catch (error) {
        }
    }
  });

  // node_modules/core-js-pure/internals/object-get-own-property-names.js
  var require_object_get_own_property_names = __commonJS({
    "node_modules/core-js-pure/internals/object-get-own-property-names.js"(exports) {
      var internalObjectKeys = require_object_keys_internal();
      var enumBugKeys = require_enum_bug_keys();
      var hiddenKeys = enumBugKeys.concat("length", "prototype");
      exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O2) {
        return internalObjectKeys(O2, hiddenKeys);
      };
    }
  });

  // node_modules/core-js-pure/internals/create-property.js
  var require_create_property = __commonJS({
    "node_modules/core-js-pure/internals/create-property.js"(exports, module) {
      "use strict";
      var toPropertyKey = require_to_property_key();
      var definePropertyModule = require_object_define_property();
      var createPropertyDescriptor = require_create_property_descriptor();
      module.exports = function(object, key, value) {
        var propertyKey = toPropertyKey(key);
        if (propertyKey in object)
          definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));
        else
          object[propertyKey] = value;
      };
    }
  });

  // node_modules/core-js-pure/internals/array-slice-simple.js
  var require_array_slice_simple = __commonJS({
    "node_modules/core-js-pure/internals/array-slice-simple.js"(exports, module) {
      var toAbsoluteIndex = require_to_absolute_index();
      var lengthOfArrayLike = require_length_of_array_like();
      var createProperty = require_create_property();
      var $Array = Array;
      var max = Math.max;
      module.exports = function(O2, start, end) {
        var length = lengthOfArrayLike(O2);
        var k2 = toAbsoluteIndex(start, length);
        var fin = toAbsoluteIndex(end === void 0 ? length : end, length);
        var result = $Array(max(fin - k2, 0));
        for (var n = 0; k2 < fin; k2++, n++)
          createProperty(result, n, O2[k2]);
        result.length = n;
        return result;
      };
    }
  });

  // node_modules/core-js-pure/internals/object-get-own-property-names-external.js
  var require_object_get_own_property_names_external = __commonJS({
    "node_modules/core-js-pure/internals/object-get-own-property-names-external.js"(exports, module) {
      var classof = require_classof_raw();
      var toIndexedObject = require_to_indexed_object();
      var $getOwnPropertyNames = require_object_get_own_property_names().f;
      var arraySlice = require_array_slice_simple();
      var windowNames = typeof window == "object" && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
      var getWindowNames = function(it) {
        try {
          return $getOwnPropertyNames(it);
        } catch (error) {
          return arraySlice(windowNames);
        }
      };
      module.exports.f = function getOwnPropertyNames(it) {
        return windowNames && classof(it) == "Window" ? getWindowNames(it) : $getOwnPropertyNames(toIndexedObject(it));
      };
    }
  });

  // node_modules/core-js-pure/internals/array-buffer-non-extensible.js
  var require_array_buffer_non_extensible = __commonJS({
    "node_modules/core-js-pure/internals/array-buffer-non-extensible.js"(exports, module) {
      var fails = require_fails();
      module.exports = fails(function() {
        if (typeof ArrayBuffer == "function") {
          var buffer = new ArrayBuffer(8);
          if (Object.isExtensible(buffer))
            Object.defineProperty(buffer, "a", {value: 8});
        }
      });
    }
  });

  // node_modules/core-js-pure/internals/object-is-extensible.js
  var require_object_is_extensible = __commonJS({
    "node_modules/core-js-pure/internals/object-is-extensible.js"(exports, module) {
      var fails = require_fails();
      var isObject = require_is_object();
      var classof = require_classof_raw();
      var ARRAY_BUFFER_NON_EXTENSIBLE = require_array_buffer_non_extensible();
      var $isExtensible = Object.isExtensible;
      var FAILS_ON_PRIMITIVES = fails(function() {
        $isExtensible(1);
      });
      module.exports = FAILS_ON_PRIMITIVES || ARRAY_BUFFER_NON_EXTENSIBLE ? function isExtensible(it) {
        if (!isObject(it))
          return false;
        if (ARRAY_BUFFER_NON_EXTENSIBLE && classof(it) == "ArrayBuffer")
          return false;
        return $isExtensible ? $isExtensible(it) : true;
      } : $isExtensible;
    }
  });

  // node_modules/core-js-pure/internals/freezing.js
  var require_freezing = __commonJS({
    "node_modules/core-js-pure/internals/freezing.js"(exports, module) {
      var fails = require_fails();
      module.exports = !fails(function() {
        return Object.isExtensible(Object.preventExtensions({}));
      });
    }
  });

  // node_modules/core-js-pure/internals/internal-metadata.js
  var require_internal_metadata = __commonJS({
    "node_modules/core-js-pure/internals/internal-metadata.js"(exports, module) {
      var $3 = require_export();
      var uncurryThis = require_function_uncurry_this();
      var hiddenKeys = require_hidden_keys();
      var isObject = require_is_object();
      var hasOwn = require_has_own_property();
      var defineProperty = require_object_define_property().f;
      var getOwnPropertyNamesModule = require_object_get_own_property_names();
      var getOwnPropertyNamesExternalModule = require_object_get_own_property_names_external();
      var isExtensible = require_object_is_extensible();
      var uid = require_uid();
      var FREEZING = require_freezing();
      var REQUIRED = false;
      var METADATA = uid("meta");
      var id = 0;
      var setMetadata = function(it) {
        defineProperty(it, METADATA, {value: {
          objectID: "O" + id++,
          weakData: {}
        }});
      };
      var fastKey = function(it, create) {
        if (!isObject(it))
          return typeof it == "symbol" ? it : (typeof it == "string" ? "S" : "P") + it;
        if (!hasOwn(it, METADATA)) {
          if (!isExtensible(it))
            return "F";
          if (!create)
            return "E";
          setMetadata(it);
        }
        return it[METADATA].objectID;
      };
      var getWeakData = function(it, create) {
        if (!hasOwn(it, METADATA)) {
          if (!isExtensible(it))
            return true;
          if (!create)
            return false;
          setMetadata(it);
        }
        return it[METADATA].weakData;
      };
      var onFreeze = function(it) {
        if (FREEZING && REQUIRED && isExtensible(it) && !hasOwn(it, METADATA))
          setMetadata(it);
        return it;
      };
      var enable = function() {
        meta.enable = function() {
        };
        REQUIRED = true;
        var getOwnPropertyNames = getOwnPropertyNamesModule.f;
        var splice = uncurryThis([].splice);
        var test = {};
        test[METADATA] = 1;
        if (getOwnPropertyNames(test).length) {
          getOwnPropertyNamesModule.f = function(it) {
            var result = getOwnPropertyNames(it);
            for (var i2 = 0, length = result.length; i2 < length; i2++) {
              if (result[i2] === METADATA) {
                splice(result, i2, 1);
                break;
              }
            }
            return result;
          };
          $3({target: "Object", stat: true, forced: true}, {
            getOwnPropertyNames: getOwnPropertyNamesExternalModule.f
          });
        }
      };
      var meta = module.exports = {
        enable,
        fastKey,
        getWeakData,
        onFreeze
      };
      hiddenKeys[METADATA] = true;
    }
  });

  // node_modules/core-js-pure/internals/is-array-iterator-method.js
  var require_is_array_iterator_method = __commonJS({
    "node_modules/core-js-pure/internals/is-array-iterator-method.js"(exports, module) {
      var wellKnownSymbol = require_well_known_symbol();
      var Iterators = require_iterators();
      var ITERATOR = wellKnownSymbol("iterator");
      var ArrayPrototype = Array.prototype;
      module.exports = function(it) {
        return it !== void 0 && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);
      };
    }
  });

  // node_modules/core-js-pure/internals/get-iterator-method.js
  var require_get_iterator_method = __commonJS({
    "node_modules/core-js-pure/internals/get-iterator-method.js"(exports, module) {
      var classof = require_classof();
      var getMethod = require_get_method();
      var isNullOrUndefined = require_is_null_or_undefined();
      var Iterators = require_iterators();
      var wellKnownSymbol = require_well_known_symbol();
      var ITERATOR = wellKnownSymbol("iterator");
      module.exports = function(it) {
        if (!isNullOrUndefined(it))
          return getMethod(it, ITERATOR) || getMethod(it, "@@iterator") || Iterators[classof(it)];
      };
    }
  });

  // node_modules/core-js-pure/internals/get-iterator.js
  var require_get_iterator = __commonJS({
    "node_modules/core-js-pure/internals/get-iterator.js"(exports, module) {
      var call = require_function_call();
      var aCallable = require_a_callable();
      var anObject = require_an_object();
      var tryToString = require_try_to_string();
      var getIteratorMethod = require_get_iterator_method();
      var $TypeError = TypeError;
      module.exports = function(argument, usingIterator) {
        var iteratorMethod = arguments.length < 2 ? getIteratorMethod(argument) : usingIterator;
        if (aCallable(iteratorMethod))
          return anObject(call(iteratorMethod, argument));
        throw $TypeError(tryToString(argument) + " is not iterable");
      };
    }
  });

  // node_modules/core-js-pure/internals/iterator-close.js
  var require_iterator_close = __commonJS({
    "node_modules/core-js-pure/internals/iterator-close.js"(exports, module) {
      var call = require_function_call();
      var anObject = require_an_object();
      var getMethod = require_get_method();
      module.exports = function(iterator, kind, value) {
        var innerResult, innerError;
        anObject(iterator);
        try {
          innerResult = getMethod(iterator, "return");
          if (!innerResult) {
            if (kind === "throw")
              throw value;
            return value;
          }
          innerResult = call(innerResult, iterator);
        } catch (error) {
          innerError = true;
          innerResult = error;
        }
        if (kind === "throw")
          throw value;
        if (innerError)
          throw innerResult;
        anObject(innerResult);
        return value;
      };
    }
  });

  // node_modules/core-js-pure/internals/iterate.js
  var require_iterate = __commonJS({
    "node_modules/core-js-pure/internals/iterate.js"(exports, module) {
      var bind = require_function_bind_context();
      var call = require_function_call();
      var anObject = require_an_object();
      var tryToString = require_try_to_string();
      var isArrayIteratorMethod = require_is_array_iterator_method();
      var lengthOfArrayLike = require_length_of_array_like();
      var isPrototypeOf = require_object_is_prototype_of();
      var getIterator = require_get_iterator();
      var getIteratorMethod = require_get_iterator_method();
      var iteratorClose = require_iterator_close();
      var $TypeError = TypeError;
      var Result = function(stopped, result) {
        this.stopped = stopped;
        this.result = result;
      };
      var ResultPrototype = Result.prototype;
      module.exports = function(iterable, unboundFunction, options) {
        var that = options && options.that;
        var AS_ENTRIES = !!(options && options.AS_ENTRIES);
        var IS_RECORD = !!(options && options.IS_RECORD);
        var IS_ITERATOR = !!(options && options.IS_ITERATOR);
        var INTERRUPTED = !!(options && options.INTERRUPTED);
        var fn = bind(unboundFunction, that);
        var iterator, iterFn, index, length, result, next, step;
        var stop = function(condition) {
          if (iterator)
            iteratorClose(iterator, "normal", condition);
          return new Result(true, condition);
        };
        var callFn = function(value) {
          if (AS_ENTRIES) {
            anObject(value);
            return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);
          }
          return INTERRUPTED ? fn(value, stop) : fn(value);
        };
        if (IS_RECORD) {
          iterator = iterable.iterator;
        } else if (IS_ITERATOR) {
          iterator = iterable;
        } else {
          iterFn = getIteratorMethod(iterable);
          if (!iterFn)
            throw $TypeError(tryToString(iterable) + " is not iterable");
          if (isArrayIteratorMethod(iterFn)) {
            for (index = 0, length = lengthOfArrayLike(iterable); length > index; index++) {
              result = callFn(iterable[index]);
              if (result && isPrototypeOf(ResultPrototype, result))
                return result;
            }
            return new Result(false);
          }
          iterator = getIterator(iterable, iterFn);
        }
        next = IS_RECORD ? iterable.next : iterator.next;
        while (!(step = call(next, iterator)).done) {
          try {
            result = callFn(step.value);
          } catch (error) {
            iteratorClose(iterator, "throw", error);
          }
          if (typeof result == "object" && result && isPrototypeOf(ResultPrototype, result))
            return result;
        }
        return new Result(false);
      };
    }
  });

  // node_modules/core-js-pure/internals/an-instance.js
  var require_an_instance = __commonJS({
    "node_modules/core-js-pure/internals/an-instance.js"(exports, module) {
      var isPrototypeOf = require_object_is_prototype_of();
      var $TypeError = TypeError;
      module.exports = function(it, Prototype) {
        if (isPrototypeOf(Prototype, it))
          return it;
        throw $TypeError("Incorrect invocation");
      };
    }
  });

  // node_modules/core-js-pure/internals/is-array.js
  var require_is_array = __commonJS({
    "node_modules/core-js-pure/internals/is-array.js"(exports, module) {
      var classof = require_classof_raw();
      module.exports = Array.isArray || function isArray(argument) {
        return classof(argument) == "Array";
      };
    }
  });

  // node_modules/core-js-pure/internals/inspect-source.js
  var require_inspect_source = __commonJS({
    "node_modules/core-js-pure/internals/inspect-source.js"(exports, module) {
      var uncurryThis = require_function_uncurry_this();
      var isCallable = require_is_callable();
      var store = require_shared_store();
      var functionToString = uncurryThis(Function.toString);
      if (!isCallable(store.inspectSource)) {
        store.inspectSource = function(it) {
          return functionToString(it);
        };
      }
      module.exports = store.inspectSource;
    }
  });

  // node_modules/core-js-pure/internals/is-constructor.js
  var require_is_constructor = __commonJS({
    "node_modules/core-js-pure/internals/is-constructor.js"(exports, module) {
      var uncurryThis = require_function_uncurry_this();
      var fails = require_fails();
      var isCallable = require_is_callable();
      var classof = require_classof();
      var getBuiltIn = require_get_built_in();
      var inspectSource = require_inspect_source();
      var noop = function() {
      };
      var empty = [];
      var construct = getBuiltIn("Reflect", "construct");
      var constructorRegExp = /^\s*(?:class|function)\b/;
      var exec = uncurryThis(constructorRegExp.exec);
      var INCORRECT_TO_STRING = !constructorRegExp.exec(noop);
      var isConstructorModern = function isConstructor(argument) {
        if (!isCallable(argument))
          return false;
        try {
          construct(noop, empty, argument);
          return true;
        } catch (error) {
          return false;
        }
      };
      var isConstructorLegacy = function isConstructor(argument) {
        if (!isCallable(argument))
          return false;
        switch (classof(argument)) {
          case "AsyncFunction":
          case "GeneratorFunction":
          case "AsyncGeneratorFunction":
            return false;
        }
        try {
          return INCORRECT_TO_STRING || !!exec(constructorRegExp, inspectSource(argument));
        } catch (error) {
          return true;
        }
      };
      isConstructorLegacy.sham = true;
      module.exports = !construct || fails(function() {
        var called;
        return isConstructorModern(isConstructorModern.call) || !isConstructorModern(Object) || !isConstructorModern(function() {
          called = true;
        }) || called;
      }) ? isConstructorLegacy : isConstructorModern;
    }
  });

  // node_modules/core-js-pure/internals/array-species-constructor.js
  var require_array_species_constructor = __commonJS({
    "node_modules/core-js-pure/internals/array-species-constructor.js"(exports, module) {
      var isArray = require_is_array();
      var isConstructor = require_is_constructor();
      var isObject = require_is_object();
      var wellKnownSymbol = require_well_known_symbol();
      var SPECIES = wellKnownSymbol("species");
      var $Array = Array;
      module.exports = function(originalArray) {
        var C;
        if (isArray(originalArray)) {
          C = originalArray.constructor;
          if (isConstructor(C) && (C === $Array || isArray(C.prototype)))
            C = void 0;
          else if (isObject(C)) {
            C = C[SPECIES];
            if (C === null)
              C = void 0;
          }
        }
        return C === void 0 ? $Array : C;
      };
    }
  });

  // node_modules/core-js-pure/internals/array-species-create.js
  var require_array_species_create = __commonJS({
    "node_modules/core-js-pure/internals/array-species-create.js"(exports, module) {
      var arraySpeciesConstructor = require_array_species_constructor();
      module.exports = function(originalArray, length) {
        return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);
      };
    }
  });

  // node_modules/core-js-pure/internals/array-iteration.js
  var require_array_iteration = __commonJS({
    "node_modules/core-js-pure/internals/array-iteration.js"(exports, module) {
      var bind = require_function_bind_context();
      var uncurryThis = require_function_uncurry_this();
      var IndexedObject = require_indexed_object();
      var toObject = require_to_object();
      var lengthOfArrayLike = require_length_of_array_like();
      var arraySpeciesCreate = require_array_species_create();
      var push = uncurryThis([].push);
      var createMethod = function(TYPE) {
        var IS_MAP = TYPE == 1;
        var IS_FILTER = TYPE == 2;
        var IS_SOME = TYPE == 3;
        var IS_EVERY = TYPE == 4;
        var IS_FIND_INDEX = TYPE == 6;
        var IS_FILTER_REJECT = TYPE == 7;
        var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
        return function($this, callbackfn, that, specificCreate) {
          var O2 = toObject($this);
          var self2 = IndexedObject(O2);
          var boundFunction = bind(callbackfn, that);
          var length = lengthOfArrayLike(self2);
          var index = 0;
          var create = specificCreate || arraySpeciesCreate;
          var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_REJECT ? create($this, 0) : void 0;
          var value, result;
          for (; length > index; index++)
            if (NO_HOLES || index in self2) {
              value = self2[index];
              result = boundFunction(value, index, O2);
              if (TYPE) {
                if (IS_MAP)
                  target[index] = result;
                else if (result)
                  switch (TYPE) {
                    case 3:
                      return true;
                    case 5:
                      return value;
                    case 6:
                      return index;
                    case 2:
                      push(target, value);
                  }
                else
                  switch (TYPE) {
                    case 4:
                      return false;
                    case 7:
                      push(target, value);
                  }
              }
            }
          return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
        };
      };
      module.exports = {
        forEach: createMethod(0),
        map: createMethod(1),
        filter: createMethod(2),
        some: createMethod(3),
        every: createMethod(4),
        find: createMethod(5),
        findIndex: createMethod(6),
        filterReject: createMethod(7)
      };
    }
  });

  // node_modules/core-js-pure/internals/collection.js
  var require_collection = __commonJS({
    "node_modules/core-js-pure/internals/collection.js"(exports, module) {
      "use strict";
      var $3 = require_export();
      var global2 = require_global();
      var InternalMetadataModule = require_internal_metadata();
      var fails = require_fails();
      var createNonEnumerableProperty = require_create_non_enumerable_property();
      var iterate = require_iterate();
      var anInstance = require_an_instance();
      var isCallable = require_is_callable();
      var isObject = require_is_object();
      var setToStringTag = require_set_to_string_tag();
      var defineProperty = require_object_define_property().f;
      var forEach = require_array_iteration().forEach;
      var DESCRIPTORS = require_descriptors();
      var InternalStateModule = require_internal_state();
      var setInternalState = InternalStateModule.set;
      var internalStateGetterFor = InternalStateModule.getterFor;
      module.exports = function(CONSTRUCTOR_NAME, wrapper, common) {
        var IS_MAP = CONSTRUCTOR_NAME.indexOf("Map") !== -1;
        var IS_WEAK = CONSTRUCTOR_NAME.indexOf("Weak") !== -1;
        var ADDER = IS_MAP ? "set" : "add";
        var NativeConstructor = global2[CONSTRUCTOR_NAME];
        var NativePrototype = NativeConstructor && NativeConstructor.prototype;
        var exported = {};
        var Constructor;
        if (!DESCRIPTORS || !isCallable(NativeConstructor) || !(IS_WEAK || NativePrototype.forEach && !fails(function() {
          new NativeConstructor().entries().next();
        }))) {
          Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);
          InternalMetadataModule.enable();
        } else {
          Constructor = wrapper(function(target, iterable) {
            setInternalState(anInstance(target, Prototype), {
              type: CONSTRUCTOR_NAME,
              collection: new NativeConstructor()
            });
            if (iterable != void 0)
              iterate(iterable, target[ADDER], {that: target, AS_ENTRIES: IS_MAP});
          });
          var Prototype = Constructor.prototype;
          var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);
          forEach(["add", "clear", "delete", "forEach", "get", "has", "set", "keys", "values", "entries"], function(KEY) {
            var IS_ADDER = KEY == "add" || KEY == "set";
            if (KEY in NativePrototype && !(IS_WEAK && KEY == "clear")) {
              createNonEnumerableProperty(Prototype, KEY, function(a3, b2) {
                var collection = getInternalState(this).collection;
                if (!IS_ADDER && IS_WEAK && !isObject(a3))
                  return KEY == "get" ? void 0 : false;
                var result = collection[KEY](a3 === 0 ? 0 : a3, b2);
                return IS_ADDER ? this : result;
              });
            }
          });
          IS_WEAK || defineProperty(Prototype, "size", {
            configurable: true,
            get: function() {
              return getInternalState(this).collection.size;
            }
          });
        }
        setToStringTag(Constructor, CONSTRUCTOR_NAME, false, true);
        exported[CONSTRUCTOR_NAME] = Constructor;
        $3({global: true, forced: true}, exported);
        if (!IS_WEAK)
          common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);
        return Constructor;
      };
    }
  });

  // node_modules/core-js-pure/internals/define-built-ins.js
  var require_define_built_ins = __commonJS({
    "node_modules/core-js-pure/internals/define-built-ins.js"(exports, module) {
      var defineBuiltIn = require_define_built_in();
      module.exports = function(target, src, options) {
        for (var key in src) {
          if (options && options.unsafe && target[key])
            target[key] = src[key];
          else
            defineBuiltIn(target, key, src[key], options);
        }
        return target;
      };
    }
  });

  // node_modules/core-js-pure/internals/set-species.js
  var require_set_species = __commonJS({
    "node_modules/core-js-pure/internals/set-species.js"(exports, module) {
      "use strict";
      var getBuiltIn = require_get_built_in();
      var definePropertyModule = require_object_define_property();
      var wellKnownSymbol = require_well_known_symbol();
      var DESCRIPTORS = require_descriptors();
      var SPECIES = wellKnownSymbol("species");
      module.exports = function(CONSTRUCTOR_NAME) {
        var Constructor = getBuiltIn(CONSTRUCTOR_NAME);
        var defineProperty = definePropertyModule.f;
        if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {
          defineProperty(Constructor, SPECIES, {
            configurable: true,
            get: function() {
              return this;
            }
          });
        }
      };
    }
  });

  // node_modules/core-js-pure/internals/collection-strong.js
  var require_collection_strong = __commonJS({
    "node_modules/core-js-pure/internals/collection-strong.js"(exports, module) {
      "use strict";
      var defineProperty = require_object_define_property().f;
      var create = require_object_create();
      var defineBuiltIns = require_define_built_ins();
      var bind = require_function_bind_context();
      var anInstance = require_an_instance();
      var isNullOrUndefined = require_is_null_or_undefined();
      var iterate = require_iterate();
      var defineIterator = require_iterator_define();
      var createIterResultObject = require_create_iter_result_object();
      var setSpecies = require_set_species();
      var DESCRIPTORS = require_descriptors();
      var fastKey = require_internal_metadata().fastKey;
      var InternalStateModule = require_internal_state();
      var setInternalState = InternalStateModule.set;
      var internalStateGetterFor = InternalStateModule.getterFor;
      module.exports = {
        getConstructor: function(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {
          var Constructor = wrapper(function(that, iterable) {
            anInstance(that, Prototype);
            setInternalState(that, {
              type: CONSTRUCTOR_NAME,
              index: create(null),
              first: void 0,
              last: void 0,
              size: 0
            });
            if (!DESCRIPTORS)
              that.size = 0;
            if (!isNullOrUndefined(iterable))
              iterate(iterable, that[ADDER], {that, AS_ENTRIES: IS_MAP});
          });
          var Prototype = Constructor.prototype;
          var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);
          var define2 = function(that, key, value) {
            var state = getInternalState(that);
            var entry = getEntry(that, key);
            var previous, index;
            if (entry) {
              entry.value = value;
            } else {
              state.last = entry = {
                index: index = fastKey(key, true),
                key,
                value,
                previous: previous = state.last,
                next: void 0,
                removed: false
              };
              if (!state.first)
                state.first = entry;
              if (previous)
                previous.next = entry;
              if (DESCRIPTORS)
                state.size++;
              else
                that.size++;
              if (index !== "F")
                state.index[index] = entry;
            }
            return that;
          };
          var getEntry = function(that, key) {
            var state = getInternalState(that);
            var index = fastKey(key);
            var entry;
            if (index !== "F")
              return state.index[index];
            for (entry = state.first; entry; entry = entry.next) {
              if (entry.key == key)
                return entry;
            }
          };
          defineBuiltIns(Prototype, {
            clear: function clear() {
              var that = this;
              var state = getInternalState(that);
              var data = state.index;
              var entry = state.first;
              while (entry) {
                entry.removed = true;
                if (entry.previous)
                  entry.previous = entry.previous.next = void 0;
                delete data[entry.index];
                entry = entry.next;
              }
              state.first = state.last = void 0;
              if (DESCRIPTORS)
                state.size = 0;
              else
                that.size = 0;
            },
            "delete": function(key) {
              var that = this;
              var state = getInternalState(that);
              var entry = getEntry(that, key);
              if (entry) {
                var next = entry.next;
                var prev = entry.previous;
                delete state.index[entry.index];
                entry.removed = true;
                if (prev)
                  prev.next = next;
                if (next)
                  next.previous = prev;
                if (state.first == entry)
                  state.first = next;
                if (state.last == entry)
                  state.last = prev;
                if (DESCRIPTORS)
                  state.size--;
                else
                  that.size--;
              }
              return !!entry;
            },
            forEach: function forEach(callbackfn) {
              var state = getInternalState(this);
              var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : void 0);
              var entry;
              while (entry = entry ? entry.next : state.first) {
                boundFunction(entry.value, entry.key, this);
                while (entry && entry.removed)
                  entry = entry.previous;
              }
            },
            has: function has(key) {
              return !!getEntry(this, key);
            }
          });
          defineBuiltIns(Prototype, IS_MAP ? {
            get: function get(key) {
              var entry = getEntry(this, key);
              return entry && entry.value;
            },
            set: function set(key, value) {
              return define2(this, key === 0 ? 0 : key, value);
            }
          } : {
            add: function add(value) {
              return define2(this, value = value === 0 ? 0 : value, value);
            }
          });
          if (DESCRIPTORS)
            defineProperty(Prototype, "size", {
              get: function() {
                return getInternalState(this).size;
              }
            });
          return Constructor;
        },
        setStrong: function(Constructor, CONSTRUCTOR_NAME, IS_MAP) {
          var ITERATOR_NAME = CONSTRUCTOR_NAME + " Iterator";
          var getInternalCollectionState = internalStateGetterFor(CONSTRUCTOR_NAME);
          var getInternalIteratorState = internalStateGetterFor(ITERATOR_NAME);
          defineIterator(Constructor, CONSTRUCTOR_NAME, function(iterated, kind) {
            setInternalState(this, {
              type: ITERATOR_NAME,
              target: iterated,
              state: getInternalCollectionState(iterated),
              kind,
              last: void 0
            });
          }, function() {
            var state = getInternalIteratorState(this);
            var kind = state.kind;
            var entry = state.last;
            while (entry && entry.removed)
              entry = entry.previous;
            if (!state.target || !(state.last = entry = entry ? entry.next : state.state.first)) {
              state.target = void 0;
              return createIterResultObject(void 0, true);
            }
            if (kind == "keys")
              return createIterResultObject(entry.key, false);
            if (kind == "values")
              return createIterResultObject(entry.value, false);
            return createIterResultObject([entry.key, entry.value], false);
          }, IS_MAP ? "entries" : "values", !IS_MAP, true);
          setSpecies(CONSTRUCTOR_NAME);
        }
      };
    }
  });

  // node_modules/core-js-pure/modules/es.map.constructor.js
  var require_es_map_constructor = __commonJS({
    "node_modules/core-js-pure/modules/es.map.constructor.js"() {
      "use strict";
      var collection = require_collection();
      var collectionStrong = require_collection_strong();
      collection("Map", function(init) {
        return function Map2() {
          return init(this, arguments.length ? arguments[0] : void 0);
        };
      }, collectionStrong);
    }
  });

  // node_modules/core-js-pure/modules/es.map.js
  var require_es_map = __commonJS({
    "node_modules/core-js-pure/modules/es.map.js"() {
      require_es_map_constructor();
    }
  });

  // node_modules/core-js-pure/modules/es.object.to-string.js
  var require_es_object_to_string = __commonJS({
    "node_modules/core-js-pure/modules/es.object.to-string.js"() {
    }
  });

  // node_modules/core-js-pure/internals/to-string.js
  var require_to_string = __commonJS({
    "node_modules/core-js-pure/internals/to-string.js"(exports, module) {
      var classof = require_classof();
      var $String = String;
      module.exports = function(argument) {
        if (classof(argument) === "Symbol")
          throw TypeError("Cannot convert a Symbol value to a string");
        return $String(argument);
      };
    }
  });

  // node_modules/core-js-pure/internals/string-multibyte.js
  var require_string_multibyte = __commonJS({
    "node_modules/core-js-pure/internals/string-multibyte.js"(exports, module) {
      var uncurryThis = require_function_uncurry_this();
      var toIntegerOrInfinity = require_to_integer_or_infinity();
      var toString = require_to_string();
      var requireObjectCoercible = require_require_object_coercible();
      var charAt = uncurryThis("".charAt);
      var charCodeAt = uncurryThis("".charCodeAt);
      var stringSlice = uncurryThis("".slice);
      var createMethod = function(CONVERT_TO_STRING) {
        return function($this, pos) {
          var S3 = toString(requireObjectCoercible($this));
          var position = toIntegerOrInfinity(pos);
          var size = S3.length;
          var first, second;
          if (position < 0 || position >= size)
            return CONVERT_TO_STRING ? "" : void 0;
          first = charCodeAt(S3, position);
          return first < 55296 || first > 56319 || position + 1 === size || (second = charCodeAt(S3, position + 1)) < 56320 || second > 57343 ? CONVERT_TO_STRING ? charAt(S3, position) : first : CONVERT_TO_STRING ? stringSlice(S3, position, position + 2) : (first - 55296 << 10) + (second - 56320) + 65536;
        };
      };
      module.exports = {
        codeAt: createMethod(false),
        charAt: createMethod(true)
      };
    }
  });

  // node_modules/core-js-pure/modules/es.string.iterator.js
  var require_es_string_iterator = __commonJS({
    "node_modules/core-js-pure/modules/es.string.iterator.js"() {
      "use strict";
      var charAt = require_string_multibyte().charAt;
      var toString = require_to_string();
      var InternalStateModule = require_internal_state();
      var defineIterator = require_iterator_define();
      var createIterResultObject = require_create_iter_result_object();
      var STRING_ITERATOR = "String Iterator";
      var setInternalState = InternalStateModule.set;
      var getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);
      defineIterator(String, "String", function(iterated) {
        setInternalState(this, {
          type: STRING_ITERATOR,
          string: toString(iterated),
          index: 0
        });
      }, function next() {
        var state = getInternalState(this);
        var string = state.string;
        var index = state.index;
        var point;
        if (index >= string.length)
          return createIterResultObject(void 0, true);
        point = charAt(string, index);
        state.index += point.length;
        return createIterResultObject(point, false);
      });
    }
  });

  // node_modules/core-js-pure/es/map/index.js
  var require_map = __commonJS({
    "node_modules/core-js-pure/es/map/index.js"(exports, module) {
      require_es_array_iterator();
      require_es_map();
      require_es_object_to_string();
      require_es_string_iterator();
      var path = require_path();
      module.exports = path.Map;
    }
  });

  // node_modules/core-js-pure/internals/dom-iterables.js
  var require_dom_iterables = __commonJS({
    "node_modules/core-js-pure/internals/dom-iterables.js"(exports, module) {
      module.exports = {
        CSSRuleList: 0,
        CSSStyleDeclaration: 0,
        CSSValueList: 0,
        ClientRectList: 0,
        DOMRectList: 0,
        DOMStringList: 0,
        DOMTokenList: 1,
        DataTransferItemList: 0,
        FileList: 0,
        HTMLAllCollection: 0,
        HTMLCollection: 0,
        HTMLFormElement: 0,
        HTMLSelectElement: 0,
        MediaList: 0,
        MimeTypeArray: 0,
        NamedNodeMap: 0,
        NodeList: 1,
        PaintRequestList: 0,
        Plugin: 0,
        PluginArray: 0,
        SVGLengthList: 0,
        SVGNumberList: 0,
        SVGPathSegList: 0,
        SVGPointList: 0,
        SVGStringList: 0,
        SVGTransformList: 0,
        SourceBufferList: 0,
        StyleSheetList: 0,
        TextTrackCueList: 0,
        TextTrackList: 0,
        TouchList: 0
      };
    }
  });

  // node_modules/core-js-pure/modules/web.dom-collections.iterator.js
  var require_web_dom_collections_iterator = __commonJS({
    "node_modules/core-js-pure/modules/web.dom-collections.iterator.js"() {
      require_es_array_iterator();
      var DOMIterables = require_dom_iterables();
      var global2 = require_global();
      var classof = require_classof();
      var createNonEnumerableProperty = require_create_non_enumerable_property();
      var Iterators = require_iterators();
      var wellKnownSymbol = require_well_known_symbol();
      var TO_STRING_TAG = wellKnownSymbol("toStringTag");
      for (var COLLECTION_NAME in DOMIterables) {
        Collection = global2[COLLECTION_NAME];
        CollectionPrototype = Collection && Collection.prototype;
        if (CollectionPrototype && classof(CollectionPrototype) !== TO_STRING_TAG) {
          createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);
        }
        Iterators[COLLECTION_NAME] = Iterators.Array;
      }
      var Collection;
      var CollectionPrototype;
    }
  });

  // node_modules/core-js-pure/stable/map/index.js
  var require_map2 = __commonJS({
    "node_modules/core-js-pure/stable/map/index.js"(exports, module) {
      var parent = require_map();
      require_web_dom_collections_iterator();
      module.exports = parent;
    }
  });

  // node_modules/@babel/runtime-corejs3/core-js-stable/map.js
  var require_map3 = __commonJS({
    "node_modules/@babel/runtime-corejs3/core-js-stable/map.js"(exports, module) {
      module.exports = require_map2();
    }
  });

  // node_modules/aria-query/lib/ariaPropsMap.js
  var require_ariaPropsMap = __commonJS({
    "node_modules/aria-query/lib/ariaPropsMap.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault2();
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _map = _interopRequireDefault(require_map3());
      var ariaPropsMap = new _map.default([["aria-activedescendant", {
        "type": "id"
      }], ["aria-atomic", {
        "type": "boolean"
      }], ["aria-autocomplete", {
        "type": "token",
        "values": ["inline", "list", "both", "none"]
      }], ["aria-busy", {
        "type": "boolean"
      }], ["aria-checked", {
        "type": "tristate"
      }], ["aria-colcount", {
        type: "integer"
      }], ["aria-colindex", {
        type: "integer"
      }], ["aria-colspan", {
        type: "integer"
      }], ["aria-controls", {
        "type": "idlist"
      }], ["aria-current", {
        type: "token",
        values: ["page", "step", "location", "date", "time", true, false]
      }], ["aria-describedby", {
        "type": "idlist"
      }], ["aria-details", {
        "type": "id"
      }], ["aria-disabled", {
        "type": "boolean"
      }], ["aria-dropeffect", {
        "type": "tokenlist",
        "values": ["copy", "execute", "link", "move", "none", "popup"]
      }], ["aria-errormessage", {
        "type": "id"
      }], ["aria-expanded", {
        "type": "boolean",
        "allowundefined": true
      }], ["aria-flowto", {
        "type": "idlist"
      }], ["aria-grabbed", {
        "type": "boolean",
        "allowundefined": true
      }], ["aria-haspopup", {
        "type": "token",
        "values": [false, true, "menu", "listbox", "tree", "grid", "dialog"]
      }], ["aria-hidden", {
        "type": "boolean",
        "allowundefined": true
      }], ["aria-invalid", {
        "type": "token",
        "values": ["grammar", false, "spelling", true]
      }], ["aria-keyshortcuts", {
        type: "string"
      }], ["aria-label", {
        "type": "string"
      }], ["aria-labelledby", {
        "type": "idlist"
      }], ["aria-level", {
        "type": "integer"
      }], ["aria-live", {
        "type": "token",
        "values": ["assertive", "off", "polite"]
      }], ["aria-modal", {
        type: "boolean"
      }], ["aria-multiline", {
        "type": "boolean"
      }], ["aria-multiselectable", {
        "type": "boolean"
      }], ["aria-orientation", {
        "type": "token",
        "values": ["vertical", "undefined", "horizontal"]
      }], ["aria-owns", {
        "type": "idlist"
      }], ["aria-placeholder", {
        type: "string"
      }], ["aria-posinset", {
        "type": "integer"
      }], ["aria-pressed", {
        "type": "tristate"
      }], ["aria-readonly", {
        "type": "boolean"
      }], ["aria-relevant", {
        "type": "tokenlist",
        "values": ["additions", "all", "removals", "text"]
      }], ["aria-required", {
        "type": "boolean"
      }], ["aria-roledescription", {
        type: "string"
      }], ["aria-rowcount", {
        type: "integer"
      }], ["aria-rowindex", {
        type: "integer"
      }], ["aria-rowspan", {
        type: "integer"
      }], ["aria-selected", {
        "type": "boolean",
        "allowundefined": true
      }], ["aria-setsize", {
        "type": "integer"
      }], ["aria-sort", {
        "type": "token",
        "values": ["ascending", "descending", "none", "other"]
      }], ["aria-valuemax", {
        "type": "number"
      }], ["aria-valuemin", {
        "type": "number"
      }], ["aria-valuenow", {
        "type": "number"
      }], ["aria-valuetext", {
        "type": "string"
      }]]);
      var _default = ariaPropsMap;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/domMap.js
  var require_domMap = __commonJS({
    "node_modules/aria-query/lib/domMap.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault2();
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _map = _interopRequireDefault(require_map3());
      var domMap = new _map.default([["a", {
        reserved: false
      }], ["abbr", {
        reserved: false
      }], ["acronym", {
        reserved: false
      }], ["address", {
        reserved: false
      }], ["applet", {
        reserved: false
      }], ["area", {
        reserved: false
      }], ["article", {
        reserved: false
      }], ["aside", {
        reserved: false
      }], ["audio", {
        reserved: false
      }], ["b", {
        reserved: false
      }], ["base", {
        reserved: true
      }], ["bdi", {
        reserved: false
      }], ["bdo", {
        reserved: false
      }], ["big", {
        reserved: false
      }], ["blink", {
        reserved: false
      }], ["blockquote", {
        reserved: false
      }], ["body", {
        reserved: false
      }], ["br", {
        reserved: false
      }], ["button", {
        reserved: false
      }], ["canvas", {
        reserved: false
      }], ["caption", {
        reserved: false
      }], ["center", {
        reserved: false
      }], ["cite", {
        reserved: false
      }], ["code", {
        reserved: false
      }], ["col", {
        reserved: true
      }], ["colgroup", {
        reserved: true
      }], ["content", {
        reserved: false
      }], ["data", {
        reserved: false
      }], ["datalist", {
        reserved: false
      }], ["dd", {
        reserved: false
      }], ["del", {
        reserved: false
      }], ["details", {
        reserved: false
      }], ["dfn", {
        reserved: false
      }], ["dialog", {
        reserved: false
      }], ["dir", {
        reserved: false
      }], ["div", {
        reserved: false
      }], ["dl", {
        reserved: false
      }], ["dt", {
        reserved: false
      }], ["em", {
        reserved: false
      }], ["embed", {
        reserved: false
      }], ["fieldset", {
        reserved: false
      }], ["figcaption", {
        reserved: false
      }], ["figure", {
        reserved: false
      }], ["font", {
        reserved: false
      }], ["footer", {
        reserved: false
      }], ["form", {
        reserved: false
      }], ["frame", {
        reserved: false
      }], ["frameset", {
        reserved: false
      }], ["h1", {
        reserved: false
      }], ["h2", {
        reserved: false
      }], ["h3", {
        reserved: false
      }], ["h4", {
        reserved: false
      }], ["h5", {
        reserved: false
      }], ["h6", {
        reserved: false
      }], ["head", {
        reserved: true
      }], ["header", {
        reserved: false
      }], ["hgroup", {
        reserved: false
      }], ["hr", {
        reserved: false
      }], ["html", {
        reserved: true
      }], ["i", {
        reserved: false
      }], ["iframe", {
        reserved: false
      }], ["img", {
        reserved: false
      }], ["input", {
        reserved: false
      }], ["ins", {
        reserved: false
      }], ["kbd", {
        reserved: false
      }], ["keygen", {
        reserved: false
      }], ["label", {
        reserved: false
      }], ["legend", {
        reserved: false
      }], ["li", {
        reserved: false
      }], ["link", {
        reserved: true
      }], ["main", {
        reserved: false
      }], ["map", {
        reserved: false
      }], ["mark", {
        reserved: false
      }], ["marquee", {
        reserved: false
      }], ["menu", {
        reserved: false
      }], ["menuitem", {
        reserved: false
      }], ["meta", {
        reserved: true
      }], ["meter", {
        reserved: false
      }], ["nav", {
        reserved: false
      }], ["noembed", {
        reserved: true
      }], ["noscript", {
        reserved: true
      }], ["object", {
        reserved: false
      }], ["ol", {
        reserved: false
      }], ["optgroup", {
        reserved: false
      }], ["option", {
        reserved: false
      }], ["output", {
        reserved: false
      }], ["p", {
        reserved: false
      }], ["param", {
        reserved: true
      }], ["picture", {
        reserved: true
      }], ["pre", {
        reserved: false
      }], ["progress", {
        reserved: false
      }], ["q", {
        reserved: false
      }], ["rp", {
        reserved: false
      }], ["rt", {
        reserved: false
      }], ["rtc", {
        reserved: false
      }], ["ruby", {
        reserved: false
      }], ["s", {
        reserved: false
      }], ["samp", {
        reserved: false
      }], ["script", {
        reserved: true
      }], ["section", {
        reserved: false
      }], ["select", {
        reserved: false
      }], ["small", {
        reserved: false
      }], ["source", {
        reserved: true
      }], ["spacer", {
        reserved: false
      }], ["span", {
        reserved: false
      }], ["strike", {
        reserved: false
      }], ["strong", {
        reserved: false
      }], ["style", {
        reserved: true
      }], ["sub", {
        reserved: false
      }], ["summary", {
        reserved: false
      }], ["sup", {
        reserved: false
      }], ["table", {
        reserved: false
      }], ["tbody", {
        reserved: false
      }], ["td", {
        reserved: false
      }], ["textarea", {
        reserved: false
      }], ["tfoot", {
        reserved: false
      }], ["th", {
        reserved: false
      }], ["thead", {
        reserved: false
      }], ["time", {
        reserved: false
      }], ["title", {
        reserved: true
      }], ["tr", {
        reserved: false
      }], ["track", {
        reserved: true
      }], ["tt", {
        reserved: false
      }], ["u", {
        reserved: false
      }], ["ul", {
        reserved: false
      }], ["var", {
        reserved: false
      }], ["video", {
        reserved: false
      }], ["wbr", {
        reserved: false
      }], ["xmp", {
        reserved: false
      }]]);
      var _default = domMap;
      exports.default = _default;
    }
  });

  // node_modules/core-js-pure/es/get-iterator.js
  var require_get_iterator2 = __commonJS({
    "node_modules/core-js-pure/es/get-iterator.js"(exports, module) {
      require_es_array_iterator();
      require_es_string_iterator();
      var getIterator = require_get_iterator();
      module.exports = getIterator;
    }
  });

  // node_modules/core-js-pure/stable/get-iterator.js
  var require_get_iterator3 = __commonJS({
    "node_modules/core-js-pure/stable/get-iterator.js"(exports, module) {
      var parent = require_get_iterator2();
      require_web_dom_collections_iterator();
      module.exports = parent;
    }
  });

  // node_modules/core-js-pure/actual/get-iterator.js
  var require_get_iterator4 = __commonJS({
    "node_modules/core-js-pure/actual/get-iterator.js"(exports, module) {
      var parent = require_get_iterator3();
      module.exports = parent;
    }
  });

  // node_modules/core-js-pure/full/get-iterator.js
  var require_get_iterator5 = __commonJS({
    "node_modules/core-js-pure/full/get-iterator.js"(exports, module) {
      var parent = require_get_iterator4();
      module.exports = parent;
    }
  });

  // node_modules/core-js-pure/features/get-iterator.js
  var require_get_iterator6 = __commonJS({
    "node_modules/core-js-pure/features/get-iterator.js"(exports, module) {
      module.exports = require_get_iterator5();
    }
  });

  // node_modules/@babel/runtime-corejs3/core-js/get-iterator.js
  var require_get_iterator7 = __commonJS({
    "node_modules/@babel/runtime-corejs3/core-js/get-iterator.js"(exports, module) {
      module.exports = require_get_iterator6();
    }
  });

  // node_modules/core-js-pure/modules/es.array.is-array.js
  var require_es_array_is_array = __commonJS({
    "node_modules/core-js-pure/modules/es.array.is-array.js"() {
      var $3 = require_export();
      var isArray = require_is_array();
      $3({target: "Array", stat: true}, {
        isArray
      });
    }
  });

  // node_modules/core-js-pure/es/array/is-array.js
  var require_is_array2 = __commonJS({
    "node_modules/core-js-pure/es/array/is-array.js"(exports, module) {
      require_es_array_is_array();
      var path = require_path();
      module.exports = path.Array.isArray;
    }
  });

  // node_modules/core-js-pure/stable/array/is-array.js
  var require_is_array3 = __commonJS({
    "node_modules/core-js-pure/stable/array/is-array.js"(exports, module) {
      var parent = require_is_array2();
      module.exports = parent;
    }
  });

  // node_modules/@babel/runtime-corejs3/core-js-stable/array/is-array.js
  var require_is_array4 = __commonJS({
    "node_modules/@babel/runtime-corejs3/core-js-stable/array/is-array.js"(exports, module) {
      module.exports = require_is_array3();
    }
  });

  // node_modules/core-js-pure/es/get-iterator-method.js
  var require_get_iterator_method2 = __commonJS({
    "node_modules/core-js-pure/es/get-iterator-method.js"(exports, module) {
      require_es_array_iterator();
      require_es_string_iterator();
      var getIteratorMethod = require_get_iterator_method();
      module.exports = getIteratorMethod;
    }
  });

  // node_modules/core-js-pure/stable/get-iterator-method.js
  var require_get_iterator_method3 = __commonJS({
    "node_modules/core-js-pure/stable/get-iterator-method.js"(exports, module) {
      var parent = require_get_iterator_method2();
      require_web_dom_collections_iterator();
      module.exports = parent;
    }
  });

  // node_modules/core-js-pure/actual/get-iterator-method.js
  var require_get_iterator_method4 = __commonJS({
    "node_modules/core-js-pure/actual/get-iterator-method.js"(exports, module) {
      var parent = require_get_iterator_method3();
      module.exports = parent;
    }
  });

  // node_modules/core-js-pure/full/get-iterator-method.js
  var require_get_iterator_method5 = __commonJS({
    "node_modules/core-js-pure/full/get-iterator-method.js"(exports, module) {
      var parent = require_get_iterator_method4();
      module.exports = parent;
    }
  });

  // node_modules/core-js-pure/features/get-iterator-method.js
  var require_get_iterator_method6 = __commonJS({
    "node_modules/core-js-pure/features/get-iterator-method.js"(exports, module) {
      module.exports = require_get_iterator_method5();
    }
  });

  // node_modules/@babel/runtime-corejs3/core-js/get-iterator-method.js
  var require_get_iterator_method7 = __commonJS({
    "node_modules/@babel/runtime-corejs3/core-js/get-iterator-method.js"(exports, module) {
      module.exports = require_get_iterator_method6();
    }
  });

  // node_modules/core-js-pure/internals/does-not-exceed-safe-integer.js
  var require_does_not_exceed_safe_integer = __commonJS({
    "node_modules/core-js-pure/internals/does-not-exceed-safe-integer.js"(exports, module) {
      var $TypeError = TypeError;
      var MAX_SAFE_INTEGER = 9007199254740991;
      module.exports = function(it) {
        if (it > MAX_SAFE_INTEGER)
          throw $TypeError("Maximum allowed index exceeded");
        return it;
      };
    }
  });

  // node_modules/core-js-pure/internals/array-method-has-species-support.js
  var require_array_method_has_species_support = __commonJS({
    "node_modules/core-js-pure/internals/array-method-has-species-support.js"(exports, module) {
      var fails = require_fails();
      var wellKnownSymbol = require_well_known_symbol();
      var V8_VERSION = require_engine_v8_version();
      var SPECIES = wellKnownSymbol("species");
      module.exports = function(METHOD_NAME) {
        return V8_VERSION >= 51 || !fails(function() {
          var array = [];
          var constructor = array.constructor = {};
          constructor[SPECIES] = function() {
            return {foo: 1};
          };
          return array[METHOD_NAME](Boolean).foo !== 1;
        });
      };
    }
  });

  // node_modules/core-js-pure/modules/es.array.concat.js
  var require_es_array_concat = __commonJS({
    "node_modules/core-js-pure/modules/es.array.concat.js"() {
      "use strict";
      var $3 = require_export();
      var fails = require_fails();
      var isArray = require_is_array();
      var isObject = require_is_object();
      var toObject = require_to_object();
      var lengthOfArrayLike = require_length_of_array_like();
      var doesNotExceedSafeInteger = require_does_not_exceed_safe_integer();
      var createProperty = require_create_property();
      var arraySpeciesCreate = require_array_species_create();
      var arrayMethodHasSpeciesSupport = require_array_method_has_species_support();
      var wellKnownSymbol = require_well_known_symbol();
      var V8_VERSION = require_engine_v8_version();
      var IS_CONCAT_SPREADABLE = wellKnownSymbol("isConcatSpreadable");
      var IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function() {
        var array = [];
        array[IS_CONCAT_SPREADABLE] = false;
        return array.concat()[0] !== array;
      });
      var SPECIES_SUPPORT = arrayMethodHasSpeciesSupport("concat");
      var isConcatSpreadable = function(O2) {
        if (!isObject(O2))
          return false;
        var spreadable = O2[IS_CONCAT_SPREADABLE];
        return spreadable !== void 0 ? !!spreadable : isArray(O2);
      };
      var FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;
      $3({target: "Array", proto: true, arity: 1, forced: FORCED}, {
        concat: function concat(arg) {
          var O2 = toObject(this);
          var A = arraySpeciesCreate(O2, 0);
          var n = 0;
          var i2, k2, length, len, E2;
          for (i2 = -1, length = arguments.length; i2 < length; i2++) {
            E2 = i2 === -1 ? O2 : arguments[i2];
            if (isConcatSpreadable(E2)) {
              len = lengthOfArrayLike(E2);
              doesNotExceedSafeInteger(n + len);
              for (k2 = 0; k2 < len; k2++, n++)
                if (k2 in E2)
                  createProperty(A, n, E2[k2]);
            } else {
              doesNotExceedSafeInteger(n + 1);
              createProperty(A, n++, E2);
            }
          }
          A.length = n;
          return A;
        }
      });
    }
  });

  // node_modules/core-js-pure/internals/object-get-own-property-symbols.js
  var require_object_get_own_property_symbols = __commonJS({
    "node_modules/core-js-pure/internals/object-get-own-property-symbols.js"(exports) {
      exports.f = Object.getOwnPropertySymbols;
    }
  });

  // node_modules/core-js-pure/internals/well-known-symbol-wrapped.js
  var require_well_known_symbol_wrapped = __commonJS({
    "node_modules/core-js-pure/internals/well-known-symbol-wrapped.js"(exports) {
      var wellKnownSymbol = require_well_known_symbol();
      exports.f = wellKnownSymbol;
    }
  });

  // node_modules/core-js-pure/internals/well-known-symbol-define.js
  var require_well_known_symbol_define = __commonJS({
    "node_modules/core-js-pure/internals/well-known-symbol-define.js"(exports, module) {
      var path = require_path();
      var hasOwn = require_has_own_property();
      var wrappedWellKnownSymbolModule = require_well_known_symbol_wrapped();
      var defineProperty = require_object_define_property().f;
      module.exports = function(NAME) {
        var Symbol2 = path.Symbol || (path.Symbol = {});
        if (!hasOwn(Symbol2, NAME))
          defineProperty(Symbol2, NAME, {
            value: wrappedWellKnownSymbolModule.f(NAME)
          });
      };
    }
  });

  // node_modules/core-js-pure/internals/symbol-define-to-primitive.js
  var require_symbol_define_to_primitive = __commonJS({
    "node_modules/core-js-pure/internals/symbol-define-to-primitive.js"(exports, module) {
      var call = require_function_call();
      var getBuiltIn = require_get_built_in();
      var wellKnownSymbol = require_well_known_symbol();
      var defineBuiltIn = require_define_built_in();
      module.exports = function() {
        var Symbol2 = getBuiltIn("Symbol");
        var SymbolPrototype = Symbol2 && Symbol2.prototype;
        var valueOf = SymbolPrototype && SymbolPrototype.valueOf;
        var TO_PRIMITIVE = wellKnownSymbol("toPrimitive");
        if (SymbolPrototype && !SymbolPrototype[TO_PRIMITIVE]) {
          defineBuiltIn(SymbolPrototype, TO_PRIMITIVE, function(hint) {
            return call(valueOf, this);
          }, {arity: 1});
        }
      };
    }
  });

  // node_modules/core-js-pure/modules/es.symbol.constructor.js
  var require_es_symbol_constructor = __commonJS({
    "node_modules/core-js-pure/modules/es.symbol.constructor.js"() {
      "use strict";
      var $3 = require_export();
      var global2 = require_global();
      var call = require_function_call();
      var uncurryThis = require_function_uncurry_this();
      var IS_PURE = require_is_pure();
      var DESCRIPTORS = require_descriptors();
      var NATIVE_SYMBOL = require_symbol_constructor_detection();
      var fails = require_fails();
      var hasOwn = require_has_own_property();
      var isPrototypeOf = require_object_is_prototype_of();
      var anObject = require_an_object();
      var toIndexedObject = require_to_indexed_object();
      var toPropertyKey = require_to_property_key();
      var $toString = require_to_string();
      var createPropertyDescriptor = require_create_property_descriptor();
      var nativeObjectCreate = require_object_create();
      var objectKeys = require_object_keys();
      var getOwnPropertyNamesModule = require_object_get_own_property_names();
      var getOwnPropertyNamesExternal = require_object_get_own_property_names_external();
      var getOwnPropertySymbolsModule = require_object_get_own_property_symbols();
      var getOwnPropertyDescriptorModule = require_object_get_own_property_descriptor();
      var definePropertyModule = require_object_define_property();
      var definePropertiesModule = require_object_define_properties();
      var propertyIsEnumerableModule = require_object_property_is_enumerable();
      var defineBuiltIn = require_define_built_in();
      var shared = require_shared();
      var sharedKey = require_shared_key();
      var hiddenKeys = require_hidden_keys();
      var uid = require_uid();
      var wellKnownSymbol = require_well_known_symbol();
      var wrappedWellKnownSymbolModule = require_well_known_symbol_wrapped();
      var defineWellKnownSymbol = require_well_known_symbol_define();
      var defineSymbolToPrimitive = require_symbol_define_to_primitive();
      var setToStringTag = require_set_to_string_tag();
      var InternalStateModule = require_internal_state();
      var $forEach = require_array_iteration().forEach;
      var HIDDEN = sharedKey("hidden");
      var SYMBOL = "Symbol";
      var PROTOTYPE = "prototype";
      var setInternalState = InternalStateModule.set;
      var getInternalState = InternalStateModule.getterFor(SYMBOL);
      var ObjectPrototype = Object[PROTOTYPE];
      var $Symbol = global2.Symbol;
      var SymbolPrototype = $Symbol && $Symbol[PROTOTYPE];
      var TypeError2 = global2.TypeError;
      var QObject = global2.QObject;
      var nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
      var nativeDefineProperty = definePropertyModule.f;
      var nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;
      var nativePropertyIsEnumerable = propertyIsEnumerableModule.f;
      var push = uncurryThis([].push);
      var AllSymbols = shared("symbols");
      var ObjectPrototypeSymbols = shared("op-symbols");
      var WellKnownSymbolsStore = shared("wks");
      var USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;
      var setSymbolDescriptor = DESCRIPTORS && fails(function() {
        return nativeObjectCreate(nativeDefineProperty({}, "a", {
          get: function() {
            return nativeDefineProperty(this, "a", {value: 7}).a;
          }
        })).a != 7;
      }) ? function(O2, P, Attributes) {
        var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);
        if (ObjectPrototypeDescriptor)
          delete ObjectPrototype[P];
        nativeDefineProperty(O2, P, Attributes);
        if (ObjectPrototypeDescriptor && O2 !== ObjectPrototype) {
          nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);
        }
      } : nativeDefineProperty;
      var wrap = function(tag, description) {
        var symbol = AllSymbols[tag] = nativeObjectCreate(SymbolPrototype);
        setInternalState(symbol, {
          type: SYMBOL,
          tag,
          description
        });
        if (!DESCRIPTORS)
          symbol.description = description;
        return symbol;
      };
      var $defineProperty = function defineProperty(O2, P, Attributes) {
        if (O2 === ObjectPrototype)
          $defineProperty(ObjectPrototypeSymbols, P, Attributes);
        anObject(O2);
        var key = toPropertyKey(P);
        anObject(Attributes);
        if (hasOwn(AllSymbols, key)) {
          if (!Attributes.enumerable) {
            if (!hasOwn(O2, HIDDEN))
              nativeDefineProperty(O2, HIDDEN, createPropertyDescriptor(1, {}));
            O2[HIDDEN][key] = true;
          } else {
            if (hasOwn(O2, HIDDEN) && O2[HIDDEN][key])
              O2[HIDDEN][key] = false;
            Attributes = nativeObjectCreate(Attributes, {enumerable: createPropertyDescriptor(0, false)});
          }
          return setSymbolDescriptor(O2, key, Attributes);
        }
        return nativeDefineProperty(O2, key, Attributes);
      };
      var $defineProperties = function defineProperties(O2, Properties) {
        anObject(O2);
        var properties = toIndexedObject(Properties);
        var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));
        $forEach(keys, function(key) {
          if (!DESCRIPTORS || call($propertyIsEnumerable, properties, key))
            $defineProperty(O2, key, properties[key]);
        });
        return O2;
      };
      var $create = function create(O2, Properties) {
        return Properties === void 0 ? nativeObjectCreate(O2) : $defineProperties(nativeObjectCreate(O2), Properties);
      };
      var $propertyIsEnumerable = function propertyIsEnumerable(V) {
        var P = toPropertyKey(V);
        var enumerable = call(nativePropertyIsEnumerable, this, P);
        if (this === ObjectPrototype && hasOwn(AllSymbols, P) && !hasOwn(ObjectPrototypeSymbols, P))
          return false;
        return enumerable || !hasOwn(this, P) || !hasOwn(AllSymbols, P) || hasOwn(this, HIDDEN) && this[HIDDEN][P] ? enumerable : true;
      };
      var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O2, P) {
        var it = toIndexedObject(O2);
        var key = toPropertyKey(P);
        if (it === ObjectPrototype && hasOwn(AllSymbols, key) && !hasOwn(ObjectPrototypeSymbols, key))
          return;
        var descriptor = nativeGetOwnPropertyDescriptor(it, key);
        if (descriptor && hasOwn(AllSymbols, key) && !(hasOwn(it, HIDDEN) && it[HIDDEN][key])) {
          descriptor.enumerable = true;
        }
        return descriptor;
      };
      var $getOwnPropertyNames = function getOwnPropertyNames(O2) {
        var names = nativeGetOwnPropertyNames(toIndexedObject(O2));
        var result = [];
        $forEach(names, function(key) {
          if (!hasOwn(AllSymbols, key) && !hasOwn(hiddenKeys, key))
            push(result, key);
        });
        return result;
      };
      var $getOwnPropertySymbols = function(O2) {
        var IS_OBJECT_PROTOTYPE = O2 === ObjectPrototype;
        var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O2));
        var result = [];
        $forEach(names, function(key) {
          if (hasOwn(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || hasOwn(ObjectPrototype, key))) {
            push(result, AllSymbols[key]);
          }
        });
        return result;
      };
      if (!NATIVE_SYMBOL) {
        $Symbol = function Symbol2() {
          if (isPrototypeOf(SymbolPrototype, this))
            throw TypeError2("Symbol is not a constructor");
          var description = !arguments.length || arguments[0] === void 0 ? void 0 : $toString(arguments[0]);
          var tag = uid(description);
          var setter = function(value) {
            if (this === ObjectPrototype)
              call(setter, ObjectPrototypeSymbols, value);
            if (hasOwn(this, HIDDEN) && hasOwn(this[HIDDEN], tag))
              this[HIDDEN][tag] = false;
            setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));
          };
          if (DESCRIPTORS && USE_SETTER)
            setSymbolDescriptor(ObjectPrototype, tag, {configurable: true, set: setter});
          return wrap(tag, description);
        };
        SymbolPrototype = $Symbol[PROTOTYPE];
        defineBuiltIn(SymbolPrototype, "toString", function toString() {
          return getInternalState(this).tag;
        });
        defineBuiltIn($Symbol, "withoutSetter", function(description) {
          return wrap(uid(description), description);
        });
        propertyIsEnumerableModule.f = $propertyIsEnumerable;
        definePropertyModule.f = $defineProperty;
        definePropertiesModule.f = $defineProperties;
        getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;
        getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;
        getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;
        wrappedWellKnownSymbolModule.f = function(name) {
          return wrap(wellKnownSymbol(name), name);
        };
        if (DESCRIPTORS) {
          nativeDefineProperty(SymbolPrototype, "description", {
            configurable: true,
            get: function description() {
              return getInternalState(this).description;
            }
          });
          if (!IS_PURE) {
            defineBuiltIn(ObjectPrototype, "propertyIsEnumerable", $propertyIsEnumerable, {unsafe: true});
          }
        }
      }
      $3({global: true, constructor: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL}, {
        Symbol: $Symbol
      });
      $forEach(objectKeys(WellKnownSymbolsStore), function(name) {
        defineWellKnownSymbol(name);
      });
      $3({target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL}, {
        useSetter: function() {
          USE_SETTER = true;
        },
        useSimple: function() {
          USE_SETTER = false;
        }
      });
      $3({target: "Object", stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS}, {
        create: $create,
        defineProperty: $defineProperty,
        defineProperties: $defineProperties,
        getOwnPropertyDescriptor: $getOwnPropertyDescriptor
      });
      $3({target: "Object", stat: true, forced: !NATIVE_SYMBOL}, {
        getOwnPropertyNames: $getOwnPropertyNames
      });
      defineSymbolToPrimitive();
      setToStringTag($Symbol, SYMBOL);
      hiddenKeys[HIDDEN] = true;
    }
  });

  // node_modules/core-js-pure/internals/symbol-registry-detection.js
  var require_symbol_registry_detection = __commonJS({
    "node_modules/core-js-pure/internals/symbol-registry-detection.js"(exports, module) {
      var NATIVE_SYMBOL = require_symbol_constructor_detection();
      module.exports = NATIVE_SYMBOL && !!Symbol["for"] && !!Symbol.keyFor;
    }
  });

  // node_modules/core-js-pure/modules/es.symbol.for.js
  var require_es_symbol_for = __commonJS({
    "node_modules/core-js-pure/modules/es.symbol.for.js"() {
      var $3 = require_export();
      var getBuiltIn = require_get_built_in();
      var hasOwn = require_has_own_property();
      var toString = require_to_string();
      var shared = require_shared();
      var NATIVE_SYMBOL_REGISTRY = require_symbol_registry_detection();
      var StringToSymbolRegistry = shared("string-to-symbol-registry");
      var SymbolToStringRegistry = shared("symbol-to-string-registry");
      $3({target: "Symbol", stat: true, forced: !NATIVE_SYMBOL_REGISTRY}, {
        "for": function(key) {
          var string = toString(key);
          if (hasOwn(StringToSymbolRegistry, string))
            return StringToSymbolRegistry[string];
          var symbol = getBuiltIn("Symbol")(string);
          StringToSymbolRegistry[string] = symbol;
          SymbolToStringRegistry[symbol] = string;
          return symbol;
        }
      });
    }
  });

  // node_modules/core-js-pure/modules/es.symbol.key-for.js
  var require_es_symbol_key_for = __commonJS({
    "node_modules/core-js-pure/modules/es.symbol.key-for.js"() {
      var $3 = require_export();
      var hasOwn = require_has_own_property();
      var isSymbol = require_is_symbol();
      var tryToString = require_try_to_string();
      var shared = require_shared();
      var NATIVE_SYMBOL_REGISTRY = require_symbol_registry_detection();
      var SymbolToStringRegistry = shared("symbol-to-string-registry");
      $3({target: "Symbol", stat: true, forced: !NATIVE_SYMBOL_REGISTRY}, {
        keyFor: function keyFor(sym) {
          if (!isSymbol(sym))
            throw TypeError(tryToString(sym) + " is not a symbol");
          if (hasOwn(SymbolToStringRegistry, sym))
            return SymbolToStringRegistry[sym];
        }
      });
    }
  });

  // node_modules/core-js-pure/internals/array-slice.js
  var require_array_slice = __commonJS({
    "node_modules/core-js-pure/internals/array-slice.js"(exports, module) {
      var uncurryThis = require_function_uncurry_this();
      module.exports = uncurryThis([].slice);
    }
  });

  // node_modules/core-js-pure/modules/es.json.stringify.js
  var require_es_json_stringify = __commonJS({
    "node_modules/core-js-pure/modules/es.json.stringify.js"() {
      var $3 = require_export();
      var getBuiltIn = require_get_built_in();
      var apply = require_function_apply();
      var call = require_function_call();
      var uncurryThis = require_function_uncurry_this();
      var fails = require_fails();
      var isArray = require_is_array();
      var isCallable = require_is_callable();
      var isObject = require_is_object();
      var isSymbol = require_is_symbol();
      var arraySlice = require_array_slice();
      var NATIVE_SYMBOL = require_symbol_constructor_detection();
      var $stringify = getBuiltIn("JSON", "stringify");
      var exec = uncurryThis(/./.exec);
      var charAt = uncurryThis("".charAt);
      var charCodeAt = uncurryThis("".charCodeAt);
      var replace = uncurryThis("".replace);
      var numberToString = uncurryThis(1 .toString);
      var tester = /[\uD800-\uDFFF]/g;
      var low = /^[\uD800-\uDBFF]$/;
      var hi = /^[\uDC00-\uDFFF]$/;
      var WRONG_SYMBOLS_CONVERSION = !NATIVE_SYMBOL || fails(function() {
        var symbol = getBuiltIn("Symbol")();
        return $stringify([symbol]) != "[null]" || $stringify({a: symbol}) != "{}" || $stringify(Object(symbol)) != "{}";
      });
      var ILL_FORMED_UNICODE = fails(function() {
        return $stringify("\uDF06\uD834") !== '"\\udf06\\ud834"' || $stringify("\uDEAD") !== '"\\udead"';
      });
      var stringifyWithSymbolsFix = function(it, replacer) {
        var args = arraySlice(arguments);
        var $replacer = replacer;
        if (!isObject(replacer) && it === void 0 || isSymbol(it))
          return;
        if (!isArray(replacer))
          replacer = function(key, value) {
            if (isCallable($replacer))
              value = call($replacer, this, key, value);
            if (!isSymbol(value))
              return value;
          };
        args[1] = replacer;
        return apply($stringify, null, args);
      };
      var fixIllFormed = function(match2, offset, string) {
        var prev = charAt(string, offset - 1);
        var next = charAt(string, offset + 1);
        if (exec(low, match2) && !exec(hi, next) || exec(hi, match2) && !exec(low, prev)) {
          return "\\u" + numberToString(charCodeAt(match2, 0), 16);
        }
        return match2;
      };
      if ($stringify) {
        $3({target: "JSON", stat: true, arity: 3, forced: WRONG_SYMBOLS_CONVERSION || ILL_FORMED_UNICODE}, {
          stringify: function stringify(it, replacer, space) {
            var args = arraySlice(arguments);
            var result = apply(WRONG_SYMBOLS_CONVERSION ? stringifyWithSymbolsFix : $stringify, null, args);
            return ILL_FORMED_UNICODE && typeof result == "string" ? replace(result, tester, fixIllFormed) : result;
          }
        });
      }
    }
  });

  // node_modules/core-js-pure/modules/es.object.get-own-property-symbols.js
  var require_es_object_get_own_property_symbols = __commonJS({
    "node_modules/core-js-pure/modules/es.object.get-own-property-symbols.js"() {
      var $3 = require_export();
      var NATIVE_SYMBOL = require_symbol_constructor_detection();
      var fails = require_fails();
      var getOwnPropertySymbolsModule = require_object_get_own_property_symbols();
      var toObject = require_to_object();
      var FORCED = !NATIVE_SYMBOL || fails(function() {
        getOwnPropertySymbolsModule.f(1);
      });
      $3({target: "Object", stat: true, forced: FORCED}, {
        getOwnPropertySymbols: function getOwnPropertySymbols(it) {
          var $getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
          return $getOwnPropertySymbols ? $getOwnPropertySymbols(toObject(it)) : [];
        }
      });
    }
  });

  // node_modules/core-js-pure/modules/es.symbol.js
  var require_es_symbol = __commonJS({
    "node_modules/core-js-pure/modules/es.symbol.js"() {
      require_es_symbol_constructor();
      require_es_symbol_for();
      require_es_symbol_key_for();
      require_es_json_stringify();
      require_es_object_get_own_property_symbols();
    }
  });

  // node_modules/core-js-pure/modules/es.symbol.async-iterator.js
  var require_es_symbol_async_iterator = __commonJS({
    "node_modules/core-js-pure/modules/es.symbol.async-iterator.js"() {
      var defineWellKnownSymbol = require_well_known_symbol_define();
      defineWellKnownSymbol("asyncIterator");
    }
  });

  // node_modules/core-js-pure/modules/es.symbol.description.js
  var require_es_symbol_description = __commonJS({
    "node_modules/core-js-pure/modules/es.symbol.description.js"() {
    }
  });

  // node_modules/core-js-pure/modules/es.symbol.has-instance.js
  var require_es_symbol_has_instance = __commonJS({
    "node_modules/core-js-pure/modules/es.symbol.has-instance.js"() {
      var defineWellKnownSymbol = require_well_known_symbol_define();
      defineWellKnownSymbol("hasInstance");
    }
  });

  // node_modules/core-js-pure/modules/es.symbol.is-concat-spreadable.js
  var require_es_symbol_is_concat_spreadable = __commonJS({
    "node_modules/core-js-pure/modules/es.symbol.is-concat-spreadable.js"() {
      var defineWellKnownSymbol = require_well_known_symbol_define();
      defineWellKnownSymbol("isConcatSpreadable");
    }
  });

  // node_modules/core-js-pure/modules/es.symbol.iterator.js
  var require_es_symbol_iterator = __commonJS({
    "node_modules/core-js-pure/modules/es.symbol.iterator.js"() {
      var defineWellKnownSymbol = require_well_known_symbol_define();
      defineWellKnownSymbol("iterator");
    }
  });

  // node_modules/core-js-pure/modules/es.symbol.match.js
  var require_es_symbol_match = __commonJS({
    "node_modules/core-js-pure/modules/es.symbol.match.js"() {
      var defineWellKnownSymbol = require_well_known_symbol_define();
      defineWellKnownSymbol("match");
    }
  });

  // node_modules/core-js-pure/modules/es.symbol.match-all.js
  var require_es_symbol_match_all = __commonJS({
    "node_modules/core-js-pure/modules/es.symbol.match-all.js"() {
      var defineWellKnownSymbol = require_well_known_symbol_define();
      defineWellKnownSymbol("matchAll");
    }
  });

  // node_modules/core-js-pure/modules/es.symbol.replace.js
  var require_es_symbol_replace = __commonJS({
    "node_modules/core-js-pure/modules/es.symbol.replace.js"() {
      var defineWellKnownSymbol = require_well_known_symbol_define();
      defineWellKnownSymbol("replace");
    }
  });

  // node_modules/core-js-pure/modules/es.symbol.search.js
  var require_es_symbol_search = __commonJS({
    "node_modules/core-js-pure/modules/es.symbol.search.js"() {
      var defineWellKnownSymbol = require_well_known_symbol_define();
      defineWellKnownSymbol("search");
    }
  });

  // node_modules/core-js-pure/modules/es.symbol.species.js
  var require_es_symbol_species = __commonJS({
    "node_modules/core-js-pure/modules/es.symbol.species.js"() {
      var defineWellKnownSymbol = require_well_known_symbol_define();
      defineWellKnownSymbol("species");
    }
  });

  // node_modules/core-js-pure/modules/es.symbol.split.js
  var require_es_symbol_split = __commonJS({
    "node_modules/core-js-pure/modules/es.symbol.split.js"() {
      var defineWellKnownSymbol = require_well_known_symbol_define();
      defineWellKnownSymbol("split");
    }
  });

  // node_modules/core-js-pure/modules/es.symbol.to-primitive.js
  var require_es_symbol_to_primitive = __commonJS({
    "node_modules/core-js-pure/modules/es.symbol.to-primitive.js"() {
      var defineWellKnownSymbol = require_well_known_symbol_define();
      var defineSymbolToPrimitive = require_symbol_define_to_primitive();
      defineWellKnownSymbol("toPrimitive");
      defineSymbolToPrimitive();
    }
  });

  // node_modules/core-js-pure/modules/es.symbol.to-string-tag.js
  var require_es_symbol_to_string_tag = __commonJS({
    "node_modules/core-js-pure/modules/es.symbol.to-string-tag.js"() {
      var getBuiltIn = require_get_built_in();
      var defineWellKnownSymbol = require_well_known_symbol_define();
      var setToStringTag = require_set_to_string_tag();
      defineWellKnownSymbol("toStringTag");
      setToStringTag(getBuiltIn("Symbol"), "Symbol");
    }
  });

  // node_modules/core-js-pure/modules/es.symbol.unscopables.js
  var require_es_symbol_unscopables = __commonJS({
    "node_modules/core-js-pure/modules/es.symbol.unscopables.js"() {
      var defineWellKnownSymbol = require_well_known_symbol_define();
      defineWellKnownSymbol("unscopables");
    }
  });

  // node_modules/core-js-pure/modules/es.json.to-string-tag.js
  var require_es_json_to_string_tag = __commonJS({
    "node_modules/core-js-pure/modules/es.json.to-string-tag.js"() {
      var global2 = require_global();
      var setToStringTag = require_set_to_string_tag();
      setToStringTag(global2.JSON, "JSON", true);
    }
  });

  // node_modules/core-js-pure/modules/es.math.to-string-tag.js
  var require_es_math_to_string_tag = __commonJS({
    "node_modules/core-js-pure/modules/es.math.to-string-tag.js"() {
    }
  });

  // node_modules/core-js-pure/modules/es.reflect.to-string-tag.js
  var require_es_reflect_to_string_tag = __commonJS({
    "node_modules/core-js-pure/modules/es.reflect.to-string-tag.js"() {
    }
  });

  // node_modules/core-js-pure/es/symbol/index.js
  var require_symbol = __commonJS({
    "node_modules/core-js-pure/es/symbol/index.js"(exports, module) {
      require_es_array_concat();
      require_es_object_to_string();
      require_es_symbol();
      require_es_symbol_async_iterator();
      require_es_symbol_description();
      require_es_symbol_has_instance();
      require_es_symbol_is_concat_spreadable();
      require_es_symbol_iterator();
      require_es_symbol_match();
      require_es_symbol_match_all();
      require_es_symbol_replace();
      require_es_symbol_search();
      require_es_symbol_species();
      require_es_symbol_split();
      require_es_symbol_to_primitive();
      require_es_symbol_to_string_tag();
      require_es_symbol_unscopables();
      require_es_json_to_string_tag();
      require_es_math_to_string_tag();
      require_es_reflect_to_string_tag();
      var path = require_path();
      module.exports = path.Symbol;
    }
  });

  // node_modules/core-js-pure/stable/symbol/index.js
  var require_symbol2 = __commonJS({
    "node_modules/core-js-pure/stable/symbol/index.js"(exports, module) {
      var parent = require_symbol();
      require_web_dom_collections_iterator();
      module.exports = parent;
    }
  });

  // node_modules/@babel/runtime-corejs3/core-js-stable/symbol.js
  var require_symbol3 = __commonJS({
    "node_modules/@babel/runtime-corejs3/core-js-stable/symbol.js"(exports, module) {
      module.exports = require_symbol2();
    }
  });

  // node_modules/core-js-pure/internals/call-with-safe-iteration-closing.js
  var require_call_with_safe_iteration_closing = __commonJS({
    "node_modules/core-js-pure/internals/call-with-safe-iteration-closing.js"(exports, module) {
      var anObject = require_an_object();
      var iteratorClose = require_iterator_close();
      module.exports = function(iterator, fn, value, ENTRIES) {
        try {
          return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);
        } catch (error) {
          iteratorClose(iterator, "throw", error);
        }
      };
    }
  });

  // node_modules/core-js-pure/internals/array-from.js
  var require_array_from2 = __commonJS({
    "node_modules/core-js-pure/internals/array-from.js"(exports, module) {
      "use strict";
      var bind = require_function_bind_context();
      var call = require_function_call();
      var toObject = require_to_object();
      var callWithSafeIterationClosing = require_call_with_safe_iteration_closing();
      var isArrayIteratorMethod = require_is_array_iterator_method();
      var isConstructor = require_is_constructor();
      var lengthOfArrayLike = require_length_of_array_like();
      var createProperty = require_create_property();
      var getIterator = require_get_iterator();
      var getIteratorMethod = require_get_iterator_method();
      var $Array = Array;
      module.exports = function from(arrayLike) {
        var O2 = toObject(arrayLike);
        var IS_CONSTRUCTOR = isConstructor(this);
        var argumentsLength = arguments.length;
        var mapfn = argumentsLength > 1 ? arguments[1] : void 0;
        var mapping = mapfn !== void 0;
        if (mapping)
          mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : void 0);
        var iteratorMethod = getIteratorMethod(O2);
        var index = 0;
        var length, result, step, iterator, next, value;
        if (iteratorMethod && !(this === $Array && isArrayIteratorMethod(iteratorMethod))) {
          iterator = getIterator(O2, iteratorMethod);
          next = iterator.next;
          result = IS_CONSTRUCTOR ? new this() : [];
          for (; !(step = call(next, iterator)).done; index++) {
            value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;
            createProperty(result, index, value);
          }
        } else {
          length = lengthOfArrayLike(O2);
          result = IS_CONSTRUCTOR ? new this(length) : $Array(length);
          for (; length > index; index++) {
            value = mapping ? mapfn(O2[index], index) : O2[index];
            createProperty(result, index, value);
          }
        }
        result.length = index;
        return result;
      };
    }
  });

  // node_modules/core-js-pure/internals/check-correctness-of-iteration.js
  var require_check_correctness_of_iteration = __commonJS({
    "node_modules/core-js-pure/internals/check-correctness-of-iteration.js"(exports, module) {
      var wellKnownSymbol = require_well_known_symbol();
      var ITERATOR = wellKnownSymbol("iterator");
      var SAFE_CLOSING = false;
      try {
        called = 0;
        iteratorWithReturn = {
          next: function() {
            return {done: !!called++};
          },
          "return": function() {
            SAFE_CLOSING = true;
          }
        };
        iteratorWithReturn[ITERATOR] = function() {
          return this;
        };
        Array.from(iteratorWithReturn, function() {
          throw 2;
        });
      } catch (error) {
      }
      var called;
      var iteratorWithReturn;
      module.exports = function(exec, SKIP_CLOSING) {
        if (!SKIP_CLOSING && !SAFE_CLOSING)
          return false;
        var ITERATION_SUPPORT = false;
        try {
          var object = {};
          object[ITERATOR] = function() {
            return {
              next: function() {
                return {done: ITERATION_SUPPORT = true};
              }
            };
          };
          exec(object);
        } catch (error) {
        }
        return ITERATION_SUPPORT;
      };
    }
  });

  // node_modules/core-js-pure/modules/es.array.from.js
  var require_es_array_from = __commonJS({
    "node_modules/core-js-pure/modules/es.array.from.js"() {
      var $3 = require_export();
      var from = require_array_from2();
      var checkCorrectnessOfIteration = require_check_correctness_of_iteration();
      var INCORRECT_ITERATION = !checkCorrectnessOfIteration(function(iterable) {
        Array.from(iterable);
      });
      $3({target: "Array", stat: true, forced: INCORRECT_ITERATION}, {
        from
      });
    }
  });

  // node_modules/core-js-pure/es/array/from.js
  var require_from = __commonJS({
    "node_modules/core-js-pure/es/array/from.js"(exports, module) {
      require_es_string_iterator();
      require_es_array_from();
      var path = require_path();
      module.exports = path.Array.from;
    }
  });

  // node_modules/core-js-pure/stable/array/from.js
  var require_from2 = __commonJS({
    "node_modules/core-js-pure/stable/array/from.js"(exports, module) {
      var parent = require_from();
      module.exports = parent;
    }
  });

  // node_modules/@babel/runtime-corejs3/core-js-stable/array/from.js
  var require_from3 = __commonJS({
    "node_modules/@babel/runtime-corejs3/core-js-stable/array/from.js"(exports, module) {
      module.exports = require_from2();
    }
  });

  // node_modules/core-js-pure/modules/es.array.slice.js
  var require_es_array_slice = __commonJS({
    "node_modules/core-js-pure/modules/es.array.slice.js"() {
      "use strict";
      var $3 = require_export();
      var isArray = require_is_array();
      var isConstructor = require_is_constructor();
      var isObject = require_is_object();
      var toAbsoluteIndex = require_to_absolute_index();
      var lengthOfArrayLike = require_length_of_array_like();
      var toIndexedObject = require_to_indexed_object();
      var createProperty = require_create_property();
      var wellKnownSymbol = require_well_known_symbol();
      var arrayMethodHasSpeciesSupport = require_array_method_has_species_support();
      var nativeSlice = require_array_slice();
      var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport("slice");
      var SPECIES = wellKnownSymbol("species");
      var $Array = Array;
      var max = Math.max;
      $3({target: "Array", proto: true, forced: !HAS_SPECIES_SUPPORT}, {
        slice: function slice(start, end) {
          var O2 = toIndexedObject(this);
          var length = lengthOfArrayLike(O2);
          var k2 = toAbsoluteIndex(start, length);
          var fin = toAbsoluteIndex(end === void 0 ? length : end, length);
          var Constructor, result, n;
          if (isArray(O2)) {
            Constructor = O2.constructor;
            if (isConstructor(Constructor) && (Constructor === $Array || isArray(Constructor.prototype))) {
              Constructor = void 0;
            } else if (isObject(Constructor)) {
              Constructor = Constructor[SPECIES];
              if (Constructor === null)
                Constructor = void 0;
            }
            if (Constructor === $Array || Constructor === void 0) {
              return nativeSlice(O2, k2, fin);
            }
          }
          result = new (Constructor === void 0 ? $Array : Constructor)(max(fin - k2, 0));
          for (n = 0; k2 < fin; k2++, n++)
            if (k2 in O2)
              createProperty(result, n, O2[k2]);
          result.length = n;
          return result;
        }
      });
    }
  });

  // node_modules/core-js-pure/internals/entry-virtual.js
  var require_entry_virtual = __commonJS({
    "node_modules/core-js-pure/internals/entry-virtual.js"(exports, module) {
      var path = require_path();
      module.exports = function(CONSTRUCTOR) {
        return path[CONSTRUCTOR + "Prototype"];
      };
    }
  });

  // node_modules/core-js-pure/es/array/virtual/slice.js
  var require_slice = __commonJS({
    "node_modules/core-js-pure/es/array/virtual/slice.js"(exports, module) {
      require_es_array_slice();
      var entryVirtual = require_entry_virtual();
      module.exports = entryVirtual("Array").slice;
    }
  });

  // node_modules/core-js-pure/es/instance/slice.js
  var require_slice2 = __commonJS({
    "node_modules/core-js-pure/es/instance/slice.js"(exports, module) {
      var isPrototypeOf = require_object_is_prototype_of();
      var method = require_slice();
      var ArrayPrototype = Array.prototype;
      module.exports = function(it) {
        var own = it.slice;
        return it === ArrayPrototype || isPrototypeOf(ArrayPrototype, it) && own === ArrayPrototype.slice ? method : own;
      };
    }
  });

  // node_modules/core-js-pure/stable/instance/slice.js
  var require_slice3 = __commonJS({
    "node_modules/core-js-pure/stable/instance/slice.js"(exports, module) {
      var parent = require_slice2();
      module.exports = parent;
    }
  });

  // node_modules/@babel/runtime-corejs3/core-js-stable/instance/slice.js
  var require_slice4 = __commonJS({
    "node_modules/@babel/runtime-corejs3/core-js-stable/instance/slice.js"(exports, module) {
      module.exports = require_slice3();
    }
  });

  // node_modules/core-js-pure/actual/object/define-property.js
  var require_define_property4 = __commonJS({
    "node_modules/core-js-pure/actual/object/define-property.js"(exports, module) {
      var parent = require_define_property2();
      module.exports = parent;
    }
  });

  // node_modules/core-js-pure/full/object/define-property.js
  var require_define_property5 = __commonJS({
    "node_modules/core-js-pure/full/object/define-property.js"(exports, module) {
      var parent = require_define_property4();
      module.exports = parent;
    }
  });

  // node_modules/core-js-pure/features/object/define-property.js
  var require_define_property6 = __commonJS({
    "node_modules/core-js-pure/features/object/define-property.js"(exports, module) {
      module.exports = require_define_property5();
    }
  });

  // node_modules/@babel/runtime-corejs3/core-js/object/define-property.js
  var require_define_property7 = __commonJS({
    "node_modules/@babel/runtime-corejs3/core-js/object/define-property.js"(exports, module) {
      module.exports = require_define_property6();
    }
  });

  // node_modules/@babel/runtime-corejs3/helpers/defineProperty.js
  var require_defineProperty = __commonJS({
    "node_modules/@babel/runtime-corejs3/helpers/defineProperty.js"(exports, module) {
      var _Object$defineProperty = require_define_property7();
      function _defineProperty(obj, key, value) {
        if (key in obj) {
          _Object$defineProperty(obj, key, {
            value,
            enumerable: true,
            configurable: true,
            writable: true
          });
        } else {
          obj[key] = value;
        }
        return obj;
      }
      module.exports = _defineProperty, module.exports.__esModule = true, module.exports["default"] = module.exports;
    }
  });

  // node_modules/core-js-pure/internals/object-assign.js
  var require_object_assign = __commonJS({
    "node_modules/core-js-pure/internals/object-assign.js"(exports, module) {
      "use strict";
      var DESCRIPTORS = require_descriptors();
      var uncurryThis = require_function_uncurry_this();
      var call = require_function_call();
      var fails = require_fails();
      var objectKeys = require_object_keys();
      var getOwnPropertySymbolsModule = require_object_get_own_property_symbols();
      var propertyIsEnumerableModule = require_object_property_is_enumerable();
      var toObject = require_to_object();
      var IndexedObject = require_indexed_object();
      var $assign = Object.assign;
      var defineProperty = Object.defineProperty;
      var concat = uncurryThis([].concat);
      module.exports = !$assign || fails(function() {
        if (DESCRIPTORS && $assign({b: 1}, $assign(defineProperty({}, "a", {
          enumerable: true,
          get: function() {
            defineProperty(this, "b", {
              value: 3,
              enumerable: false
            });
          }
        }), {b: 2})).b !== 1)
          return true;
        var A = {};
        var B2 = {};
        var symbol = Symbol();
        var alphabet = "abcdefghijklmnopqrst";
        A[symbol] = 7;
        alphabet.split("").forEach(function(chr) {
          B2[chr] = chr;
        });
        return $assign({}, A)[symbol] != 7 || objectKeys($assign({}, B2)).join("") != alphabet;
      }) ? function assign(target, source) {
        var T2 = toObject(target);
        var argumentsLength = arguments.length;
        var index = 1;
        var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
        var propertyIsEnumerable = propertyIsEnumerableModule.f;
        while (argumentsLength > index) {
          var S3 = IndexedObject(arguments[index++]);
          var keys = getOwnPropertySymbols ? concat(objectKeys(S3), getOwnPropertySymbols(S3)) : objectKeys(S3);
          var length = keys.length;
          var j = 0;
          var key;
          while (length > j) {
            key = keys[j++];
            if (!DESCRIPTORS || call(propertyIsEnumerable, S3, key))
              T2[key] = S3[key];
          }
        }
        return T2;
      } : $assign;
    }
  });

  // node_modules/core-js-pure/modules/es.object.assign.js
  var require_es_object_assign = __commonJS({
    "node_modules/core-js-pure/modules/es.object.assign.js"() {
      var $3 = require_export();
      var assign = require_object_assign();
      $3({target: "Object", stat: true, arity: 2, forced: Object.assign !== assign}, {
        assign
      });
    }
  });

  // node_modules/core-js-pure/es/object/assign.js
  var require_assign = __commonJS({
    "node_modules/core-js-pure/es/object/assign.js"(exports, module) {
      require_es_object_assign();
      var path = require_path();
      module.exports = path.Object.assign;
    }
  });

  // node_modules/core-js-pure/stable/object/assign.js
  var require_assign2 = __commonJS({
    "node_modules/core-js-pure/stable/object/assign.js"(exports, module) {
      var parent = require_assign();
      module.exports = parent;
    }
  });

  // node_modules/@babel/runtime-corejs3/core-js-stable/object/assign.js
  var require_assign3 = __commonJS({
    "node_modules/@babel/runtime-corejs3/core-js-stable/object/assign.js"(exports, module) {
      module.exports = require_assign2();
    }
  });

  // node_modules/core-js-pure/modules/es.object.keys.js
  var require_es_object_keys = __commonJS({
    "node_modules/core-js-pure/modules/es.object.keys.js"() {
      var $3 = require_export();
      var toObject = require_to_object();
      var nativeKeys = require_object_keys();
      var fails = require_fails();
      var FAILS_ON_PRIMITIVES = fails(function() {
        nativeKeys(1);
      });
      $3({target: "Object", stat: true, forced: FAILS_ON_PRIMITIVES}, {
        keys: function keys(it) {
          return nativeKeys(toObject(it));
        }
      });
    }
  });

  // node_modules/core-js-pure/es/object/keys.js
  var require_keys = __commonJS({
    "node_modules/core-js-pure/es/object/keys.js"(exports, module) {
      require_es_object_keys();
      var path = require_path();
      module.exports = path.Object.keys;
    }
  });

  // node_modules/core-js-pure/stable/object/keys.js
  var require_keys2 = __commonJS({
    "node_modules/core-js-pure/stable/object/keys.js"(exports, module) {
      var parent = require_keys();
      module.exports = parent;
    }
  });

  // node_modules/@babel/runtime-corejs3/core-js-stable/object/keys.js
  var require_keys3 = __commonJS({
    "node_modules/@babel/runtime-corejs3/core-js-stable/object/keys.js"(exports, module) {
      module.exports = require_keys2();
    }
  });

  // node_modules/core-js-pure/internals/array-method-is-strict.js
  var require_array_method_is_strict = __commonJS({
    "node_modules/core-js-pure/internals/array-method-is-strict.js"(exports, module) {
      "use strict";
      var fails = require_fails();
      module.exports = function(METHOD_NAME, argument) {
        var method = [][METHOD_NAME];
        return !!method && fails(function() {
          method.call(null, argument || function() {
            return 1;
          }, 1);
        });
      };
    }
  });

  // node_modules/core-js-pure/internals/array-for-each.js
  var require_array_for_each = __commonJS({
    "node_modules/core-js-pure/internals/array-for-each.js"(exports, module) {
      "use strict";
      var $forEach = require_array_iteration().forEach;
      var arrayMethodIsStrict = require_array_method_is_strict();
      var STRICT_METHOD = arrayMethodIsStrict("forEach");
      module.exports = !STRICT_METHOD ? function forEach(callbackfn) {
        return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : void 0);
      } : [].forEach;
    }
  });

  // node_modules/core-js-pure/modules/es.array.for-each.js
  var require_es_array_for_each = __commonJS({
    "node_modules/core-js-pure/modules/es.array.for-each.js"() {
      "use strict";
      var $3 = require_export();
      var forEach = require_array_for_each();
      $3({target: "Array", proto: true, forced: [].forEach != forEach}, {
        forEach
      });
    }
  });

  // node_modules/core-js-pure/es/array/virtual/for-each.js
  var require_for_each = __commonJS({
    "node_modules/core-js-pure/es/array/virtual/for-each.js"(exports, module) {
      require_es_array_for_each();
      var entryVirtual = require_entry_virtual();
      module.exports = entryVirtual("Array").forEach;
    }
  });

  // node_modules/core-js-pure/stable/array/virtual/for-each.js
  var require_for_each2 = __commonJS({
    "node_modules/core-js-pure/stable/array/virtual/for-each.js"(exports, module) {
      var parent = require_for_each();
      module.exports = parent;
    }
  });

  // node_modules/core-js-pure/stable/instance/for-each.js
  var require_for_each3 = __commonJS({
    "node_modules/core-js-pure/stable/instance/for-each.js"(exports, module) {
      require_web_dom_collections_iterator();
      var classof = require_classof();
      var hasOwn = require_has_own_property();
      var isPrototypeOf = require_object_is_prototype_of();
      var method = require_for_each2();
      var ArrayPrototype = Array.prototype;
      var DOMIterables = {
        DOMTokenList: true,
        NodeList: true
      };
      module.exports = function(it) {
        var own = it.forEach;
        return it === ArrayPrototype || isPrototypeOf(ArrayPrototype, it) && own === ArrayPrototype.forEach || hasOwn(DOMIterables, classof(it)) ? method : own;
      };
    }
  });

  // node_modules/@babel/runtime-corejs3/core-js-stable/instance/for-each.js
  var require_for_each4 = __commonJS({
    "node_modules/@babel/runtime-corejs3/core-js-stable/instance/for-each.js"(exports, module) {
      module.exports = require_for_each3();
    }
  });

  // node_modules/aria-query/lib/etc/roles/abstract/commandRole.js
  var require_commandRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/abstract/commandRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var commandRole = {
        abstract: true,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {},
        relatedConcepts: [{
          concept: {
            name: "menuitem"
          },
          module: "HTML"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "widget"]]
      };
      var _default = commandRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/abstract/compositeRole.js
  var require_compositeRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/abstract/compositeRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var compositeRole = {
        abstract: true,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-activedescendant": null,
          "aria-disabled": null
        },
        relatedConcepts: [],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "widget"]]
      };
      var _default = compositeRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/abstract/inputRole.js
  var require_inputRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/abstract/inputRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var inputRole = {
        abstract: true,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-disabled": null
        },
        relatedConcepts: [{
          concept: {
            name: "input"
          },
          module: "XForms"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "widget"]]
      };
      var _default = inputRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/abstract/landmarkRole.js
  var require_landmarkRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/abstract/landmarkRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var landmarkRole = {
        abstract: true,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {},
        relatedConcepts: [],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section"]]
      };
      var _default = landmarkRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/abstract/rangeRole.js
  var require_rangeRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/abstract/rangeRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var rangeRole = {
        abstract: true,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-valuemax": null,
          "aria-valuemin": null,
          "aria-valuenow": null,
          "aria-valuetext": null
        },
        relatedConcepts: [],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure"]]
      };
      var _default = rangeRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/abstract/roletypeRole.js
  var require_roletypeRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/abstract/roletypeRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var roletypeRole = {
        abstract: true,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: [],
        prohibitedProps: [],
        props: {
          "aria-atomic": null,
          "aria-busy": null,
          "aria-controls": null,
          "aria-current": null,
          "aria-describedby": null,
          "aria-details": null,
          "aria-dropeffect": null,
          "aria-flowto": null,
          "aria-grabbed": null,
          "aria-hidden": null,
          "aria-keyshortcuts": null,
          "aria-label": null,
          "aria-labelledby": null,
          "aria-live": null,
          "aria-owns": null,
          "aria-relevant": null,
          "aria-roledescription": null
        },
        relatedConcepts: [{
          concept: {
            name: "rel"
          },
          module: "HTML"
        }, {
          concept: {
            name: "role"
          },
          module: "XHTML"
        }, {
          concept: {
            name: "type"
          },
          module: "Dublin Core"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: []
      };
      var _default = roletypeRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/abstract/sectionRole.js
  var require_sectionRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/abstract/sectionRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var sectionRole = {
        abstract: true,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: [],
        prohibitedProps: [],
        props: {},
        relatedConcepts: [{
          concept: {
            name: "frontmatter"
          },
          module: "DTB"
        }, {
          concept: {
            name: "level"
          },
          module: "DTB"
        }, {
          concept: {
            name: "level"
          },
          module: "SMIL"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure"]]
      };
      var _default = sectionRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/abstract/sectionheadRole.js
  var require_sectionheadRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/abstract/sectionheadRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var sectionheadRole = {
        abstract: true,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author", "contents"],
        prohibitedProps: [],
        props: {},
        relatedConcepts: [],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure"]]
      };
      var _default = sectionheadRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/abstract/selectRole.js
  var require_selectRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/abstract/selectRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var selectRole = {
        abstract: true,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-orientation": null
        },
        relatedConcepts: [],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "widget", "composite"], ["roletype", "structure", "section", "group"]]
      };
      var _default = selectRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/abstract/structureRole.js
  var require_structureRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/abstract/structureRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var structureRole = {
        abstract: true,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: [],
        prohibitedProps: [],
        props: {},
        relatedConcepts: [],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype"]]
      };
      var _default = structureRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/abstract/widgetRole.js
  var require_widgetRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/abstract/widgetRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var widgetRole = {
        abstract: true,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: [],
        prohibitedProps: [],
        props: {},
        relatedConcepts: [],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype"]]
      };
      var _default = widgetRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/abstract/windowRole.js
  var require_windowRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/abstract/windowRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var windowRole = {
        abstract: true,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-modal": null
        },
        relatedConcepts: [],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype"]]
      };
      var _default = windowRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/ariaAbstractRoles.js
  var require_ariaAbstractRoles = __commonJS({
    "node_modules/aria-query/lib/etc/roles/ariaAbstractRoles.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault2();
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _map = _interopRequireDefault(require_map3());
      var _commandRole = _interopRequireDefault(require_commandRole());
      var _compositeRole = _interopRequireDefault(require_compositeRole());
      var _inputRole = _interopRequireDefault(require_inputRole());
      var _landmarkRole = _interopRequireDefault(require_landmarkRole());
      var _rangeRole = _interopRequireDefault(require_rangeRole());
      var _roletypeRole = _interopRequireDefault(require_roletypeRole());
      var _sectionRole = _interopRequireDefault(require_sectionRole());
      var _sectionheadRole = _interopRequireDefault(require_sectionheadRole());
      var _selectRole = _interopRequireDefault(require_selectRole());
      var _structureRole = _interopRequireDefault(require_structureRole());
      var _widgetRole = _interopRequireDefault(require_widgetRole());
      var _windowRole = _interopRequireDefault(require_windowRole());
      var ariaAbstractRoles = new _map.default([["command", _commandRole.default], ["composite", _compositeRole.default], ["input", _inputRole.default], ["landmark", _landmarkRole.default], ["range", _rangeRole.default], ["roletype", _roletypeRole.default], ["section", _sectionRole.default], ["sectionhead", _sectionheadRole.default], ["select", _selectRole.default], ["structure", _structureRole.default], ["widget", _widgetRole.default], ["window", _windowRole.default]]);
      var _default = ariaAbstractRoles;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/alertRole.js
  var require_alertRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/alertRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var alertRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-atomic": "true",
          "aria-live": "assertive"
        },
        relatedConcepts: [{
          concept: {
            name: "alert"
          },
          module: "XForms"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section"]]
      };
      var _default = alertRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/alertdialogRole.js
  var require_alertdialogRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/alertdialogRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var alertdialogRole = {
        abstract: false,
        accessibleNameRequired: true,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {},
        relatedConcepts: [{
          concept: {
            name: "alert"
          },
          module: "XForms"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section", "alert"], ["roletype", "window", "dialog"]]
      };
      var _default = alertdialogRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/applicationRole.js
  var require_applicationRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/applicationRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var applicationRole = {
        abstract: false,
        accessibleNameRequired: true,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-activedescendant": null,
          "aria-disabled": null,
          "aria-errormessage": null,
          "aria-expanded": null,
          "aria-haspopup": null,
          "aria-invalid": null
        },
        relatedConcepts: [{
          concept: {
            name: "Device Independence Delivery Unit"
          }
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure"]]
      };
      var _default = applicationRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/articleRole.js
  var require_articleRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/articleRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var articleRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-posinset": null,
          "aria-setsize": null
        },
        relatedConcepts: [{
          concept: {
            name: "article"
          },
          module: "HTML"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "document"]]
      };
      var _default = articleRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/bannerRole.js
  var require_bannerRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/bannerRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var bannerRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {},
        relatedConcepts: [{
          concept: {
            constraints: ["direct descendant of document"],
            name: "header"
          },
          module: "HTML"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section", "landmark"]]
      };
      var _default = bannerRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/blockquoteRole.js
  var require_blockquoteRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/blockquoteRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var blockquoteRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {},
        relatedConcepts: [],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section"]]
      };
      var _default = blockquoteRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/buttonRole.js
  var require_buttonRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/buttonRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var buttonRole = {
        abstract: false,
        accessibleNameRequired: true,
        baseConcepts: [],
        childrenPresentational: true,
        nameFrom: ["author", "contents"],
        prohibitedProps: [],
        props: {
          "aria-disabled": null,
          "aria-expanded": null,
          "aria-haspopup": null,
          "aria-pressed": null
        },
        relatedConcepts: [{
          concept: {
            attributes: [{
              constraints: ["set"],
              name: "aria-pressed"
            }, {
              name: "type",
              value: "checkbox"
            }],
            name: "input"
          },
          module: "HTML"
        }, {
          concept: {
            attributes: [{
              name: "aria-expanded",
              value: "false"
            }],
            name: "summary"
          },
          module: "HTML"
        }, {
          concept: {
            attributes: [{
              name: "aria-expanded",
              value: "true"
            }],
            constraints: ["direct descendant of details element with the open attribute defined"],
            name: "summary"
          },
          module: "HTML"
        }, {
          concept: {
            attributes: [{
              name: "type",
              value: "button"
            }],
            name: "input"
          },
          module: "HTML"
        }, {
          concept: {
            attributes: [{
              name: "type",
              value: "image"
            }],
            name: "input"
          },
          module: "HTML"
        }, {
          concept: {
            attributes: [{
              name: "type",
              value: "reset"
            }],
            name: "input"
          },
          module: "HTML"
        }, {
          concept: {
            attributes: [{
              name: "type",
              value: "submit"
            }],
            name: "input"
          },
          module: "HTML"
        }, {
          concept: {
            name: "button"
          },
          module: "HTML"
        }, {
          concept: {
            name: "trigger"
          },
          module: "XForms"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "widget", "command"]]
      };
      var _default = buttonRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/captionRole.js
  var require_captionRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/captionRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var captionRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["prohibited"],
        prohibitedProps: ["aria-label", "aria-labelledby"],
        props: {},
        relatedConcepts: [],
        requireContextRole: ["figure", "grid", "table"],
        requiredContextRole: ["figure", "grid", "table"],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section"]]
      };
      var _default = captionRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/cellRole.js
  var require_cellRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/cellRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var cellRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author", "contents"],
        prohibitedProps: [],
        props: {
          "aria-colindex": null,
          "aria-colspan": null,
          "aria-rowindex": null,
          "aria-rowspan": null
        },
        relatedConcepts: [{
          concept: {
            constraints: ["descendant of table"],
            name: "td"
          },
          module: "HTML"
        }],
        requireContextRole: ["row"],
        requiredContextRole: ["row"],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section"]]
      };
      var _default = cellRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/checkboxRole.js
  var require_checkboxRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/checkboxRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var checkboxRole = {
        abstract: false,
        accessibleNameRequired: true,
        baseConcepts: [],
        childrenPresentational: true,
        nameFrom: ["author", "contents"],
        prohibitedProps: [],
        props: {
          "aria-checked": null,
          "aria-errormessage": null,
          "aria-expanded": null,
          "aria-invalid": null,
          "aria-readonly": null,
          "aria-required": null
        },
        relatedConcepts: [{
          concept: {
            attributes: [{
              name: "type",
              value: "checkbox"
            }],
            name: "input"
          },
          module: "HTML"
        }, {
          concept: {
            name: "option"
          },
          module: "ARIA"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {
          "aria-checked": null
        },
        superClass: [["roletype", "widget", "input"]]
      };
      var _default = checkboxRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/codeRole.js
  var require_codeRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/codeRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var codeRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["prohibited"],
        prohibitedProps: ["aria-label", "aria-labelledby"],
        props: {},
        relatedConcepts: [],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section"]]
      };
      var _default = codeRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/columnheaderRole.js
  var require_columnheaderRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/columnheaderRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var columnheaderRole = {
        abstract: false,
        accessibleNameRequired: true,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author", "contents"],
        prohibitedProps: [],
        props: {
          "aria-sort": null
        },
        relatedConcepts: [{
          attributes: [{
            name: "scope",
            value: "col"
          }],
          concept: {
            name: "th"
          },
          module: "HTML"
        }],
        requireContextRole: ["row"],
        requiredContextRole: ["row"],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section", "cell"], ["roletype", "structure", "section", "cell", "gridcell"], ["roletype", "widget", "gridcell"], ["roletype", "structure", "sectionhead"]]
      };
      var _default = columnheaderRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/comboboxRole.js
  var require_comboboxRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/comboboxRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var comboboxRole = {
        abstract: false,
        accessibleNameRequired: true,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-activedescendant": null,
          "aria-autocomplete": null,
          "aria-errormessage": null,
          "aria-invalid": null,
          "aria-readonly": null,
          "aria-required": null,
          "aria-expanded": "false",
          "aria-haspopup": "listbox"
        },
        relatedConcepts: [{
          concept: {
            attributes: [{
              constraints: ["set"],
              name: "list"
            }, {
              name: "type",
              value: "email"
            }],
            name: "input"
          },
          module: "HTML"
        }, {
          concept: {
            attributes: [{
              constraints: ["set"],
              name: "list"
            }, {
              name: "type",
              value: "search"
            }],
            name: "input"
          },
          module: "HTML"
        }, {
          concept: {
            attributes: [{
              constraints: ["set"],
              name: "list"
            }, {
              name: "type",
              value: "tel"
            }],
            name: "input"
          },
          module: "HTML"
        }, {
          concept: {
            attributes: [{
              constraints: ["set"],
              name: "list"
            }, {
              name: "type",
              value: "text"
            }],
            name: "input"
          },
          module: "HTML"
        }, {
          concept: {
            attributes: [{
              constraints: ["set"],
              name: "list"
            }, {
              name: "type",
              value: "url"
            }],
            name: "input"
          },
          module: "HTML"
        }, {
          concept: {
            attributes: [{
              constraints: ["set"],
              name: "list"
            }, {
              name: "type",
              value: "url"
            }],
            name: "input"
          },
          module: "HTML"
        }, {
          concept: {
            attributes: [{
              constraints: ["undefined"],
              name: "multiple"
            }, {
              constraints: ["undefined"],
              name: "size"
            }],
            name: "select"
          },
          module: "HTML"
        }, {
          concept: {
            attributes: [{
              constraints: ["undefined"],
              name: "multiple"
            }, {
              name: "size",
              value: 1
            }],
            name: "select"
          },
          module: "HTML"
        }, {
          concept: {
            name: "select"
          },
          module: "XForms"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {
          "aria-controls": null,
          "aria-expanded": "false"
        },
        superClass: [["roletype", "widget", "input"]]
      };
      var _default = comboboxRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/complementaryRole.js
  var require_complementaryRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/complementaryRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var complementaryRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {},
        relatedConcepts: [{
          concept: {
            name: "aside"
          },
          module: "HTML"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section", "landmark"]]
      };
      var _default = complementaryRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/contentinfoRole.js
  var require_contentinfoRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/contentinfoRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var contentinfoRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {},
        relatedConcepts: [{
          concept: {
            constraints: ["direct descendant of document"],
            name: "footer"
          },
          module: "HTML"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section", "landmark"]]
      };
      var _default = contentinfoRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/definitionRole.js
  var require_definitionRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/definitionRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var definitionRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {},
        relatedConcepts: [{
          concept: {
            name: "dd"
          },
          module: "HTML"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section"]]
      };
      var _default = definitionRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/deletionRole.js
  var require_deletionRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/deletionRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var deletionRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["prohibited"],
        prohibitedProps: ["aria-label", "aria-labelledby"],
        props: {},
        relatedConcepts: [],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section"]]
      };
      var _default = deletionRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/dialogRole.js
  var require_dialogRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/dialogRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var dialogRole = {
        abstract: false,
        accessibleNameRequired: true,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {},
        relatedConcepts: [{
          concept: {
            name: "dialog"
          },
          module: "HTML"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "window"]]
      };
      var _default = dialogRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/directoryRole.js
  var require_directoryRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/directoryRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var directoryRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {},
        relatedConcepts: [{
          module: "DAISY Guide"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section", "list"]]
      };
      var _default = directoryRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/documentRole.js
  var require_documentRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/documentRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var documentRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {},
        relatedConcepts: [{
          concept: {
            name: "Device Independence Delivery Unit"
          }
        }, {
          concept: {
            name: "body"
          },
          module: "HTML"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure"]]
      };
      var _default = documentRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/emphasisRole.js
  var require_emphasisRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/emphasisRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var emphasisRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["prohibited"],
        prohibitedProps: ["aria-label", "aria-labelledby"],
        props: {},
        relatedConcepts: [],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section"]]
      };
      var _default = emphasisRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/feedRole.js
  var require_feedRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/feedRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var feedRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {},
        relatedConcepts: [],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [["article"]],
        requiredProps: {},
        superClass: [["roletype", "structure", "section", "list"]]
      };
      var _default = feedRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/figureRole.js
  var require_figureRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/figureRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var figureRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {},
        relatedConcepts: [{
          concept: {
            name: "figure"
          },
          module: "HTML"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section"]]
      };
      var _default = figureRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/formRole.js
  var require_formRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/formRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var formRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {},
        relatedConcepts: [{
          concept: {
            attributes: [{
              constraints: ["set"],
              name: "aria-label"
            }],
            name: "form"
          },
          module: "HTML"
        }, {
          concept: {
            attributes: [{
              constraints: ["set"],
              name: "aria-labelledby"
            }],
            name: "form"
          },
          module: "HTML"
        }, {
          concept: {
            attributes: [{
              constraints: ["set"],
              name: "name"
            }],
            name: "form"
          },
          module: "HTML"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section", "landmark"]]
      };
      var _default = formRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/genericRole.js
  var require_genericRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/genericRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var genericRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["prohibited"],
        prohibitedProps: ["aria-label", "aria-labelledby"],
        props: {},
        relatedConcepts: [{
          concept: {
            name: "span"
          },
          module: "HTML"
        }, {
          concept: {
            name: "div"
          },
          module: "HTML"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure"]]
      };
      var _default = genericRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/gridRole.js
  var require_gridRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/gridRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var gridRole = {
        abstract: false,
        accessibleNameRequired: true,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-multiselectable": null,
          "aria-readonly": null
        },
        relatedConcepts: [{
          concept: {
            attributes: [{
              name: "role",
              value: "grid"
            }],
            name: "table"
          },
          module: "HTML"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [["row"], ["row", "rowgroup"]],
        requiredProps: {},
        superClass: [["roletype", "widget", "composite"], ["roletype", "structure", "section", "table"]]
      };
      var _default = gridRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/gridcellRole.js
  var require_gridcellRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/gridcellRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var gridcellRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author", "contents"],
        prohibitedProps: [],
        props: {
          "aria-disabled": null,
          "aria-errormessage": null,
          "aria-expanded": null,
          "aria-haspopup": null,
          "aria-invalid": null,
          "aria-readonly": null,
          "aria-required": null,
          "aria-selected": null
        },
        relatedConcepts: [{
          concept: {
            attributes: [{
              name: "role",
              value: "gridcell"
            }],
            name: "td"
          },
          module: "HTML"
        }],
        requireContextRole: ["row"],
        requiredContextRole: ["row"],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section", "cell"], ["roletype", "widget"]]
      };
      var _default = gridcellRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/groupRole.js
  var require_groupRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/groupRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var groupRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-activedescendant": null,
          "aria-disabled": null
        },
        relatedConcepts: [{
          concept: {
            name: "details"
          },
          module: "HTML"
        }, {
          concept: {
            name: "fieldset"
          },
          module: "HTML"
        }, {
          concept: {
            name: "optgroup"
          },
          module: "HTML"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section"]]
      };
      var _default = groupRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/headingRole.js
  var require_headingRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/headingRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var headingRole = {
        abstract: false,
        accessibleNameRequired: true,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author", "contents"],
        prohibitedProps: [],
        props: {
          "aria-level": null
        },
        relatedConcepts: [{
          concept: {
            name: "h1"
          },
          module: "HTML"
        }, {
          concept: {
            name: "h2"
          },
          module: "HTML"
        }, {
          concept: {
            name: "h3"
          },
          module: "HTML"
        }, {
          concept: {
            name: "h4"
          },
          module: "HTML"
        }, {
          concept: {
            name: "h5"
          },
          module: "HTML"
        }, {
          concept: {
            name: "h6"
          },
          module: "HTML"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {
          "aria-level": 2
        },
        superClass: [["roletype", "structure", "sectionhead"]]
      };
      var _default = headingRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/imgRole.js
  var require_imgRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/imgRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var imgRole = {
        abstract: false,
        accessibleNameRequired: true,
        baseConcepts: [],
        childrenPresentational: true,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {},
        relatedConcepts: [{
          concept: {
            attributes: [{
              constraints: ["set"],
              name: "alt"
            }],
            name: "img"
          },
          module: "HTML"
        }, {
          concept: {
            attributes: [{
              constraints: ["undefined"],
              name: "alt"
            }],
            name: "img"
          },
          module: "HTML"
        }, {
          concept: {
            name: "imggroup"
          },
          module: "DTB"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section"]]
      };
      var _default = imgRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/insertionRole.js
  var require_insertionRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/insertionRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var insertionRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["prohibited"],
        prohibitedProps: ["aria-label", "aria-labelledby"],
        props: {},
        relatedConcepts: [],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section"]]
      };
      var _default = insertionRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/linkRole.js
  var require_linkRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/linkRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var linkRole = {
        abstract: false,
        accessibleNameRequired: true,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author", "contents"],
        prohibitedProps: [],
        props: {
          "aria-disabled": null,
          "aria-expanded": null
        },
        relatedConcepts: [{
          concept: {
            attributes: [{
              name: "href"
            }],
            name: "a"
          },
          module: "HTML"
        }, {
          concept: {
            attributes: [{
              name: "href"
            }],
            name: "area"
          },
          module: "HTML"
        }, {
          concept: {
            attributes: [{
              name: "href"
            }],
            name: "link"
          },
          module: "HTML"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "widget", "command"]]
      };
      var _default = linkRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/listRole.js
  var require_listRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/listRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var listRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {},
        relatedConcepts: [{
          concept: {
            name: "menu"
          },
          module: "HTML"
        }, {
          concept: {
            name: "ol"
          },
          module: "HTML"
        }, {
          concept: {
            name: "ul"
          },
          module: "HTML"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [["listitem"]],
        requiredProps: {},
        superClass: [["roletype", "structure", "section"]]
      };
      var _default = listRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/listboxRole.js
  var require_listboxRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/listboxRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var listboxRole = {
        abstract: false,
        accessibleNameRequired: true,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-errormessage": null,
          "aria-expanded": null,
          "aria-invalid": null,
          "aria-multiselectable": null,
          "aria-readonly": null,
          "aria-required": null,
          "aria-orientation": "vertical"
        },
        relatedConcepts: [{
          concept: {
            attributes: [{
              constraints: [">1"],
              name: "size"
            }, {
              name: "multiple"
            }],
            name: "select"
          },
          module: "HTML"
        }, {
          concept: {
            attributes: [{
              constraints: [">1"],
              name: "size"
            }],
            name: "select"
          },
          module: "HTML"
        }, {
          concept: {
            attributes: [{
              name: "multiple"
            }],
            name: "select"
          },
          module: "HTML"
        }, {
          concept: {
            name: "datalist"
          },
          module: "HTML"
        }, {
          concept: {
            name: "list"
          },
          module: "ARIA"
        }, {
          concept: {
            name: "select"
          },
          module: "XForms"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [["option", "group"], ["option"]],
        requiredProps: {},
        superClass: [["roletype", "widget", "composite", "select"], ["roletype", "structure", "section", "group", "select"]]
      };
      var _default = listboxRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/listitemRole.js
  var require_listitemRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/listitemRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var listitemRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-level": null,
          "aria-posinset": null,
          "aria-setsize": null
        },
        relatedConcepts: [{
          concept: {
            constraints: ["direct descendant of ol, ul or menu"],
            name: "li"
          },
          module: "HTML"
        }, {
          concept: {
            name: "item"
          },
          module: "XForms"
        }],
        requireContextRole: ["directory", "list"],
        requiredContextRole: ["directory", "list"],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section"]]
      };
      var _default = listitemRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/logRole.js
  var require_logRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/logRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var logRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-live": "polite"
        },
        relatedConcepts: [],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section"]]
      };
      var _default = logRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/mainRole.js
  var require_mainRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/mainRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var mainRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {},
        relatedConcepts: [{
          concept: {
            name: "main"
          },
          module: "HTML"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section", "landmark"]]
      };
      var _default = mainRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/marqueeRole.js
  var require_marqueeRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/marqueeRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var marqueeRole = {
        abstract: false,
        accessibleNameRequired: true,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {},
        relatedConcepts: [],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section"]]
      };
      var _default = marqueeRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/mathRole.js
  var require_mathRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/mathRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var mathRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {},
        relatedConcepts: [{
          concept: {
            name: "math"
          },
          module: "HTML"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section"]]
      };
      var _default = mathRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/menuRole.js
  var require_menuRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/menuRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var menuRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-orientation": "vertical"
        },
        relatedConcepts: [{
          concept: {
            name: "MENU"
          },
          module: "JAPI"
        }, {
          concept: {
            name: "list"
          },
          module: "ARIA"
        }, {
          concept: {
            name: "select"
          },
          module: "XForms"
        }, {
          concept: {
            name: "sidebar"
          },
          module: "DTB"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [["menuitem", "group"], ["menuitemradio", "group"], ["menuitemcheckbox", "group"], ["menuitem"], ["menuitemcheckbox"], ["menuitemradio"]],
        requiredProps: {},
        superClass: [["roletype", "widget", "composite", "select"], ["roletype", "structure", "section", "group", "select"]]
      };
      var _default = menuRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/menubarRole.js
  var require_menubarRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/menubarRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var menubarRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-orientation": "horizontal"
        },
        relatedConcepts: [{
          concept: {
            name: "toolbar"
          },
          module: "ARIA"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [["menuitem", "group"], ["menuitemradio", "group"], ["menuitemcheckbox", "group"], ["menuitem"], ["menuitemcheckbox"], ["menuitemradio"]],
        requiredProps: {},
        superClass: [["roletype", "widget", "composite", "select", "menu"], ["roletype", "structure", "section", "group", "select", "menu"]]
      };
      var _default = menubarRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/menuitemRole.js
  var require_menuitemRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/menuitemRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var menuitemRole = {
        abstract: false,
        accessibleNameRequired: true,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author", "contents"],
        prohibitedProps: [],
        props: {
          "aria-disabled": null,
          "aria-expanded": null,
          "aria-haspopup": null,
          "aria-posinset": null,
          "aria-setsize": null
        },
        relatedConcepts: [{
          concept: {
            name: "MENU_ITEM"
          },
          module: "JAPI"
        }, {
          concept: {
            name: "listitem"
          },
          module: "ARIA"
        }, {
          concept: {
            name: "menuitem"
          },
          module: "HTML"
        }, {
          concept: {
            name: "option"
          },
          module: "ARIA"
        }],
        requireContextRole: ["group", "menu", "menubar"],
        requiredContextRole: ["group", "menu", "menubar"],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "widget", "command"]]
      };
      var _default = menuitemRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/menuitemcheckboxRole.js
  var require_menuitemcheckboxRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/menuitemcheckboxRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var menuitemcheckboxRole = {
        abstract: false,
        accessibleNameRequired: true,
        baseConcepts: [],
        childrenPresentational: true,
        nameFrom: ["author", "contents"],
        prohibitedProps: [],
        props: {},
        relatedConcepts: [{
          concept: {
            name: "menuitem"
          },
          module: "ARIA"
        }],
        requireContextRole: ["group", "menu", "menubar"],
        requiredContextRole: ["group", "menu", "menubar"],
        requiredOwnedElements: [],
        requiredProps: {
          "aria-checked": null
        },
        superClass: [["roletype", "widget", "input", "checkbox"], ["roletype", "widget", "command", "menuitem"]]
      };
      var _default = menuitemcheckboxRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/menuitemradioRole.js
  var require_menuitemradioRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/menuitemradioRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var menuitemradioRole = {
        abstract: false,
        accessibleNameRequired: true,
        baseConcepts: [],
        childrenPresentational: true,
        nameFrom: ["author", "contents"],
        prohibitedProps: [],
        props: {},
        relatedConcepts: [{
          concept: {
            name: "menuitem"
          },
          module: "ARIA"
        }],
        requireContextRole: ["group", "menu", "menubar"],
        requiredContextRole: ["group", "menu", "menubar"],
        requiredOwnedElements: [],
        requiredProps: {
          "aria-checked": null
        },
        superClass: [["roletype", "widget", "input", "checkbox", "menuitemcheckbox"], ["roletype", "widget", "command", "menuitem", "menuitemcheckbox"], ["roletype", "widget", "input", "radio"]]
      };
      var _default = menuitemradioRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/meterRole.js
  var require_meterRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/meterRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var meterRole = {
        abstract: false,
        accessibleNameRequired: true,
        baseConcepts: [],
        childrenPresentational: true,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {},
        relatedConcepts: [],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {
          "aria-valuemax": null,
          "aria-valuemin": null,
          "aria-valuenow": null
        },
        superClass: [["roletype", "structure", "range"]]
      };
      var _default = meterRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/navigationRole.js
  var require_navigationRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/navigationRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var navigationRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {},
        relatedConcepts: [{
          concept: {
            name: "nav"
          },
          module: "HTML"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section", "landmark"]]
      };
      var _default = navigationRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/noneRole.js
  var require_noneRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/noneRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var noneRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: [],
        prohibitedProps: [],
        props: {},
        relatedConcepts: [],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: []
      };
      var _default = noneRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/noteRole.js
  var require_noteRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/noteRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var noteRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {},
        relatedConcepts: [],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section"]]
      };
      var _default = noteRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/optionRole.js
  var require_optionRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/optionRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var optionRole = {
        abstract: false,
        accessibleNameRequired: true,
        baseConcepts: [],
        childrenPresentational: true,
        nameFrom: ["author", "contents"],
        prohibitedProps: [],
        props: {
          "aria-checked": null,
          "aria-posinset": null,
          "aria-setsize": null,
          "aria-selected": "false"
        },
        relatedConcepts: [{
          concept: {
            name: "item"
          },
          module: "XForms"
        }, {
          concept: {
            name: "listitem"
          },
          module: "ARIA"
        }, {
          concept: {
            name: "option"
          },
          module: "HTML"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {
          "aria-selected": "false"
        },
        superClass: [["roletype", "widget", "input"]]
      };
      var _default = optionRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/paragraphRole.js
  var require_paragraphRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/paragraphRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var paragraphRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["prohibited"],
        prohibitedProps: ["aria-label", "aria-labelledby"],
        props: {},
        relatedConcepts: [],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section"]]
      };
      var _default = paragraphRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/presentationRole.js
  var require_presentationRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/presentationRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var presentationRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["prohibited"],
        prohibitedProps: ["aria-label", "aria-labelledby"],
        props: {},
        relatedConcepts: [],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure"]]
      };
      var _default = presentationRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/progressbarRole.js
  var require_progressbarRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/progressbarRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var progressbarRole = {
        abstract: false,
        accessibleNameRequired: true,
        baseConcepts: [],
        childrenPresentational: true,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {},
        relatedConcepts: [{
          concept: {
            name: "progress"
          },
          module: "HTML"
        }, {
          concept: {
            name: "status"
          },
          module: "ARIA"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "range"], ["roletype", "widget"]]
      };
      var _default = progressbarRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/radioRole.js
  var require_radioRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/radioRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var radioRole = {
        abstract: false,
        accessibleNameRequired: true,
        baseConcepts: [],
        childrenPresentational: true,
        nameFrom: ["author", "contents"],
        prohibitedProps: [],
        props: {
          "aria-checked": null,
          "aria-posinset": null,
          "aria-setsize": null
        },
        relatedConcepts: [{
          concept: {
            attributes: [{
              name: "type",
              value: "radio"
            }],
            name: "input"
          },
          module: "HTML"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {
          "aria-checked": null
        },
        superClass: [["roletype", "widget", "input"]]
      };
      var _default = radioRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/radiogroupRole.js
  var require_radiogroupRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/radiogroupRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var radiogroupRole = {
        abstract: false,
        accessibleNameRequired: true,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-errormessage": null,
          "aria-invalid": null,
          "aria-readonly": null,
          "aria-required": null
        },
        relatedConcepts: [{
          concept: {
            name: "list"
          },
          module: "ARIA"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [["radio"]],
        requiredProps: {},
        superClass: [["roletype", "widget", "composite", "select"], ["roletype", "structure", "section", "group", "select"]]
      };
      var _default = radiogroupRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/regionRole.js
  var require_regionRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/regionRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var regionRole = {
        abstract: false,
        accessibleNameRequired: true,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {},
        relatedConcepts: [{
          concept: {
            attributes: [{
              constraints: ["set"],
              name: "aria-label"
            }],
            name: "section"
          },
          module: "HTML"
        }, {
          concept: {
            attributes: [{
              constraints: ["set"],
              name: "aria-labelledby"
            }],
            name: "section"
          },
          module: "HTML"
        }, {
          concept: {
            name: "Device Independence Glossart perceivable unit"
          }
        }, {
          concept: {
            name: "frame"
          },
          module: "HTML"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section", "landmark"]]
      };
      var _default = regionRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/rowRole.js
  var require_rowRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/rowRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var rowRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author", "contents"],
        prohibitedProps: [],
        props: {
          "aria-colindex": null,
          "aria-expanded": null,
          "aria-level": null,
          "aria-posinset": null,
          "aria-rowindex": null,
          "aria-selected": null,
          "aria-setsize": null
        },
        relatedConcepts: [{
          concept: {
            name: "tr"
          },
          module: "HTML"
        }],
        requireContextRole: ["grid", "rowgroup", "table", "treegrid"],
        requiredContextRole: ["grid", "rowgroup", "table", "treegrid"],
        requiredOwnedElements: [["cell"], ["columnheader"], ["gridcell"], ["rowheader"]],
        requiredProps: {},
        superClass: [["roletype", "structure", "section", "group"], ["roletype", "widget"]]
      };
      var _default = rowRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/rowgroupRole.js
  var require_rowgroupRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/rowgroupRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var rowgroupRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author", "contents"],
        prohibitedProps: [],
        props: {},
        relatedConcepts: [{
          concept: {
            name: "tbody"
          },
          module: "HTML"
        }, {
          concept: {
            name: "tfoot"
          },
          module: "HTML"
        }, {
          concept: {
            name: "thead"
          },
          module: "HTML"
        }],
        requireContextRole: ["grid", "table", "treegrid"],
        requiredContextRole: ["grid", "table", "treegrid"],
        requiredOwnedElements: [["row"]],
        requiredProps: {},
        superClass: [["roletype", "structure"]]
      };
      var _default = rowgroupRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/rowheaderRole.js
  var require_rowheaderRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/rowheaderRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var rowheaderRole = {
        abstract: false,
        accessibleNameRequired: true,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author", "contents"],
        prohibitedProps: [],
        props: {
          "aria-sort": null
        },
        relatedConcepts: [{
          concept: {
            attributes: [{
              name: "scope",
              value: "row"
            }],
            name: "th"
          },
          module: "HTML"
        }],
        requireContextRole: ["row"],
        requiredContextRole: ["row"],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section", "cell"], ["roletype", "structure", "section", "cell", "gridcell"], ["roletype", "widget", "gridcell"], ["roletype", "structure", "sectionhead"]]
      };
      var _default = rowheaderRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/scrollbarRole.js
  var require_scrollbarRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/scrollbarRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var scrollbarRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: true,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-disabled": null,
          "aria-orientation": "vertical",
          "aria-valuemax": "100",
          "aria-valuemin": "0"
        },
        relatedConcepts: [],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {
          "aria-controls": null,
          "aria-valuenow": null
        },
        superClass: [["roletype", "structure", "range"], ["roletype", "widget"]]
      };
      var _default = scrollbarRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/searchRole.js
  var require_searchRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/searchRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var searchRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {},
        relatedConcepts: [],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section", "landmark"]]
      };
      var _default = searchRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/searchboxRole.js
  var require_searchboxRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/searchboxRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var searchboxRole = {
        abstract: false,
        accessibleNameRequired: true,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {},
        relatedConcepts: [{
          concept: {
            attributes: [{
              constraints: ["undefined"],
              name: "list"
            }, {
              name: "type",
              value: "search"
            }],
            name: "input"
          },
          module: "HTML"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "widget", "input", "textbox"]]
      };
      var _default = searchboxRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/separatorRole.js
  var require_separatorRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/separatorRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var separatorRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: true,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-disabled": null,
          "aria-valuetext": null,
          "aria-orientation": "horizontal",
          "aria-valuemax": "100",
          "aria-valuemin": "0"
        },
        relatedConcepts: [{
          concept: {
            name: "hr"
          },
          module: "HTML"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure"]]
      };
      var _default = separatorRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/sliderRole.js
  var require_sliderRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/sliderRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var sliderRole = {
        abstract: false,
        accessibleNameRequired: true,
        baseConcepts: [],
        childrenPresentational: true,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-errormessage": null,
          "aria-haspopup": null,
          "aria-invalid": null,
          "aria-readonly": null,
          "aria-orientation": "horizontal",
          "aria-valuemax": "100",
          "aria-valuemin": "0"
        },
        relatedConcepts: [{
          concept: {
            attributes: [{
              name: "type",
              value: "range"
            }],
            name: "input"
          },
          module: "HTML"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {
          "aria-valuenow": null
        },
        superClass: [["roletype", "widget", "input"], ["roletype", "structure", "range"]]
      };
      var _default = sliderRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/spinbuttonRole.js
  var require_spinbuttonRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/spinbuttonRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var spinbuttonRole = {
        abstract: false,
        accessibleNameRequired: true,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-errormessage": null,
          "aria-invalid": null,
          "aria-readonly": null,
          "aria-required": null,
          "aria-valuenow": "0"
        },
        relatedConcepts: [{
          concept: {
            attributes: [{
              name: "type",
              value: "number"
            }],
            name: "input"
          },
          module: "HTML"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "widget", "composite"], ["roletype", "widget", "input"], ["roletype", "structure", "range"]]
      };
      var _default = spinbuttonRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/statusRole.js
  var require_statusRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/statusRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var statusRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-atomic": "true",
          "aria-live": "polite"
        },
        relatedConcepts: [{
          concept: {
            name: "output"
          },
          module: "HTML"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section"]]
      };
      var _default = statusRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/strongRole.js
  var require_strongRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/strongRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var strongRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["prohibited"],
        prohibitedProps: ["aria-label", "aria-labelledby"],
        props: {},
        relatedConcepts: [],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section"]]
      };
      var _default = strongRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/subscriptRole.js
  var require_subscriptRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/subscriptRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var subscriptRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["prohibited"],
        prohibitedProps: ["aria-label", "aria-labelledby"],
        props: {},
        relatedConcepts: [],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section"]]
      };
      var _default = subscriptRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/superscriptRole.js
  var require_superscriptRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/superscriptRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var superscriptRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["prohibited"],
        prohibitedProps: ["aria-label", "aria-labelledby"],
        props: {},
        relatedConcepts: [],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section"]]
      };
      var _default = superscriptRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/switchRole.js
  var require_switchRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/switchRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var switchRole = {
        abstract: false,
        accessibleNameRequired: true,
        baseConcepts: [],
        childrenPresentational: true,
        nameFrom: ["author", "contents"],
        prohibitedProps: [],
        props: {},
        relatedConcepts: [{
          concept: {
            name: "button"
          },
          module: "ARIA"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {
          "aria-checked": null
        },
        superClass: [["roletype", "widget", "input", "checkbox"]]
      };
      var _default = switchRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/tabRole.js
  var require_tabRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/tabRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var tabRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: true,
        nameFrom: ["author", "contents"],
        prohibitedProps: [],
        props: {
          "aria-disabled": null,
          "aria-expanded": null,
          "aria-haspopup": null,
          "aria-posinset": null,
          "aria-setsize": null,
          "aria-selected": "false"
        },
        relatedConcepts: [],
        requireContextRole: ["tablist"],
        requiredContextRole: ["tablist"],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "sectionhead"], ["roletype", "widget"]]
      };
      var _default = tabRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/tableRole.js
  var require_tableRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/tableRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var tableRole = {
        abstract: false,
        accessibleNameRequired: true,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-colcount": null,
          "aria-rowcount": null
        },
        relatedConcepts: [{
          concept: {
            name: "table"
          },
          module: "HTML"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [["row"], ["row", "rowgroup"]],
        requiredProps: {},
        superClass: [["roletype", "structure", "section"]]
      };
      var _default = tableRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/tablistRole.js
  var require_tablistRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/tablistRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var tablistRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-level": null,
          "aria-multiselectable": null,
          "aria-orientation": "horizontal"
        },
        relatedConcepts: [{
          module: "DAISY",
          concept: {
            name: "guide"
          }
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [["tab"]],
        requiredProps: {},
        superClass: [["roletype", "widget", "composite"]]
      };
      var _default = tablistRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/tabpanelRole.js
  var require_tabpanelRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/tabpanelRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var tabpanelRole = {
        abstract: false,
        accessibleNameRequired: true,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {},
        relatedConcepts: [],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section"]]
      };
      var _default = tabpanelRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/termRole.js
  var require_termRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/termRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var termRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {},
        relatedConcepts: [{
          concept: {
            name: "dfn"
          },
          module: "HTML"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section"]]
      };
      var _default = termRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/textboxRole.js
  var require_textboxRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/textboxRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var textboxRole = {
        abstract: false,
        accessibleNameRequired: true,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-activedescendant": null,
          "aria-autocomplete": null,
          "aria-errormessage": null,
          "aria-haspopup": null,
          "aria-invalid": null,
          "aria-multiline": null,
          "aria-placeholder": null,
          "aria-readonly": null,
          "aria-required": null
        },
        relatedConcepts: [{
          concept: {
            attributes: [{
              constraints: ["undefined"],
              name: "type"
            }, {
              constraints: ["undefined"],
              name: "list"
            }],
            name: "input"
          },
          module: "HTML"
        }, {
          concept: {
            attributes: [{
              constraints: ["undefined"],
              name: "list"
            }, {
              name: "type",
              value: "email"
            }],
            name: "input"
          },
          module: "HTML"
        }, {
          concept: {
            attributes: [{
              constraints: ["undefined"],
              name: "list"
            }, {
              name: "type",
              value: "tel"
            }],
            name: "input"
          },
          module: "HTML"
        }, {
          concept: {
            attributes: [{
              constraints: ["undefined"],
              name: "list"
            }, {
              name: "type",
              value: "text"
            }],
            name: "input"
          },
          module: "HTML"
        }, {
          concept: {
            attributes: [{
              constraints: ["undefined"],
              name: "list"
            }, {
              name: "type",
              value: "url"
            }],
            name: "input"
          },
          module: "HTML"
        }, {
          concept: {
            name: "input"
          },
          module: "XForms"
        }, {
          concept: {
            name: "textarea"
          },
          module: "HTML"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "widget", "input"]]
      };
      var _default = textboxRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/timeRole.js
  var require_timeRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/timeRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var timeRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {},
        relatedConcepts: [],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section"]]
      };
      var _default = timeRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/timerRole.js
  var require_timerRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/timerRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var timerRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {},
        relatedConcepts: [],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section", "status"]]
      };
      var _default = timerRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/toolbarRole.js
  var require_toolbarRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/toolbarRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var toolbarRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-orientation": "horizontal"
        },
        relatedConcepts: [{
          concept: {
            name: "menubar"
          },
          module: "ARIA"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section", "group"]]
      };
      var _default = toolbarRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/tooltipRole.js
  var require_tooltipRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/tooltipRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var tooltipRole = {
        abstract: false,
        accessibleNameRequired: true,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author", "contents"],
        prohibitedProps: [],
        props: {},
        relatedConcepts: [],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section"]]
      };
      var _default = tooltipRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/treeRole.js
  var require_treeRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/treeRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var treeRole = {
        abstract: false,
        accessibleNameRequired: true,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-errormessage": null,
          "aria-invalid": null,
          "aria-multiselectable": null,
          "aria-required": null,
          "aria-orientation": "vertical"
        },
        relatedConcepts: [],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [["treeitem", "group"], ["treeitem"]],
        requiredProps: {},
        superClass: [["roletype", "widget", "composite", "select"], ["roletype", "structure", "section", "group", "select"]]
      };
      var _default = treeRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/treegridRole.js
  var require_treegridRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/treegridRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var treegridRole = {
        abstract: false,
        accessibleNameRequired: true,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {},
        relatedConcepts: [],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [["row"], ["row", "rowgroup"]],
        requiredProps: {},
        superClass: [["roletype", "widget", "composite", "grid"], ["roletype", "structure", "section", "table", "grid"], ["roletype", "widget", "composite", "select", "tree"], ["roletype", "structure", "section", "group", "select", "tree"]]
      };
      var _default = treegridRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/literal/treeitemRole.js
  var require_treeitemRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/literal/treeitemRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var treeitemRole = {
        abstract: false,
        accessibleNameRequired: true,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author", "contents"],
        prohibitedProps: [],
        props: {
          "aria-expanded": null,
          "aria-haspopup": null
        },
        relatedConcepts: [],
        requireContextRole: ["group", "tree"],
        requiredContextRole: ["group", "tree"],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section", "listitem"], ["roletype", "widget", "input", "option"]]
      };
      var _default = treeitemRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/ariaLiteralRoles.js
  var require_ariaLiteralRoles = __commonJS({
    "node_modules/aria-query/lib/etc/roles/ariaLiteralRoles.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault2();
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _map = _interopRequireDefault(require_map3());
      var _alertRole = _interopRequireDefault(require_alertRole());
      var _alertdialogRole = _interopRequireDefault(require_alertdialogRole());
      var _applicationRole = _interopRequireDefault(require_applicationRole());
      var _articleRole = _interopRequireDefault(require_articleRole());
      var _bannerRole = _interopRequireDefault(require_bannerRole());
      var _blockquoteRole = _interopRequireDefault(require_blockquoteRole());
      var _buttonRole = _interopRequireDefault(require_buttonRole());
      var _captionRole = _interopRequireDefault(require_captionRole());
      var _cellRole = _interopRequireDefault(require_cellRole());
      var _checkboxRole = _interopRequireDefault(require_checkboxRole());
      var _codeRole = _interopRequireDefault(require_codeRole());
      var _columnheaderRole = _interopRequireDefault(require_columnheaderRole());
      var _comboboxRole = _interopRequireDefault(require_comboboxRole());
      var _complementaryRole = _interopRequireDefault(require_complementaryRole());
      var _contentinfoRole = _interopRequireDefault(require_contentinfoRole());
      var _definitionRole = _interopRequireDefault(require_definitionRole());
      var _deletionRole = _interopRequireDefault(require_deletionRole());
      var _dialogRole = _interopRequireDefault(require_dialogRole());
      var _directoryRole = _interopRequireDefault(require_directoryRole());
      var _documentRole = _interopRequireDefault(require_documentRole());
      var _emphasisRole = _interopRequireDefault(require_emphasisRole());
      var _feedRole = _interopRequireDefault(require_feedRole());
      var _figureRole = _interopRequireDefault(require_figureRole());
      var _formRole = _interopRequireDefault(require_formRole());
      var _genericRole = _interopRequireDefault(require_genericRole());
      var _gridRole = _interopRequireDefault(require_gridRole());
      var _gridcellRole = _interopRequireDefault(require_gridcellRole());
      var _groupRole = _interopRequireDefault(require_groupRole());
      var _headingRole = _interopRequireDefault(require_headingRole());
      var _imgRole = _interopRequireDefault(require_imgRole());
      var _insertionRole = _interopRequireDefault(require_insertionRole());
      var _linkRole = _interopRequireDefault(require_linkRole());
      var _listRole = _interopRequireDefault(require_listRole());
      var _listboxRole = _interopRequireDefault(require_listboxRole());
      var _listitemRole = _interopRequireDefault(require_listitemRole());
      var _logRole = _interopRequireDefault(require_logRole());
      var _mainRole = _interopRequireDefault(require_mainRole());
      var _marqueeRole = _interopRequireDefault(require_marqueeRole());
      var _mathRole = _interopRequireDefault(require_mathRole());
      var _menuRole = _interopRequireDefault(require_menuRole());
      var _menubarRole = _interopRequireDefault(require_menubarRole());
      var _menuitemRole = _interopRequireDefault(require_menuitemRole());
      var _menuitemcheckboxRole = _interopRequireDefault(require_menuitemcheckboxRole());
      var _menuitemradioRole = _interopRequireDefault(require_menuitemradioRole());
      var _meterRole = _interopRequireDefault(require_meterRole());
      var _navigationRole = _interopRequireDefault(require_navigationRole());
      var _noneRole = _interopRequireDefault(require_noneRole());
      var _noteRole = _interopRequireDefault(require_noteRole());
      var _optionRole = _interopRequireDefault(require_optionRole());
      var _paragraphRole = _interopRequireDefault(require_paragraphRole());
      var _presentationRole = _interopRequireDefault(require_presentationRole());
      var _progressbarRole = _interopRequireDefault(require_progressbarRole());
      var _radioRole = _interopRequireDefault(require_radioRole());
      var _radiogroupRole = _interopRequireDefault(require_radiogroupRole());
      var _regionRole = _interopRequireDefault(require_regionRole());
      var _rowRole = _interopRequireDefault(require_rowRole());
      var _rowgroupRole = _interopRequireDefault(require_rowgroupRole());
      var _rowheaderRole = _interopRequireDefault(require_rowheaderRole());
      var _scrollbarRole = _interopRequireDefault(require_scrollbarRole());
      var _searchRole = _interopRequireDefault(require_searchRole());
      var _searchboxRole = _interopRequireDefault(require_searchboxRole());
      var _separatorRole = _interopRequireDefault(require_separatorRole());
      var _sliderRole = _interopRequireDefault(require_sliderRole());
      var _spinbuttonRole = _interopRequireDefault(require_spinbuttonRole());
      var _statusRole = _interopRequireDefault(require_statusRole());
      var _strongRole = _interopRequireDefault(require_strongRole());
      var _subscriptRole = _interopRequireDefault(require_subscriptRole());
      var _superscriptRole = _interopRequireDefault(require_superscriptRole());
      var _switchRole = _interopRequireDefault(require_switchRole());
      var _tabRole = _interopRequireDefault(require_tabRole());
      var _tableRole = _interopRequireDefault(require_tableRole());
      var _tablistRole = _interopRequireDefault(require_tablistRole());
      var _tabpanelRole = _interopRequireDefault(require_tabpanelRole());
      var _termRole = _interopRequireDefault(require_termRole());
      var _textboxRole = _interopRequireDefault(require_textboxRole());
      var _timeRole = _interopRequireDefault(require_timeRole());
      var _timerRole = _interopRequireDefault(require_timerRole());
      var _toolbarRole = _interopRequireDefault(require_toolbarRole());
      var _tooltipRole = _interopRequireDefault(require_tooltipRole());
      var _treeRole = _interopRequireDefault(require_treeRole());
      var _treegridRole = _interopRequireDefault(require_treegridRole());
      var _treeitemRole = _interopRequireDefault(require_treeitemRole());
      var ariaLiteralRoles = new _map.default([["alert", _alertRole.default], ["alertdialog", _alertdialogRole.default], ["application", _applicationRole.default], ["article", _articleRole.default], ["banner", _bannerRole.default], ["blockquote", _blockquoteRole.default], ["button", _buttonRole.default], ["caption", _captionRole.default], ["cell", _cellRole.default], ["checkbox", _checkboxRole.default], ["code", _codeRole.default], ["columnheader", _columnheaderRole.default], ["combobox", _comboboxRole.default], ["complementary", _complementaryRole.default], ["contentinfo", _contentinfoRole.default], ["definition", _definitionRole.default], ["deletion", _deletionRole.default], ["dialog", _dialogRole.default], ["directory", _directoryRole.default], ["document", _documentRole.default], ["emphasis", _emphasisRole.default], ["feed", _feedRole.default], ["figure", _figureRole.default], ["form", _formRole.default], ["generic", _genericRole.default], ["grid", _gridRole.default], ["gridcell", _gridcellRole.default], ["group", _groupRole.default], ["heading", _headingRole.default], ["img", _imgRole.default], ["insertion", _insertionRole.default], ["link", _linkRole.default], ["list", _listRole.default], ["listbox", _listboxRole.default], ["listitem", _listitemRole.default], ["log", _logRole.default], ["main", _mainRole.default], ["marquee", _marqueeRole.default], ["math", _mathRole.default], ["menu", _menuRole.default], ["menubar", _menubarRole.default], ["menuitem", _menuitemRole.default], ["menuitemcheckbox", _menuitemcheckboxRole.default], ["menuitemradio", _menuitemradioRole.default], ["meter", _meterRole.default], ["navigation", _navigationRole.default], ["none", _noneRole.default], ["note", _noteRole.default], ["option", _optionRole.default], ["paragraph", _paragraphRole.default], ["presentation", _presentationRole.default], ["progressbar", _progressbarRole.default], ["radio", _radioRole.default], ["radiogroup", _radiogroupRole.default], ["region", _regionRole.default], ["row", _rowRole.default], ["rowgroup", _rowgroupRole.default], ["rowheader", _rowheaderRole.default], ["scrollbar", _scrollbarRole.default], ["search", _searchRole.default], ["searchbox", _searchboxRole.default], ["separator", _separatorRole.default], ["slider", _sliderRole.default], ["spinbutton", _spinbuttonRole.default], ["status", _statusRole.default], ["strong", _strongRole.default], ["subscript", _subscriptRole.default], ["superscript", _superscriptRole.default], ["switch", _switchRole.default], ["tab", _tabRole.default], ["table", _tableRole.default], ["tablist", _tablistRole.default], ["tabpanel", _tabpanelRole.default], ["term", _termRole.default], ["textbox", _textboxRole.default], ["time", _timeRole.default], ["timer", _timerRole.default], ["toolbar", _toolbarRole.default], ["tooltip", _tooltipRole.default], ["tree", _treeRole.default], ["treegrid", _treegridRole.default], ["treeitem", _treeitemRole.default]]);
      var _default = ariaLiteralRoles;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/dpub/docAbstractRole.js
  var require_docAbstractRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/dpub/docAbstractRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var docAbstractRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-disabled": null,
          "aria-errormessage": null,
          "aria-expanded": null,
          "aria-haspopup": null,
          "aria-invalid": null
        },
        relatedConcepts: [{
          concept: {
            name: "abstract [EPUB-SSV]"
          },
          module: "EPUB"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section"]]
      };
      var _default = docAbstractRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/dpub/docAcknowledgmentsRole.js
  var require_docAcknowledgmentsRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/dpub/docAcknowledgmentsRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var docAcknowledgmentsRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-disabled": null,
          "aria-errormessage": null,
          "aria-expanded": null,
          "aria-haspopup": null,
          "aria-invalid": null
        },
        relatedConcepts: [{
          concept: {
            name: "acknowledgments [EPUB-SSV]"
          },
          module: "EPUB"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section", "landmark"]]
      };
      var _default = docAcknowledgmentsRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/dpub/docAfterwordRole.js
  var require_docAfterwordRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/dpub/docAfterwordRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var docAfterwordRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-disabled": null,
          "aria-errormessage": null,
          "aria-expanded": null,
          "aria-haspopup": null,
          "aria-invalid": null
        },
        relatedConcepts: [{
          concept: {
            name: "afterword [EPUB-SSV]"
          },
          module: "EPUB"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section", "landmark"]]
      };
      var _default = docAfterwordRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/dpub/docAppendixRole.js
  var require_docAppendixRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/dpub/docAppendixRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var docAppendixRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-disabled": null,
          "aria-errormessage": null,
          "aria-expanded": null,
          "aria-haspopup": null,
          "aria-invalid": null
        },
        relatedConcepts: [{
          concept: {
            name: "appendix [EPUB-SSV]"
          },
          module: "EPUB"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section", "landmark"]]
      };
      var _default = docAppendixRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/dpub/docBacklinkRole.js
  var require_docBacklinkRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/dpub/docBacklinkRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var docBacklinkRole = {
        abstract: false,
        accessibleNameRequired: true,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author", "content"],
        prohibitedProps: [],
        props: {
          "aria-errormessage": null,
          "aria-haspopup": null,
          "aria-invalid": null
        },
        relatedConcepts: [{
          concept: {
            name: "referrer [EPUB-SSV]"
          },
          module: "EPUB"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "widget", "command", "link"]]
      };
      var _default = docBacklinkRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/dpub/docBiblioentryRole.js
  var require_docBiblioentryRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/dpub/docBiblioentryRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var docBiblioentryRole = {
        abstract: false,
        accessibleNameRequired: true,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-disabled": null,
          "aria-errormessage": null,
          "aria-expanded": null,
          "aria-haspopup": null,
          "aria-invalid": null
        },
        relatedConcepts: [{
          concept: {
            name: "EPUB biblioentry [EPUB-SSV]"
          },
          module: "EPUB"
        }],
        requireContextRole: ["doc-bibliography"],
        requiredContextRole: ["doc-bibliography"],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section", "listitem"]]
      };
      var _default = docBiblioentryRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/dpub/docBibliographyRole.js
  var require_docBibliographyRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/dpub/docBibliographyRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var docBibliographyRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-disabled": null,
          "aria-errormessage": null,
          "aria-expanded": null,
          "aria-haspopup": null,
          "aria-invalid": null
        },
        relatedConcepts: [{
          concept: {
            name: "bibliography [EPUB-SSV]"
          },
          module: "EPUB"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [["doc-biblioentry"]],
        requiredProps: {},
        superClass: [["roletype", "structure", "section", "landmark"]]
      };
      var _default = docBibliographyRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/dpub/docBibliorefRole.js
  var require_docBibliorefRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/dpub/docBibliorefRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var docBibliorefRole = {
        abstract: false,
        accessibleNameRequired: true,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author", "contents"],
        prohibitedProps: [],
        props: {
          "aria-errormessage": null,
          "aria-haspopup": null,
          "aria-invalid": null
        },
        relatedConcepts: [{
          concept: {
            name: "biblioref [EPUB-SSV]"
          },
          module: "EPUB"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "widget", "command", "link"]]
      };
      var _default = docBibliorefRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/dpub/docChapterRole.js
  var require_docChapterRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/dpub/docChapterRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var docChapterRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-disabled": null,
          "aria-errormessage": null,
          "aria-expanded": null,
          "aria-haspopup": null,
          "aria-invalid": null
        },
        relatedConcepts: [{
          concept: {
            name: "chapter [EPUB-SSV]"
          },
          module: "EPUB"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section", "landmark"]]
      };
      var _default = docChapterRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/dpub/docColophonRole.js
  var require_docColophonRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/dpub/docColophonRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var docColophonRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-disabled": null,
          "aria-errormessage": null,
          "aria-expanded": null,
          "aria-haspopup": null,
          "aria-invalid": null
        },
        relatedConcepts: [{
          concept: {
            name: "colophon [EPUB-SSV]"
          },
          module: "EPUB"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section"]]
      };
      var _default = docColophonRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/dpub/docConclusionRole.js
  var require_docConclusionRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/dpub/docConclusionRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var docConclusionRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-disabled": null,
          "aria-errormessage": null,
          "aria-expanded": null,
          "aria-haspopup": null,
          "aria-invalid": null
        },
        relatedConcepts: [{
          concept: {
            name: "conclusion [EPUB-SSV]"
          },
          module: "EPUB"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section", "landmark"]]
      };
      var _default = docConclusionRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/dpub/docCoverRole.js
  var require_docCoverRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/dpub/docCoverRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var docCoverRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-disabled": null,
          "aria-errormessage": null,
          "aria-expanded": null,
          "aria-haspopup": null,
          "aria-invalid": null
        },
        relatedConcepts: [{
          concept: {
            name: "cover [EPUB-SSV]"
          },
          module: "EPUB"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section", "img"]]
      };
      var _default = docCoverRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/dpub/docCreditRole.js
  var require_docCreditRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/dpub/docCreditRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var docCreditRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-disabled": null,
          "aria-errormessage": null,
          "aria-expanded": null,
          "aria-haspopup": null,
          "aria-invalid": null
        },
        relatedConcepts: [{
          concept: {
            name: "credit [EPUB-SSV]"
          },
          module: "EPUB"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section"]]
      };
      var _default = docCreditRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/dpub/docCreditsRole.js
  var require_docCreditsRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/dpub/docCreditsRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var docCreditsRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-disabled": null,
          "aria-errormessage": null,
          "aria-expanded": null,
          "aria-haspopup": null,
          "aria-invalid": null
        },
        relatedConcepts: [{
          concept: {
            name: "credits [EPUB-SSV]"
          },
          module: "EPUB"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section", "landmark"]]
      };
      var _default = docCreditsRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/dpub/docDedicationRole.js
  var require_docDedicationRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/dpub/docDedicationRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var docDedicationRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-disabled": null,
          "aria-errormessage": null,
          "aria-expanded": null,
          "aria-haspopup": null,
          "aria-invalid": null
        },
        relatedConcepts: [{
          concept: {
            name: "dedication [EPUB-SSV]"
          },
          module: "EPUB"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section"]]
      };
      var _default = docDedicationRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/dpub/docEndnoteRole.js
  var require_docEndnoteRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/dpub/docEndnoteRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var docEndnoteRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-disabled": null,
          "aria-errormessage": null,
          "aria-expanded": null,
          "aria-haspopup": null,
          "aria-invalid": null
        },
        relatedConcepts: [{
          concept: {
            name: "rearnote [EPUB-SSV]"
          },
          module: "EPUB"
        }],
        requireContextRole: ["doc-endnotes"],
        requiredContextRole: ["doc-endnotes"],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section", "listitem"]]
      };
      var _default = docEndnoteRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/dpub/docEndnotesRole.js
  var require_docEndnotesRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/dpub/docEndnotesRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var docEndnotesRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-disabled": null,
          "aria-errormessage": null,
          "aria-expanded": null,
          "aria-haspopup": null,
          "aria-invalid": null
        },
        relatedConcepts: [{
          concept: {
            name: "rearnotes [EPUB-SSV]"
          },
          module: "EPUB"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [["doc-endnote"]],
        requiredProps: {},
        superClass: [["roletype", "structure", "section", "landmark"]]
      };
      var _default = docEndnotesRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/dpub/docEpigraphRole.js
  var require_docEpigraphRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/dpub/docEpigraphRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var docEpigraphRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-disabled": null,
          "aria-errormessage": null,
          "aria-expanded": null,
          "aria-haspopup": null,
          "aria-invalid": null
        },
        relatedConcepts: [{
          concept: {
            name: "epigraph [EPUB-SSV]"
          },
          module: "EPUB"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section"]]
      };
      var _default = docEpigraphRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/dpub/docEpilogueRole.js
  var require_docEpilogueRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/dpub/docEpilogueRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var docEpilogueRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-disabled": null,
          "aria-errormessage": null,
          "aria-expanded": null,
          "aria-haspopup": null,
          "aria-invalid": null
        },
        relatedConcepts: [{
          concept: {
            name: "epilogue [EPUB-SSV]"
          },
          module: "EPUB"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section", "landmark"]]
      };
      var _default = docEpilogueRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/dpub/docErrataRole.js
  var require_docErrataRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/dpub/docErrataRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var docErrataRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-disabled": null,
          "aria-errormessage": null,
          "aria-expanded": null,
          "aria-haspopup": null,
          "aria-invalid": null
        },
        relatedConcepts: [{
          concept: {
            name: "errata [EPUB-SSV]"
          },
          module: "EPUB"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section", "landmark"]]
      };
      var _default = docErrataRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/dpub/docExampleRole.js
  var require_docExampleRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/dpub/docExampleRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var docExampleRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-disabled": null,
          "aria-errormessage": null,
          "aria-expanded": null,
          "aria-haspopup": null,
          "aria-invalid": null
        },
        relatedConcepts: [],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section"]]
      };
      var _default = docExampleRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/dpub/docFootnoteRole.js
  var require_docFootnoteRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/dpub/docFootnoteRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var docFootnoteRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-disabled": null,
          "aria-errormessage": null,
          "aria-expanded": null,
          "aria-haspopup": null,
          "aria-invalid": null
        },
        relatedConcepts: [{
          concept: {
            name: "footnote [EPUB-SSV]"
          },
          module: "EPUB"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section"]]
      };
      var _default = docFootnoteRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/dpub/docForewordRole.js
  var require_docForewordRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/dpub/docForewordRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var docForewordRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-disabled": null,
          "aria-errormessage": null,
          "aria-expanded": null,
          "aria-haspopup": null,
          "aria-invalid": null
        },
        relatedConcepts: [{
          concept: {
            name: "foreword [EPUB-SSV]"
          },
          module: "EPUB"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section", "landmark"]]
      };
      var _default = docForewordRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/dpub/docGlossaryRole.js
  var require_docGlossaryRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/dpub/docGlossaryRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var docGlossaryRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-disabled": null,
          "aria-errormessage": null,
          "aria-expanded": null,
          "aria-haspopup": null,
          "aria-invalid": null
        },
        relatedConcepts: [{
          concept: {
            name: "glossary [EPUB-SSV]"
          },
          module: "EPUB"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [["definition"], ["term"]],
        requiredProps: {},
        superClass: [["roletype", "structure", "section", "landmark"]]
      };
      var _default = docGlossaryRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/dpub/docGlossrefRole.js
  var require_docGlossrefRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/dpub/docGlossrefRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var docGlossrefRole = {
        abstract: false,
        accessibleNameRequired: true,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author", "contents"],
        prohibitedProps: [],
        props: {
          "aria-errormessage": null,
          "aria-haspopup": null,
          "aria-invalid": null
        },
        relatedConcepts: [{
          concept: {
            name: "glossref [EPUB-SSV]"
          },
          module: "EPUB"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "widget", "command", "link"]]
      };
      var _default = docGlossrefRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/dpub/docIndexRole.js
  var require_docIndexRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/dpub/docIndexRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var docIndexRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-disabled": null,
          "aria-errormessage": null,
          "aria-expanded": null,
          "aria-haspopup": null,
          "aria-invalid": null
        },
        relatedConcepts: [{
          concept: {
            name: "index [EPUB-SSV]"
          },
          module: "EPUB"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section", "landmark", "navigation"]]
      };
      var _default = docIndexRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/dpub/docIntroductionRole.js
  var require_docIntroductionRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/dpub/docIntroductionRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var docIntroductionRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-disabled": null,
          "aria-errormessage": null,
          "aria-expanded": null,
          "aria-haspopup": null,
          "aria-invalid": null
        },
        relatedConcepts: [{
          concept: {
            name: "introduction [EPUB-SSV]"
          },
          module: "EPUB"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section", "landmark"]]
      };
      var _default = docIntroductionRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/dpub/docNoterefRole.js
  var require_docNoterefRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/dpub/docNoterefRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var docNoterefRole = {
        abstract: false,
        accessibleNameRequired: true,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author", "contents"],
        prohibitedProps: [],
        props: {
          "aria-errormessage": null,
          "aria-haspopup": null,
          "aria-invalid": null
        },
        relatedConcepts: [{
          concept: {
            name: "noteref [EPUB-SSV]"
          },
          module: "EPUB"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "widget", "command", "link"]]
      };
      var _default = docNoterefRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/dpub/docNoticeRole.js
  var require_docNoticeRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/dpub/docNoticeRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var docNoticeRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-disabled": null,
          "aria-errormessage": null,
          "aria-expanded": null,
          "aria-haspopup": null,
          "aria-invalid": null
        },
        relatedConcepts: [{
          concept: {
            name: "notice [EPUB-SSV]"
          },
          module: "EPUB"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section", "note"]]
      };
      var _default = docNoticeRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/dpub/docPagebreakRole.js
  var require_docPagebreakRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/dpub/docPagebreakRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var docPagebreakRole = {
        abstract: false,
        accessibleNameRequired: true,
        baseConcepts: [],
        childrenPresentational: true,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-errormessage": null,
          "aria-expanded": null,
          "aria-haspopup": null,
          "aria-invalid": null
        },
        relatedConcepts: [{
          concept: {
            name: "pagebreak [EPUB-SSV]"
          },
          module: "EPUB"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "separator"]]
      };
      var _default = docPagebreakRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/dpub/docPagelistRole.js
  var require_docPagelistRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/dpub/docPagelistRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var docPagelistRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-disabled": null,
          "aria-errormessage": null,
          "aria-expanded": null,
          "aria-haspopup": null,
          "aria-invalid": null
        },
        relatedConcepts: [{
          concept: {
            name: "page-list [EPUB-SSV]"
          },
          module: "EPUB"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section", "landmark", "navigation"]]
      };
      var _default = docPagelistRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/dpub/docPartRole.js
  var require_docPartRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/dpub/docPartRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var docPartRole = {
        abstract: false,
        accessibleNameRequired: true,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-disabled": null,
          "aria-errormessage": null,
          "aria-expanded": null,
          "aria-haspopup": null,
          "aria-invalid": null
        },
        relatedConcepts: [{
          concept: {
            name: "part [EPUB-SSV]"
          },
          module: "EPUB"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section", "landmark"]]
      };
      var _default = docPartRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/dpub/docPrefaceRole.js
  var require_docPrefaceRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/dpub/docPrefaceRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var docPrefaceRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-disabled": null,
          "aria-errormessage": null,
          "aria-expanded": null,
          "aria-haspopup": null,
          "aria-invalid": null
        },
        relatedConcepts: [{
          concept: {
            name: "preface [EPUB-SSV]"
          },
          module: "EPUB"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section", "landmark"]]
      };
      var _default = docPrefaceRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/dpub/docPrologueRole.js
  var require_docPrologueRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/dpub/docPrologueRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var docPrologueRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-disabled": null,
          "aria-errormessage": null,
          "aria-expanded": null,
          "aria-haspopup": null,
          "aria-invalid": null
        },
        relatedConcepts: [{
          concept: {
            name: "prologue [EPUB-SSV]"
          },
          module: "EPUB"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section", "landmark"]]
      };
      var _default = docPrologueRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/dpub/docPullquoteRole.js
  var require_docPullquoteRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/dpub/docPullquoteRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var docPullquoteRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {},
        relatedConcepts: [{
          concept: {
            name: "pullquote [EPUB-SSV]"
          },
          module: "EPUB"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["none"]]
      };
      var _default = docPullquoteRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/dpub/docQnaRole.js
  var require_docQnaRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/dpub/docQnaRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var docQnaRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-disabled": null,
          "aria-errormessage": null,
          "aria-expanded": null,
          "aria-haspopup": null,
          "aria-invalid": null
        },
        relatedConcepts: [{
          concept: {
            name: "qna [EPUB-SSV]"
          },
          module: "EPUB"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section"]]
      };
      var _default = docQnaRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/dpub/docSubtitleRole.js
  var require_docSubtitleRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/dpub/docSubtitleRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var docSubtitleRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-disabled": null,
          "aria-errormessage": null,
          "aria-expanded": null,
          "aria-haspopup": null,
          "aria-invalid": null
        },
        relatedConcepts: [{
          concept: {
            name: "subtitle [EPUB-SSV]"
          },
          module: "EPUB"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "sectionhead"]]
      };
      var _default = docSubtitleRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/dpub/docTipRole.js
  var require_docTipRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/dpub/docTipRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var docTipRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-disabled": null,
          "aria-errormessage": null,
          "aria-expanded": null,
          "aria-haspopup": null,
          "aria-invalid": null
        },
        relatedConcepts: [{
          concept: {
            name: "help [EPUB-SSV]"
          },
          module: "EPUB"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section", "note"]]
      };
      var _default = docTipRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/dpub/docTocRole.js
  var require_docTocRole = __commonJS({
    "node_modules/aria-query/lib/etc/roles/dpub/docTocRole.js"(exports) {
      "use strict";
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var docTocRole = {
        abstract: false,
        accessibleNameRequired: false,
        baseConcepts: [],
        childrenPresentational: false,
        nameFrom: ["author"],
        prohibitedProps: [],
        props: {
          "aria-disabled": null,
          "aria-errormessage": null,
          "aria-expanded": null,
          "aria-haspopup": null,
          "aria-invalid": null
        },
        relatedConcepts: [{
          concept: {
            name: "toc [EPUB-SSV]"
          },
          module: "EPUB"
        }],
        requireContextRole: [],
        requiredContextRole: [],
        requiredOwnedElements: [],
        requiredProps: {},
        superClass: [["roletype", "structure", "section", "landmark", "navigation"]]
      };
      var _default = docTocRole;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/etc/roles/ariaDpubRoles.js
  var require_ariaDpubRoles = __commonJS({
    "node_modules/aria-query/lib/etc/roles/ariaDpubRoles.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault2();
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _map = _interopRequireDefault(require_map3());
      var _docAbstractRole = _interopRequireDefault(require_docAbstractRole());
      var _docAcknowledgmentsRole = _interopRequireDefault(require_docAcknowledgmentsRole());
      var _docAfterwordRole = _interopRequireDefault(require_docAfterwordRole());
      var _docAppendixRole = _interopRequireDefault(require_docAppendixRole());
      var _docBacklinkRole = _interopRequireDefault(require_docBacklinkRole());
      var _docBiblioentryRole = _interopRequireDefault(require_docBiblioentryRole());
      var _docBibliographyRole = _interopRequireDefault(require_docBibliographyRole());
      var _docBibliorefRole = _interopRequireDefault(require_docBibliorefRole());
      var _docChapterRole = _interopRequireDefault(require_docChapterRole());
      var _docColophonRole = _interopRequireDefault(require_docColophonRole());
      var _docConclusionRole = _interopRequireDefault(require_docConclusionRole());
      var _docCoverRole = _interopRequireDefault(require_docCoverRole());
      var _docCreditRole = _interopRequireDefault(require_docCreditRole());
      var _docCreditsRole = _interopRequireDefault(require_docCreditsRole());
      var _docDedicationRole = _interopRequireDefault(require_docDedicationRole());
      var _docEndnoteRole = _interopRequireDefault(require_docEndnoteRole());
      var _docEndnotesRole = _interopRequireDefault(require_docEndnotesRole());
      var _docEpigraphRole = _interopRequireDefault(require_docEpigraphRole());
      var _docEpilogueRole = _interopRequireDefault(require_docEpilogueRole());
      var _docErrataRole = _interopRequireDefault(require_docErrataRole());
      var _docExampleRole = _interopRequireDefault(require_docExampleRole());
      var _docFootnoteRole = _interopRequireDefault(require_docFootnoteRole());
      var _docForewordRole = _interopRequireDefault(require_docForewordRole());
      var _docGlossaryRole = _interopRequireDefault(require_docGlossaryRole());
      var _docGlossrefRole = _interopRequireDefault(require_docGlossrefRole());
      var _docIndexRole = _interopRequireDefault(require_docIndexRole());
      var _docIntroductionRole = _interopRequireDefault(require_docIntroductionRole());
      var _docNoterefRole = _interopRequireDefault(require_docNoterefRole());
      var _docNoticeRole = _interopRequireDefault(require_docNoticeRole());
      var _docPagebreakRole = _interopRequireDefault(require_docPagebreakRole());
      var _docPagelistRole = _interopRequireDefault(require_docPagelistRole());
      var _docPartRole = _interopRequireDefault(require_docPartRole());
      var _docPrefaceRole = _interopRequireDefault(require_docPrefaceRole());
      var _docPrologueRole = _interopRequireDefault(require_docPrologueRole());
      var _docPullquoteRole = _interopRequireDefault(require_docPullquoteRole());
      var _docQnaRole = _interopRequireDefault(require_docQnaRole());
      var _docSubtitleRole = _interopRequireDefault(require_docSubtitleRole());
      var _docTipRole = _interopRequireDefault(require_docTipRole());
      var _docTocRole = _interopRequireDefault(require_docTocRole());
      var ariaDpubRoles = new _map.default([["doc-abstract", _docAbstractRole.default], ["doc-acknowledgments", _docAcknowledgmentsRole.default], ["doc-afterword", _docAfterwordRole.default], ["doc-appendix", _docAppendixRole.default], ["doc-backlink", _docBacklinkRole.default], ["doc-biblioentry", _docBiblioentryRole.default], ["doc-bibliography", _docBibliographyRole.default], ["doc-biblioref", _docBibliorefRole.default], ["doc-chapter", _docChapterRole.default], ["doc-colophon", _docColophonRole.default], ["doc-conclusion", _docConclusionRole.default], ["doc-cover", _docCoverRole.default], ["doc-credit", _docCreditRole.default], ["doc-credits", _docCreditsRole.default], ["doc-dedication", _docDedicationRole.default], ["doc-endnote", _docEndnoteRole.default], ["doc-endnotes", _docEndnotesRole.default], ["doc-epigraph", _docEpigraphRole.default], ["doc-epilogue", _docEpilogueRole.default], ["doc-errata", _docErrataRole.default], ["doc-example", _docExampleRole.default], ["doc-footnote", _docFootnoteRole.default], ["doc-foreword", _docForewordRole.default], ["doc-glossary", _docGlossaryRole.default], ["doc-glossref", _docGlossrefRole.default], ["doc-index", _docIndexRole.default], ["doc-introduction", _docIntroductionRole.default], ["doc-noteref", _docNoterefRole.default], ["doc-notice", _docNoticeRole.default], ["doc-pagebreak", _docPagebreakRole.default], ["doc-pagelist", _docPagelistRole.default], ["doc-part", _docPartRole.default], ["doc-preface", _docPrefaceRole.default], ["doc-prologue", _docPrologueRole.default], ["doc-pullquote", _docPullquoteRole.default], ["doc-qna", _docQnaRole.default], ["doc-subtitle", _docSubtitleRole.default], ["doc-tip", _docTipRole.default], ["doc-toc", _docTocRole.default]]);
      var _default = ariaDpubRoles;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/rolesMap.js
  var require_rolesMap = __commonJS({
    "node_modules/aria-query/lib/rolesMap.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault2();
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _getIterator2 = _interopRequireDefault(require_get_iterator7());
      var _isArray = _interopRequireDefault(require_is_array4());
      var _getIteratorMethod2 = _interopRequireDefault(require_get_iterator_method7());
      var _symbol = _interopRequireDefault(require_symbol3());
      var _from = _interopRequireDefault(require_from3());
      var _slice = _interopRequireDefault(require_slice4());
      var _defineProperty2 = _interopRequireDefault(require_defineProperty());
      var _assign = _interopRequireDefault(require_assign3());
      var _keys = _interopRequireDefault(require_keys3());
      var _forEach = _interopRequireDefault(require_for_each4());
      var _map = _interopRequireDefault(require_map3());
      var _ariaAbstractRoles = _interopRequireDefault(require_ariaAbstractRoles());
      var _ariaLiteralRoles = _interopRequireDefault(require_ariaLiteralRoles());
      var _ariaDpubRoles = _interopRequireDefault(require_ariaDpubRoles());
      var _context;
      function _createForOfIteratorHelper(o, allowArrayLike) {
        var it;
        if (typeof _symbol.default === "undefined" || (0, _getIteratorMethod2.default)(o) == null) {
          if ((0, _isArray.default)(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
            if (it)
              o = it;
            var i2 = 0;
            var F = function F2() {
            };
            return {s: F, n: function n() {
              if (i2 >= o.length)
                return {done: true};
              return {done: false, value: o[i2++]};
            }, e: function e2(_e) {
              throw _e;
            }, f: F};
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var normalCompletion = true, didErr = false, err;
        return {s: function s3() {
          it = (0, _getIterator2.default)(o);
        }, n: function n() {
          var step = it.next();
          normalCompletion = step.done;
          return step;
        }, e: function e2(_e2) {
          didErr = true;
          err = _e2;
        }, f: function f() {
          try {
            if (!normalCompletion && it.return != null)
              it.return();
          } finally {
            if (didErr)
              throw err;
          }
        }};
      }
      function _unsupportedIterableToArray(o, minLen) {
        var _context2;
        if (!o)
          return;
        if (typeof o === "string")
          return _arrayLikeToArray(o, minLen);
        var n = (0, _slice.default)(_context2 = Object.prototype.toString.call(o)).call(_context2, 8, -1);
        if (n === "Object" && o.constructor)
          n = o.constructor.name;
        if (n === "Map" || n === "Set")
          return (0, _from.default)(o);
        if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
          return _arrayLikeToArray(o, minLen);
      }
      function _arrayLikeToArray(arr, len) {
        if (len == null || len > arr.length)
          len = arr.length;
        for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++) {
          arr2[i2] = arr[i2];
        }
        return arr2;
      }
      var rolesMap = new _map.default([]);
      (0, _forEach.default)(_context = [_ariaAbstractRoles.default, _ariaLiteralRoles.default, _ariaDpubRoles.default]).call(_context, function(roleSet) {
        (0, _forEach.default)(roleSet).call(roleSet, function(roleDefinition, name) {
          return rolesMap.set(name, roleDefinition);
        });
      });
      (0, _forEach.default)(rolesMap).call(rolesMap, function(roleDefinition, name) {
        var _iterator = _createForOfIteratorHelper(roleDefinition.superClass), _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done; ) {
            var superClassIter = _step.value;
            var _iterator2 = _createForOfIteratorHelper(superClassIter), _step2;
            try {
              for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
                var superClassName = _step2.value;
                var superClassDefinition = rolesMap.get(superClassName);
                if (superClassDefinition) {
                  for (var _i = 0, _Object$keys = (0, _keys.default)(superClassDefinition.props); _i < _Object$keys.length; _i++) {
                    var prop = _Object$keys[_i];
                    if (!Object.prototype.hasOwnProperty.call(roleDefinition.props, prop)) {
                      (0, _assign.default)(roleDefinition.props, (0, _defineProperty2.default)({}, prop, superClassDefinition.props[prop]));
                    }
                  }
                }
              }
            } catch (err) {
              _iterator2.e(err);
            } finally {
              _iterator2.f();
            }
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      });
      var _default = rolesMap;
      exports.default = _default;
    }
  });

  // node_modules/core-js-pure/modules/es.set.constructor.js
  var require_es_set_constructor = __commonJS({
    "node_modules/core-js-pure/modules/es.set.constructor.js"() {
      "use strict";
      var collection = require_collection();
      var collectionStrong = require_collection_strong();
      collection("Set", function(init) {
        return function Set2() {
          return init(this, arguments.length ? arguments[0] : void 0);
        };
      }, collectionStrong);
    }
  });

  // node_modules/core-js-pure/modules/es.set.js
  var require_es_set = __commonJS({
    "node_modules/core-js-pure/modules/es.set.js"() {
      require_es_set_constructor();
    }
  });

  // node_modules/core-js-pure/es/set/index.js
  var require_set = __commonJS({
    "node_modules/core-js-pure/es/set/index.js"(exports, module) {
      require_es_array_iterator();
      require_es_object_to_string();
      require_es_set();
      require_es_string_iterator();
      var path = require_path();
      module.exports = path.Set;
    }
  });

  // node_modules/core-js-pure/stable/set/index.js
  var require_set2 = __commonJS({
    "node_modules/core-js-pure/stable/set/index.js"(exports, module) {
      var parent = require_set();
      require_web_dom_collections_iterator();
      module.exports = parent;
    }
  });

  // node_modules/@babel/runtime-corejs3/core-js-stable/set.js
  var require_set3 = __commonJS({
    "node_modules/@babel/runtime-corejs3/core-js-stable/set.js"(exports, module) {
      module.exports = require_set2();
    }
  });

  // node_modules/core-js-pure/actual/array/is-array.js
  var require_is_array5 = __commonJS({
    "node_modules/core-js-pure/actual/array/is-array.js"(exports, module) {
      var parent = require_is_array3();
      module.exports = parent;
    }
  });

  // node_modules/core-js-pure/full/array/is-array.js
  var require_is_array6 = __commonJS({
    "node_modules/core-js-pure/full/array/is-array.js"(exports, module) {
      var parent = require_is_array5();
      module.exports = parent;
    }
  });

  // node_modules/core-js-pure/features/array/is-array.js
  var require_is_array7 = __commonJS({
    "node_modules/core-js-pure/features/array/is-array.js"(exports, module) {
      module.exports = require_is_array6();
    }
  });

  // node_modules/@babel/runtime-corejs3/core-js/array/is-array.js
  var require_is_array8 = __commonJS({
    "node_modules/@babel/runtime-corejs3/core-js/array/is-array.js"(exports, module) {
      module.exports = require_is_array7();
    }
  });

  // node_modules/@babel/runtime-corejs3/helpers/arrayWithHoles.js
  var require_arrayWithHoles = __commonJS({
    "node_modules/@babel/runtime-corejs3/helpers/arrayWithHoles.js"(exports, module) {
      var _Array$isArray = require_is_array8();
      function _arrayWithHoles(arr) {
        if (_Array$isArray(arr))
          return arr;
      }
      module.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports["default"] = module.exports;
    }
  });

  // node_modules/core-js-pure/actual/symbol/index.js
  var require_symbol4 = __commonJS({
    "node_modules/core-js-pure/actual/symbol/index.js"(exports, module) {
      var parent = require_symbol2();
      module.exports = parent;
    }
  });

  // node_modules/core-js-pure/modules/esnext.symbol.async-dispose.js
  var require_esnext_symbol_async_dispose = __commonJS({
    "node_modules/core-js-pure/modules/esnext.symbol.async-dispose.js"() {
      var defineWellKnownSymbol = require_well_known_symbol_define();
      defineWellKnownSymbol("asyncDispose");
    }
  });

  // node_modules/core-js-pure/modules/esnext.symbol.dispose.js
  var require_esnext_symbol_dispose = __commonJS({
    "node_modules/core-js-pure/modules/esnext.symbol.dispose.js"() {
      var defineWellKnownSymbol = require_well_known_symbol_define();
      defineWellKnownSymbol("dispose");
    }
  });

  // node_modules/core-js-pure/modules/esnext.symbol.matcher.js
  var require_esnext_symbol_matcher = __commonJS({
    "node_modules/core-js-pure/modules/esnext.symbol.matcher.js"() {
      var defineWellKnownSymbol = require_well_known_symbol_define();
      defineWellKnownSymbol("matcher");
    }
  });

  // node_modules/core-js-pure/modules/esnext.symbol.metadata-key.js
  var require_esnext_symbol_metadata_key = __commonJS({
    "node_modules/core-js-pure/modules/esnext.symbol.metadata-key.js"() {
      var defineWellKnownSymbol = require_well_known_symbol_define();
      defineWellKnownSymbol("metadataKey");
    }
  });

  // node_modules/core-js-pure/modules/esnext.symbol.observable.js
  var require_esnext_symbol_observable = __commonJS({
    "node_modules/core-js-pure/modules/esnext.symbol.observable.js"() {
      var defineWellKnownSymbol = require_well_known_symbol_define();
      defineWellKnownSymbol("observable");
    }
  });

  // node_modules/core-js-pure/modules/esnext.symbol.metadata.js
  var require_esnext_symbol_metadata = __commonJS({
    "node_modules/core-js-pure/modules/esnext.symbol.metadata.js"() {
      var defineWellKnownSymbol = require_well_known_symbol_define();
      defineWellKnownSymbol("metadata");
    }
  });

  // node_modules/core-js-pure/modules/esnext.symbol.pattern-match.js
  var require_esnext_symbol_pattern_match = __commonJS({
    "node_modules/core-js-pure/modules/esnext.symbol.pattern-match.js"() {
      var defineWellKnownSymbol = require_well_known_symbol_define();
      defineWellKnownSymbol("patternMatch");
    }
  });

  // node_modules/core-js-pure/modules/esnext.symbol.replace-all.js
  var require_esnext_symbol_replace_all = __commonJS({
    "node_modules/core-js-pure/modules/esnext.symbol.replace-all.js"() {
      var defineWellKnownSymbol = require_well_known_symbol_define();
      defineWellKnownSymbol("replaceAll");
    }
  });

  // node_modules/core-js-pure/full/symbol/index.js
  var require_symbol5 = __commonJS({
    "node_modules/core-js-pure/full/symbol/index.js"(exports, module) {
      var parent = require_symbol4();
      require_esnext_symbol_async_dispose();
      require_esnext_symbol_dispose();
      require_esnext_symbol_matcher();
      require_esnext_symbol_metadata_key();
      require_esnext_symbol_observable();
      require_esnext_symbol_metadata();
      require_esnext_symbol_pattern_match();
      require_esnext_symbol_replace_all();
      module.exports = parent;
    }
  });

  // node_modules/core-js-pure/features/symbol/index.js
  var require_symbol6 = __commonJS({
    "node_modules/core-js-pure/features/symbol/index.js"(exports, module) {
      module.exports = require_symbol5();
    }
  });

  // node_modules/@babel/runtime-corejs3/core-js/symbol.js
  var require_symbol7 = __commonJS({
    "node_modules/@babel/runtime-corejs3/core-js/symbol.js"(exports, module) {
      module.exports = require_symbol6();
    }
  });

  // node_modules/@babel/runtime-corejs3/helpers/iterableToArrayLimit.js
  var require_iterableToArrayLimit = __commonJS({
    "node_modules/@babel/runtime-corejs3/helpers/iterableToArrayLimit.js"(exports, module) {
      var _Symbol = require_symbol7();
      var _getIteratorMethod = require_get_iterator_method7();
      function _iterableToArrayLimit(arr, i2) {
        var _i = arr == null ? null : typeof _Symbol !== "undefined" && _getIteratorMethod(arr) || arr["@@iterator"];
        if (_i == null)
          return;
        var _arr = [];
        var _n = true;
        var _d = false;
        var _s, _e;
        try {
          for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
            _arr.push(_s.value);
            if (i2 && _arr.length === i2)
              break;
          }
        } catch (err) {
          _d = true;
          _e = err;
        } finally {
          try {
            if (!_n && _i["return"] != null)
              _i["return"]();
          } finally {
            if (_d)
              throw _e;
          }
        }
        return _arr;
      }
      module.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports["default"] = module.exports;
    }
  });

  // node_modules/core-js-pure/actual/instance/slice.js
  var require_slice5 = __commonJS({
    "node_modules/core-js-pure/actual/instance/slice.js"(exports, module) {
      var parent = require_slice3();
      module.exports = parent;
    }
  });

  // node_modules/core-js-pure/full/instance/slice.js
  var require_slice6 = __commonJS({
    "node_modules/core-js-pure/full/instance/slice.js"(exports, module) {
      var parent = require_slice5();
      module.exports = parent;
    }
  });

  // node_modules/core-js-pure/features/instance/slice.js
  var require_slice7 = __commonJS({
    "node_modules/core-js-pure/features/instance/slice.js"(exports, module) {
      module.exports = require_slice6();
    }
  });

  // node_modules/@babel/runtime-corejs3/core-js/instance/slice.js
  var require_slice8 = __commonJS({
    "node_modules/@babel/runtime-corejs3/core-js/instance/slice.js"(exports, module) {
      module.exports = require_slice7();
    }
  });

  // node_modules/core-js-pure/actual/array/from.js
  var require_from4 = __commonJS({
    "node_modules/core-js-pure/actual/array/from.js"(exports, module) {
      var parent = require_from2();
      module.exports = parent;
    }
  });

  // node_modules/core-js-pure/full/array/from.js
  var require_from5 = __commonJS({
    "node_modules/core-js-pure/full/array/from.js"(exports, module) {
      var parent = require_from4();
      module.exports = parent;
    }
  });

  // node_modules/core-js-pure/features/array/from.js
  var require_from6 = __commonJS({
    "node_modules/core-js-pure/features/array/from.js"(exports, module) {
      module.exports = require_from5();
    }
  });

  // node_modules/@babel/runtime-corejs3/core-js/array/from.js
  var require_from7 = __commonJS({
    "node_modules/@babel/runtime-corejs3/core-js/array/from.js"(exports, module) {
      module.exports = require_from6();
    }
  });

  // node_modules/@babel/runtime-corejs3/helpers/arrayLikeToArray.js
  var require_arrayLikeToArray = __commonJS({
    "node_modules/@babel/runtime-corejs3/helpers/arrayLikeToArray.js"(exports, module) {
      function _arrayLikeToArray(arr, len) {
        if (len == null || len > arr.length)
          len = arr.length;
        for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++) {
          arr2[i2] = arr[i2];
        }
        return arr2;
      }
      module.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;
    }
  });

  // node_modules/@babel/runtime-corejs3/helpers/unsupportedIterableToArray.js
  var require_unsupportedIterableToArray = __commonJS({
    "node_modules/@babel/runtime-corejs3/helpers/unsupportedIterableToArray.js"(exports, module) {
      var _sliceInstanceProperty = require_slice8();
      var _Array$from = require_from7();
      var arrayLikeToArray = require_arrayLikeToArray();
      function _unsupportedIterableToArray(o, minLen) {
        var _context;
        if (!o)
          return;
        if (typeof o === "string")
          return arrayLikeToArray(o, minLen);
        var n = _sliceInstanceProperty(_context = Object.prototype.toString.call(o)).call(_context, 8, -1);
        if (n === "Object" && o.constructor)
          n = o.constructor.name;
        if (n === "Map" || n === "Set")
          return _Array$from(o);
        if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
          return arrayLikeToArray(o, minLen);
      }
      module.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;
    }
  });

  // node_modules/@babel/runtime-corejs3/helpers/nonIterableRest.js
  var require_nonIterableRest = __commonJS({
    "node_modules/@babel/runtime-corejs3/helpers/nonIterableRest.js"(exports, module) {
      function _nonIterableRest() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      module.exports = _nonIterableRest, module.exports.__esModule = true, module.exports["default"] = module.exports;
    }
  });

  // node_modules/@babel/runtime-corejs3/helpers/slicedToArray.js
  var require_slicedToArray = __commonJS({
    "node_modules/@babel/runtime-corejs3/helpers/slicedToArray.js"(exports, module) {
      var arrayWithHoles = require_arrayWithHoles();
      var iterableToArrayLimit = require_iterableToArrayLimit();
      var unsupportedIterableToArray = require_unsupportedIterableToArray();
      var nonIterableRest = require_nonIterableRest();
      function _slicedToArray(arr, i2) {
        return arrayWithHoles(arr) || iterableToArrayLimit(arr, i2) || unsupportedIterableToArray(arr, i2) || nonIterableRest();
      }
      module.exports = _slicedToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;
    }
  });

  // node_modules/core-js-pure/es/array/virtual/entries.js
  var require_entries = __commonJS({
    "node_modules/core-js-pure/es/array/virtual/entries.js"(exports, module) {
      require_es_array_iterator();
      require_es_object_to_string();
      var entryVirtual = require_entry_virtual();
      module.exports = entryVirtual("Array").entries;
    }
  });

  // node_modules/core-js-pure/stable/array/virtual/entries.js
  var require_entries2 = __commonJS({
    "node_modules/core-js-pure/stable/array/virtual/entries.js"(exports, module) {
      var parent = require_entries();
      module.exports = parent;
    }
  });

  // node_modules/core-js-pure/stable/instance/entries.js
  var require_entries3 = __commonJS({
    "node_modules/core-js-pure/stable/instance/entries.js"(exports, module) {
      require_web_dom_collections_iterator();
      var classof = require_classof();
      var hasOwn = require_has_own_property();
      var isPrototypeOf = require_object_is_prototype_of();
      var method = require_entries2();
      var ArrayPrototype = Array.prototype;
      var DOMIterables = {
        DOMTokenList: true,
        NodeList: true
      };
      module.exports = function(it) {
        var own = it.entries;
        return it === ArrayPrototype || isPrototypeOf(ArrayPrototype, it) && own === ArrayPrototype.entries || hasOwn(DOMIterables, classof(it)) ? method : own;
      };
    }
  });

  // node_modules/@babel/runtime-corejs3/core-js-stable/instance/entries.js
  var require_entries4 = __commonJS({
    "node_modules/@babel/runtime-corejs3/core-js-stable/instance/entries.js"(exports, module) {
      module.exports = require_entries3();
    }
  });

  // node_modules/core-js-pure/modules/es.array.find.js
  var require_es_array_find = __commonJS({
    "node_modules/core-js-pure/modules/es.array.find.js"() {
      "use strict";
      var $3 = require_export();
      var $find = require_array_iteration().find;
      var addToUnscopables = require_add_to_unscopables();
      var FIND = "find";
      var SKIPS_HOLES = true;
      if (FIND in [])
        Array(1)[FIND](function() {
          SKIPS_HOLES = false;
        });
      $3({target: "Array", proto: true, forced: SKIPS_HOLES}, {
        find: function find(callbackfn) {
          return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : void 0);
        }
      });
      addToUnscopables(FIND);
    }
  });

  // node_modules/core-js-pure/es/array/virtual/find.js
  var require_find = __commonJS({
    "node_modules/core-js-pure/es/array/virtual/find.js"(exports, module) {
      require_es_array_find();
      var entryVirtual = require_entry_virtual();
      module.exports = entryVirtual("Array").find;
    }
  });

  // node_modules/core-js-pure/es/instance/find.js
  var require_find2 = __commonJS({
    "node_modules/core-js-pure/es/instance/find.js"(exports, module) {
      var isPrototypeOf = require_object_is_prototype_of();
      var method = require_find();
      var ArrayPrototype = Array.prototype;
      module.exports = function(it) {
        var own = it.find;
        return it === ArrayPrototype || isPrototypeOf(ArrayPrototype, it) && own === ArrayPrototype.find ? method : own;
      };
    }
  });

  // node_modules/core-js-pure/stable/instance/find.js
  var require_find3 = __commonJS({
    "node_modules/core-js-pure/stable/instance/find.js"(exports, module) {
      var parent = require_find2();
      module.exports = parent;
    }
  });

  // node_modules/@babel/runtime-corejs3/core-js-stable/instance/find.js
  var require_find4 = __commonJS({
    "node_modules/@babel/runtime-corejs3/core-js-stable/instance/find.js"(exports, module) {
      module.exports = require_find3();
    }
  });

  // node_modules/core-js-pure/es/json/stringify.js
  var require_stringify = __commonJS({
    "node_modules/core-js-pure/es/json/stringify.js"(exports, module) {
      require_es_json_stringify();
      var path = require_path();
      var apply = require_function_apply();
      if (!path.JSON)
        path.JSON = {stringify: JSON.stringify};
      module.exports = function stringify(it, replacer, space) {
        return apply(path.JSON.stringify, null, arguments);
      };
    }
  });

  // node_modules/core-js-pure/stable/json/stringify.js
  var require_stringify2 = __commonJS({
    "node_modules/core-js-pure/stable/json/stringify.js"(exports, module) {
      var parent = require_stringify();
      module.exports = parent;
    }
  });

  // node_modules/@babel/runtime-corejs3/core-js-stable/json/stringify.js
  var require_stringify3 = __commonJS({
    "node_modules/@babel/runtime-corejs3/core-js-stable/json/stringify.js"(exports, module) {
      module.exports = require_stringify2();
    }
  });

  // node_modules/core-js-pure/es/array/virtual/concat.js
  var require_concat = __commonJS({
    "node_modules/core-js-pure/es/array/virtual/concat.js"(exports, module) {
      require_es_array_concat();
      var entryVirtual = require_entry_virtual();
      module.exports = entryVirtual("Array").concat;
    }
  });

  // node_modules/core-js-pure/es/instance/concat.js
  var require_concat2 = __commonJS({
    "node_modules/core-js-pure/es/instance/concat.js"(exports, module) {
      var isPrototypeOf = require_object_is_prototype_of();
      var method = require_concat();
      var ArrayPrototype = Array.prototype;
      module.exports = function(it) {
        var own = it.concat;
        return it === ArrayPrototype || isPrototypeOf(ArrayPrototype, it) && own === ArrayPrototype.concat ? method : own;
      };
    }
  });

  // node_modules/core-js-pure/stable/instance/concat.js
  var require_concat3 = __commonJS({
    "node_modules/core-js-pure/stable/instance/concat.js"(exports, module) {
      var parent = require_concat2();
      module.exports = parent;
    }
  });

  // node_modules/@babel/runtime-corejs3/core-js-stable/instance/concat.js
  var require_concat4 = __commonJS({
    "node_modules/@babel/runtime-corejs3/core-js-stable/instance/concat.js"(exports, module) {
      module.exports = require_concat3();
    }
  });

  // node_modules/core-js-pure/es/array/virtual/keys.js
  var require_keys4 = __commonJS({
    "node_modules/core-js-pure/es/array/virtual/keys.js"(exports, module) {
      require_es_array_iterator();
      require_es_object_to_string();
      var entryVirtual = require_entry_virtual();
      module.exports = entryVirtual("Array").keys;
    }
  });

  // node_modules/core-js-pure/stable/array/virtual/keys.js
  var require_keys5 = __commonJS({
    "node_modules/core-js-pure/stable/array/virtual/keys.js"(exports, module) {
      var parent = require_keys4();
      module.exports = parent;
    }
  });

  // node_modules/core-js-pure/stable/instance/keys.js
  var require_keys6 = __commonJS({
    "node_modules/core-js-pure/stable/instance/keys.js"(exports, module) {
      require_web_dom_collections_iterator();
      var classof = require_classof();
      var hasOwn = require_has_own_property();
      var isPrototypeOf = require_object_is_prototype_of();
      var method = require_keys5();
      var ArrayPrototype = Array.prototype;
      var DOMIterables = {
        DOMTokenList: true,
        NodeList: true
      };
      module.exports = function(it) {
        var own = it.keys;
        return it === ArrayPrototype || isPrototypeOf(ArrayPrototype, it) && own === ArrayPrototype.keys || hasOwn(DOMIterables, classof(it)) ? method : own;
      };
    }
  });

  // node_modules/@babel/runtime-corejs3/core-js-stable/instance/keys.js
  var require_keys7 = __commonJS({
    "node_modules/@babel/runtime-corejs3/core-js-stable/instance/keys.js"(exports, module) {
      module.exports = require_keys6();
    }
  });

  // node_modules/@babel/runtime-corejs3/helpers/arrayWithoutHoles.js
  var require_arrayWithoutHoles = __commonJS({
    "node_modules/@babel/runtime-corejs3/helpers/arrayWithoutHoles.js"(exports, module) {
      var _Array$isArray = require_is_array8();
      var arrayLikeToArray = require_arrayLikeToArray();
      function _arrayWithoutHoles(arr) {
        if (_Array$isArray(arr))
          return arrayLikeToArray(arr);
      }
      module.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports["default"] = module.exports;
    }
  });

  // node_modules/@babel/runtime-corejs3/helpers/iterableToArray.js
  var require_iterableToArray = __commonJS({
    "node_modules/@babel/runtime-corejs3/helpers/iterableToArray.js"(exports, module) {
      var _Symbol = require_symbol7();
      var _getIteratorMethod = require_get_iterator_method7();
      var _Array$from = require_from7();
      function _iterableToArray(iter) {
        if (typeof _Symbol !== "undefined" && _getIteratorMethod(iter) != null || iter["@@iterator"] != null)
          return _Array$from(iter);
      }
      module.exports = _iterableToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;
    }
  });

  // node_modules/@babel/runtime-corejs3/helpers/nonIterableSpread.js
  var require_nonIterableSpread = __commonJS({
    "node_modules/@babel/runtime-corejs3/helpers/nonIterableSpread.js"(exports, module) {
      function _nonIterableSpread() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      module.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports["default"] = module.exports;
    }
  });

  // node_modules/@babel/runtime-corejs3/helpers/toConsumableArray.js
  var require_toConsumableArray = __commonJS({
    "node_modules/@babel/runtime-corejs3/helpers/toConsumableArray.js"(exports, module) {
      var arrayWithoutHoles = require_arrayWithoutHoles();
      var iterableToArray = require_iterableToArray();
      var unsupportedIterableToArray = require_unsupportedIterableToArray();
      var nonIterableSpread = require_nonIterableSpread();
      function _toConsumableArray(arr) {
        return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();
      }
      module.exports = _toConsumableArray, module.exports.__esModule = true, module.exports["default"] = module.exports;
    }
  });

  // node_modules/aria-query/lib/elementRoleMap.js
  var require_elementRoleMap = __commonJS({
    "node_modules/aria-query/lib/elementRoleMap.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault2();
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _set = _interopRequireDefault(require_set3());
      var _slicedToArray2 = _interopRequireDefault(require_slicedToArray());
      var _entries = _interopRequireDefault(require_entries4());
      var _find = _interopRequireDefault(require_find4());
      var _stringify = _interopRequireDefault(require_stringify3());
      var _concat = _interopRequireDefault(require_concat4());
      var _keys = _interopRequireDefault(require_keys7());
      var _toConsumableArray2 = _interopRequireDefault(require_toConsumableArray());
      var _forEach = _interopRequireDefault(require_for_each4());
      var _map = _interopRequireDefault(require_map3());
      var _rolesMap = _interopRequireDefault(require_rolesMap());
      var _context;
      var elementRoleMap = new _map.default([]);
      (0, _forEach.default)(_context = (0, _toConsumableArray2.default)((0, _keys.default)(_rolesMap.default).call(_rolesMap.default))).call(_context, function(key) {
        var role = _rolesMap.default.get(key);
        if (role) {
          var _context2, _context3;
          (0, _forEach.default)(_context2 = (0, _concat.default)(_context3 = []).call(_context3, (0, _toConsumableArray2.default)(role.baseConcepts), (0, _toConsumableArray2.default)(role.relatedConcepts))).call(_context2, function(relation) {
            if (relation.module === "HTML") {
              var concept = relation.concept;
              if (concept) {
                var _context4;
                var conceptStr = (0, _stringify.default)(concept);
                var roles = ((0, _find.default)(_context4 = (0, _toConsumableArray2.default)((0, _entries.default)(elementRoleMap).call(elementRoleMap))).call(_context4, function(_ref) {
                  var _ref2 = (0, _slicedToArray2.default)(_ref, 2), key2 = _ref2[0], value = _ref2[1];
                  return (0, _stringify.default)(key2) === conceptStr;
                }) || [])[1];
                if (!roles) {
                  roles = new _set.default([]);
                }
                roles.add(key);
                elementRoleMap.set(concept, roles);
              }
            }
          });
        }
      });
      var _default = elementRoleMap;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/roleElementMap.js
  var require_roleElementMap = __commonJS({
    "node_modules/aria-query/lib/roleElementMap.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault2();
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _set = _interopRequireDefault(require_set3());
      var _concat = _interopRequireDefault(require_concat4());
      var _keys = _interopRequireDefault(require_keys7());
      var _toConsumableArray2 = _interopRequireDefault(require_toConsumableArray());
      var _forEach = _interopRequireDefault(require_for_each4());
      var _map = _interopRequireDefault(require_map3());
      var _rolesMap = _interopRequireDefault(require_rolesMap());
      var _context;
      var roleElementMap = new _map.default([]);
      (0, _forEach.default)(_context = (0, _toConsumableArray2.default)((0, _keys.default)(_rolesMap.default).call(_rolesMap.default))).call(_context, function(key) {
        var role = _rolesMap.default.get(key);
        if (role) {
          var _context2, _context3;
          (0, _forEach.default)(_context2 = (0, _concat.default)(_context3 = []).call(_context3, (0, _toConsumableArray2.default)(role.baseConcepts), (0, _toConsumableArray2.default)(role.relatedConcepts))).call(_context2, function(relation) {
            if (relation.module === "HTML") {
              var concept = relation.concept;
              if (concept) {
                var relationConcepts = roleElementMap.get(key) || new _set.default([]);
                relationConcepts.add(concept);
                roleElementMap.set(key, relationConcepts);
              }
            }
          });
        }
      });
      var _default = roleElementMap;
      exports.default = _default;
    }
  });

  // node_modules/aria-query/lib/index.js
  var require_lib = __commonJS({
    "node_modules/aria-query/lib/index.js"(exports) {
      "use strict";
      var _interopRequireDefault = require_interopRequireDefault2();
      var _Object$defineProperty = require_define_property3();
      _Object$defineProperty(exports, "__esModule", {
        value: true
      });
      exports.roleElements = exports.elementRoles = exports.roles = exports.dom = exports.aria = void 0;
      var _ariaPropsMap = _interopRequireDefault(require_ariaPropsMap());
      var _domMap = _interopRequireDefault(require_domMap());
      var _rolesMap = _interopRequireDefault(require_rolesMap());
      var _elementRoleMap = _interopRequireDefault(require_elementRoleMap());
      var _roleElementMap = _interopRequireDefault(require_roleElementMap());
      var aria = _ariaPropsMap.default;
      exports.aria = aria;
      var dom = _domMap.default;
      exports.dom = dom;
      var roles = _rolesMap.default;
      exports.roles = roles;
      var elementRoles = _elementRoleMap.default;
      exports.elementRoles = elementRoles;
      var roleElements = _roleElementMap.default;
      exports.roleElements = roleElements;
    }
  });

  // node_modules/@testing-library/dom/dist/role-helpers.js
  var require_role_helpers = __commonJS({
    "node_modules/@testing-library/dom/dist/role-helpers.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.getRoles = getRoles;
      exports.getImplicitAriaRoles = getImplicitAriaRoles;
      exports.isSubtreeInaccessible = isSubtreeInaccessible;
      exports.prettyRoles = prettyRoles;
      exports.isInaccessible = isInaccessible;
      exports.computeAriaSelected = computeAriaSelected;
      exports.computeAriaChecked = computeAriaChecked;
      exports.computeAriaPressed = computeAriaPressed;
      exports.computeAriaExpanded = computeAriaExpanded;
      exports.computeHeadingLevel = computeHeadingLevel;
      exports.logRoles = void 0;
      var _ariaQuery = require_lib();
      var _domAccessibilityApi = require_dist();
      var _prettyDom = require_pretty_dom();
      var _config = require_config();
      var elementRoleList = buildElementRoleList(_ariaQuery.elementRoles);
      function isSubtreeInaccessible(element) {
        if (element.hidden === true) {
          return true;
        }
        if (element.getAttribute("aria-hidden") === "true") {
          return true;
        }
        const window2 = element.ownerDocument.defaultView;
        if (window2.getComputedStyle(element).display === "none") {
          return true;
        }
        return false;
      }
      function isInaccessible(element, options = {}) {
        const {
          isSubtreeInaccessible: isSubtreeInaccessibleImpl = isSubtreeInaccessible
        } = options;
        const window2 = element.ownerDocument.defaultView;
        if (window2.getComputedStyle(element).visibility === "hidden") {
          return true;
        }
        let currentElement = element;
        while (currentElement) {
          if (isSubtreeInaccessibleImpl(currentElement)) {
            return true;
          }
          currentElement = currentElement.parentElement;
        }
        return false;
      }
      function getImplicitAriaRoles(currentNode) {
        for (const {
          match: match2,
          roles
        } of elementRoleList) {
          if (match2(currentNode)) {
            return [...roles];
          }
        }
        return [];
      }
      function buildElementRoleList(elementRolesMap) {
        function makeElementSelector({
          name,
          attributes
        }) {
          return `${name}${attributes.map(({
            name: attributeName,
            value,
            constraints = []
          }) => {
            const shouldNotExist = constraints.indexOf("undefined") !== -1;
            if (shouldNotExist) {
              return `:not([${attributeName}])`;
            } else if (value) {
              return `[${attributeName}="${value}"]`;
            } else {
              return `[${attributeName}]`;
            }
          }).join("")}`;
        }
        function getSelectorSpecificity({
          attributes = []
        }) {
          return attributes.length;
        }
        function bySelectorSpecificity({
          specificity: leftSpecificity
        }, {
          specificity: rightSpecificity
        }) {
          return rightSpecificity - leftSpecificity;
        }
        function match2(element) {
          return (node) => {
            let {
              attributes = []
            } = element;
            const typeTextIndex = attributes.findIndex((attribute) => attribute.value && attribute.name === "type" && attribute.value === "text");
            if (typeTextIndex >= 0) {
              attributes = [...attributes.slice(0, typeTextIndex), ...attributes.slice(typeTextIndex + 1)];
              if (node.type !== "text") {
                return false;
              }
            }
            return node.matches(makeElementSelector({
              ...element,
              attributes
            }));
          };
        }
        let result = [];
        for (const [element, roles] of elementRolesMap.entries()) {
          result = [...result, {
            match: match2(element),
            roles: Array.from(roles),
            specificity: getSelectorSpecificity(element)
          }];
        }
        return result.sort(bySelectorSpecificity);
      }
      function getRoles(container, {
        hidden = false
      } = {}) {
        function flattenDOM(node) {
          return [node, ...Array.from(node.children).reduce((acc, child) => [...acc, ...flattenDOM(child)], [])];
        }
        return flattenDOM(container).filter((element) => {
          return hidden === false ? isInaccessible(element) === false : true;
        }).reduce((acc, node) => {
          let roles = [];
          if (node.hasAttribute("role")) {
            roles = node.getAttribute("role").split(" ").slice(0, 1);
          } else {
            roles = getImplicitAriaRoles(node);
          }
          return roles.reduce((rolesAcc, role) => Array.isArray(rolesAcc[role]) ? {
            ...rolesAcc,
            [role]: [...rolesAcc[role], node]
          } : {
            ...rolesAcc,
            [role]: [node]
          }, acc);
        }, {});
      }
      function prettyRoles(dom, {
        hidden
      }) {
        const roles = getRoles(dom, {
          hidden
        });
        return Object.entries(roles).filter(([role]) => role !== "generic").map(([role, elements]) => {
          const delimiterBar = "-".repeat(50);
          const elementsString = elements.map((el) => {
            const nameString = `Name "${(0, _domAccessibilityApi.computeAccessibleName)(el, {
              computedStyleSupportsPseudoElements: (0, _config.getConfig)().computedStyleSupportsPseudoElements
            })}":
`;
            const domString = (0, _prettyDom.prettyDOM)(el.cloneNode(false));
            return `${nameString}${domString}`;
          }).join("\n\n");
          return `${role}:

${elementsString}

${delimiterBar}`;
        }).join("\n");
      }
      var logRoles = (dom, {
        hidden = false
      } = {}) => console.log(prettyRoles(dom, {
        hidden
      }));
      exports.logRoles = logRoles;
      function computeAriaSelected(element) {
        if (element.tagName === "OPTION") {
          return element.selected;
        }
        return checkBooleanAttribute(element, "aria-selected");
      }
      function computeAriaChecked(element) {
        if ("indeterminate" in element && element.indeterminate) {
          return void 0;
        }
        if ("checked" in element) {
          return element.checked;
        }
        return checkBooleanAttribute(element, "aria-checked");
      }
      function computeAriaPressed(element) {
        return checkBooleanAttribute(element, "aria-pressed");
      }
      function computeAriaExpanded(element) {
        return checkBooleanAttribute(element, "aria-expanded");
      }
      function checkBooleanAttribute(element, attribute) {
        const attributeValue = element.getAttribute(attribute);
        if (attributeValue === "true") {
          return true;
        }
        if (attributeValue === "false") {
          return false;
        }
        return void 0;
      }
      function computeHeadingLevel(element) {
        const implicitHeadingLevels = {
          H1: 1,
          H2: 2,
          H3: 3,
          H4: 4,
          H5: 5,
          H6: 6
        };
        const ariaLevelAttribute = element.getAttribute("aria-level") && Number(element.getAttribute("aria-level"));
        return ariaLevelAttribute || implicitHeadingLevels[element.tagName];
      }
    }
  });

  // node_modules/@testing-library/dom/dist/suggestions.js
  var require_suggestions = __commonJS({
    "node_modules/@testing-library/dom/dist/suggestions.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.getSuggestedQuery = getSuggestedQuery;
      var _domAccessibilityApi = require_dist();
      var _matches = require_matches();
      var _getNodeText = require_get_node_text();
      var _config = require_config();
      var _roleHelpers = require_role_helpers();
      var _labelHelpers = require_label_helpers();
      var normalize = (0, _matches.getDefaultNormalizer)();
      function escapeRegExp(string) {
        return string.replace(/[.*+\-?^${}()|[\]\\]/g, "\\$&");
      }
      function getRegExpMatcher(string) {
        return new RegExp(escapeRegExp(string.toLowerCase()), "i");
      }
      function makeSuggestion(queryName, element, content, {
        variant,
        name
      }) {
        let warning = "";
        const queryOptions = {};
        const queryArgs = [["Role", "TestId"].includes(queryName) ? content : getRegExpMatcher(content)];
        if (name) {
          queryOptions.name = getRegExpMatcher(name);
        }
        if (queryName === "Role" && (0, _roleHelpers.isInaccessible)(element)) {
          queryOptions.hidden = true;
          warning = `Element is inaccessible. This means that the element and all its children are invisible to screen readers.
    If you are using the aria-hidden prop, make sure this is the right choice for your case.
    `;
        }
        if (Object.keys(queryOptions).length > 0) {
          queryArgs.push(queryOptions);
        }
        const queryMethod = `${variant}By${queryName}`;
        return {
          queryName,
          queryMethod,
          queryArgs,
          variant,
          warning,
          toString() {
            if (warning) {
              console.warn(warning);
            }
            let [text, options] = queryArgs;
            text = typeof text === "string" ? `'${text}'` : text;
            options = options ? `, { ${Object.entries(options).map(([k2, v]) => `${k2}: ${v}`).join(", ")} }` : "";
            return `${queryMethod}(${text}${options})`;
          }
        };
      }
      function canSuggest(currentMethod, requestedMethod, data) {
        return data && (!requestedMethod || requestedMethod.toLowerCase() === currentMethod.toLowerCase());
      }
      function getSuggestedQuery(element, variant = "get", method) {
        var _element$getAttribute, _getImplicitAriaRoles;
        if (element.matches(_config.DEFAULT_IGNORE_TAGS)) {
          return void 0;
        }
        const role = (_element$getAttribute = element.getAttribute("role")) != null ? _element$getAttribute : (_getImplicitAriaRoles = (0, _roleHelpers.getImplicitAriaRoles)(element)) == null ? void 0 : _getImplicitAriaRoles[0];
        if (role !== "generic" && canSuggest("Role", method, role)) {
          return makeSuggestion("Role", element, role, {
            variant,
            name: (0, _domAccessibilityApi.computeAccessibleName)(element, {
              computedStyleSupportsPseudoElements: (0, _config.getConfig)().computedStyleSupportsPseudoElements
            })
          });
        }
        const labelText = (0, _labelHelpers.getLabels)(document, element).map((label) => label.content).join(" ");
        if (canSuggest("LabelText", method, labelText)) {
          return makeSuggestion("LabelText", element, labelText, {
            variant
          });
        }
        const placeholderText = element.getAttribute("placeholder");
        if (canSuggest("PlaceholderText", method, placeholderText)) {
          return makeSuggestion("PlaceholderText", element, placeholderText, {
            variant
          });
        }
        const textContent = normalize((0, _getNodeText.getNodeText)(element));
        if (canSuggest("Text", method, textContent)) {
          return makeSuggestion("Text", element, textContent, {
            variant
          });
        }
        if (canSuggest("DisplayValue", method, element.value)) {
          return makeSuggestion("DisplayValue", element, normalize(element.value), {
            variant
          });
        }
        const alt = element.getAttribute("alt");
        if (canSuggest("AltText", method, alt)) {
          return makeSuggestion("AltText", element, alt, {
            variant
          });
        }
        const title = element.getAttribute("title");
        if (canSuggest("Title", method, title)) {
          return makeSuggestion("Title", element, title, {
            variant
          });
        }
        const testId = element.getAttribute((0, _config.getConfig)().testIdAttribute);
        if (canSuggest("TestId", method, testId)) {
          return makeSuggestion("TestId", element, testId, {
            variant
          });
        }
        return void 0;
      }
    }
  });

  // node_modules/@testing-library/dom/dist/wait-for.js
  var require_wait_for = __commonJS({
    "node_modules/@testing-library/dom/dist/wait-for.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.waitFor = waitForWrapper;
      exports.wait = wait;
      var _helpers = require_helpers();
      var _config = require_config();
      function copyStackTrace(target, source) {
        target.stack = source.stack.replace(source.message, target.message);
      }
      function waitFor(callback, {
        container = (0, _helpers.getDocument)(),
        timeout = (0, _config.getConfig)().asyncUtilTimeout,
        showOriginalStackTrace = (0, _config.getConfig)().showOriginalStackTrace,
        stackTraceError,
        interval = 50,
        onTimeout = (error) => {
          error.message = (0, _config.getConfig)().getElementError(error.message, container).message;
          return error;
        },
        mutationObserverOptions = {
          subtree: true,
          childList: true,
          attributes: true,
          characterData: true
        }
      }) {
        if (typeof callback !== "function") {
          throw new TypeError("Received `callback` arg must be a function");
        }
        return new Promise(async (resolve, reject) => {
          let lastError, intervalId, observer;
          let finished = false;
          let promiseStatus = "idle";
          const overallTimeoutTimer = (0, _helpers.setTimeout)(handleTimeout, timeout);
          const usingJestFakeTimers = (0, _helpers.jestFakeTimersAreEnabled)();
          if (usingJestFakeTimers) {
            checkCallback();
            while (!finished) {
              if (!(0, _helpers.jestFakeTimersAreEnabled)()) {
                const error = new Error(`Changed from using fake timers to real timers while using waitFor. This is not allowed and will result in very strange behavior. Please ensure you're awaiting all async things your test is doing before changing to real timers. For more info, please go to https://github.com/testing-library/dom-testing-library/issues/830`);
                if (!showOriginalStackTrace)
                  copyStackTrace(error, stackTraceError);
                reject(error);
                return;
              }
              jest.advanceTimersByTime(interval);
              checkCallback();
              await new Promise((r) => (0, _helpers.setImmediate)(r));
            }
          } else {
            try {
              (0, _helpers.checkContainerType)(container);
            } catch (e2) {
              reject(e2);
              return;
            }
            intervalId = setInterval(checkRealTimersCallback, interval);
            const {
              MutationObserver
            } = (0, _helpers.getWindowFromNode)(container);
            observer = new MutationObserver(checkRealTimersCallback);
            observer.observe(container, mutationObserverOptions);
            checkCallback();
          }
          function onDone(error, result) {
            finished = true;
            (0, _helpers.clearTimeout)(overallTimeoutTimer);
            if (!usingJestFakeTimers) {
              clearInterval(intervalId);
              observer.disconnect();
            }
            if (error) {
              reject(error);
            } else {
              resolve(result);
            }
          }
          function checkRealTimersCallback() {
            if ((0, _helpers.jestFakeTimersAreEnabled)()) {
              const error = new Error(`Changed from using real timers to fake timers while using waitFor. This is not allowed and will result in very strange behavior. Please ensure you're awaiting all async things your test is doing before changing to fake timers. For more info, please go to https://github.com/testing-library/dom-testing-library/issues/830`);
              if (!showOriginalStackTrace)
                copyStackTrace(error, stackTraceError);
              return reject(error);
            } else {
              return checkCallback();
            }
          }
          function checkCallback() {
            if (promiseStatus === "pending")
              return;
            try {
              const result = (0, _config.runWithExpensiveErrorDiagnosticsDisabled)(callback);
              if (typeof (result == null ? void 0 : result.then) === "function") {
                promiseStatus = "pending";
                result.then((resolvedValue) => {
                  promiseStatus = "resolved";
                  onDone(null, resolvedValue);
                }, (rejectedValue) => {
                  promiseStatus = "rejected";
                  lastError = rejectedValue;
                });
              } else {
                onDone(null, result);
              }
            } catch (error) {
              lastError = error;
            }
          }
          function handleTimeout() {
            let error;
            if (lastError) {
              error = lastError;
              if (!showOriginalStackTrace && error.name === "TestingLibraryElementError") {
                copyStackTrace(error, stackTraceError);
              }
            } else {
              error = new Error("Timed out in waitFor.");
              if (!showOriginalStackTrace) {
                copyStackTrace(error, stackTraceError);
              }
            }
            onDone(onTimeout(error), null);
          }
        });
      }
      function waitForWrapper(callback, options) {
        const stackTraceError = new Error("STACK_TRACE_MESSAGE");
        return (0, _config.getConfig)().asyncWrapper(() => waitFor(callback, {
          stackTraceError,
          ...options
        }));
      }
      var hasWarned = false;
      function wait(...args) {
        const [first = () => {
        }, ...rest] = args;
        if (!hasWarned) {
          hasWarned = true;
          console.warn(`\`wait\` has been deprecated and replaced by \`waitFor\` instead. In most cases you should be able to find/replace \`wait\` with \`waitFor\`. Learn more: https://testing-library.com/docs/dom-testing-library/api-async#waitfor.`);
        }
        return waitForWrapper(first, ...rest);
      }
    }
  });

  // node_modules/@testing-library/dom/dist/query-helpers.js
  var require_query_helpers = __commonJS({
    "node_modules/@testing-library/dom/dist/query-helpers.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.getElementError = getElementError;
      exports.getMultipleElementsFoundError = getMultipleElementsFoundError;
      exports.queryAllByAttribute = queryAllByAttribute;
      exports.queryByAttribute = queryByAttribute;
      exports.makeSingleQuery = makeSingleQuery;
      exports.makeGetAllQuery = makeGetAllQuery;
      exports.makeFindQuery = makeFindQuery;
      exports.buildQueries = buildQueries;
      exports.wrapSingleQueryWithSuggestion = exports.wrapAllByQueryWithSuggestion = void 0;
      var _suggestions = require_suggestions();
      var _matches = require_matches();
      var _waitFor = require_wait_for();
      var _config = require_config();
      function getElementError(message, container) {
        return (0, _config.getConfig)().getElementError(message, container);
      }
      function getMultipleElementsFoundError(message, container) {
        return getElementError(`${message}

(If this is intentional, then use the \`*AllBy*\` variant of the query (like \`queryAllByText\`, \`getAllByText\`, or \`findAllByText\`)).`, container);
      }
      function queryAllByAttribute(attribute, container, text, {
        exact = true,
        collapseWhitespace,
        trim,
        normalizer
      } = {}) {
        const matcher = exact ? _matches.matches : _matches.fuzzyMatches;
        const matchNormalizer = (0, _matches.makeNormalizer)({
          collapseWhitespace,
          trim,
          normalizer
        });
        return Array.from(container.querySelectorAll(`[${attribute}]`)).filter((node) => matcher(node.getAttribute(attribute), node, text, matchNormalizer));
      }
      function queryByAttribute(attribute, container, text, ...args) {
        const els = queryAllByAttribute(attribute, container, text, ...args);
        if (els.length > 1) {
          throw getMultipleElementsFoundError(`Found multiple elements by [${attribute}=${text}]`, container);
        }
        return els[0] || null;
      }
      function makeSingleQuery(allQuery, getMultipleError) {
        return (container, ...args) => {
          const els = allQuery(container, ...args);
          if (els.length > 1) {
            const elementStrings = els.map((element) => getElementError(null, element).message).join("\n\n");
            throw getMultipleElementsFoundError(`${getMultipleError(container, ...args)}

Here are the matching elements:

${elementStrings}`, container);
          }
          return els[0] || null;
        };
      }
      function getSuggestionError(suggestion, container) {
        return (0, _config.getConfig)().getElementError(`A better query is available, try this:
${suggestion.toString()}
`, container);
      }
      function makeGetAllQuery(allQuery, getMissingError) {
        return (container, ...args) => {
          const els = allQuery(container, ...args);
          if (!els.length) {
            throw (0, _config.getConfig)().getElementError(getMissingError(container, ...args), container);
          }
          return els;
        };
      }
      function makeFindQuery(getter) {
        return (container, text, options, waitForOptions) => {
          return (0, _waitFor.waitFor)(() => {
            return getter(container, text, options);
          }, {
            container,
            ...waitForOptions
          });
        };
      }
      var wrapSingleQueryWithSuggestion = (query, queryAllByName, variant) => (container, ...args) => {
        const element = query(container, ...args);
        const [{
          suggest = (0, _config.getConfig)().throwSuggestions
        } = {}] = args.slice(-1);
        if (element && suggest) {
          const suggestion = (0, _suggestions.getSuggestedQuery)(element, variant);
          if (suggestion && !queryAllByName.endsWith(suggestion.queryName)) {
            throw getSuggestionError(suggestion.toString(), container);
          }
        }
        return element;
      };
      exports.wrapSingleQueryWithSuggestion = wrapSingleQueryWithSuggestion;
      var wrapAllByQueryWithSuggestion = (query, queryAllByName, variant) => (container, ...args) => {
        const els = query(container, ...args);
        const [{
          suggest = (0, _config.getConfig)().throwSuggestions
        } = {}] = args.slice(-1);
        if (els.length && suggest) {
          const uniqueSuggestionMessages = [...new Set(els.map((element) => {
            var _getSuggestedQuery;
            return (_getSuggestedQuery = (0, _suggestions.getSuggestedQuery)(element, variant)) == null ? void 0 : _getSuggestedQuery.toString();
          }))];
          if (uniqueSuggestionMessages.length === 1 && !queryAllByName.endsWith((0, _suggestions.getSuggestedQuery)(els[0], variant).queryName)) {
            throw getSuggestionError(uniqueSuggestionMessages[0], container);
          }
        }
        return els;
      };
      exports.wrapAllByQueryWithSuggestion = wrapAllByQueryWithSuggestion;
      function buildQueries(queryAllBy, getMultipleError, getMissingError) {
        const queryBy = wrapSingleQueryWithSuggestion(makeSingleQuery(queryAllBy, getMultipleError), queryAllBy.name, "query");
        const getAllBy = makeGetAllQuery(queryAllBy, getMissingError);
        const getBy = makeSingleQuery(getAllBy, getMultipleError);
        const getByWithSuggestions = wrapSingleQueryWithSuggestion(getBy, queryAllBy.name, "get");
        const getAllWithSuggestions = wrapAllByQueryWithSuggestion(getAllBy, queryAllBy.name.replace("query", "get"), "getAll");
        const findAllBy = makeFindQuery(wrapAllByQueryWithSuggestion(getAllBy, queryAllBy.name, "findAll"));
        const findBy = makeFindQuery(wrapSingleQueryWithSuggestion(getBy, queryAllBy.name, "find"));
        return [queryBy, getAllWithSuggestions, getByWithSuggestions, findAllBy, findBy];
      }
    }
  });

  // node_modules/@testing-library/dom/dist/queries/all-utils.js
  var require_all_utils = __commonJS({
    "node_modules/@testing-library/dom/dist/queries/all-utils.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      var _matches = require_matches();
      Object.keys(_matches).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (key in exports && exports[key] === _matches[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _matches[key];
          }
        });
      });
      var _getNodeText = require_get_node_text();
      Object.keys(_getNodeText).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (key in exports && exports[key] === _getNodeText[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _getNodeText[key];
          }
        });
      });
      var _queryHelpers = require_query_helpers();
      Object.keys(_queryHelpers).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (key in exports && exports[key] === _queryHelpers[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _queryHelpers[key];
          }
        });
      });
      var _config = require_config();
      Object.keys(_config).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (key in exports && exports[key] === _config[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _config[key];
          }
        });
      });
    }
  });

  // node_modules/@testing-library/dom/dist/queries/label-text.js
  var require_label_text = __commonJS({
    "node_modules/@testing-library/dom/dist/queries/label-text.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.findByLabelText = exports.findAllByLabelText = exports.getByLabelText = exports.getAllByLabelText = exports.queryByLabelText = exports.queryAllByLabelText = void 0;
      var _config = require_config();
      var _helpers = require_helpers();
      var _labelHelpers = require_label_helpers();
      var _allUtils = require_all_utils();
      function queryAllLabels(container) {
        return Array.from(container.querySelectorAll("label,input")).map((node) => {
          return {
            node,
            textToMatch: (0, _labelHelpers.getLabelContent)(node)
          };
        }).filter(({
          textToMatch
        }) => textToMatch !== null);
      }
      var queryAllLabelsByText = (container, text, {
        exact = true,
        trim,
        collapseWhitespace,
        normalizer
      } = {}) => {
        const matcher = exact ? _allUtils.matches : _allUtils.fuzzyMatches;
        const matchNormalizer = (0, _allUtils.makeNormalizer)({
          collapseWhitespace,
          trim,
          normalizer
        });
        const textToMatchByLabels = queryAllLabels(container);
        return textToMatchByLabels.filter(({
          node,
          textToMatch
        }) => matcher(textToMatch, node, text, matchNormalizer)).map(({
          node
        }) => node);
      };
      var queryAllByLabelText = (container, text, {
        selector = "*",
        exact = true,
        collapseWhitespace,
        trim,
        normalizer
      } = {}) => {
        (0, _helpers.checkContainerType)(container);
        const matcher = exact ? _allUtils.matches : _allUtils.fuzzyMatches;
        const matchNormalizer = (0, _allUtils.makeNormalizer)({
          collapseWhitespace,
          trim,
          normalizer
        });
        const matchingLabelledElements = Array.from(container.querySelectorAll("*")).filter((element) => {
          return (0, _labelHelpers.getRealLabels)(element).length || element.hasAttribute("aria-labelledby");
        }).reduce((labelledElements, labelledElement) => {
          const labelList = (0, _labelHelpers.getLabels)(container, labelledElement, {
            selector
          });
          labelList.filter((label) => Boolean(label.formControl)).forEach((label) => {
            if (matcher(label.content, label.formControl, text, matchNormalizer) && label.formControl)
              labelledElements.push(label.formControl);
          });
          const labelsValue = labelList.filter((label) => Boolean(label.content)).map((label) => label.content);
          if (matcher(labelsValue.join(" "), labelledElement, text, matchNormalizer))
            labelledElements.push(labelledElement);
          if (labelsValue.length > 1) {
            labelsValue.forEach((labelValue, index) => {
              if (matcher(labelValue, labelledElement, text, matchNormalizer))
                labelledElements.push(labelledElement);
              const labelsFiltered = [...labelsValue];
              labelsFiltered.splice(index, 1);
              if (labelsFiltered.length > 1) {
                if (matcher(labelsFiltered.join(" "), labelledElement, text, matchNormalizer))
                  labelledElements.push(labelledElement);
              }
            });
          }
          return labelledElements;
        }, []).concat((0, _allUtils.queryAllByAttribute)("aria-label", container, text, {
          exact,
          normalizer: matchNormalizer
        }));
        return Array.from(new Set(matchingLabelledElements)).filter((element) => element.matches(selector));
      };
      var getAllByLabelText = (container, text, ...rest) => {
        const els = queryAllByLabelText(container, text, ...rest);
        if (!els.length) {
          const labels = queryAllLabelsByText(container, text, ...rest);
          if (labels.length) {
            const tagNames = labels.map((label) => getTagNameOfElementAssociatedWithLabelViaFor(container, label)).filter((tagName) => !!tagName);
            if (tagNames.length) {
              throw (0, _config.getConfig)().getElementError(tagNames.map((tagName) => `Found a label with the text of: ${text}, however the element associated with this label (<${tagName} />) is non-labellable [https://html.spec.whatwg.org/multipage/forms.html#category-label]. If you really need to label a <${tagName} />, you can use aria-label or aria-labelledby instead.`).join("\n\n"), container);
            } else {
              throw (0, _config.getConfig)().getElementError(`Found a label with the text of: ${text}, however no form control was found associated to that label. Make sure you're using the "for" attribute or "aria-labelledby" attribute correctly.`, container);
            }
          } else {
            throw (0, _config.getConfig)().getElementError(`Unable to find a label with the text of: ${text}`, container);
          }
        }
        return els;
      };
      function getTagNameOfElementAssociatedWithLabelViaFor(container, label) {
        const htmlFor = label.getAttribute("for");
        if (!htmlFor) {
          return null;
        }
        const element = container.querySelector(`[id="${htmlFor}"]`);
        return element ? element.tagName.toLowerCase() : null;
      }
      var getMultipleError = (c2, text) => `Found multiple elements with the text of: ${text}`;
      var queryByLabelText = (0, _allUtils.wrapSingleQueryWithSuggestion)((0, _allUtils.makeSingleQuery)(queryAllByLabelText, getMultipleError), queryAllByLabelText.name, "query");
      exports.queryByLabelText = queryByLabelText;
      var getByLabelText = (0, _allUtils.makeSingleQuery)(getAllByLabelText, getMultipleError);
      var findAllByLabelText = (0, _allUtils.makeFindQuery)((0, _allUtils.wrapAllByQueryWithSuggestion)(getAllByLabelText, getAllByLabelText.name, "findAll"));
      exports.findAllByLabelText = findAllByLabelText;
      var findByLabelText = (0, _allUtils.makeFindQuery)((0, _allUtils.wrapSingleQueryWithSuggestion)(getByLabelText, getAllByLabelText.name, "find"));
      exports.findByLabelText = findByLabelText;
      var getAllByLabelTextWithSuggestions = (0, _allUtils.wrapAllByQueryWithSuggestion)(getAllByLabelText, getAllByLabelText.name, "getAll");
      exports.getAllByLabelText = getAllByLabelTextWithSuggestions;
      var getByLabelTextWithSuggestions = (0, _allUtils.wrapSingleQueryWithSuggestion)(getByLabelText, getAllByLabelText.name, "get");
      exports.getByLabelText = getByLabelTextWithSuggestions;
      var queryAllByLabelTextWithSuggestions = (0, _allUtils.wrapAllByQueryWithSuggestion)(queryAllByLabelText, queryAllByLabelText.name, "queryAll");
      exports.queryAllByLabelText = queryAllByLabelTextWithSuggestions;
    }
  });

  // node_modules/@testing-library/dom/dist/queries/placeholder-text.js
  var require_placeholder_text = __commonJS({
    "node_modules/@testing-library/dom/dist/queries/placeholder-text.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.findByPlaceholderText = exports.findAllByPlaceholderText = exports.getAllByPlaceholderText = exports.getByPlaceholderText = exports.queryAllByPlaceholderText = exports.queryByPlaceholderText = void 0;
      var _queryHelpers = require_query_helpers();
      var _helpers = require_helpers();
      var _allUtils = require_all_utils();
      var queryAllByPlaceholderText = (...args) => {
        (0, _helpers.checkContainerType)(args[0]);
        return (0, _allUtils.queryAllByAttribute)("placeholder", ...args);
      };
      var getMultipleError = (c2, text) => `Found multiple elements with the placeholder text of: ${text}`;
      var getMissingError = (c2, text) => `Unable to find an element with the placeholder text of: ${text}`;
      var queryAllByPlaceholderTextWithSuggestions = (0, _queryHelpers.wrapAllByQueryWithSuggestion)(queryAllByPlaceholderText, queryAllByPlaceholderText.name, "queryAll");
      exports.queryAllByPlaceholderText = queryAllByPlaceholderTextWithSuggestions;
      var [queryByPlaceholderText, getAllByPlaceholderText, getByPlaceholderText, findAllByPlaceholderText, findByPlaceholderText] = (0, _allUtils.buildQueries)(queryAllByPlaceholderText, getMultipleError, getMissingError);
      exports.findByPlaceholderText = findByPlaceholderText;
      exports.findAllByPlaceholderText = findAllByPlaceholderText;
      exports.getByPlaceholderText = getByPlaceholderText;
      exports.getAllByPlaceholderText = getAllByPlaceholderText;
      exports.queryByPlaceholderText = queryByPlaceholderText;
    }
  });

  // node_modules/@testing-library/dom/dist/queries/text.js
  var require_text = __commonJS({
    "node_modules/@testing-library/dom/dist/queries/text.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.findByText = exports.findAllByText = exports.getAllByText = exports.getByText = exports.queryAllByText = exports.queryByText = void 0;
      var _queryHelpers = require_query_helpers();
      var _helpers = require_helpers();
      var _config = require_config();
      var _allUtils = require_all_utils();
      var queryAllByText = (container, text, {
        selector = "*",
        exact = true,
        collapseWhitespace,
        trim,
        ignore = _config.DEFAULT_IGNORE_TAGS,
        normalizer
      } = {}) => {
        (0, _helpers.checkContainerType)(container);
        const matcher = exact ? _allUtils.matches : _allUtils.fuzzyMatches;
        const matchNormalizer = (0, _allUtils.makeNormalizer)({
          collapseWhitespace,
          trim,
          normalizer
        });
        let baseArray = [];
        if (typeof container.matches === "function" && container.matches(selector)) {
          baseArray = [container];
        }
        return [...baseArray, ...Array.from(container.querySelectorAll(selector))].filter((node) => !ignore || !node.matches(ignore)).filter((node) => matcher((0, _allUtils.getNodeText)(node), node, text, matchNormalizer));
      };
      var getMultipleError = (c2, text) => `Found multiple elements with the text: ${text}`;
      var getMissingError = (c2, text) => `Unable to find an element with the text: ${text}. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.`;
      var queryAllByTextWithSuggestions = (0, _queryHelpers.wrapAllByQueryWithSuggestion)(queryAllByText, queryAllByText.name, "queryAll");
      exports.queryAllByText = queryAllByTextWithSuggestions;
      var [queryByText, getAllByText, getByText, findAllByText, findByText] = (0, _allUtils.buildQueries)(queryAllByText, getMultipleError, getMissingError);
      exports.findByText = findByText;
      exports.findAllByText = findAllByText;
      exports.getByText = getByText;
      exports.getAllByText = getAllByText;
      exports.queryByText = queryByText;
    }
  });

  // node_modules/@testing-library/dom/dist/queries/display-value.js
  var require_display_value = __commonJS({
    "node_modules/@testing-library/dom/dist/queries/display-value.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.findByDisplayValue = exports.findAllByDisplayValue = exports.getAllByDisplayValue = exports.getByDisplayValue = exports.queryAllByDisplayValue = exports.queryByDisplayValue = void 0;
      var _queryHelpers = require_query_helpers();
      var _helpers = require_helpers();
      var _allUtils = require_all_utils();
      var queryAllByDisplayValue = (container, value, {
        exact = true,
        collapseWhitespace,
        trim,
        normalizer
      } = {}) => {
        (0, _helpers.checkContainerType)(container);
        const matcher = exact ? _allUtils.matches : _allUtils.fuzzyMatches;
        const matchNormalizer = (0, _allUtils.makeNormalizer)({
          collapseWhitespace,
          trim,
          normalizer
        });
        return Array.from(container.querySelectorAll(`input,textarea,select`)).filter((node) => {
          if (node.tagName === "SELECT") {
            const selectedOptions = Array.from(node.options).filter((option) => option.selected);
            return selectedOptions.some((optionNode) => matcher((0, _allUtils.getNodeText)(optionNode), optionNode, value, matchNormalizer));
          } else {
            return matcher(node.value, node, value, matchNormalizer);
          }
        });
      };
      var getMultipleError = (c2, value) => `Found multiple elements with the display value: ${value}.`;
      var getMissingError = (c2, value) => `Unable to find an element with the display value: ${value}.`;
      var queryAllByDisplayValueWithSuggestions = (0, _queryHelpers.wrapAllByQueryWithSuggestion)(queryAllByDisplayValue, queryAllByDisplayValue.name, "queryAll");
      exports.queryAllByDisplayValue = queryAllByDisplayValueWithSuggestions;
      var [queryByDisplayValue, getAllByDisplayValue, getByDisplayValue, findAllByDisplayValue, findByDisplayValue] = (0, _allUtils.buildQueries)(queryAllByDisplayValue, getMultipleError, getMissingError);
      exports.findByDisplayValue = findByDisplayValue;
      exports.findAllByDisplayValue = findAllByDisplayValue;
      exports.getByDisplayValue = getByDisplayValue;
      exports.getAllByDisplayValue = getAllByDisplayValue;
      exports.queryByDisplayValue = queryByDisplayValue;
    }
  });

  // node_modules/@testing-library/dom/dist/queries/alt-text.js
  var require_alt_text = __commonJS({
    "node_modules/@testing-library/dom/dist/queries/alt-text.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.findByAltText = exports.findAllByAltText = exports.getAllByAltText = exports.getByAltText = exports.queryAllByAltText = exports.queryByAltText = void 0;
      var _queryHelpers = require_query_helpers();
      var _helpers = require_helpers();
      var _allUtils = require_all_utils();
      var queryAllByAltText = (container, alt, {
        exact = true,
        collapseWhitespace,
        trim,
        normalizer
      } = {}) => {
        (0, _helpers.checkContainerType)(container);
        const matcher = exact ? _allUtils.matches : _allUtils.fuzzyMatches;
        const matchNormalizer = (0, _allUtils.makeNormalizer)({
          collapseWhitespace,
          trim,
          normalizer
        });
        return Array.from(container.querySelectorAll("img,input,area")).filter((node) => matcher(node.getAttribute("alt"), node, alt, matchNormalizer));
      };
      var getMultipleError = (c2, alt) => `Found multiple elements with the alt text: ${alt}`;
      var getMissingError = (c2, alt) => `Unable to find an element with the alt text: ${alt}`;
      var queryAllByAltTextWithSuggestions = (0, _queryHelpers.wrapAllByQueryWithSuggestion)(queryAllByAltText, queryAllByAltText.name, "queryAll");
      exports.queryAllByAltText = queryAllByAltTextWithSuggestions;
      var [queryByAltText, getAllByAltText, getByAltText, findAllByAltText, findByAltText] = (0, _allUtils.buildQueries)(queryAllByAltText, getMultipleError, getMissingError);
      exports.findByAltText = findByAltText;
      exports.findAllByAltText = findAllByAltText;
      exports.getByAltText = getByAltText;
      exports.getAllByAltText = getAllByAltText;
      exports.queryByAltText = queryByAltText;
    }
  });

  // node_modules/@testing-library/dom/dist/queries/title.js
  var require_title = __commonJS({
    "node_modules/@testing-library/dom/dist/queries/title.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.findByTitle = exports.findAllByTitle = exports.getAllByTitle = exports.getByTitle = exports.queryAllByTitle = exports.queryByTitle = void 0;
      var _queryHelpers = require_query_helpers();
      var _helpers = require_helpers();
      var _allUtils = require_all_utils();
      var isSvgTitle = (node) => {
        var _node$parentElement;
        return node.tagName.toLowerCase() === "title" && ((_node$parentElement = node.parentElement) == null ? void 0 : _node$parentElement.tagName.toLowerCase()) === "svg";
      };
      var queryAllByTitle = (container, text, {
        exact = true,
        collapseWhitespace,
        trim,
        normalizer
      } = {}) => {
        (0, _helpers.checkContainerType)(container);
        const matcher = exact ? _allUtils.matches : _allUtils.fuzzyMatches;
        const matchNormalizer = (0, _allUtils.makeNormalizer)({
          collapseWhitespace,
          trim,
          normalizer
        });
        return Array.from(container.querySelectorAll("[title], svg > title")).filter((node) => matcher(node.getAttribute("title"), node, text, matchNormalizer) || isSvgTitle(node) && matcher((0, _allUtils.getNodeText)(node), node, text, matchNormalizer));
      };
      var getMultipleError = (c2, title) => `Found multiple elements with the title: ${title}.`;
      var getMissingError = (c2, title) => `Unable to find an element with the title: ${title}.`;
      var queryAllByTitleWithSuggestions = (0, _queryHelpers.wrapAllByQueryWithSuggestion)(queryAllByTitle, queryAllByTitle.name, "queryAll");
      exports.queryAllByTitle = queryAllByTitleWithSuggestions;
      var [queryByTitle, getAllByTitle, getByTitle, findAllByTitle, findByTitle] = (0, _allUtils.buildQueries)(queryAllByTitle, getMultipleError, getMissingError);
      exports.findByTitle = findByTitle;
      exports.findAllByTitle = findAllByTitle;
      exports.getByTitle = getByTitle;
      exports.getAllByTitle = getAllByTitle;
      exports.queryByTitle = queryByTitle;
    }
  });

  // node_modules/@testing-library/dom/dist/queries/role.js
  var require_role = __commonJS({
    "node_modules/@testing-library/dom/dist/queries/role.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.findByRole = exports.findAllByRole = exports.getByRole = exports.getAllByRole = exports.queryAllByRole = exports.queryByRole = void 0;
      var _domAccessibilityApi = require_dist();
      var _ariaQuery = require_lib();
      var _roleHelpers = require_role_helpers();
      var _queryHelpers = require_query_helpers();
      var _helpers = require_helpers();
      var _allUtils = require_all_utils();
      function queryAllByRole(container, role, {
        exact = true,
        collapseWhitespace,
        hidden = (0, _allUtils.getConfig)().defaultHidden,
        name,
        trim,
        normalizer,
        queryFallbacks = false,
        selected,
        checked,
        pressed,
        level,
        expanded
      } = {}) {
        (0, _helpers.checkContainerType)(container);
        const matcher = exact ? _allUtils.matches : _allUtils.fuzzyMatches;
        const matchNormalizer = (0, _allUtils.makeNormalizer)({
          collapseWhitespace,
          trim,
          normalizer
        });
        if (selected !== void 0) {
          var _allRoles$get;
          if (((_allRoles$get = _ariaQuery.roles.get(role)) == null ? void 0 : _allRoles$get.props["aria-selected"]) === void 0) {
            throw new Error(`"aria-selected" is not supported on role "${role}".`);
          }
        }
        if (checked !== void 0) {
          var _allRoles$get2;
          if (((_allRoles$get2 = _ariaQuery.roles.get(role)) == null ? void 0 : _allRoles$get2.props["aria-checked"]) === void 0) {
            throw new Error(`"aria-checked" is not supported on role "${role}".`);
          }
        }
        if (pressed !== void 0) {
          var _allRoles$get3;
          if (((_allRoles$get3 = _ariaQuery.roles.get(role)) == null ? void 0 : _allRoles$get3.props["aria-pressed"]) === void 0) {
            throw new Error(`"aria-pressed" is not supported on role "${role}".`);
          }
        }
        if (level !== void 0) {
          if (role !== "heading") {
            throw new Error(`Role "${role}" cannot have "level" property.`);
          }
        }
        if (expanded !== void 0) {
          var _allRoles$get4;
          if (((_allRoles$get4 = _ariaQuery.roles.get(role)) == null ? void 0 : _allRoles$get4.props["aria-expanded"]) === void 0) {
            throw new Error(`"aria-expanded" is not supported on role "${role}".`);
          }
        }
        const subtreeIsInaccessibleCache = new WeakMap();
        function cachedIsSubtreeInaccessible(element) {
          if (!subtreeIsInaccessibleCache.has(element)) {
            subtreeIsInaccessibleCache.set(element, (0, _roleHelpers.isSubtreeInaccessible)(element));
          }
          return subtreeIsInaccessibleCache.get(element);
        }
        return Array.from(container.querySelectorAll("*")).filter((node) => {
          const isRoleSpecifiedExplicitly = node.hasAttribute("role");
          if (isRoleSpecifiedExplicitly) {
            const roleValue = node.getAttribute("role");
            if (queryFallbacks) {
              return roleValue.split(" ").filter(Boolean).some((text) => matcher(text, node, role, matchNormalizer));
            }
            if (normalizer) {
              return matcher(roleValue, node, role, matchNormalizer);
            }
            const [firstWord] = roleValue.split(" ");
            return matcher(firstWord, node, role, matchNormalizer);
          }
          const implicitRoles = (0, _roleHelpers.getImplicitAriaRoles)(node);
          return implicitRoles.some((implicitRole) => matcher(implicitRole, node, role, matchNormalizer));
        }).filter((element) => {
          if (selected !== void 0) {
            return selected === (0, _roleHelpers.computeAriaSelected)(element);
          }
          if (checked !== void 0) {
            return checked === (0, _roleHelpers.computeAriaChecked)(element);
          }
          if (pressed !== void 0) {
            return pressed === (0, _roleHelpers.computeAriaPressed)(element);
          }
          if (expanded !== void 0) {
            return expanded === (0, _roleHelpers.computeAriaExpanded)(element);
          }
          if (level !== void 0) {
            return level === (0, _roleHelpers.computeHeadingLevel)(element);
          }
          return true;
        }).filter((element) => {
          return hidden === false ? (0, _roleHelpers.isInaccessible)(element, {
            isSubtreeInaccessible: cachedIsSubtreeInaccessible
          }) === false : true;
        }).filter((element) => {
          if (name === void 0) {
            return true;
          }
          return (0, _allUtils.matches)((0, _domAccessibilityApi.computeAccessibleName)(element, {
            computedStyleSupportsPseudoElements: (0, _allUtils.getConfig)().computedStyleSupportsPseudoElements
          }), element, name, (text) => text);
        });
      }
      var getMultipleError = (c2, role, {
        name
      } = {}) => {
        let nameHint = "";
        if (name === void 0) {
          nameHint = "";
        } else if (typeof name === "string") {
          nameHint = ` and name "${name}"`;
        } else {
          nameHint = ` and name \`${name}\``;
        }
        return `Found multiple elements with the role "${role}"${nameHint}`;
      };
      var getMissingError = (container, role, {
        hidden = (0, _allUtils.getConfig)().defaultHidden,
        name
      } = {}) => {
        if ((0, _allUtils.getConfig)()._disableExpensiveErrorDiagnostics) {
          return `Unable to find role="${role}"`;
        }
        let roles = "";
        Array.from(container.children).forEach((childElement) => {
          roles += (0, _roleHelpers.prettyRoles)(childElement, {
            hidden,
            includeName: name !== void 0
          });
        });
        let roleMessage;
        if (roles.length === 0) {
          if (hidden === false) {
            roleMessage = "There are no accessible roles. But there might be some inaccessible roles. If you wish to access them, then set the `hidden` option to `true`. Learn more about this here: https://testing-library.com/docs/dom-testing-library/api-queries#byrole";
          } else {
            roleMessage = "There are no available roles.";
          }
        } else {
          roleMessage = `
Here are the ${hidden === false ? "accessible" : "available"} roles:

  ${roles.replace(/\n/g, "\n  ").replace(/\n\s\s\n/g, "\n\n")}
`.trim();
        }
        let nameHint = "";
        if (name === void 0) {
          nameHint = "";
        } else if (typeof name === "string") {
          nameHint = ` and name "${name}"`;
        } else {
          nameHint = ` and name \`${name}\``;
        }
        return `
Unable to find an ${hidden === false ? "accessible " : ""}element with the role "${role}"${nameHint}

${roleMessage}`.trim();
      };
      var queryAllByRoleWithSuggestions = (0, _queryHelpers.wrapAllByQueryWithSuggestion)(queryAllByRole, queryAllByRole.name, "queryAll");
      exports.queryAllByRole = queryAllByRoleWithSuggestions;
      var [queryByRole, getAllByRole, getByRole, findAllByRole, findByRole] = (0, _allUtils.buildQueries)(queryAllByRole, getMultipleError, getMissingError);
      exports.findByRole = findByRole;
      exports.findAllByRole = findAllByRole;
      exports.getByRole = getByRole;
      exports.getAllByRole = getAllByRole;
      exports.queryByRole = queryByRole;
    }
  });

  // node_modules/@testing-library/dom/dist/queries/test-id.js
  var require_test_id = __commonJS({
    "node_modules/@testing-library/dom/dist/queries/test-id.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.findByTestId = exports.findAllByTestId = exports.getAllByTestId = exports.getByTestId = exports.queryAllByTestId = exports.queryByTestId = void 0;
      var _helpers = require_helpers();
      var _queryHelpers = require_query_helpers();
      var _allUtils = require_all_utils();
      var getTestIdAttribute = () => (0, _allUtils.getConfig)().testIdAttribute;
      var queryAllByTestId = (...args) => {
        (0, _helpers.checkContainerType)(args[0]);
        return (0, _allUtils.queryAllByAttribute)(getTestIdAttribute(), ...args);
      };
      var getMultipleError = (c2, id) => `Found multiple elements by: [${getTestIdAttribute()}="${id}"]`;
      var getMissingError = (c2, id) => `Unable to find an element by: [${getTestIdAttribute()}="${id}"]`;
      var queryAllByTestIdWithSuggestions = (0, _queryHelpers.wrapAllByQueryWithSuggestion)(queryAllByTestId, queryAllByTestId.name, "queryAll");
      exports.queryAllByTestId = queryAllByTestIdWithSuggestions;
      var [queryByTestId, getAllByTestId, getByTestId, findAllByTestId, findByTestId] = (0, _allUtils.buildQueries)(queryAllByTestId, getMultipleError, getMissingError);
      exports.findByTestId = findByTestId;
      exports.findAllByTestId = findAllByTestId;
      exports.getByTestId = getByTestId;
      exports.getAllByTestId = getAllByTestId;
      exports.queryByTestId = queryByTestId;
    }
  });

  // node_modules/@testing-library/dom/dist/queries/index.js
  var require_queries = __commonJS({
    "node_modules/@testing-library/dom/dist/queries/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      var _labelText = require_label_text();
      Object.keys(_labelText).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (key in exports && exports[key] === _labelText[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _labelText[key];
          }
        });
      });
      var _placeholderText = require_placeholder_text();
      Object.keys(_placeholderText).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (key in exports && exports[key] === _placeholderText[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _placeholderText[key];
          }
        });
      });
      var _text = require_text();
      Object.keys(_text).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (key in exports && exports[key] === _text[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _text[key];
          }
        });
      });
      var _displayValue = require_display_value();
      Object.keys(_displayValue).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (key in exports && exports[key] === _displayValue[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _displayValue[key];
          }
        });
      });
      var _altText = require_alt_text();
      Object.keys(_altText).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (key in exports && exports[key] === _altText[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _altText[key];
          }
        });
      });
      var _title = require_title();
      Object.keys(_title).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (key in exports && exports[key] === _title[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _title[key];
          }
        });
      });
      var _role = require_role();
      Object.keys(_role).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (key in exports && exports[key] === _role[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _role[key];
          }
        });
      });
      var _testId = require_test_id();
      Object.keys(_testId).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (key in exports && exports[key] === _testId[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _testId[key];
          }
        });
      });
    }
  });

  // node_modules/@testing-library/dom/dist/get-queries-for-element.js
  var require_get_queries_for_element = __commonJS({
    "node_modules/@testing-library/dom/dist/get-queries-for-element.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.getQueriesForElement = getQueriesForElement;
      var defaultQueries = _interopRequireWildcard(require_queries());
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = new WeakMap();
        var cacheNodeInterop = new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return {default: obj};
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      function getQueriesForElement(element, queries = defaultQueries, initialValue = {}) {
        return Object.keys(queries).reduce((helpers, key) => {
          const fn = queries[key];
          helpers[key] = fn.bind(null, element);
          return helpers;
        }, initialValue);
      }
    }
  });

  // node_modules/@testing-library/dom/dist/wait-for-element.js
  var require_wait_for_element = __commonJS({
    "node_modules/@testing-library/dom/dist/wait-for-element.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.waitForElement = waitForElement;
      var _waitFor = require_wait_for();
      var hasWarned = false;
      async function waitForElement(callback, options) {
        if (!hasWarned) {
          hasWarned = true;
          console.warn(`\`waitForElement\` has been deprecated. Use a \`find*\` query (preferred: https://testing-library.com/docs/dom-testing-library/api-queries#findby) or use \`waitFor\` instead: https://testing-library.com/docs/dom-testing-library/api-async#waitfor`);
        }
        if (!callback) {
          throw new Error("waitForElement requires a callback as the first parameter");
        }
        return (0, _waitFor.waitFor)(() => {
          const result = callback();
          if (!result) {
            throw new Error("Timed out in waitForElement.");
          }
          return result;
        }, options);
      }
    }
  });

  // node_modules/@testing-library/dom/dist/wait-for-element-to-be-removed.js
  var require_wait_for_element_to_be_removed = __commonJS({
    "node_modules/@testing-library/dom/dist/wait-for-element-to-be-removed.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.waitForElementToBeRemoved = waitForElementToBeRemoved;
      var _waitFor = require_wait_for();
      var isRemoved = (result) => !result || Array.isArray(result) && !result.length;
      function initialCheck(elements) {
        if (isRemoved(elements)) {
          throw new Error("The element(s) given to waitForElementToBeRemoved are already removed. waitForElementToBeRemoved requires that the element(s) exist(s) before waiting for removal.");
        }
      }
      async function waitForElementToBeRemoved(callback, options) {
        const timeoutError = new Error("Timed out in waitForElementToBeRemoved.");
        if (typeof callback !== "function") {
          initialCheck(callback);
          const elements = Array.isArray(callback) ? callback : [callback];
          const getRemainingElements = elements.map((element) => {
            let parent = element.parentElement;
            if (parent === null)
              return () => null;
            while (parent.parentElement)
              parent = parent.parentElement;
            return () => parent.contains(element) ? element : null;
          });
          callback = () => getRemainingElements.map((c2) => c2()).filter(Boolean);
        }
        initialCheck(callback());
        return (0, _waitFor.waitFor)(() => {
          let result;
          try {
            result = callback();
          } catch (error) {
            if (error.name === "TestingLibraryElementError") {
              return void 0;
            }
            throw error;
          }
          if (!isRemoved(result)) {
            throw timeoutError;
          }
          return void 0;
        }, options);
      }
    }
  });

  // node_modules/@testing-library/dom/dist/wait-for-dom-change.js
  var require_wait_for_dom_change = __commonJS({
    "node_modules/@testing-library/dom/dist/wait-for-dom-change.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.waitForDomChange = waitForDomChangeWrapper;
      var _helpers = require_helpers();
      var _config = require_config();
      var hasWarned = false;
      function waitForDomChange({
        container = (0, _helpers.getDocument)(),
        timeout = (0, _config.getConfig)().asyncUtilTimeout,
        mutationObserverOptions = {
          subtree: true,
          childList: true,
          attributes: true,
          characterData: true
        }
      } = {}) {
        if (!hasWarned) {
          hasWarned = true;
          console.warn(`\`waitForDomChange\` has been deprecated. Use \`waitFor\` instead: https://testing-library.com/docs/dom-testing-library/api-async#waitfor.`);
        }
        return new Promise((resolve, reject) => {
          const timer = (0, _helpers.setTimeout)(onTimeout, timeout);
          const {
            MutationObserver
          } = (0, _helpers.getWindowFromNode)(container);
          const observer = new MutationObserver(onMutation);
          (0, _helpers.runWithRealTimers)(() => observer.observe(container, mutationObserverOptions));
          function onDone(error, result) {
            (0, _helpers.clearTimeout)(timer);
            (0, _helpers.setImmediate)(() => observer.disconnect());
            if (error) {
              reject(error);
            } else {
              resolve(result);
            }
          }
          function onMutation(mutationsList) {
            onDone(null, mutationsList);
          }
          function onTimeout() {
            onDone(new Error("Timed out in waitForDomChange."), null);
          }
        });
      }
      function waitForDomChangeWrapper(...args) {
        return (0, _config.getConfig)().asyncWrapper(() => waitForDomChange(...args));
      }
    }
  });

  // node_modules/@testing-library/dom/dist/event-map.js
  var require_event_map = __commonJS({
    "node_modules/@testing-library/dom/dist/event-map.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.eventAliasMap = exports.eventMap = void 0;
      var eventMap = {
        copy: {
          EventType: "ClipboardEvent",
          defaultInit: {
            bubbles: true,
            cancelable: true,
            composed: true
          }
        },
        cut: {
          EventType: "ClipboardEvent",
          defaultInit: {
            bubbles: true,
            cancelable: true,
            composed: true
          }
        },
        paste: {
          EventType: "ClipboardEvent",
          defaultInit: {
            bubbles: true,
            cancelable: true,
            composed: true
          }
        },
        compositionEnd: {
          EventType: "CompositionEvent",
          defaultInit: {
            bubbles: true,
            cancelable: true,
            composed: true
          }
        },
        compositionStart: {
          EventType: "CompositionEvent",
          defaultInit: {
            bubbles: true,
            cancelable: true,
            composed: true
          }
        },
        compositionUpdate: {
          EventType: "CompositionEvent",
          defaultInit: {
            bubbles: true,
            cancelable: true,
            composed: true
          }
        },
        keyDown: {
          EventType: "KeyboardEvent",
          defaultInit: {
            bubbles: true,
            cancelable: true,
            charCode: 0,
            composed: true
          }
        },
        keyPress: {
          EventType: "KeyboardEvent",
          defaultInit: {
            bubbles: true,
            cancelable: true,
            charCode: 0,
            composed: true
          }
        },
        keyUp: {
          EventType: "KeyboardEvent",
          defaultInit: {
            bubbles: true,
            cancelable: true,
            charCode: 0,
            composed: true
          }
        },
        focus: {
          EventType: "FocusEvent",
          defaultInit: {
            bubbles: false,
            cancelable: false,
            composed: true
          }
        },
        blur: {
          EventType: "FocusEvent",
          defaultInit: {
            bubbles: false,
            cancelable: false,
            composed: true
          }
        },
        focusIn: {
          EventType: "FocusEvent",
          defaultInit: {
            bubbles: true,
            cancelable: false,
            composed: true
          }
        },
        focusOut: {
          EventType: "FocusEvent",
          defaultInit: {
            bubbles: true,
            cancelable: false,
            composed: true
          }
        },
        change: {
          EventType: "Event",
          defaultInit: {
            bubbles: true,
            cancelable: false
          }
        },
        input: {
          EventType: "InputEvent",
          defaultInit: {
            bubbles: true,
            cancelable: false,
            composed: true
          }
        },
        invalid: {
          EventType: "Event",
          defaultInit: {
            bubbles: false,
            cancelable: true
          }
        },
        submit: {
          EventType: "Event",
          defaultInit: {
            bubbles: true,
            cancelable: true
          }
        },
        reset: {
          EventType: "Event",
          defaultInit: {
            bubbles: true,
            cancelable: true
          }
        },
        click: {
          EventType: "MouseEvent",
          defaultInit: {
            bubbles: true,
            cancelable: true,
            button: 0,
            composed: true
          }
        },
        contextMenu: {
          EventType: "MouseEvent",
          defaultInit: {
            bubbles: true,
            cancelable: true,
            composed: true
          }
        },
        dblClick: {
          EventType: "MouseEvent",
          defaultInit: {
            bubbles: true,
            cancelable: true,
            composed: true
          }
        },
        drag: {
          EventType: "DragEvent",
          defaultInit: {
            bubbles: true,
            cancelable: true,
            composed: true
          }
        },
        dragEnd: {
          EventType: "DragEvent",
          defaultInit: {
            bubbles: true,
            cancelable: false,
            composed: true
          }
        },
        dragEnter: {
          EventType: "DragEvent",
          defaultInit: {
            bubbles: true,
            cancelable: true,
            composed: true
          }
        },
        dragExit: {
          EventType: "DragEvent",
          defaultInit: {
            bubbles: true,
            cancelable: false,
            composed: true
          }
        },
        dragLeave: {
          EventType: "DragEvent",
          defaultInit: {
            bubbles: true,
            cancelable: false,
            composed: true
          }
        },
        dragOver: {
          EventType: "DragEvent",
          defaultInit: {
            bubbles: true,
            cancelable: true,
            composed: true
          }
        },
        dragStart: {
          EventType: "DragEvent",
          defaultInit: {
            bubbles: true,
            cancelable: true,
            composed: true
          }
        },
        drop: {
          EventType: "DragEvent",
          defaultInit: {
            bubbles: true,
            cancelable: true,
            composed: true
          }
        },
        mouseDown: {
          EventType: "MouseEvent",
          defaultInit: {
            bubbles: true,
            cancelable: true,
            composed: true
          }
        },
        mouseEnter: {
          EventType: "MouseEvent",
          defaultInit: {
            bubbles: false,
            cancelable: false,
            composed: true
          }
        },
        mouseLeave: {
          EventType: "MouseEvent",
          defaultInit: {
            bubbles: false,
            cancelable: false,
            composed: true
          }
        },
        mouseMove: {
          EventType: "MouseEvent",
          defaultInit: {
            bubbles: true,
            cancelable: true,
            composed: true
          }
        },
        mouseOut: {
          EventType: "MouseEvent",
          defaultInit: {
            bubbles: true,
            cancelable: true,
            composed: true
          }
        },
        mouseOver: {
          EventType: "MouseEvent",
          defaultInit: {
            bubbles: true,
            cancelable: true,
            composed: true
          }
        },
        mouseUp: {
          EventType: "MouseEvent",
          defaultInit: {
            bubbles: true,
            cancelable: true,
            composed: true
          }
        },
        select: {
          EventType: "Event",
          defaultInit: {
            bubbles: true,
            cancelable: false
          }
        },
        touchCancel: {
          EventType: "TouchEvent",
          defaultInit: {
            bubbles: true,
            cancelable: false,
            composed: true
          }
        },
        touchEnd: {
          EventType: "TouchEvent",
          defaultInit: {
            bubbles: true,
            cancelable: true,
            composed: true
          }
        },
        touchMove: {
          EventType: "TouchEvent",
          defaultInit: {
            bubbles: true,
            cancelable: true,
            composed: true
          }
        },
        touchStart: {
          EventType: "TouchEvent",
          defaultInit: {
            bubbles: true,
            cancelable: true,
            composed: true
          }
        },
        scroll: {
          EventType: "UIEvent",
          defaultInit: {
            bubbles: false,
            cancelable: false
          }
        },
        wheel: {
          EventType: "WheelEvent",
          defaultInit: {
            bubbles: true,
            cancelable: true,
            composed: true
          }
        },
        abort: {
          EventType: "Event",
          defaultInit: {
            bubbles: false,
            cancelable: false
          }
        },
        canPlay: {
          EventType: "Event",
          defaultInit: {
            bubbles: false,
            cancelable: false
          }
        },
        canPlayThrough: {
          EventType: "Event",
          defaultInit: {
            bubbles: false,
            cancelable: false
          }
        },
        durationChange: {
          EventType: "Event",
          defaultInit: {
            bubbles: false,
            cancelable: false
          }
        },
        emptied: {
          EventType: "Event",
          defaultInit: {
            bubbles: false,
            cancelable: false
          }
        },
        encrypted: {
          EventType: "Event",
          defaultInit: {
            bubbles: false,
            cancelable: false
          }
        },
        ended: {
          EventType: "Event",
          defaultInit: {
            bubbles: false,
            cancelable: false
          }
        },
        loadedData: {
          EventType: "Event",
          defaultInit: {
            bubbles: false,
            cancelable: false
          }
        },
        loadedMetadata: {
          EventType: "Event",
          defaultInit: {
            bubbles: false,
            cancelable: false
          }
        },
        loadStart: {
          EventType: "ProgressEvent",
          defaultInit: {
            bubbles: false,
            cancelable: false
          }
        },
        pause: {
          EventType: "Event",
          defaultInit: {
            bubbles: false,
            cancelable: false
          }
        },
        play: {
          EventType: "Event",
          defaultInit: {
            bubbles: false,
            cancelable: false
          }
        },
        playing: {
          EventType: "Event",
          defaultInit: {
            bubbles: false,
            cancelable: false
          }
        },
        progress: {
          EventType: "ProgressEvent",
          defaultInit: {
            bubbles: false,
            cancelable: false
          }
        },
        rateChange: {
          EventType: "Event",
          defaultInit: {
            bubbles: false,
            cancelable: false
          }
        },
        seeked: {
          EventType: "Event",
          defaultInit: {
            bubbles: false,
            cancelable: false
          }
        },
        seeking: {
          EventType: "Event",
          defaultInit: {
            bubbles: false,
            cancelable: false
          }
        },
        stalled: {
          EventType: "Event",
          defaultInit: {
            bubbles: false,
            cancelable: false
          }
        },
        suspend: {
          EventType: "Event",
          defaultInit: {
            bubbles: false,
            cancelable: false
          }
        },
        timeUpdate: {
          EventType: "Event",
          defaultInit: {
            bubbles: false,
            cancelable: false
          }
        },
        volumeChange: {
          EventType: "Event",
          defaultInit: {
            bubbles: false,
            cancelable: false
          }
        },
        waiting: {
          EventType: "Event",
          defaultInit: {
            bubbles: false,
            cancelable: false
          }
        },
        load: {
          EventType: "UIEvent",
          defaultInit: {
            bubbles: false,
            cancelable: false
          }
        },
        error: {
          EventType: "Event",
          defaultInit: {
            bubbles: false,
            cancelable: false
          }
        },
        animationStart: {
          EventType: "AnimationEvent",
          defaultInit: {
            bubbles: true,
            cancelable: false
          }
        },
        animationEnd: {
          EventType: "AnimationEvent",
          defaultInit: {
            bubbles: true,
            cancelable: false
          }
        },
        animationIteration: {
          EventType: "AnimationEvent",
          defaultInit: {
            bubbles: true,
            cancelable: false
          }
        },
        transitionEnd: {
          EventType: "TransitionEvent",
          defaultInit: {
            bubbles: true,
            cancelable: true
          }
        },
        pointerOver: {
          EventType: "PointerEvent",
          defaultInit: {
            bubbles: true,
            cancelable: true,
            composed: true
          }
        },
        pointerEnter: {
          EventType: "PointerEvent",
          defaultInit: {
            bubbles: false,
            cancelable: false
          }
        },
        pointerDown: {
          EventType: "PointerEvent",
          defaultInit: {
            bubbles: true,
            cancelable: true,
            composed: true
          }
        },
        pointerMove: {
          EventType: "PointerEvent",
          defaultInit: {
            bubbles: true,
            cancelable: true,
            composed: true
          }
        },
        pointerUp: {
          EventType: "PointerEvent",
          defaultInit: {
            bubbles: true,
            cancelable: true,
            composed: true
          }
        },
        pointerCancel: {
          EventType: "PointerEvent",
          defaultInit: {
            bubbles: true,
            cancelable: false,
            composed: true
          }
        },
        pointerOut: {
          EventType: "PointerEvent",
          defaultInit: {
            bubbles: true,
            cancelable: true,
            composed: true
          }
        },
        pointerLeave: {
          EventType: "PointerEvent",
          defaultInit: {
            bubbles: false,
            cancelable: false
          }
        },
        gotPointerCapture: {
          EventType: "PointerEvent",
          defaultInit: {
            bubbles: true,
            cancelable: false,
            composed: true
          }
        },
        lostPointerCapture: {
          EventType: "PointerEvent",
          defaultInit: {
            bubbles: true,
            cancelable: false,
            composed: true
          }
        },
        popState: {
          EventType: "PopStateEvent",
          defaultInit: {
            bubbles: true,
            cancelable: false
          }
        }
      };
      exports.eventMap = eventMap;
      var eventAliasMap = {
        doubleClick: "dblClick"
      };
      exports.eventAliasMap = eventAliasMap;
    }
  });

  // node_modules/@testing-library/dom/dist/events.js
  var require_events = __commonJS({
    "node_modules/@testing-library/dom/dist/events.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.fireEvent = fireEvent;
      exports.createEvent = createEvent;
      var _config = require_config();
      var _helpers = require_helpers();
      var _eventMap = require_event_map();
      function fireEvent(element, event) {
        return (0, _config.getConfig)().eventWrapper(() => {
          if (!event) {
            throw new Error(`Unable to fire an event - please provide an event object.`);
          }
          if (!element) {
            throw new Error(`Unable to fire a "${event.type}" event - please provide a DOM element.`);
          }
          return element.dispatchEvent(event);
        });
      }
      function createEvent(eventName, node, init, {
        EventType = "Event",
        defaultInit = {}
      } = {}) {
        if (!node) {
          throw new Error(`Unable to fire a "${eventName}" event - please provide a DOM element.`);
        }
        const eventInit = {
          ...defaultInit,
          ...init
        };
        const {
          target: {
            value,
            files,
            ...targetProperties
          } = {}
        } = eventInit;
        if (value !== void 0) {
          setNativeValue(node, value);
        }
        if (files !== void 0) {
          Object.defineProperty(node, "files", {
            configurable: true,
            enumerable: true,
            writable: true,
            value: files
          });
        }
        Object.assign(node, targetProperties);
        const window2 = (0, _helpers.getWindowFromNode)(node);
        const EventConstructor = window2[EventType] || window2.Event;
        let event;
        if (typeof EventConstructor === "function") {
          event = new EventConstructor(eventName, eventInit);
        } else {
          event = window2.document.createEvent(EventType);
          const {
            bubbles,
            cancelable,
            detail,
            ...otherInit
          } = eventInit;
          event.initEvent(eventName, bubbles, cancelable, detail);
          Object.keys(otherInit).forEach((eventKey) => {
            event[eventKey] = otherInit[eventKey];
          });
        }
        const dataTransferProperties = ["dataTransfer", "clipboardData"];
        dataTransferProperties.forEach((dataTransferKey) => {
          const dataTransferValue = eventInit[dataTransferKey];
          if (typeof dataTransferValue === "object") {
            if (typeof window2.DataTransfer === "function") {
              Object.defineProperty(event, dataTransferKey, {
                value: Object.getOwnPropertyNames(dataTransferValue).reduce((acc, propName) => {
                  Object.defineProperty(acc, propName, {
                    value: dataTransferValue[propName]
                  });
                  return acc;
                }, new window2.DataTransfer())
              });
            } else {
              Object.defineProperty(event, dataTransferKey, {
                value: dataTransferValue
              });
            }
          }
        });
        return event;
      }
      Object.keys(_eventMap.eventMap).forEach((key) => {
        const {
          EventType,
          defaultInit
        } = _eventMap.eventMap[key];
        const eventName = key.toLowerCase();
        createEvent[key] = (node, init) => createEvent(eventName, node, init, {
          EventType,
          defaultInit
        });
        fireEvent[key] = (node, init) => fireEvent(node, createEvent[key](node, init));
      });
      function setNativeValue(element, value) {
        const {
          set: valueSetter
        } = Object.getOwnPropertyDescriptor(element, "value") || {};
        const prototype = Object.getPrototypeOf(element);
        const {
          set: prototypeValueSetter
        } = Object.getOwnPropertyDescriptor(prototype, "value") || {};
        if (prototypeValueSetter && valueSetter !== prototypeValueSetter) {
          prototypeValueSetter.call(element, value);
        } else if (valueSetter) {
          valueSetter.call(element, value);
        } else {
          throw new Error("The given element does not have a value setter");
        }
      }
      Object.keys(_eventMap.eventAliasMap).forEach((aliasKey) => {
        const key = _eventMap.eventAliasMap[aliasKey];
        fireEvent[aliasKey] = (...args) => fireEvent[key](...args);
      });
    }
  });

  // node_modules/lz-string/libs/lz-string.js
  var require_lz_string = __commonJS({
    "node_modules/lz-string/libs/lz-string.js"(exports, module) {
      var LZString = function() {
        var f = String.fromCharCode;
        var keyStrBase64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
        var keyStrUriSafe = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$";
        var baseReverseDic = {};
        function getBaseValue(alphabet, character) {
          if (!baseReverseDic[alphabet]) {
            baseReverseDic[alphabet] = {};
            for (var i2 = 0; i2 < alphabet.length; i2++) {
              baseReverseDic[alphabet][alphabet.charAt(i2)] = i2;
            }
          }
          return baseReverseDic[alphabet][character];
        }
        var LZString2 = {
          compressToBase64: function(input) {
            if (input == null)
              return "";
            var res = LZString2._compress(input, 6, function(a3) {
              return keyStrBase64.charAt(a3);
            });
            switch (res.length % 4) {
              default:
              case 0:
                return res;
              case 1:
                return res + "===";
              case 2:
                return res + "==";
              case 3:
                return res + "=";
            }
          },
          decompressFromBase64: function(input) {
            if (input == null)
              return "";
            if (input == "")
              return null;
            return LZString2._decompress(input.length, 32, function(index) {
              return getBaseValue(keyStrBase64, input.charAt(index));
            });
          },
          compressToUTF16: function(input) {
            if (input == null)
              return "";
            return LZString2._compress(input, 15, function(a3) {
              return f(a3 + 32);
            }) + " ";
          },
          decompressFromUTF16: function(compressed) {
            if (compressed == null)
              return "";
            if (compressed == "")
              return null;
            return LZString2._decompress(compressed.length, 16384, function(index) {
              return compressed.charCodeAt(index) - 32;
            });
          },
          compressToUint8Array: function(uncompressed) {
            var compressed = LZString2.compress(uncompressed);
            var buf = new Uint8Array(compressed.length * 2);
            for (var i2 = 0, TotalLen = compressed.length; i2 < TotalLen; i2++) {
              var current_value = compressed.charCodeAt(i2);
              buf[i2 * 2] = current_value >>> 8;
              buf[i2 * 2 + 1] = current_value % 256;
            }
            return buf;
          },
          decompressFromUint8Array: function(compressed) {
            if (compressed === null || compressed === void 0) {
              return LZString2.decompress(compressed);
            } else {
              var buf = new Array(compressed.length / 2);
              for (var i2 = 0, TotalLen = buf.length; i2 < TotalLen; i2++) {
                buf[i2] = compressed[i2 * 2] * 256 + compressed[i2 * 2 + 1];
              }
              var result = [];
              buf.forEach(function(c2) {
                result.push(f(c2));
              });
              return LZString2.decompress(result.join(""));
            }
          },
          compressToEncodedURIComponent: function(input) {
            if (input == null)
              return "";
            return LZString2._compress(input, 6, function(a3) {
              return keyStrUriSafe.charAt(a3);
            });
          },
          decompressFromEncodedURIComponent: function(input) {
            if (input == null)
              return "";
            if (input == "")
              return null;
            input = input.replace(/ /g, "+");
            return LZString2._decompress(input.length, 32, function(index) {
              return getBaseValue(keyStrUriSafe, input.charAt(index));
            });
          },
          compress: function(uncompressed) {
            return LZString2._compress(uncompressed, 16, function(a3) {
              return f(a3);
            });
          },
          _compress: function(uncompressed, bitsPerChar, getCharFromInt) {
            if (uncompressed == null)
              return "";
            var i2, value, context_dictionary = {}, context_dictionaryToCreate = {}, context_c = "", context_wc = "", context_w = "", context_enlargeIn = 2, context_dictSize = 3, context_numBits = 2, context_data = [], context_data_val = 0, context_data_position = 0, ii;
            for (ii = 0; ii < uncompressed.length; ii += 1) {
              context_c = uncompressed.charAt(ii);
              if (!Object.prototype.hasOwnProperty.call(context_dictionary, context_c)) {
                context_dictionary[context_c] = context_dictSize++;
                context_dictionaryToCreate[context_c] = true;
              }
              context_wc = context_w + context_c;
              if (Object.prototype.hasOwnProperty.call(context_dictionary, context_wc)) {
                context_w = context_wc;
              } else {
                if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate, context_w)) {
                  if (context_w.charCodeAt(0) < 256) {
                    for (i2 = 0; i2 < context_numBits; i2++) {
                      context_data_val = context_data_val << 1;
                      if (context_data_position == bitsPerChar - 1) {
                        context_data_position = 0;
                        context_data.push(getCharFromInt(context_data_val));
                        context_data_val = 0;
                      } else {
                        context_data_position++;
                      }
                    }
                    value = context_w.charCodeAt(0);
                    for (i2 = 0; i2 < 8; i2++) {
                      context_data_val = context_data_val << 1 | value & 1;
                      if (context_data_position == bitsPerChar - 1) {
                        context_data_position = 0;
                        context_data.push(getCharFromInt(context_data_val));
                        context_data_val = 0;
                      } else {
                        context_data_position++;
                      }
                      value = value >> 1;
                    }
                  } else {
                    value = 1;
                    for (i2 = 0; i2 < context_numBits; i2++) {
                      context_data_val = context_data_val << 1 | value;
                      if (context_data_position == bitsPerChar - 1) {
                        context_data_position = 0;
                        context_data.push(getCharFromInt(context_data_val));
                        context_data_val = 0;
                      } else {
                        context_data_position++;
                      }
                      value = 0;
                    }
                    value = context_w.charCodeAt(0);
                    for (i2 = 0; i2 < 16; i2++) {
                      context_data_val = context_data_val << 1 | value & 1;
                      if (context_data_position == bitsPerChar - 1) {
                        context_data_position = 0;
                        context_data.push(getCharFromInt(context_data_val));
                        context_data_val = 0;
                      } else {
                        context_data_position++;
                      }
                      value = value >> 1;
                    }
                  }
                  context_enlargeIn--;
                  if (context_enlargeIn == 0) {
                    context_enlargeIn = Math.pow(2, context_numBits);
                    context_numBits++;
                  }
                  delete context_dictionaryToCreate[context_w];
                } else {
                  value = context_dictionary[context_w];
                  for (i2 = 0; i2 < context_numBits; i2++) {
                    context_data_val = context_data_val << 1 | value & 1;
                    if (context_data_position == bitsPerChar - 1) {
                      context_data_position = 0;
                      context_data.push(getCharFromInt(context_data_val));
                      context_data_val = 0;
                    } else {
                      context_data_position++;
                    }
                    value = value >> 1;
                  }
                }
                context_enlargeIn--;
                if (context_enlargeIn == 0) {
                  context_enlargeIn = Math.pow(2, context_numBits);
                  context_numBits++;
                }
                context_dictionary[context_wc] = context_dictSize++;
                context_w = String(context_c);
              }
            }
            if (context_w !== "") {
              if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate, context_w)) {
                if (context_w.charCodeAt(0) < 256) {
                  for (i2 = 0; i2 < context_numBits; i2++) {
                    context_data_val = context_data_val << 1;
                    if (context_data_position == bitsPerChar - 1) {
                      context_data_position = 0;
                      context_data.push(getCharFromInt(context_data_val));
                      context_data_val = 0;
                    } else {
                      context_data_position++;
                    }
                  }
                  value = context_w.charCodeAt(0);
                  for (i2 = 0; i2 < 8; i2++) {
                    context_data_val = context_data_val << 1 | value & 1;
                    if (context_data_position == bitsPerChar - 1) {
                      context_data_position = 0;
                      context_data.push(getCharFromInt(context_data_val));
                      context_data_val = 0;
                    } else {
                      context_data_position++;
                    }
                    value = value >> 1;
                  }
                } else {
                  value = 1;
                  for (i2 = 0; i2 < context_numBits; i2++) {
                    context_data_val = context_data_val << 1 | value;
                    if (context_data_position == bitsPerChar - 1) {
                      context_data_position = 0;
                      context_data.push(getCharFromInt(context_data_val));
                      context_data_val = 0;
                    } else {
                      context_data_position++;
                    }
                    value = 0;
                  }
                  value = context_w.charCodeAt(0);
                  for (i2 = 0; i2 < 16; i2++) {
                    context_data_val = context_data_val << 1 | value & 1;
                    if (context_data_position == bitsPerChar - 1) {
                      context_data_position = 0;
                      context_data.push(getCharFromInt(context_data_val));
                      context_data_val = 0;
                    } else {
                      context_data_position++;
                    }
                    value = value >> 1;
                  }
                }
                context_enlargeIn--;
                if (context_enlargeIn == 0) {
                  context_enlargeIn = Math.pow(2, context_numBits);
                  context_numBits++;
                }
                delete context_dictionaryToCreate[context_w];
              } else {
                value = context_dictionary[context_w];
                for (i2 = 0; i2 < context_numBits; i2++) {
                  context_data_val = context_data_val << 1 | value & 1;
                  if (context_data_position == bitsPerChar - 1) {
                    context_data_position = 0;
                    context_data.push(getCharFromInt(context_data_val));
                    context_data_val = 0;
                  } else {
                    context_data_position++;
                  }
                  value = value >> 1;
                }
              }
              context_enlargeIn--;
              if (context_enlargeIn == 0) {
                context_enlargeIn = Math.pow(2, context_numBits);
                context_numBits++;
              }
            }
            value = 2;
            for (i2 = 0; i2 < context_numBits; i2++) {
              context_data_val = context_data_val << 1 | value & 1;
              if (context_data_position == bitsPerChar - 1) {
                context_data_position = 0;
                context_data.push(getCharFromInt(context_data_val));
                context_data_val = 0;
              } else {
                context_data_position++;
              }
              value = value >> 1;
            }
            while (true) {
              context_data_val = context_data_val << 1;
              if (context_data_position == bitsPerChar - 1) {
                context_data.push(getCharFromInt(context_data_val));
                break;
              } else
                context_data_position++;
            }
            return context_data.join("");
          },
          decompress: function(compressed) {
            if (compressed == null)
              return "";
            if (compressed == "")
              return null;
            return LZString2._decompress(compressed.length, 32768, function(index) {
              return compressed.charCodeAt(index);
            });
          },
          _decompress: function(length, resetValue, getNextValue) {
            var dictionary = [], next, enlargeIn = 4, dictSize = 4, numBits = 3, entry = "", result = [], i2, w2, bits, resb, maxpower, power, c2, data = {val: getNextValue(0), position: resetValue, index: 1};
            for (i2 = 0; i2 < 3; i2 += 1) {
              dictionary[i2] = i2;
            }
            bits = 0;
            maxpower = Math.pow(2, 2);
            power = 1;
            while (power != maxpower) {
              resb = data.val & data.position;
              data.position >>= 1;
              if (data.position == 0) {
                data.position = resetValue;
                data.val = getNextValue(data.index++);
              }
              bits |= (resb > 0 ? 1 : 0) * power;
              power <<= 1;
            }
            switch (next = bits) {
              case 0:
                bits = 0;
                maxpower = Math.pow(2, 8);
                power = 1;
                while (power != maxpower) {
                  resb = data.val & data.position;
                  data.position >>= 1;
                  if (data.position == 0) {
                    data.position = resetValue;
                    data.val = getNextValue(data.index++);
                  }
                  bits |= (resb > 0 ? 1 : 0) * power;
                  power <<= 1;
                }
                c2 = f(bits);
                break;
              case 1:
                bits = 0;
                maxpower = Math.pow(2, 16);
                power = 1;
                while (power != maxpower) {
                  resb = data.val & data.position;
                  data.position >>= 1;
                  if (data.position == 0) {
                    data.position = resetValue;
                    data.val = getNextValue(data.index++);
                  }
                  bits |= (resb > 0 ? 1 : 0) * power;
                  power <<= 1;
                }
                c2 = f(bits);
                break;
              case 2:
                return "";
            }
            dictionary[3] = c2;
            w2 = c2;
            result.push(c2);
            while (true) {
              if (data.index > length) {
                return "";
              }
              bits = 0;
              maxpower = Math.pow(2, numBits);
              power = 1;
              while (power != maxpower) {
                resb = data.val & data.position;
                data.position >>= 1;
                if (data.position == 0) {
                  data.position = resetValue;
                  data.val = getNextValue(data.index++);
                }
                bits |= (resb > 0 ? 1 : 0) * power;
                power <<= 1;
              }
              switch (c2 = bits) {
                case 0:
                  bits = 0;
                  maxpower = Math.pow(2, 8);
                  power = 1;
                  while (power != maxpower) {
                    resb = data.val & data.position;
                    data.position >>= 1;
                    if (data.position == 0) {
                      data.position = resetValue;
                      data.val = getNextValue(data.index++);
                    }
                    bits |= (resb > 0 ? 1 : 0) * power;
                    power <<= 1;
                  }
                  dictionary[dictSize++] = f(bits);
                  c2 = dictSize - 1;
                  enlargeIn--;
                  break;
                case 1:
                  bits = 0;
                  maxpower = Math.pow(2, 16);
                  power = 1;
                  while (power != maxpower) {
                    resb = data.val & data.position;
                    data.position >>= 1;
                    if (data.position == 0) {
                      data.position = resetValue;
                      data.val = getNextValue(data.index++);
                    }
                    bits |= (resb > 0 ? 1 : 0) * power;
                    power <<= 1;
                  }
                  dictionary[dictSize++] = f(bits);
                  c2 = dictSize - 1;
                  enlargeIn--;
                  break;
                case 2:
                  return result.join("");
              }
              if (enlargeIn == 0) {
                enlargeIn = Math.pow(2, numBits);
                numBits++;
              }
              if (dictionary[c2]) {
                entry = dictionary[c2];
              } else {
                if (c2 === dictSize) {
                  entry = w2 + w2.charAt(0);
                } else {
                  return null;
                }
              }
              result.push(entry);
              dictionary[dictSize++] = w2 + entry.charAt(0);
              enlargeIn--;
              w2 = entry;
              if (enlargeIn == 0) {
                enlargeIn = Math.pow(2, numBits);
                numBits++;
              }
            }
          }
        };
        return LZString2;
      }();
      if (typeof define === "function" && define.amd) {
        define(function() {
          return LZString;
        });
      } else if (typeof module !== "undefined" && module != null) {
        module.exports = LZString;
      }
    }
  });

  // node_modules/@testing-library/dom/dist/screen.js
  var require_screen = __commonJS({
    "node_modules/@testing-library/dom/dist/screen.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.screen = void 0;
      var _lzString = require_lz_string();
      var queries = _interopRequireWildcard(require_queries());
      var _getQueriesForElement = require_get_queries_for_element();
      var _prettyDom = require_pretty_dom();
      var _helpers = require_helpers();
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = new WeakMap();
        var cacheNodeInterop = new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return {default: obj};
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      function unindent(string) {
        return string.replace(/[ \t]*[\n][ \t]*/g, "\n");
      }
      function encode(value) {
        return (0, _lzString.compressToEncodedURIComponent)(unindent(value));
      }
      function getPlaygroundUrl(markup) {
        return `https://testing-playground.com/#markup=${encode(markup)}`;
      }
      var debug = (element, maxLength, options) => Array.isArray(element) ? element.forEach((el) => (0, _prettyDom.logDOM)(el, maxLength, options)) : (0, _prettyDom.logDOM)(element, maxLength, options);
      var logTestingPlaygroundURL = (element = (0, _helpers.getDocument)().body) => {
        if (!element || !("innerHTML" in element)) {
          console.log(`The element you're providing isn't a valid DOM element.`);
          return;
        }
        if (!element.innerHTML) {
          console.log(`The provided element doesn't have any children.`);
          return;
        }
        console.log(`Open this URL in your browser

${getPlaygroundUrl(element.innerHTML)}`);
      };
      var initialValue = {
        debug,
        logTestingPlaygroundURL
      };
      var screen = typeof document !== "undefined" && document.body ? (0, _getQueriesForElement.getQueriesForElement)(document.body, queries, initialValue) : Object.keys(queries).reduce((helpers, key) => {
        helpers[key] = () => {
          throw new TypeError("For queries bound to document.body a global document has to be available... Learn more: https://testing-library.com/s/screen-global-error");
        };
        return helpers;
      }, initialValue);
      exports.screen = screen;
    }
  });

  // node_modules/@testing-library/dom/dist/index.js
  var require_dist2 = __commonJS({
    "node_modules/@testing-library/dom/dist/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      var _exportNames = {
        within: true,
        queries: true,
        queryHelpers: true,
        getDefaultNormalizer: true,
        getRoles: true,
        logRoles: true,
        isInaccessible: true,
        configure: true,
        getConfig: true
      };
      Object.defineProperty(exports, "within", {
        enumerable: true,
        get: function() {
          return _getQueriesForElement.getQueriesForElement;
        }
      });
      Object.defineProperty(exports, "getDefaultNormalizer", {
        enumerable: true,
        get: function() {
          return _matches.getDefaultNormalizer;
        }
      });
      Object.defineProperty(exports, "getRoles", {
        enumerable: true,
        get: function() {
          return _roleHelpers.getRoles;
        }
      });
      Object.defineProperty(exports, "logRoles", {
        enumerable: true,
        get: function() {
          return _roleHelpers.logRoles;
        }
      });
      Object.defineProperty(exports, "isInaccessible", {
        enumerable: true,
        get: function() {
          return _roleHelpers.isInaccessible;
        }
      });
      Object.defineProperty(exports, "configure", {
        enumerable: true,
        get: function() {
          return _config.configure;
        }
      });
      Object.defineProperty(exports, "getConfig", {
        enumerable: true,
        get: function() {
          return _config.getConfig;
        }
      });
      exports.queryHelpers = exports.queries = void 0;
      var _getQueriesForElement = require_get_queries_for_element();
      Object.keys(_getQueriesForElement).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key))
          return;
        if (key in exports && exports[key] === _getQueriesForElement[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _getQueriesForElement[key];
          }
        });
      });
      var queries = _interopRequireWildcard(require_queries());
      exports.queries = queries;
      Object.keys(queries).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key))
          return;
        if (key in exports && exports[key] === queries[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return queries[key];
          }
        });
      });
      var queryHelpers = _interopRequireWildcard(require_query_helpers());
      exports.queryHelpers = queryHelpers;
      Object.keys(queryHelpers).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key))
          return;
        if (key in exports && exports[key] === queryHelpers[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return queryHelpers[key];
          }
        });
      });
      var _waitFor = require_wait_for();
      Object.keys(_waitFor).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key))
          return;
        if (key in exports && exports[key] === _waitFor[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _waitFor[key];
          }
        });
      });
      var _waitForElement = require_wait_for_element();
      Object.keys(_waitForElement).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key))
          return;
        if (key in exports && exports[key] === _waitForElement[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _waitForElement[key];
          }
        });
      });
      var _waitForElementToBeRemoved = require_wait_for_element_to_be_removed();
      Object.keys(_waitForElementToBeRemoved).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key))
          return;
        if (key in exports && exports[key] === _waitForElementToBeRemoved[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _waitForElementToBeRemoved[key];
          }
        });
      });
      var _waitForDomChange = require_wait_for_dom_change();
      Object.keys(_waitForDomChange).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key))
          return;
        if (key in exports && exports[key] === _waitForDomChange[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _waitForDomChange[key];
          }
        });
      });
      var _matches = require_matches();
      var _getNodeText = require_get_node_text();
      Object.keys(_getNodeText).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key))
          return;
        if (key in exports && exports[key] === _getNodeText[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _getNodeText[key];
          }
        });
      });
      var _events = require_events();
      Object.keys(_events).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key))
          return;
        if (key in exports && exports[key] === _events[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _events[key];
          }
        });
      });
      var _screen = require_screen();
      Object.keys(_screen).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key))
          return;
        if (key in exports && exports[key] === _screen[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _screen[key];
          }
        });
      });
      var _roleHelpers = require_role_helpers();
      var _prettyDom = require_pretty_dom();
      Object.keys(_prettyDom).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key))
          return;
        if (key in exports && exports[key] === _prettyDom[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _prettyDom[key];
          }
        });
      });
      var _config = require_config();
      var _suggestions = require_suggestions();
      Object.keys(_suggestions).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (Object.prototype.hasOwnProperty.call(_exportNames, key))
          return;
        if (key in exports && exports[key] === _suggestions[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _suggestions[key];
          }
        });
      });
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = new WeakMap();
        var cacheNodeInterop = new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return {default: obj};
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
    }
  });

  // node_modules/@testing-library/user-event/dist/utils/click/getMouseEventOptions.js
  var require_getMouseEventOptions = __commonJS({
    "node_modules/@testing-library/user-event/dist/utils/click/getMouseEventOptions.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.getMouseEventOptions = getMouseEventOptions;
      function isMousePressEvent(event) {
        return event === "mousedown" || event === "mouseup" || event === "click" || event === "dblclick";
      }
      var BUTTONS_NAMES = {
        none: 0,
        primary: 1,
        secondary: 2,
        auxiliary: 4
      };
      var BUTTON_NAMES = {
        primary: 0,
        auxiliary: 1,
        secondary: 2
      };
      function translateButtonNumber(value, from) {
        var _Object$entries$find;
        const [mapIn, mapOut] = from === "button" ? [BUTTON_NAMES, BUTTONS_NAMES] : [BUTTONS_NAMES, BUTTON_NAMES];
        const name = (_Object$entries$find = Object.entries(mapIn).find(([, i2]) => i2 === value)) == null ? void 0 : _Object$entries$find[0];
        return name && Object.prototype.hasOwnProperty.call(mapOut, name) ? mapOut[name] : 0;
      }
      function convertMouseButtons(event, init, property) {
        if (!isMousePressEvent(event)) {
          return 0;
        }
        if (typeof init[property] === "number") {
          return init[property];
        } else if (property === "button" && typeof init.buttons === "number") {
          return translateButtonNumber(init.buttons, "buttons");
        } else if (property === "buttons" && typeof init.button === "number") {
          return translateButtonNumber(init.button, "button");
        }
        return property != "button" && isMousePressEvent(event) ? 1 : 0;
      }
      function getMouseEventOptions(event, init, clickCount = 0) {
        var _init;
        init = (_init = init) != null ? _init : {};
        return {
          ...init,
          detail: event === "mousedown" || event === "mouseup" || event === "click" ? 1 + clickCount : clickCount,
          buttons: convertMouseButtons(event, init, "buttons"),
          button: convertMouseButtons(event, init, "button")
        };
      }
    }
  });

  // node_modules/@testing-library/user-event/dist/utils/misc/isElementType.js
  var require_isElementType = __commonJS({
    "node_modules/@testing-library/user-event/dist/utils/misc/isElementType.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.isElementType = isElementType;
      function isElementType(element, tag, props) {
        if (element.namespaceURI && element.namespaceURI !== "http://www.w3.org/1999/xhtml") {
          return false;
        }
        tag = Array.isArray(tag) ? tag : [tag];
        if (!tag.includes(element.tagName.toLowerCase())) {
          return false;
        }
        if (props) {
          return Object.entries(props).every(([k2, v]) => element[k2] === v);
        }
        return true;
      }
    }
  });

  // node_modules/@testing-library/user-event/dist/utils/click/isClickableInput.js
  var require_isClickableInput = __commonJS({
    "node_modules/@testing-library/user-event/dist/utils/click/isClickableInput.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.isClickableInput = isClickableInput;
      var _isElementType = require_isElementType();
      var CLICKABLE_INPUT_TYPES = ["button", "color", "file", "image", "reset", "submit", "checkbox", "radio"];
      function isClickableInput(element) {
        return (0, _isElementType.isElementType)(element, "button") || (0, _isElementType.isElementType)(element, "input") && CLICKABLE_INPUT_TYPES.includes(element.type);
      }
    }
  });

  // node_modules/@testing-library/user-event/dist/utils/edit/buildTimeValue.js
  var require_buildTimeValue = __commonJS({
    "node_modules/@testing-library/user-event/dist/utils/edit/buildTimeValue.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.buildTimeValue = buildTimeValue;
      function buildTimeValue(value) {
        const onlyDigitsValue = value.replace(/\D/g, "");
        if (onlyDigitsValue.length < 2) {
          return value;
        }
        const firstDigit = parseInt(onlyDigitsValue[0], 10);
        const secondDigit = parseInt(onlyDigitsValue[1], 10);
        if (firstDigit >= 3 || firstDigit === 2 && secondDigit >= 4) {
          let index;
          if (firstDigit >= 3) {
            index = 1;
          } else {
            index = 2;
          }
          return build(onlyDigitsValue, index);
        }
        if (value.length === 2) {
          return value;
        }
        return build(onlyDigitsValue, 2);
      }
      function build(onlyDigitsValue, index) {
        const hours = onlyDigitsValue.slice(0, index);
        const validHours = Math.min(parseInt(hours, 10), 23);
        const minuteCharacters = onlyDigitsValue.slice(index);
        const parsedMinutes = parseInt(minuteCharacters, 10);
        const validMinutes = Math.min(parsedMinutes, 59);
        return `${validHours.toString().padStart(2, "0")}:${validMinutes.toString().padStart(2, "0")}`;
      }
    }
  });

  // node_modules/@testing-library/user-event/dist/utils/edit/selectionRange.js
  var require_selectionRange = __commonJS({
    "node_modules/@testing-library/user-event/dist/utils/edit/selectionRange.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.getSelectionRange = getSelectionRange;
      exports.hasSelectionSupport = hasSelectionSupport;
      exports.setSelectionRange = setSelectionRange;
      var _isElementType = require_isElementType();
      var selectionSupportType;
      (function(selectionSupportType2) {
        selectionSupportType2["text"] = "text";
        selectionSupportType2["search"] = "search";
        selectionSupportType2["url"] = "url";
        selectionSupportType2["tel"] = "tel";
        selectionSupportType2["password"] = "password";
      })(selectionSupportType || (selectionSupportType = {}));
      var InputSelection = Symbol("inputSelection");
      function hasSelectionSupport(element) {
        return (0, _isElementType.isElementType)(element, "textarea") || (0, _isElementType.isElementType)(element, "input") && Boolean(selectionSupportType[element.type]);
      }
      function getSelectionRange(element) {
        if (hasSelectionSupport(element)) {
          return {
            selectionStart: element.selectionStart,
            selectionEnd: element.selectionEnd
          };
        }
        if ((0, _isElementType.isElementType)(element, "input")) {
          var _InputSelection;
          return (_InputSelection = element[InputSelection]) != null ? _InputSelection : {
            selectionStart: null,
            selectionEnd: null
          };
        }
        const selection = element.ownerDocument.getSelection();
        if (selection != null && selection.rangeCount && element.contains(selection.focusNode)) {
          const range = selection.getRangeAt(0);
          return {
            selectionStart: range.startOffset,
            selectionEnd: range.endOffset
          };
        } else {
          return {
            selectionStart: null,
            selectionEnd: null
          };
        }
      }
      function setSelectionRange(element, newSelectionStart, newSelectionEnd) {
        const {
          selectionStart,
          selectionEnd
        } = getSelectionRange(element);
        if (selectionStart === newSelectionStart && selectionEnd === newSelectionEnd) {
          return;
        }
        if (hasSelectionSupport(element)) {
          element.setSelectionRange(newSelectionStart, newSelectionEnd);
        }
        if ((0, _isElementType.isElementType)(element, "input")) {
          ;
          element[InputSelection] = {
            selectionStart: newSelectionStart,
            selectionEnd: newSelectionEnd
          };
        }
        if ((0, _isElementType.isElementType)(element, "input") || (0, _isElementType.isElementType)(element, "textarea")) {
          return;
        }
        const range = element.ownerDocument.createRange();
        range.selectNodeContents(element);
        if (element.firstChild) {
          range.setStart(element.firstChild, newSelectionStart);
          range.setEnd(element.firstChild, newSelectionEnd);
        }
        const selection = element.ownerDocument.getSelection();
        if (selection) {
          selection.removeAllRanges();
          selection.addRange(range);
        }
      }
    }
  });

  // node_modules/@testing-library/user-event/dist/utils/edit/isContentEditable.js
  var require_isContentEditable = __commonJS({
    "node_modules/@testing-library/user-event/dist/utils/edit/isContentEditable.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.isContentEditable = isContentEditable;
      function isContentEditable(element) {
        return element.hasAttribute("contenteditable") && (element.getAttribute("contenteditable") == "true" || element.getAttribute("contenteditable") == "");
      }
    }
  });

  // node_modules/@testing-library/user-event/dist/utils/edit/getValue.js
  var require_getValue = __commonJS({
    "node_modules/@testing-library/user-event/dist/utils/edit/getValue.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.getValue = getValue;
      var _isContentEditable = require_isContentEditable();
      function getValue(element) {
        if (!element) {
          return null;
        }
        if ((0, _isContentEditable.isContentEditable)(element)) {
          return element.textContent;
        }
        return element.value;
      }
    }
  });

  // node_modules/@testing-library/user-event/dist/utils/edit/isValidDateValue.js
  var require_isValidDateValue = __commonJS({
    "node_modules/@testing-library/user-event/dist/utils/edit/isValidDateValue.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.isValidDateValue = isValidDateValue;
      function isValidDateValue(element, value) {
        const clone = element.cloneNode();
        clone.value = value;
        return clone.value === value;
      }
    }
  });

  // node_modules/@testing-library/user-event/dist/utils/edit/isValidInputTimeValue.js
  var require_isValidInputTimeValue = __commonJS({
    "node_modules/@testing-library/user-event/dist/utils/edit/isValidInputTimeValue.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.isValidInputTimeValue = isValidInputTimeValue;
      function isValidInputTimeValue(element, timeValue) {
        const clone = element.cloneNode();
        clone.value = timeValue;
        return clone.value === timeValue;
      }
    }
  });

  // node_modules/@testing-library/user-event/dist/utils/edit/calculateNewValue.js
  var require_calculateNewValue = __commonJS({
    "node_modules/@testing-library/user-event/dist/utils/edit/calculateNewValue.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.calculateNewValue = calculateNewValue;
      var _selectionRange = require_selectionRange();
      var _getValue2 = require_getValue();
      var _isValidDateValue = require_isValidDateValue();
      var _isValidInputTimeValue = require_isValidInputTimeValue();
      function calculateNewValue(newEntry, element, value = (() => {
        var _getValue;
        return (_getValue = (0, _getValue2.getValue)(element)) != null ? _getValue : "";
      })(), selectionRange = (0, _selectionRange.getSelectionRange)(element), deleteContent) {
        const selectionStart = selectionRange.selectionStart === null ? value.length : selectionRange.selectionStart;
        const selectionEnd = selectionRange.selectionEnd === null ? value.length : selectionRange.selectionEnd;
        const prologEnd = Math.max(0, selectionStart === selectionEnd && deleteContent === "backward" ? selectionStart - 1 : selectionStart);
        const prolog = value.substring(0, prologEnd);
        const epilogStart = Math.min(value.length, selectionStart === selectionEnd && deleteContent === "forward" ? selectionEnd + 1 : selectionEnd);
        const epilog = value.substring(epilogStart, value.length);
        let newValue = `${prolog}${newEntry}${epilog}`;
        const newSelectionStart = prologEnd + newEntry.length;
        if (element.type === "date" && !(0, _isValidDateValue.isValidDateValue)(element, newValue)) {
          newValue = value;
        }
        if (element.type === "time" && !(0, _isValidInputTimeValue.isValidInputTimeValue)(element, newValue)) {
          if ((0, _isValidInputTimeValue.isValidInputTimeValue)(element, newEntry)) {
            newValue = newEntry;
          } else {
            newValue = value;
          }
        }
        return {
          newValue,
          newSelectionStart
        };
      }
    }
  });

  // node_modules/@testing-library/user-event/dist/utils/edit/cursorPosition.js
  var require_cursorPosition = __commonJS({
    "node_modules/@testing-library/user-event/dist/utils/edit/cursorPosition.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.isCursorAtEnd = isCursorAtEnd;
      exports.isCursorAtStart = isCursorAtStart;
      var _selectionRange = require_selectionRange();
      var _getValue2 = require_getValue();
      function isCursorAtEnd(element) {
        var _getValue;
        const {
          selectionStart,
          selectionEnd
        } = (0, _selectionRange.getSelectionRange)(element);
        return selectionStart === selectionEnd && (selectionStart != null ? selectionStart : 0) === ((_getValue = (0, _getValue2.getValue)(element)) != null ? _getValue : "").length;
      }
      function isCursorAtStart(element) {
        const {
          selectionStart,
          selectionEnd
        } = (0, _selectionRange.getSelectionRange)(element);
        return selectionStart === selectionEnd && (selectionStart != null ? selectionStart : 0) === 0;
      }
    }
  });

  // node_modules/@testing-library/user-event/dist/utils/edit/hasUnreliableEmptyValue.js
  var require_hasUnreliableEmptyValue = __commonJS({
    "node_modules/@testing-library/user-event/dist/utils/edit/hasUnreliableEmptyValue.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.hasUnreliableEmptyValue = hasUnreliableEmptyValue;
      var _isElementType = require_isElementType();
      var unreliableValueInputTypes;
      (function(unreliableValueInputTypes2) {
        unreliableValueInputTypes2["number"] = "number";
      })(unreliableValueInputTypes || (unreliableValueInputTypes = {}));
      function hasUnreliableEmptyValue(element) {
        return (0, _isElementType.isElementType)(element, "input") && Boolean(unreliableValueInputTypes[element.type]);
      }
    }
  });

  // node_modules/@testing-library/user-event/dist/utils/edit/isEditable.js
  var require_isEditable = __commonJS({
    "node_modules/@testing-library/user-event/dist/utils/edit/isEditable.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.editableInputTypes = void 0;
      exports.isEditable = isEditable;
      exports.isEditableInput = isEditableInput;
      var _isElementType = require_isElementType();
      var _isContentEditable = require_isContentEditable();
      function isEditable(element) {
        return isEditableInput(element) || (0, _isElementType.isElementType)(element, "textarea", {
          readOnly: false
        }) || (0, _isContentEditable.isContentEditable)(element);
      }
      var editableInputTypes;
      exports.editableInputTypes = editableInputTypes;
      (function(editableInputTypes2) {
        editableInputTypes2["text"] = "text";
        editableInputTypes2["date"] = "date";
        editableInputTypes2["datetime-local"] = "datetime-local";
        editableInputTypes2["email"] = "email";
        editableInputTypes2["month"] = "month";
        editableInputTypes2["number"] = "number";
        editableInputTypes2["password"] = "password";
        editableInputTypes2["search"] = "search";
        editableInputTypes2["tel"] = "tel";
        editableInputTypes2["time"] = "time";
        editableInputTypes2["url"] = "url";
        editableInputTypes2["week"] = "week";
      })(editableInputTypes || (exports.editableInputTypes = editableInputTypes = {}));
      function isEditableInput(element) {
        return (0, _isElementType.isElementType)(element, "input", {
          readOnly: false
        }) && Boolean(editableInputTypes[element.type]);
      }
    }
  });

  // node_modules/@testing-library/user-event/dist/utils/edit/maxLength.js
  var require_maxLength = __commonJS({
    "node_modules/@testing-library/user-event/dist/utils/edit/maxLength.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.getSpaceUntilMaxLength = getSpaceUntilMaxLength;
      var _isElementType = require_isElementType();
      var _getValue = require_getValue();
      var maxLengthSupportedTypes;
      (function(maxLengthSupportedTypes2) {
        maxLengthSupportedTypes2["email"] = "email";
        maxLengthSupportedTypes2["password"] = "password";
        maxLengthSupportedTypes2["search"] = "search";
        maxLengthSupportedTypes2["telephone"] = "telephone";
        maxLengthSupportedTypes2["text"] = "text";
        maxLengthSupportedTypes2["url"] = "url";
      })(maxLengthSupportedTypes || (maxLengthSupportedTypes = {}));
      function getSpaceUntilMaxLength(element) {
        const value = (0, _getValue.getValue)(element);
        if (value === null) {
          return void 0;
        }
        const maxLength = getSanitizedMaxLength(element);
        return maxLength ? maxLength - value.length : void 0;
      }
      function getSanitizedMaxLength(element) {
        var _element$getAttribute;
        if (!supportsMaxLength(element)) {
          return void 0;
        }
        const attr = (_element$getAttribute = element.getAttribute("maxlength")) != null ? _element$getAttribute : "";
        return /^\d+$/.test(attr) && Number(attr) >= 0 ? Number(attr) : void 0;
      }
      function supportsMaxLength(element) {
        return (0, _isElementType.isElementType)(element, "textarea") || (0, _isElementType.isElementType)(element, "input") && Boolean(maxLengthSupportedTypes[element.type]);
      }
    }
  });

  // node_modules/@testing-library/user-event/dist/utils/misc/isDisabled.js
  var require_isDisabled = __commonJS({
    "node_modules/@testing-library/user-event/dist/utils/misc/isDisabled.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.isDisabled = isDisabled;
      function isDisabled(element) {
        return Boolean(element && element.disabled);
      }
    }
  });

  // node_modules/@testing-library/user-event/dist/utils/focus/getActiveElement.js
  var require_getActiveElement = __commonJS({
    "node_modules/@testing-library/user-event/dist/utils/focus/getActiveElement.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.getActiveElement = getActiveElement;
      var _isDisabled = require_isDisabled();
      function getActiveElement(document2) {
        const activeElement = document2.activeElement;
        if (activeElement != null && activeElement.shadowRoot) {
          return getActiveElement(activeElement.shadowRoot);
        } else {
          if ((0, _isDisabled.isDisabled)(activeElement)) {
            return document2.ownerDocument ? document2.ownerDocument.body : document2.body;
          }
          return activeElement;
        }
      }
    }
  });

  // node_modules/@testing-library/user-event/dist/utils/misc/isLabelWithInternallyDisabledControl.js
  var require_isLabelWithInternallyDisabledControl = __commonJS({
    "node_modules/@testing-library/user-event/dist/utils/misc/isLabelWithInternallyDisabledControl.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.isLabelWithInternallyDisabledControl = isLabelWithInternallyDisabledControl;
      var _isDisabled = require_isDisabled();
      var _isElementType = require_isElementType();
      function isLabelWithInternallyDisabledControl(element) {
        if (!(0, _isElementType.isElementType)(element, "label")) {
          return false;
        }
        const control = element.control;
        return Boolean(control && element.contains(control) && (0, _isDisabled.isDisabled)(control));
      }
    }
  });

  // node_modules/@testing-library/user-event/dist/utils/focus/selector.js
  var require_selector = __commonJS({
    "node_modules/@testing-library/user-event/dist/utils/focus/selector.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.FOCUSABLE_SELECTOR = void 0;
      var FOCUSABLE_SELECTOR = ["input:not([type=hidden]):not([disabled])", "button:not([disabled])", "select:not([disabled])", "textarea:not([disabled])", '[contenteditable=""]', '[contenteditable="true"]', "a[href]", "[tabindex]:not([disabled])"].join(", ");
      exports.FOCUSABLE_SELECTOR = FOCUSABLE_SELECTOR;
    }
  });

  // node_modules/@testing-library/user-event/dist/utils/focus/isFocusable.js
  var require_isFocusable = __commonJS({
    "node_modules/@testing-library/user-event/dist/utils/focus/isFocusable.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.isFocusable = isFocusable;
      var _isLabelWithInternallyDisabledControl = require_isLabelWithInternallyDisabledControl();
      var _selector = require_selector();
      function isFocusable(element) {
        return !(0, _isLabelWithInternallyDisabledControl.isLabelWithInternallyDisabledControl)(element) && element.matches(_selector.FOCUSABLE_SELECTOR);
      }
    }
  });

  // node_modules/@testing-library/user-event/dist/utils/misc/eventWrapper.js
  var require_eventWrapper = __commonJS({
    "node_modules/@testing-library/user-event/dist/utils/misc/eventWrapper.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.eventWrapper = eventWrapper;
      var _dom = require_dist2();
      function eventWrapper(cb) {
        let result;
        (0, _dom.getConfig)().eventWrapper(() => {
          result = cb();
        });
        return result;
      }
    }
  });

  // node_modules/@testing-library/user-event/dist/utils/misc/isVisible.js
  var require_isVisible = __commonJS({
    "node_modules/@testing-library/user-event/dist/utils/misc/isVisible.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.isVisible = isVisible;
      var _helpers = require_helpers();
      function isVisible(element) {
        const window2 = (0, _helpers.getWindowFromNode)(element);
        for (let el = element; (_el = el) != null && _el.ownerDocument; el = el.parentElement) {
          var _el;
          const display = window2.getComputedStyle(el).display;
          if (display === "none") {
            return false;
          }
        }
        return true;
      }
    }
  });

  // node_modules/@testing-library/user-event/dist/utils/misc/isDocument.js
  var require_isDocument = __commonJS({
    "node_modules/@testing-library/user-event/dist/utils/misc/isDocument.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.isDocument = isDocument;
      function isDocument(el) {
        return el.nodeType === el.DOCUMENT_NODE;
      }
    }
  });

  // node_modules/@testing-library/user-event/dist/utils/misc/wait.js
  var require_wait = __commonJS({
    "node_modules/@testing-library/user-event/dist/utils/misc/wait.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.wait = wait;
      function wait(time) {
        return new Promise((resolve) => setTimeout(() => resolve(), time));
      }
    }
  });

  // node_modules/@testing-library/user-event/dist/utils/misc/hasPointerEvents.js
  var require_hasPointerEvents = __commonJS({
    "node_modules/@testing-library/user-event/dist/utils/misc/hasPointerEvents.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.hasPointerEvents = hasPointerEvents;
      var _helpers = require_helpers();
      function hasPointerEvents(element) {
        const window2 = (0, _helpers.getWindowFromNode)(element);
        for (let el = element; (_el = el) != null && _el.ownerDocument; el = el.parentElement) {
          var _el;
          const pointerEvents = window2.getComputedStyle(el).pointerEvents;
          if (pointerEvents && !["inherit", "unset"].includes(pointerEvents)) {
            return pointerEvents !== "none";
          }
        }
        return true;
      }
    }
  });

  // node_modules/@testing-library/user-event/dist/utils/misc/hasFormSubmit.js
  var require_hasFormSubmit = __commonJS({
    "node_modules/@testing-library/user-event/dist/utils/misc/hasFormSubmit.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.hasFormSubmit = void 0;
      var hasFormSubmit = (form) => !!(form && (form.querySelector('input[type="submit"]') || form.querySelector('button[type="submit"]')));
      exports.hasFormSubmit = hasFormSubmit;
    }
  });

  // node_modules/@testing-library/user-event/dist/utils/index.js
  var require_utils = __commonJS({
    "node_modules/@testing-library/user-event/dist/utils/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      var _getMouseEventOptions = require_getMouseEventOptions();
      Object.keys(_getMouseEventOptions).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (key in exports && exports[key] === _getMouseEventOptions[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _getMouseEventOptions[key];
          }
        });
      });
      var _isClickableInput = require_isClickableInput();
      Object.keys(_isClickableInput).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (key in exports && exports[key] === _isClickableInput[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _isClickableInput[key];
          }
        });
      });
      var _buildTimeValue = require_buildTimeValue();
      Object.keys(_buildTimeValue).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (key in exports && exports[key] === _buildTimeValue[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _buildTimeValue[key];
          }
        });
      });
      var _calculateNewValue = require_calculateNewValue();
      Object.keys(_calculateNewValue).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (key in exports && exports[key] === _calculateNewValue[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _calculateNewValue[key];
          }
        });
      });
      var _cursorPosition = require_cursorPosition();
      Object.keys(_cursorPosition).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (key in exports && exports[key] === _cursorPosition[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _cursorPosition[key];
          }
        });
      });
      var _getValue = require_getValue();
      Object.keys(_getValue).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (key in exports && exports[key] === _getValue[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _getValue[key];
          }
        });
      });
      var _hasUnreliableEmptyValue = require_hasUnreliableEmptyValue();
      Object.keys(_hasUnreliableEmptyValue).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (key in exports && exports[key] === _hasUnreliableEmptyValue[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _hasUnreliableEmptyValue[key];
          }
        });
      });
      var _isContentEditable = require_isContentEditable();
      Object.keys(_isContentEditable).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (key in exports && exports[key] === _isContentEditable[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _isContentEditable[key];
          }
        });
      });
      var _isEditable = require_isEditable();
      Object.keys(_isEditable).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (key in exports && exports[key] === _isEditable[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _isEditable[key];
          }
        });
      });
      var _isValidDateValue = require_isValidDateValue();
      Object.keys(_isValidDateValue).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (key in exports && exports[key] === _isValidDateValue[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _isValidDateValue[key];
          }
        });
      });
      var _isValidInputTimeValue = require_isValidInputTimeValue();
      Object.keys(_isValidInputTimeValue).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (key in exports && exports[key] === _isValidInputTimeValue[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _isValidInputTimeValue[key];
          }
        });
      });
      var _maxLength = require_maxLength();
      Object.keys(_maxLength).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (key in exports && exports[key] === _maxLength[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _maxLength[key];
          }
        });
      });
      var _selectionRange = require_selectionRange();
      Object.keys(_selectionRange).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (key in exports && exports[key] === _selectionRange[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _selectionRange[key];
          }
        });
      });
      var _getActiveElement = require_getActiveElement();
      Object.keys(_getActiveElement).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (key in exports && exports[key] === _getActiveElement[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _getActiveElement[key];
          }
        });
      });
      var _isFocusable = require_isFocusable();
      Object.keys(_isFocusable).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (key in exports && exports[key] === _isFocusable[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _isFocusable[key];
          }
        });
      });
      var _selector = require_selector();
      Object.keys(_selector).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (key in exports && exports[key] === _selector[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _selector[key];
          }
        });
      });
      var _eventWrapper = require_eventWrapper();
      Object.keys(_eventWrapper).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (key in exports && exports[key] === _eventWrapper[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _eventWrapper[key];
          }
        });
      });
      var _isElementType = require_isElementType();
      Object.keys(_isElementType).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (key in exports && exports[key] === _isElementType[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _isElementType[key];
          }
        });
      });
      var _isLabelWithInternallyDisabledControl = require_isLabelWithInternallyDisabledControl();
      Object.keys(_isLabelWithInternallyDisabledControl).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (key in exports && exports[key] === _isLabelWithInternallyDisabledControl[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _isLabelWithInternallyDisabledControl[key];
          }
        });
      });
      var _isVisible = require_isVisible();
      Object.keys(_isVisible).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (key in exports && exports[key] === _isVisible[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _isVisible[key];
          }
        });
      });
      var _isDisabled = require_isDisabled();
      Object.keys(_isDisabled).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (key in exports && exports[key] === _isDisabled[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _isDisabled[key];
          }
        });
      });
      var _isDocument = require_isDocument();
      Object.keys(_isDocument).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (key in exports && exports[key] === _isDocument[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _isDocument[key];
          }
        });
      });
      var _wait = require_wait();
      Object.keys(_wait).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (key in exports && exports[key] === _wait[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _wait[key];
          }
        });
      });
      var _hasPointerEvents = require_hasPointerEvents();
      Object.keys(_hasPointerEvents).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (key in exports && exports[key] === _hasPointerEvents[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _hasPointerEvents[key];
          }
        });
      });
      var _hasFormSubmit = require_hasFormSubmit();
      Object.keys(_hasFormSubmit).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (key in exports && exports[key] === _hasFormSubmit[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _hasFormSubmit[key];
          }
        });
      });
    }
  });

  // node_modules/@testing-library/user-event/dist/keyboard/getNextKeyDef.js
  var require_getNextKeyDef = __commonJS({
    "node_modules/@testing-library/user-event/dist/keyboard/getNextKeyDef.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.getNextKeyDef = getNextKeyDef;
      var bracketDict;
      (function(bracketDict2) {
        bracketDict2["{"] = "}";
        bracketDict2["["] = "]";
      })(bracketDict || (bracketDict = {}));
      var legacyModifiers;
      (function(legacyModifiers2) {
        legacyModifiers2["alt"] = "alt";
        legacyModifiers2["ctrl"] = "ctrl";
        legacyModifiers2["meta"] = "meta";
        legacyModifiers2["shift"] = "shift";
      })(legacyModifiers || (legacyModifiers = {}));
      var legacyKeyMap;
      (function(legacyKeyMap2) {
        legacyKeyMap2["ctrl"] = "Control";
        legacyKeyMap2["del"] = "Delete";
        legacyKeyMap2["esc"] = "Escape";
        legacyKeyMap2["space"] = " ";
      })(legacyKeyMap || (legacyKeyMap = {}));
      function getNextKeyDef(text, options) {
        var _options$keyboardMap$;
        const {
          type,
          descriptor,
          consumedLength,
          releasePrevious,
          releaseSelf,
          repeat
        } = readNextDescriptor(text);
        const keyDef = (_options$keyboardMap$ = options.keyboardMap.find((def) => {
          if (type === "[") {
            var _def$code;
            return ((_def$code = def.code) == null ? void 0 : _def$code.toLowerCase()) === descriptor.toLowerCase();
          } else if (type === "{") {
            var _def$key;
            const key = mapLegacyKey(descriptor);
            return ((_def$key = def.key) == null ? void 0 : _def$key.toLowerCase()) === key.toLowerCase();
          }
          return def.key === descriptor;
        })) != null ? _options$keyboardMap$ : {
          key: "Unknown",
          code: "Unknown",
          [type === "[" ? "code" : "key"]: descriptor
        };
        return {
          keyDef,
          consumedLength,
          releasePrevious,
          releaseSelf,
          repeat
        };
      }
      function readNextDescriptor(text) {
        let pos = 0;
        const startBracket = text[pos] in bracketDict ? text[pos] : "";
        pos += startBracket.length;
        const startBracketRepeated = startBracket ? text.match(new RegExp(`^\\${startBracket}+`))[0].length : 0;
        const isEscapedChar = startBracketRepeated === 2 || startBracket === "{" && startBracketRepeated > 3;
        const type = isEscapedChar ? "" : startBracket;
        return {
          type,
          ...type === "" ? readPrintableChar(text, pos) : readTag(text, pos, type)
        };
      }
      function readPrintableChar(text, pos) {
        const descriptor = text[pos];
        assertDescriptor(descriptor, text, pos);
        pos += descriptor.length;
        return {
          consumedLength: pos,
          descriptor,
          releasePrevious: false,
          releaseSelf: true,
          repeat: 1
        };
      }
      function readTag(text, pos, startBracket) {
        var _text$slice$match, _text$slice$match$, _text$slice$match2;
        const releasePreviousModifier = text[pos] === "/" ? "/" : "";
        pos += releasePreviousModifier.length;
        const descriptor = (_text$slice$match = text.slice(pos).match(/^\w+/)) == null ? void 0 : _text$slice$match[0];
        assertDescriptor(descriptor, text, pos);
        pos += descriptor.length;
        const repeatModifier = (_text$slice$match$ = (_text$slice$match2 = text.slice(pos).match(/^>\d+/)) == null ? void 0 : _text$slice$match2[0]) != null ? _text$slice$match$ : "";
        pos += repeatModifier.length;
        const releaseSelfModifier = text[pos] === "/" || !repeatModifier && text[pos] === ">" ? text[pos] : "";
        pos += releaseSelfModifier.length;
        const expectedEndBracket = bracketDict[startBracket];
        const endBracket = text[pos] === expectedEndBracket ? expectedEndBracket : "";
        if (!endBracket) {
          throw new Error(getErrorMessage([!repeatModifier && "repeat modifier", !releaseSelfModifier && "release modifier", `"${expectedEndBracket}"`].filter(Boolean).join(" or "), text[pos], text));
        }
        pos += endBracket.length;
        return {
          consumedLength: pos,
          descriptor,
          releasePrevious: !!releasePreviousModifier,
          repeat: repeatModifier ? Math.max(Number(repeatModifier.substr(1)), 1) : 1,
          releaseSelf: hasReleaseSelf(startBracket, descriptor, releaseSelfModifier, repeatModifier)
        };
      }
      function assertDescriptor(descriptor, text, pos) {
        if (!descriptor) {
          throw new Error(getErrorMessage("key descriptor", text[pos], text));
        }
      }
      function getEnumValue(f, key) {
        return f[key];
      }
      function hasReleaseSelf(startBracket, descriptor, releaseSelfModifier, repeatModifier) {
        if (releaseSelfModifier) {
          return releaseSelfModifier === "/";
        }
        if (repeatModifier) {
          return false;
        }
        if (startBracket === "{" && getEnumValue(legacyModifiers, descriptor.toLowerCase())) {
          return false;
        }
        return true;
      }
      function mapLegacyKey(descriptor) {
        var _getEnumValue;
        return (_getEnumValue = getEnumValue(legacyKeyMap, descriptor)) != null ? _getEnumValue : descriptor;
      }
      function getErrorMessage(expected, found, text) {
        return `Expected ${expected} but found "${found != null ? found : ""}" in "${text}"
    See https://github.com/testing-library/user-event/blob/main/README.md#keyboardtext-options
    for more information about how userEvent parses your input.`;
      }
    }
  });

  // node_modules/@testing-library/user-event/dist/keyboard/plugins/arrow.js
  var require_arrow = __commonJS({
    "node_modules/@testing-library/user-event/dist/keyboard/plugins/arrow.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.keydownBehavior = void 0;
      var _utils = require_utils();
      var keydownBehavior = [{
        matches: (keyDef, element) => (keyDef.key === "ArrowLeft" || keyDef.key === "ArrowRight") && (0, _utils.isElementType)(element, ["input", "textarea"]),
        handle: (keyDef, element) => {
          var _ref;
          const {
            selectionStart,
            selectionEnd
          } = (0, _utils.getSelectionRange)(element);
          const direction = keyDef.key === "ArrowLeft" ? -1 : 1;
          const newPos = (_ref = selectionStart === selectionEnd ? (selectionStart != null ? selectionStart : 0) + direction : direction < 0 ? selectionStart : selectionEnd) != null ? _ref : 0;
          (0, _utils.setSelectionRange)(element, newPos, newPos);
        }
      }];
      exports.keydownBehavior = keydownBehavior;
    }
  });

  // node_modules/@testing-library/user-event/dist/keyboard/shared/carryValue.js
  var require_carryValue = __commonJS({
    "node_modules/@testing-library/user-event/dist/keyboard/shared/carryValue.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.carryValue = carryValue;
      var _utils = require_utils();
      function carryValue(element, state, newValue) {
        const value = (0, _utils.getValue)(element);
        state.carryValue = value !== newValue && value === "" && (0, _utils.hasUnreliableEmptyValue)(element) ? newValue : void 0;
      }
    }
  });

  // node_modules/@testing-library/user-event/dist/keyboard/shared/fireChangeForInputTimeIfValid.js
  var require_fireChangeForInputTimeIfValid = __commonJS({
    "node_modules/@testing-library/user-event/dist/keyboard/shared/fireChangeForInputTimeIfValid.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.fireChangeForInputTimeIfValid = fireChangeForInputTimeIfValid;
      var _dom = require_dist2();
      var _utils = require_utils();
      function fireChangeForInputTimeIfValid(el, prevValue, timeNewEntry) {
        if ((0, _utils.isValidInputTimeValue)(el, timeNewEntry) && prevValue !== timeNewEntry) {
          _dom.fireEvent.change(el, {
            target: {
              value: timeNewEntry
            }
          });
        }
      }
    }
  });

  // node_modules/@testing-library/user-event/dist/keyboard/shared/fireInputEvent.js
  var require_fireInputEvent = __commonJS({
    "node_modules/@testing-library/user-event/dist/keyboard/shared/fireInputEvent.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.fireInputEvent = fireInputEvent;
      var _dom = require_dist2();
      var _utils = require_utils();
      function fireInputEvent(element, {
        newValue,
        newSelectionStart,
        eventOverrides
      }) {
        if ((0, _utils.isContentEditable)(element)) {
          applyNative(element, "textContent", newValue);
        } else if ((0, _utils.isElementType)(element, ["input", "textarea"])) {
          applyNative(element, "value", newValue);
        } else {
          throw new Error("Invalid Element");
        }
        setSelectionRangeAfterInput(element, newSelectionStart);
        _dom.fireEvent.input(element, {
          ...eventOverrides
        });
        setSelectionRangeAfterInputHandler(element, newValue, newSelectionStart);
      }
      function setSelectionRangeAfterInput(element, newSelectionStart) {
        (0, _utils.setSelectionRange)(element, newSelectionStart, newSelectionStart);
      }
      function setSelectionRangeAfterInputHandler(element, newValue, newSelectionStart) {
        const value = (0, _utils.getValue)(element);
        const isUnreliableValue = value === "" && (0, _utils.hasUnreliableEmptyValue)(element);
        if (!isUnreliableValue && value === newValue) {
          const {
            selectionStart
          } = (0, _utils.getSelectionRange)(element);
          if (selectionStart === value.length) {
            (0, _utils.setSelectionRange)(element, newSelectionStart, newSelectionStart);
          }
        }
      }
      var initial = Symbol("initial input value/textContent");
      var onBlur = Symbol("onBlur");
      function applyNative(element, propName, propValue) {
        const descriptor = Object.getOwnPropertyDescriptor(element, propName);
        const nativeDescriptor = Object.getOwnPropertyDescriptor(element.constructor.prototype, propName);
        if (descriptor && nativeDescriptor) {
          Object.defineProperty(element, propName, nativeDescriptor);
        }
        if (element[initial] === void 0) {
          element[initial] = String(element[propName]);
        }
        element[propName] = propValue;
        if (!element[onBlur]) {
          var _element$ownerDocumen;
          (_element$ownerDocumen = element.ownerDocument.defaultView) == null ? void 0 : _element$ownerDocumen.addEventListener("blur", element[onBlur] = () => {
            const initV = element[initial];
            delete element[onBlur];
            delete element[initial];
            if (String(element[propName]) !== initV) {
              _dom.fireEvent.change(element);
            }
          }, {
            capture: true,
            once: true
          });
        }
        if (descriptor) {
          Object.defineProperty(element, propName, descriptor);
        }
      }
    }
  });

  // node_modules/@testing-library/user-event/dist/keyboard/shared/index.js
  var require_shared2 = __commonJS({
    "node_modules/@testing-library/user-event/dist/keyboard/shared/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      var _carryValue = require_carryValue();
      Object.keys(_carryValue).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (key in exports && exports[key] === _carryValue[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _carryValue[key];
          }
        });
      });
      var _fireChangeForInputTimeIfValid = require_fireChangeForInputTimeIfValid();
      Object.keys(_fireChangeForInputTimeIfValid).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (key in exports && exports[key] === _fireChangeForInputTimeIfValid[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _fireChangeForInputTimeIfValid[key];
          }
        });
      });
      var _fireInputEvent = require_fireInputEvent();
      Object.keys(_fireInputEvent).forEach(function(key) {
        if (key === "default" || key === "__esModule")
          return;
        if (key in exports && exports[key] === _fireInputEvent[key])
          return;
        Object.defineProperty(exports, key, {
          enumerable: true,
          get: function() {
            return _fireInputEvent[key];
          }
        });
      });
    }
  });

  // node_modules/@testing-library/user-event/dist/keyboard/plugins/control.js
  var require_control = __commonJS({
    "node_modules/@testing-library/user-event/dist/keyboard/plugins/control.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.keydownBehavior = void 0;
      var _utils = require_utils();
      var _shared = require_shared2();
      var keydownBehavior = [{
        matches: (keyDef, element) => (keyDef.key === "Home" || keyDef.key === "End") && ((0, _utils.isElementType)(element, ["input", "textarea"]) || (0, _utils.isContentEditable)(element)),
        handle: (keyDef, element) => {
          if (keyDef.key === "Home") {
            (0, _utils.setSelectionRange)(element, 0, 0);
          } else {
            var _getValue$length, _getValue;
            const newPos = (_getValue$length = (_getValue = (0, _utils.getValue)(element)) == null ? void 0 : _getValue.length) != null ? _getValue$length : 0;
            (0, _utils.setSelectionRange)(element, newPos, newPos);
          }
        }
      }, {
        matches: (keyDef, element) => (keyDef.key === "PageUp" || keyDef.key === "PageDown") && (0, _utils.isElementType)(element, ["input"]),
        handle: (keyDef, element) => {
          if (keyDef.key === "PageUp") {
            (0, _utils.setSelectionRange)(element, 0, 0);
          } else {
            var _getValue$length2, _getValue2;
            const newPos = (_getValue$length2 = (_getValue2 = (0, _utils.getValue)(element)) == null ? void 0 : _getValue2.length) != null ? _getValue$length2 : 0;
            (0, _utils.setSelectionRange)(element, newPos, newPos);
          }
        }
      }, {
        matches: (keyDef, element) => keyDef.key === "Delete" && (0, _utils.isEditable)(element) && !(0, _utils.isCursorAtEnd)(element),
        handle: (keDef, element, options, state) => {
          const {
            newValue,
            newSelectionStart
          } = (0, _utils.calculateNewValue)("", element, state.carryValue, void 0, "forward");
          (0, _shared.fireInputEvent)(element, {
            newValue,
            newSelectionStart,
            eventOverrides: {
              inputType: "deleteContentForward"
            }
          });
          (0, _shared.carryValue)(element, state, newValue);
        }
      }];
      exports.keydownBehavior = keydownBehavior;
    }
  });

  // node_modules/@testing-library/user-event/dist/keyboard/plugins/character.js
  var require_character = __commonJS({
    "node_modules/@testing-library/user-event/dist/keyboard/plugins/character.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.keypressBehavior = void 0;
      var _dom = require_dist2();
      var _shared = require_shared2();
      var _utils = require_utils();
      var keypressBehavior = [{
        matches: (keyDef, element) => {
          var _keyDef$key;
          return ((_keyDef$key = keyDef.key) == null ? void 0 : _keyDef$key.length) === 1 && (0, _utils.isElementType)(element, "input", {
            type: "time",
            readOnly: false
          });
        },
        handle: (keyDef, element, options, state) => {
          var _state$carryValue;
          let newEntry = keyDef.key;
          const textToBeTyped = ((_state$carryValue = state.carryValue) != null ? _state$carryValue : "") + newEntry;
          const timeNewEntry = (0, _utils.buildTimeValue)(textToBeTyped);
          if ((0, _utils.isValidInputTimeValue)(element, timeNewEntry)) {
            newEntry = timeNewEntry;
          }
          const {
            newValue,
            newSelectionStart
          } = (0, _utils.calculateNewValue)(newEntry, element);
          const prevValue = (0, _utils.getValue)(element);
          if (prevValue !== newValue) {
            (0, _shared.fireInputEvent)(element, {
              newValue,
              newSelectionStart,
              eventOverrides: {
                data: keyDef.key,
                inputType: "insertText"
              }
            });
          }
          (0, _shared.fireChangeForInputTimeIfValid)(element, prevValue, timeNewEntry);
          state.carryValue = textToBeTyped;
        }
      }, {
        matches: (keyDef, element) => {
          var _keyDef$key2;
          return ((_keyDef$key2 = keyDef.key) == null ? void 0 : _keyDef$key2.length) === 1 && (0, _utils.isElementType)(element, "input", {
            type: "date",
            readOnly: false
          });
        },
        handle: (keyDef, element, options, state) => {
          var _state$carryValue2;
          let newEntry = keyDef.key;
          const textToBeTyped = ((_state$carryValue2 = state.carryValue) != null ? _state$carryValue2 : "") + newEntry;
          const isValidToBeTyped = (0, _utils.isValidDateValue)(element, textToBeTyped);
          if (isValidToBeTyped) {
            newEntry = textToBeTyped;
          }
          const {
            newValue,
            newSelectionStart
          } = (0, _utils.calculateNewValue)(newEntry, element);
          const prevValue = (0, _utils.getValue)(element);
          if (prevValue !== newValue) {
            (0, _shared.fireInputEvent)(element, {
              newValue,
              newSelectionStart,
              eventOverrides: {
                data: keyDef.key,
                inputType: "insertText"
              }
            });
          }
          if (isValidToBeTyped) {
            _dom.fireEvent.change(element, {
              target: {
                value: textToBeTyped
              }
            });
          }
          state.carryValue = textToBeTyped;
        }
      }, {
        matches: (keyDef, element) => {
          var _keyDef$key3;
          return ((_keyDef$key3 = keyDef.key) == null ? void 0 : _keyDef$key3.length) === 1 && (0, _utils.isElementType)(element, "input", {
            type: "number",
            readOnly: false
          });
        },
        handle: (keyDef, element, options, state) => {
          var _ref, _state$carryValue3, _newValue$match, _newValue$match2;
          if (!/[\d.\-e]/.test(keyDef.key)) {
            return;
          }
          const oldValue = (_ref = (_state$carryValue3 = state.carryValue) != null ? _state$carryValue3 : (0, _utils.getValue)(element)) != null ? _ref : "";
          const {
            newValue,
            newSelectionStart
          } = (0, _utils.calculateNewValue)(keyDef.key, element, oldValue);
          const valueParts = newValue.split("e", 2);
          if (Number((_newValue$match = newValue.match(/-/g)) == null ? void 0 : _newValue$match.length) > 2 || Number((_newValue$match2 = newValue.match(/\./g)) == null ? void 0 : _newValue$match2.length) > 1 || valueParts[1] && !/^-?\d*$/.test(valueParts[1])) {
            return;
          }
          (0, _shared.fireInputEvent)(element, {
            newValue,
            newSelectionStart,
            eventOverrides: {
              data: keyDef.key,
              inputType: "insertText"
            }
          });
          const appliedValue = (0, _utils.getValue)(element);
          if (appliedValue === newValue) {
            state.carryValue = void 0;
          } else {
            state.carryValue = newValue;
          }
        }
      }, {
        matches: (keyDef, element) => {
          var _keyDef$key4;
          return ((_keyDef$key4 = keyDef.key) == null ? void 0 : _keyDef$key4.length) === 1 && ((0, _utils.isElementType)(element, ["input", "textarea"], {
            readOnly: false
          }) && !(0, _utils.isClickableInput)(element) || (0, _utils.isContentEditable)(element)) && (0, _utils.getSpaceUntilMaxLength)(element) !== 0;
        },
        handle: (keyDef, element) => {
          const {
            newValue,
            newSelectionStart
          } = (0, _utils.calculateNewValue)(keyDef.key, element);
          (0, _shared.fireInputEvent)(element, {
            newValue,
            newSelectionStart,
            eventOverrides: {
              data: keyDef.key,
              inputType: "insertText"
            }
          });
        }
      }, {
        matches: (keyDef, element) => keyDef.key === "Enter" && ((0, _utils.isElementType)(element, "textarea", {
          readOnly: false
        }) || (0, _utils.isContentEditable)(element)) && (0, _utils.getSpaceUntilMaxLength)(element) !== 0,
        handle: (keyDef, element, options, state) => {
          const {
            newValue,
            newSelectionStart
          } = (0, _utils.calculateNewValue)("\n", element);
          const inputType = (0, _utils.isContentEditable)(element) && !state.modifiers.shift ? "insertParagraph" : "insertLineBreak";
          (0, _shared.fireInputEvent)(element, {
            newValue,
            newSelectionStart,
            eventOverrides: {
              inputType
            }
          });
        }
      }];
      exports.keypressBehavior = keypressBehavior;
    }
  });

  // node_modules/@testing-library/user-event/dist/keyboard/getEventProps.js
  var require_getEventProps = __commonJS({
    "node_modules/@testing-library/user-event/dist/keyboard/getEventProps.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.getKeyEventProps = getKeyEventProps;
      exports.getMouseEventProps = getMouseEventProps;
      function getKeyEventProps(keyDef, state) {
        var _keyDef$keyCode, _keyDef$key;
        return {
          key: keyDef.key,
          code: keyDef.code,
          altKey: state.modifiers.alt,
          ctrlKey: state.modifiers.ctrl,
          metaKey: state.modifiers.meta,
          shiftKey: state.modifiers.shift,
          keyCode: (_keyDef$keyCode = keyDef.keyCode) != null ? _keyDef$keyCode : ((_keyDef$key = keyDef.key) == null ? void 0 : _keyDef$key.length) === 1 ? keyDef.key.charCodeAt(0) : void 0
        };
      }
      function getMouseEventProps(state) {
        return {
          altKey: state.modifiers.alt,
          ctrlKey: state.modifiers.ctrl,
          metaKey: state.modifiers.meta,
          shiftKey: state.modifiers.shift
        };
      }
    }
  });

  // node_modules/@testing-library/user-event/dist/keyboard/plugins/functional.js
  var require_functional = __commonJS({
    "node_modules/@testing-library/user-event/dist/keyboard/plugins/functional.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.preKeyupBehavior = exports.preKeydownBehavior = exports.postKeyupBehavior = exports.keyupBehavior = exports.keypressBehavior = exports.keydownBehavior = void 0;
      var _dom = require_dist2();
      var _utils = require_utils();
      var _getEventProps = require_getEventProps();
      var _shared = require_shared2();
      var modifierKeys = {
        Alt: "alt",
        Control: "ctrl",
        Shift: "shift",
        Meta: "meta"
      };
      var preKeydownBehavior = [
        ...Object.entries(modifierKeys).map(([key, modKey]) => ({
          matches: (keyDef) => keyDef.key === key,
          handle: (keyDef, element, options, state) => {
            state.modifiers[modKey] = true;
          }
        })),
        {
          matches: (keyDef) => keyDef.key === "AltGraph",
          handle: (keyDef, element, options, state) => {
            var _options$keyboardMap$;
            const ctrlKeyDef = (_options$keyboardMap$ = options.keyboardMap.find((k2) => k2.key === "Control")) != null ? _options$keyboardMap$ : {
              key: "Control",
              code: "Control"
            };
            _dom.fireEvent.keyDown(element, (0, _getEventProps.getKeyEventProps)(ctrlKeyDef, state));
          }
        }
      ];
      exports.preKeydownBehavior = preKeydownBehavior;
      var keydownBehavior = [{
        matches: (keyDef) => keyDef.key === "CapsLock",
        handle: (keyDef, element, options, state) => {
          state.modifiers.caps = !state.modifiers.caps;
        }
      }, {
        matches: (keyDef, element) => keyDef.key === "Backspace" && (0, _utils.isEditable)(element) && !(0, _utils.isCursorAtStart)(element),
        handle: (keyDef, element, options, state) => {
          const {
            newValue,
            newSelectionStart
          } = (0, _utils.calculateNewValue)("", element, state.carryValue, void 0, "backward");
          (0, _shared.fireInputEvent)(element, {
            newValue,
            newSelectionStart,
            eventOverrides: {
              inputType: "deleteContentBackward"
            }
          });
          (0, _shared.carryValue)(element, state, newValue);
        }
      }];
      exports.keydownBehavior = keydownBehavior;
      var keypressBehavior = [{
        matches: (keyDef, element) => keyDef.key === "Enter" && (0, _utils.isElementType)(element, "input") && ["checkbox", "radio"].includes(element.type),
        handle: (keyDef, element) => {
          const form = element.form;
          if ((0, _utils.hasFormSubmit)(form)) {
            _dom.fireEvent.submit(form);
          }
        }
      }, {
        matches: (keyDef, element) => keyDef.key === "Enter" && ((0, _utils.isClickableInput)(element) || (0, _utils.isElementType)(element, "a") && Boolean(element.href)),
        handle: (keyDef, element, options, state) => {
          _dom.fireEvent.click(element, (0, _getEventProps.getMouseEventProps)(state));
        }
      }, {
        matches: (keyDef, element) => keyDef.key === "Enter" && (0, _utils.isElementType)(element, "input"),
        handle: (keyDef, element) => {
          const form = element.form;
          if (form && (form.querySelectorAll("input").length === 1 || (0, _utils.hasFormSubmit)(form))) {
            _dom.fireEvent.submit(form);
          }
        }
      }];
      exports.keypressBehavior = keypressBehavior;
      var preKeyupBehavior = [
        ...Object.entries(modifierKeys).map(([key, modKey]) => ({
          matches: (keyDef) => keyDef.key === key,
          handle: (keyDef, element, options, state) => {
            state.modifiers[modKey] = false;
          }
        }))
      ];
      exports.preKeyupBehavior = preKeyupBehavior;
      var keyupBehavior = [{
        matches: (keyDef, element) => keyDef.key === " " && (0, _utils.isClickableInput)(element),
        handle: (keyDef, element, options, state) => {
          _dom.fireEvent.click(element, (0, _getEventProps.getMouseEventProps)(state));
        }
      }];
      exports.keyupBehavior = keyupBehavior;
      var postKeyupBehavior = [
        {
          matches: (keyDef) => keyDef.key === "AltGraph",
          handle: (keyDef, element, options, state) => {
            var _options$keyboardMap$2;
            const ctrlKeyDef = (_options$keyboardMap$2 = options.keyboardMap.find((k2) => k2.key === "Control")) != null ? _options$keyboardMap$2 : {
              key: "Control",
              code: "Control"
            };
            _dom.fireEvent.keyUp(element, (0, _getEventProps.getKeyEventProps)(ctrlKeyDef, state));
          }
        }
      ];
      exports.postKeyupBehavior = postKeyupBehavior;
    }
  });

  // node_modules/@testing-library/user-event/dist/keyboard/plugins/index.js
  var require_plugins = __commonJS({
    "node_modules/@testing-library/user-event/dist/keyboard/plugins/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.replaceBehavior = exports.preKeyupBehavior = exports.preKeydownBehavior = exports.postKeyupBehavior = exports.keyupBehavior = exports.keypressBehavior = exports.keydownBehavior = void 0;
      var _utils = require_utils();
      var arrowKeys = _interopRequireWildcard(require_arrow());
      var controlKeys = _interopRequireWildcard(require_control());
      var characterKeys = _interopRequireWildcard(require_character());
      var functionalKeys = _interopRequireWildcard(require_functional());
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = new WeakMap();
        var cacheNodeInterop = new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return {default: obj};
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      var replaceBehavior = [{
        matches: (keyDef, element) => keyDef.key === "selectall" && (0, _utils.isElementType)(element, ["input", "textarea"]),
        handle: (keyDef, element, options, state) => {
          var _state$carryValue;
          (0, _utils.setSelectionRange)(element, 0, ((_state$carryValue = state.carryValue) != null ? _state$carryValue : element.value).length);
        }
      }];
      exports.replaceBehavior = replaceBehavior;
      var preKeydownBehavior = [...functionalKeys.preKeydownBehavior];
      exports.preKeydownBehavior = preKeydownBehavior;
      var keydownBehavior = [...arrowKeys.keydownBehavior, ...controlKeys.keydownBehavior, ...functionalKeys.keydownBehavior];
      exports.keydownBehavior = keydownBehavior;
      var keypressBehavior = [...functionalKeys.keypressBehavior, ...characterKeys.keypressBehavior];
      exports.keypressBehavior = keypressBehavior;
      var preKeyupBehavior = [...functionalKeys.preKeyupBehavior];
      exports.preKeyupBehavior = preKeyupBehavior;
      var keyupBehavior = [...functionalKeys.keyupBehavior];
      exports.keyupBehavior = keyupBehavior;
      var postKeyupBehavior = [...functionalKeys.postKeyupBehavior];
      exports.postKeyupBehavior = postKeyupBehavior;
    }
  });

  // node_modules/@testing-library/user-event/dist/keyboard/keyboardImplementation.js
  var require_keyboardImplementation = __commonJS({
    "node_modules/@testing-library/user-event/dist/keyboard/keyboardImplementation.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.keyboardImplementation = keyboardImplementation;
      exports.releaseAllKeys = releaseAllKeys;
      var _dom = require_dist2();
      var _utils = require_utils();
      var _getNextKeyDef = require_getNextKeyDef();
      var plugins = _interopRequireWildcard(require_plugins());
      var _getEventProps = require_getEventProps();
      function _getRequireWildcardCache(nodeInterop) {
        if (typeof WeakMap !== "function")
          return null;
        var cacheBabelInterop = new WeakMap();
        var cacheNodeInterop = new WeakMap();
        return (_getRequireWildcardCache = function(nodeInterop2) {
          return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
        })(nodeInterop);
      }
      function _interopRequireWildcard(obj, nodeInterop) {
        if (!nodeInterop && obj && obj.__esModule) {
          return obj;
        }
        if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
          return {default: obj};
        }
        var cache = _getRequireWildcardCache(nodeInterop);
        if (cache && cache.has(obj)) {
          return cache.get(obj);
        }
        var newObj = {};
        var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var key in obj) {
          if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        if (cache) {
          cache.set(obj, newObj);
        }
        return newObj;
      }
      async function keyboardImplementation(text, options, state) {
        var _state$repeatKey;
        const {
          document: document2
        } = options;
        const getCurrentElement = () => getActive(document2);
        const {
          keyDef,
          consumedLength,
          releasePrevious,
          releaseSelf,
          repeat
        } = (_state$repeatKey = state.repeatKey) != null ? _state$repeatKey : (0, _getNextKeyDef.getNextKeyDef)(text, options);
        const replace = applyPlugins(plugins.replaceBehavior, keyDef, getCurrentElement(), options, state);
        if (!replace) {
          const pressed = state.pressed.find((p) => p.keyDef === keyDef);
          if (pressed && !state.repeatKey) {
            keyup(keyDef, getCurrentElement, options, state, pressed.unpreventedDefault);
          }
          if (!releasePrevious) {
            const unpreventedDefault = keydown(keyDef, getCurrentElement, options, state);
            if (unpreventedDefault && hasKeyPress(keyDef, state)) {
              keypress(keyDef, getCurrentElement, options, state);
            }
            if (releaseSelf && repeat <= 1) {
              keyup(keyDef, getCurrentElement, options, state, unpreventedDefault);
            }
          }
        }
        if (repeat > 1) {
          state.repeatKey = {
            consumedLength: 0,
            keyDef,
            releasePrevious,
            releaseSelf,
            repeat: repeat - 1
          };
        } else {
          delete state.repeatKey;
        }
        if (text.length > consumedLength || repeat > 1) {
          if (options.delay > 0) {
            await (0, _utils.wait)(options.delay);
          }
          return keyboardImplementation(text.slice(consumedLength), options, state);
        }
        return void 0;
      }
      function getActive(document2) {
        var _getActiveElement;
        return (_getActiveElement = (0, _utils.getActiveElement)(document2)) != null ? _getActiveElement : document2.body;
      }
      function releaseAllKeys(options, state) {
        const getCurrentElement = () => getActive(options.document);
        for (const k2 of state.pressed) {
          keyup(k2.keyDef, getCurrentElement, options, state, k2.unpreventedDefault);
        }
      }
      function keydown(keyDef, getCurrentElement, options, state) {
        const element = getCurrentElement();
        if (element !== state.activeElement) {
          state.carryValue = void 0;
          state.carryChar = "";
        }
        state.activeElement = element;
        applyPlugins(plugins.preKeydownBehavior, keyDef, element, options, state);
        const unpreventedDefault = _dom.fireEvent.keyDown(element, (0, _getEventProps.getKeyEventProps)(keyDef, state));
        state.pressed.push({
          keyDef,
          unpreventedDefault
        });
        if (unpreventedDefault) {
          applyPlugins(plugins.keydownBehavior, keyDef, getCurrentElement(), options, state);
        }
        return unpreventedDefault;
      }
      function keypress(keyDef, getCurrentElement, options, state) {
        const element = getCurrentElement();
        const unpreventedDefault = _dom.fireEvent.keyPress(element, (0, _getEventProps.getKeyEventProps)(keyDef, state));
        if (unpreventedDefault) {
          applyPlugins(plugins.keypressBehavior, keyDef, getCurrentElement(), options, state);
        }
      }
      function keyup(keyDef, getCurrentElement, options, state, unprevented) {
        const element = getCurrentElement();
        applyPlugins(plugins.preKeyupBehavior, keyDef, element, options, state);
        const unpreventedDefault = _dom.fireEvent.keyUp(element, (0, _getEventProps.getKeyEventProps)(keyDef, state));
        if (unprevented && unpreventedDefault) {
          applyPlugins(plugins.keyupBehavior, keyDef, getCurrentElement(), options, state);
        }
        state.pressed = state.pressed.filter((k2) => k2.keyDef !== keyDef);
        applyPlugins(plugins.postKeyupBehavior, keyDef, element, options, state);
      }
      function applyPlugins(pluginCollection, keyDef, element, options, state) {
        const plugin = pluginCollection.find((p) => p.matches(keyDef, element, options, state));
        if (plugin) {
          plugin.handle(keyDef, element, options, state);
        }
        return !!plugin;
      }
      function hasKeyPress(keyDef, state) {
        var _keyDef$key;
        return (((_keyDef$key = keyDef.key) == null ? void 0 : _keyDef$key.length) === 1 || keyDef.key === "Enter") && !state.modifiers.ctrl && !state.modifiers.alt;
      }
    }
  });

  // node_modules/@testing-library/user-event/dist/keyboard/types.js
  var require_types = __commonJS({
    "node_modules/@testing-library/user-event/dist/keyboard/types.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.DOM_KEY_LOCATION = void 0;
      var DOM_KEY_LOCATION;
      exports.DOM_KEY_LOCATION = DOM_KEY_LOCATION;
      (function(DOM_KEY_LOCATION2) {
        DOM_KEY_LOCATION2[DOM_KEY_LOCATION2["STANDARD"] = 0] = "STANDARD";
        DOM_KEY_LOCATION2[DOM_KEY_LOCATION2["LEFT"] = 1] = "LEFT";
        DOM_KEY_LOCATION2[DOM_KEY_LOCATION2["RIGHT"] = 2] = "RIGHT";
        DOM_KEY_LOCATION2[DOM_KEY_LOCATION2["NUMPAD"] = 3] = "NUMPAD";
      })(DOM_KEY_LOCATION || (exports.DOM_KEY_LOCATION = DOM_KEY_LOCATION = {}));
    }
  });

  // node_modules/@testing-library/user-event/dist/keyboard/keyMap.js
  var require_keyMap = __commonJS({
    "node_modules/@testing-library/user-event/dist/keyboard/keyMap.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.defaultKeyMap = void 0;
      var _types = require_types();
      var defaultKeyMap = [
        ..."0123456789".split("").map((c2) => ({
          code: `Digit${c2}`,
          key: c2
        })),
        ...")!@#$%^&*(".split("").map((c2, i2) => ({
          code: `Digit${i2}`,
          key: c2,
          shiftKey: true
        })),
        ..."abcdefghijklmnopqrstuvwxyz".split("").map((c2) => ({
          code: `Key${c2.toUpperCase()}`,
          key: c2
        })),
        ..."ABCDEFGHIJKLMNOPQRSTUVWXYZ".split("").map((c2) => ({
          code: `Key${c2}`,
          key: c2,
          shiftKey: true
        })),
        {
          code: "Space",
          key: " "
        },
        {
          code: "AltLeft",
          key: "Alt",
          location: _types.DOM_KEY_LOCATION.LEFT,
          keyCode: 18
        },
        {
          code: "AltRight",
          key: "Alt",
          location: _types.DOM_KEY_LOCATION.RIGHT,
          keyCode: 18
        },
        {
          code: "ShiftLeft",
          key: "Shift",
          location: _types.DOM_KEY_LOCATION.LEFT,
          keyCode: 16
        },
        {
          code: "ShiftRight",
          key: "Shift",
          location: _types.DOM_KEY_LOCATION.RIGHT,
          keyCode: 16
        },
        {
          code: "ControlLeft",
          key: "Control",
          location: _types.DOM_KEY_LOCATION.LEFT,
          keyCode: 17
        },
        {
          code: "ControlRight",
          key: "Control",
          location: _types.DOM_KEY_LOCATION.RIGHT,
          keyCode: 17
        },
        {
          code: "MetaLeft",
          key: "Meta",
          location: _types.DOM_KEY_LOCATION.LEFT,
          keyCode: 93
        },
        {
          code: "MetaRight",
          key: "Meta",
          location: _types.DOM_KEY_LOCATION.RIGHT,
          keyCode: 93
        },
        {
          code: "OSLeft",
          key: "OS",
          location: _types.DOM_KEY_LOCATION.LEFT,
          keyCode: 91
        },
        {
          code: "OSRight",
          key: "OS",
          location: _types.DOM_KEY_LOCATION.RIGHT,
          keyCode: 91
        },
        {
          code: "CapsLock",
          key: "CapsLock",
          keyCode: 20
        },
        {
          code: "Backspace",
          key: "Backspace",
          keyCode: 8
        },
        {
          code: "Enter",
          key: "Enter",
          keyCode: 13
        },
        {
          code: "Escape",
          key: "Escape",
          keyCode: 27
        },
        {
          code: "ArrowUp",
          key: "ArrowUp",
          keyCode: 38
        },
        {
          code: "ArrowDown",
          key: "ArrowDown",
          keyCode: 40
        },
        {
          code: "ArrowLeft",
          key: "ArrowLeft",
          keyCode: 37
        },
        {
          code: "ArrowRight",
          key: "ArrowRight",
          keyCode: 39
        },
        {
          code: "Home",
          key: "Home",
          keyCode: 36
        },
        {
          code: "End",
          key: "End",
          keyCode: 35
        },
        {
          code: "Delete",
          key: "Delete",
          keyCode: 46
        },
        {
          code: "PageUp",
          key: "PageUp",
          keyCode: 33
        },
        {
          code: "PageDown",
          key: "PageDown",
          keyCode: 34
        }
      ];
      exports.defaultKeyMap = defaultKeyMap;
    }
  });

  // node_modules/@testing-library/user-event/dist/keyboard/specialCharMap.js
  var require_specialCharMap = __commonJS({
    "node_modules/@testing-library/user-event/dist/keyboard/specialCharMap.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.specialCharMap = void 0;
      var specialCharMap = {
        arrowLeft: "{arrowleft}",
        arrowRight: "{arrowright}",
        arrowDown: "{arrowdown}",
        arrowUp: "{arrowup}",
        enter: "{enter}",
        escape: "{esc}",
        delete: "{del}",
        backspace: "{backspace}",
        home: "{home}",
        end: "{end}",
        selectAll: "{selectall}",
        space: "{space}",
        whitespace: " ",
        pageUp: "{pageUp}",
        pageDown: "{pageDown}"
      };
      exports.specialCharMap = specialCharMap;
    }
  });

  // node_modules/@testing-library/user-event/dist/keyboard/index.js
  var require_keyboard = __commonJS({
    "node_modules/@testing-library/user-event/dist/keyboard/index.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.keyboard = keyboard2;
      exports.keyboardImplementationWrapper = keyboardImplementationWrapper;
      Object.defineProperty(exports, "specialCharMap", {
        enumerable: true,
        get: function() {
          return _specialCharMap.specialCharMap;
        }
      });
      var _dom = require_dist2();
      var _keyboardImplementation = require_keyboardImplementation();
      var _keyMap = require_keyMap();
      var _specialCharMap = require_specialCharMap();
      function keyboard2(text, options) {
        var _options$delay;
        const {
          promise,
          state
        } = keyboardImplementationWrapper(text, options);
        if (((_options$delay = options == null ? void 0 : options.delay) != null ? _options$delay : 0) > 0) {
          return (0, _dom.getConfig)().asyncWrapper(() => promise.then(() => state));
        } else {
          promise.catch(console.error);
          return state;
        }
      }
      function keyboardImplementationWrapper(text, config = {}) {
        const {
          keyboardState: state = createKeyboardState(),
          delay = 0,
          document: doc = document,
          autoModify = false,
          keyboardMap = _keyMap.defaultKeyMap
        } = config;
        const options = {
          delay,
          document: doc,
          autoModify,
          keyboardMap
        };
        return {
          promise: (0, _keyboardImplementation.keyboardImplementation)(text, options, state),
          state,
          releaseAllKeys: () => (0, _keyboardImplementation.releaseAllKeys)(options, state)
        };
      }
      function createKeyboardState() {
        return {
          activeElement: null,
          pressed: [],
          carryChar: "",
          modifiers: {
            alt: false,
            caps: false,
            ctrl: false,
            meta: false,
            shift: false
          }
        };
      }
    }
  });

  // src/preload.ts
  window["global"] = window["global"] || globalThis;

  // src/utils.ts
  var import_jquery = __toModule(require_jquery());
  require_jquery_confirm_min()(window, import_jquery.default);
  window.vscode = window.acquireVsCodeApi && window.acquireVsCodeApi();
  window.global = window;
  function confirm(msg, onOk) {
    import_jquery.default.confirm({
      title: "",
      animation: "top",
      closeAnimation: "top",
      animateFromElement: false,
      boxWidth: "300px",
      useBootstrap: false,
      content: msg,
      buttons: {
        cancel: {
          text: "Cancel"
        },
        confirm: {
          text: "Confirm",
          action: onOk
        }
      }
    });
  }
  function fixDarkTheme() {
    let $ct = document.querySelector('[data-type="content-theme"]');
    $ct.nextElementSibling.addEventListener("click", (e2) => {
      if (e2.target.tagName !== "BUTTON")
        return;
      let type = e2.target.getAttribute("data-type");
      if (type === "dark") {
        vditor.setTheme(type);
      } else {
        vditor.setTheme("classic");
      }
    });
  }
  function fixPanelHover() {
    (0, import_jquery.default)(".vditor-panel").each((i2, e2) => {
      let timer;
      (0, import_jquery.default)(e2).on("mouseenter", (e3) => {
        timer && clearTimeout(timer);
        e3.currentTarget.classList.add("vditor-panel_hover");
      }).on("mouseleave", (e3) => {
        let el = e3.currentTarget;
        timer = setTimeout(() => {
          el.classList.remove("vditor-panel_hover");
        }, 2e3);
      });
    });
  }
  var fileToBase64 = async (file) => {
    return new Promise((res, rej) => {
      const reader = new FileReader();
      reader.onload = function(evt) {
        res(evt.target.result.toString().split(",")[1]);
      };
      reader.onerror = rej;
      reader.readAsDataURL(file);
    });
  };
  function saveVditorOptions() {
    let vditorOptions = {
      theme: vditor.vditor.options.theme,
      mode: vditor.vditor.currentMode,
      preview: vditor.vditor.options.preview
    };
    vscode.postMessage({
      command: "save-options",
      options: vditorOptions
    });
  }
  function handleToolbarClick() {
    (0, import_jquery.default)(".vditor-toolbar .vditor-panel--left button, .vditor-toolbar .vditor-panel--arrow button").on("click", (e2) => {
      setTimeout(() => {
        saveVditorOptions();
      }, 500);
    });
  }
  function fixLinkClick() {
    const openLink = (url, wikilink) => {
      vscode.postMessage({command: "open-link", href: url, wikilink});
    };
    document.addEventListener("click", (e2) => {
      let el = e2.target;
      console.log("in fix link click");
      console.dir(el);
      if (el.tagName === "A") {
        openLink(el.href, false);
      } else if (el.tagName === "SPAN") {
        openLink(el.textContent, true);
      }
    });
    window.open = (url, ...args) => {
      console.log("fixlinkclick window.open");
      openLink(url);
      return window;
    };
  }
  function fixCut() {
    let _exec = document.execCommand.bind(document);
    document.execCommand = (cmd, ...args) => {
      if (cmd === "delete") {
        setTimeout(() => {
          return _exec(cmd, ...args);
        });
      } else {
        return _exec(cmd, ...args);
      }
    };
  }

  // src/main.ts
  var import_lodash = __toModule(require_lodash());
  var import_vditor = __toModule(require_index_min());

  // node_modules/date-fns/esm/_lib/toInteger/index.js
  function toInteger(dirtyNumber) {
    if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {
      return NaN;
    }
    var number = Number(dirtyNumber);
    if (isNaN(number)) {
      return number;
    }
    return number < 0 ? Math.ceil(number) : Math.floor(number);
  }

  // node_modules/date-fns/esm/_lib/requiredArgs/index.js
  function requiredArgs(required, args) {
    if (args.length < required) {
      throw new TypeError(required + " argument" + (required > 1 ? "s" : "") + " required, but only " + args.length + " present");
    }
  }

  // node_modules/date-fns/esm/toDate/index.js
  function _typeof(obj) {
    "@babel/helpers - typeof";
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof = function _typeof3(obj2) {
        return typeof obj2;
      };
    } else {
      _typeof = function _typeof3(obj2) {
        return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      };
    }
    return _typeof(obj);
  }
  function toDate(argument) {
    requiredArgs(1, arguments);
    var argStr = Object.prototype.toString.call(argument);
    if (argument instanceof Date || _typeof(argument) === "object" && argStr === "[object Date]") {
      return new Date(argument.getTime());
    } else if (typeof argument === "number" || argStr === "[object Number]") {
      return new Date(argument);
    } else {
      if ((typeof argument === "string" || argStr === "[object String]") && typeof console !== "undefined") {
        console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments");
        console.warn(new Error().stack);
      }
      return new Date(NaN);
    }
  }

  // node_modules/date-fns/esm/addMilliseconds/index.js
  function addMilliseconds(dirtyDate, dirtyAmount) {
    requiredArgs(2, arguments);
    var timestamp = toDate(dirtyDate).getTime();
    var amount = toInteger(dirtyAmount);
    return new Date(timestamp + amount);
  }

  // node_modules/date-fns/esm/_lib/defaultOptions/index.js
  var defaultOptions = {};
  function getDefaultOptions() {
    return defaultOptions;
  }

  // node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js
  function getTimezoneOffsetInMilliseconds(date) {
    var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));
    utcDate.setUTCFullYear(date.getFullYear());
    return date.getTime() - utcDate.getTime();
  }

  // node_modules/date-fns/esm/isDate/index.js
  function _typeof2(obj) {
    "@babel/helpers - typeof";
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof2 = function _typeof3(obj2) {
        return typeof obj2;
      };
    } else {
      _typeof2 = function _typeof3(obj2) {
        return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      };
    }
    return _typeof2(obj);
  }
  function isDate(value) {
    requiredArgs(1, arguments);
    return value instanceof Date || _typeof2(value) === "object" && Object.prototype.toString.call(value) === "[object Date]";
  }

  // node_modules/date-fns/esm/isValid/index.js
  function isValid(dirtyDate) {
    requiredArgs(1, arguments);
    if (!isDate(dirtyDate) && typeof dirtyDate !== "number") {
      return false;
    }
    var date = toDate(dirtyDate);
    return !isNaN(Number(date));
  }

  // node_modules/date-fns/esm/subMilliseconds/index.js
  function subMilliseconds(dirtyDate, dirtyAmount) {
    requiredArgs(2, arguments);
    var amount = toInteger(dirtyAmount);
    return addMilliseconds(dirtyDate, -amount);
  }

  // node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js
  var MILLISECONDS_IN_DAY = 864e5;
  function getUTCDayOfYear(dirtyDate) {
    requiredArgs(1, arguments);
    var date = toDate(dirtyDate);
    var timestamp = date.getTime();
    date.setUTCMonth(0, 1);
    date.setUTCHours(0, 0, 0, 0);
    var startOfYearTimestamp = date.getTime();
    var difference = timestamp - startOfYearTimestamp;
    return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;
  }

  // node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js
  function startOfUTCISOWeek(dirtyDate) {
    requiredArgs(1, arguments);
    var weekStartsOn = 1;
    var date = toDate(dirtyDate);
    var day = date.getUTCDay();
    var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
    date.setUTCDate(date.getUTCDate() - diff);
    date.setUTCHours(0, 0, 0, 0);
    return date;
  }

  // node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js
  function getUTCISOWeekYear(dirtyDate) {
    requiredArgs(1, arguments);
    var date = toDate(dirtyDate);
    var year = date.getUTCFullYear();
    var fourthOfJanuaryOfNextYear = new Date(0);
    fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);
    fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);
    var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);
    var fourthOfJanuaryOfThisYear = new Date(0);
    fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);
    fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);
    var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);
    if (date.getTime() >= startOfNextYear.getTime()) {
      return year + 1;
    } else if (date.getTime() >= startOfThisYear.getTime()) {
      return year;
    } else {
      return year - 1;
    }
  }

  // node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js
  function startOfUTCISOWeekYear(dirtyDate) {
    requiredArgs(1, arguments);
    var year = getUTCISOWeekYear(dirtyDate);
    var fourthOfJanuary = new Date(0);
    fourthOfJanuary.setUTCFullYear(year, 0, 4);
    fourthOfJanuary.setUTCHours(0, 0, 0, 0);
    var date = startOfUTCISOWeek(fourthOfJanuary);
    return date;
  }

  // node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js
  var MILLISECONDS_IN_WEEK = 6048e5;
  function getUTCISOWeek(dirtyDate) {
    requiredArgs(1, arguments);
    var date = toDate(dirtyDate);
    var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime();
    return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
  }

  // node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js
  function startOfUTCWeek(dirtyDate, options) {
    var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
    requiredArgs(1, arguments);
    var defaultOptions2 = getDefaultOptions();
    var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions2.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions2.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);
    if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
      throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
    }
    var date = toDate(dirtyDate);
    var day = date.getUTCDay();
    var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
    date.setUTCDate(date.getUTCDate() - diff);
    date.setUTCHours(0, 0, 0, 0);
    return date;
  }

  // node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js
  function getUTCWeekYear(dirtyDate, options) {
    var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
    requiredArgs(1, arguments);
    var date = toDate(dirtyDate);
    var year = date.getUTCFullYear();
    var defaultOptions2 = getDefaultOptions();
    var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions2.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions2.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);
    if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
      throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
    }
    var firstWeekOfNextYear = new Date(0);
    firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);
    firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);
    var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, options);
    var firstWeekOfThisYear = new Date(0);
    firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);
    firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);
    var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, options);
    if (date.getTime() >= startOfNextYear.getTime()) {
      return year + 1;
    } else if (date.getTime() >= startOfThisYear.getTime()) {
      return year;
    } else {
      return year - 1;
    }
  }

  // node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js
  function startOfUTCWeekYear(dirtyDate, options) {
    var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
    requiredArgs(1, arguments);
    var defaultOptions2 = getDefaultOptions();
    var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions2.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions2.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);
    var year = getUTCWeekYear(dirtyDate, options);
    var firstWeek = new Date(0);
    firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);
    firstWeek.setUTCHours(0, 0, 0, 0);
    var date = startOfUTCWeek(firstWeek, options);
    return date;
  }

  // node_modules/date-fns/esm/_lib/getUTCWeek/index.js
  var MILLISECONDS_IN_WEEK2 = 6048e5;
  function getUTCWeek(dirtyDate, options) {
    requiredArgs(1, arguments);
    var date = toDate(dirtyDate);
    var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime();
    return Math.round(diff / MILLISECONDS_IN_WEEK2) + 1;
  }

  // node_modules/date-fns/esm/_lib/addLeadingZeros/index.js
  function addLeadingZeros(number, targetLength) {
    var sign = number < 0 ? "-" : "";
    var output = Math.abs(number).toString();
    while (output.length < targetLength) {
      output = "0" + output;
    }
    return sign + output;
  }

  // node_modules/date-fns/esm/_lib/format/lightFormatters/index.js
  var formatters = {
    y: function y(date, token) {
      var signedYear = date.getUTCFullYear();
      var year = signedYear > 0 ? signedYear : 1 - signedYear;
      return addLeadingZeros(token === "yy" ? year % 100 : year, token.length);
    },
    M: function M(date, token) {
      var month = date.getUTCMonth();
      return token === "M" ? String(month + 1) : addLeadingZeros(month + 1, 2);
    },
    d: function d(date, token) {
      return addLeadingZeros(date.getUTCDate(), token.length);
    },
    a: function a(date, token) {
      var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? "pm" : "am";
      switch (token) {
        case "a":
        case "aa":
          return dayPeriodEnumValue.toUpperCase();
        case "aaa":
          return dayPeriodEnumValue;
        case "aaaaa":
          return dayPeriodEnumValue[0];
        case "aaaa":
        default:
          return dayPeriodEnumValue === "am" ? "a.m." : "p.m.";
      }
    },
    h: function h(date, token) {
      return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);
    },
    H: function H(date, token) {
      return addLeadingZeros(date.getUTCHours(), token.length);
    },
    m: function m(date, token) {
      return addLeadingZeros(date.getUTCMinutes(), token.length);
    },
    s: function s(date, token) {
      return addLeadingZeros(date.getUTCSeconds(), token.length);
    },
    S: function S(date, token) {
      var numberOfDigits = token.length;
      var milliseconds = date.getUTCMilliseconds();
      var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));
      return addLeadingZeros(fractionalSeconds, token.length);
    }
  };
  var lightFormatters_default = formatters;

  // node_modules/date-fns/esm/_lib/format/formatters/index.js
  var dayPeriodEnum = {
    am: "am",
    pm: "pm",
    midnight: "midnight",
    noon: "noon",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night"
  };
  var formatters2 = {
    G: function G(date, token, localize2) {
      var era = date.getUTCFullYear() > 0 ? 1 : 0;
      switch (token) {
        case "G":
        case "GG":
        case "GGG":
          return localize2.era(era, {
            width: "abbreviated"
          });
        case "GGGGG":
          return localize2.era(era, {
            width: "narrow"
          });
        case "GGGG":
        default:
          return localize2.era(era, {
            width: "wide"
          });
      }
    },
    y: function y2(date, token, localize2) {
      if (token === "yo") {
        var signedYear = date.getUTCFullYear();
        var year = signedYear > 0 ? signedYear : 1 - signedYear;
        return localize2.ordinalNumber(year, {
          unit: "year"
        });
      }
      return lightFormatters_default.y(date, token);
    },
    Y: function Y(date, token, localize2, options) {
      var signedWeekYear = getUTCWeekYear(date, options);
      var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;
      if (token === "YY") {
        var twoDigitYear = weekYear % 100;
        return addLeadingZeros(twoDigitYear, 2);
      }
      if (token === "Yo") {
        return localize2.ordinalNumber(weekYear, {
          unit: "year"
        });
      }
      return addLeadingZeros(weekYear, token.length);
    },
    R: function R(date, token) {
      var isoWeekYear = getUTCISOWeekYear(date);
      return addLeadingZeros(isoWeekYear, token.length);
    },
    u: function u(date, token) {
      var year = date.getUTCFullYear();
      return addLeadingZeros(year, token.length);
    },
    Q: function Q(date, token, localize2) {
      var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
      switch (token) {
        case "Q":
          return String(quarter);
        case "QQ":
          return addLeadingZeros(quarter, 2);
        case "Qo":
          return localize2.ordinalNumber(quarter, {
            unit: "quarter"
          });
        case "QQQ":
          return localize2.quarter(quarter, {
            width: "abbreviated",
            context: "formatting"
          });
        case "QQQQQ":
          return localize2.quarter(quarter, {
            width: "narrow",
            context: "formatting"
          });
        case "QQQQ":
        default:
          return localize2.quarter(quarter, {
            width: "wide",
            context: "formatting"
          });
      }
    },
    q: function q(date, token, localize2) {
      var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
      switch (token) {
        case "q":
          return String(quarter);
        case "qq":
          return addLeadingZeros(quarter, 2);
        case "qo":
          return localize2.ordinalNumber(quarter, {
            unit: "quarter"
          });
        case "qqq":
          return localize2.quarter(quarter, {
            width: "abbreviated",
            context: "standalone"
          });
        case "qqqqq":
          return localize2.quarter(quarter, {
            width: "narrow",
            context: "standalone"
          });
        case "qqqq":
        default:
          return localize2.quarter(quarter, {
            width: "wide",
            context: "standalone"
          });
      }
    },
    M: function M2(date, token, localize2) {
      var month = date.getUTCMonth();
      switch (token) {
        case "M":
        case "MM":
          return lightFormatters_default.M(date, token);
        case "Mo":
          return localize2.ordinalNumber(month + 1, {
            unit: "month"
          });
        case "MMM":
          return localize2.month(month, {
            width: "abbreviated",
            context: "formatting"
          });
        case "MMMMM":
          return localize2.month(month, {
            width: "narrow",
            context: "formatting"
          });
        case "MMMM":
        default:
          return localize2.month(month, {
            width: "wide",
            context: "formatting"
          });
      }
    },
    L: function L(date, token, localize2) {
      var month = date.getUTCMonth();
      switch (token) {
        case "L":
          return String(month + 1);
        case "LL":
          return addLeadingZeros(month + 1, 2);
        case "Lo":
          return localize2.ordinalNumber(month + 1, {
            unit: "month"
          });
        case "LLL":
          return localize2.month(month, {
            width: "abbreviated",
            context: "standalone"
          });
        case "LLLLL":
          return localize2.month(month, {
            width: "narrow",
            context: "standalone"
          });
        case "LLLL":
        default:
          return localize2.month(month, {
            width: "wide",
            context: "standalone"
          });
      }
    },
    w: function w(date, token, localize2, options) {
      var week = getUTCWeek(date, options);
      if (token === "wo") {
        return localize2.ordinalNumber(week, {
          unit: "week"
        });
      }
      return addLeadingZeros(week, token.length);
    },
    I: function I(date, token, localize2) {
      var isoWeek = getUTCISOWeek(date);
      if (token === "Io") {
        return localize2.ordinalNumber(isoWeek, {
          unit: "week"
        });
      }
      return addLeadingZeros(isoWeek, token.length);
    },
    d: function d2(date, token, localize2) {
      if (token === "do") {
        return localize2.ordinalNumber(date.getUTCDate(), {
          unit: "date"
        });
      }
      return lightFormatters_default.d(date, token);
    },
    D: function D(date, token, localize2) {
      var dayOfYear = getUTCDayOfYear(date);
      if (token === "Do") {
        return localize2.ordinalNumber(dayOfYear, {
          unit: "dayOfYear"
        });
      }
      return addLeadingZeros(dayOfYear, token.length);
    },
    E: function E(date, token, localize2) {
      var dayOfWeek = date.getUTCDay();
      switch (token) {
        case "E":
        case "EE":
        case "EEE":
          return localize2.day(dayOfWeek, {
            width: "abbreviated",
            context: "formatting"
          });
        case "EEEEE":
          return localize2.day(dayOfWeek, {
            width: "narrow",
            context: "formatting"
          });
        case "EEEEEE":
          return localize2.day(dayOfWeek, {
            width: "short",
            context: "formatting"
          });
        case "EEEE":
        default:
          return localize2.day(dayOfWeek, {
            width: "wide",
            context: "formatting"
          });
      }
    },
    e: function e(date, token, localize2, options) {
      var dayOfWeek = date.getUTCDay();
      var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;
      switch (token) {
        case "e":
          return String(localDayOfWeek);
        case "ee":
          return addLeadingZeros(localDayOfWeek, 2);
        case "eo":
          return localize2.ordinalNumber(localDayOfWeek, {
            unit: "day"
          });
        case "eee":
          return localize2.day(dayOfWeek, {
            width: "abbreviated",
            context: "formatting"
          });
        case "eeeee":
          return localize2.day(dayOfWeek, {
            width: "narrow",
            context: "formatting"
          });
        case "eeeeee":
          return localize2.day(dayOfWeek, {
            width: "short",
            context: "formatting"
          });
        case "eeee":
        default:
          return localize2.day(dayOfWeek, {
            width: "wide",
            context: "formatting"
          });
      }
    },
    c: function c(date, token, localize2, options) {
      var dayOfWeek = date.getUTCDay();
      var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;
      switch (token) {
        case "c":
          return String(localDayOfWeek);
        case "cc":
          return addLeadingZeros(localDayOfWeek, token.length);
        case "co":
          return localize2.ordinalNumber(localDayOfWeek, {
            unit: "day"
          });
        case "ccc":
          return localize2.day(dayOfWeek, {
            width: "abbreviated",
            context: "standalone"
          });
        case "ccccc":
          return localize2.day(dayOfWeek, {
            width: "narrow",
            context: "standalone"
          });
        case "cccccc":
          return localize2.day(dayOfWeek, {
            width: "short",
            context: "standalone"
          });
        case "cccc":
        default:
          return localize2.day(dayOfWeek, {
            width: "wide",
            context: "standalone"
          });
      }
    },
    i: function i(date, token, localize2) {
      var dayOfWeek = date.getUTCDay();
      var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;
      switch (token) {
        case "i":
          return String(isoDayOfWeek);
        case "ii":
          return addLeadingZeros(isoDayOfWeek, token.length);
        case "io":
          return localize2.ordinalNumber(isoDayOfWeek, {
            unit: "day"
          });
        case "iii":
          return localize2.day(dayOfWeek, {
            width: "abbreviated",
            context: "formatting"
          });
        case "iiiii":
          return localize2.day(dayOfWeek, {
            width: "narrow",
            context: "formatting"
          });
        case "iiiiii":
          return localize2.day(dayOfWeek, {
            width: "short",
            context: "formatting"
          });
        case "iiii":
        default:
          return localize2.day(dayOfWeek, {
            width: "wide",
            context: "formatting"
          });
      }
    },
    a: function a2(date, token, localize2) {
      var hours = date.getUTCHours();
      var dayPeriodEnumValue = hours / 12 >= 1 ? "pm" : "am";
      switch (token) {
        case "a":
        case "aa":
          return localize2.dayPeriod(dayPeriodEnumValue, {
            width: "abbreviated",
            context: "formatting"
          });
        case "aaa":
          return localize2.dayPeriod(dayPeriodEnumValue, {
            width: "abbreviated",
            context: "formatting"
          }).toLowerCase();
        case "aaaaa":
          return localize2.dayPeriod(dayPeriodEnumValue, {
            width: "narrow",
            context: "formatting"
          });
        case "aaaa":
        default:
          return localize2.dayPeriod(dayPeriodEnumValue, {
            width: "wide",
            context: "formatting"
          });
      }
    },
    b: function b(date, token, localize2) {
      var hours = date.getUTCHours();
      var dayPeriodEnumValue;
      if (hours === 12) {
        dayPeriodEnumValue = dayPeriodEnum.noon;
      } else if (hours === 0) {
        dayPeriodEnumValue = dayPeriodEnum.midnight;
      } else {
        dayPeriodEnumValue = hours / 12 >= 1 ? "pm" : "am";
      }
      switch (token) {
        case "b":
        case "bb":
          return localize2.dayPeriod(dayPeriodEnumValue, {
            width: "abbreviated",
            context: "formatting"
          });
        case "bbb":
          return localize2.dayPeriod(dayPeriodEnumValue, {
            width: "abbreviated",
            context: "formatting"
          }).toLowerCase();
        case "bbbbb":
          return localize2.dayPeriod(dayPeriodEnumValue, {
            width: "narrow",
            context: "formatting"
          });
        case "bbbb":
        default:
          return localize2.dayPeriod(dayPeriodEnumValue, {
            width: "wide",
            context: "formatting"
          });
      }
    },
    B: function B(date, token, localize2) {
      var hours = date.getUTCHours();
      var dayPeriodEnumValue;
      if (hours >= 17) {
        dayPeriodEnumValue = dayPeriodEnum.evening;
      } else if (hours >= 12) {
        dayPeriodEnumValue = dayPeriodEnum.afternoon;
      } else if (hours >= 4) {
        dayPeriodEnumValue = dayPeriodEnum.morning;
      } else {
        dayPeriodEnumValue = dayPeriodEnum.night;
      }
      switch (token) {
        case "B":
        case "BB":
        case "BBB":
          return localize2.dayPeriod(dayPeriodEnumValue, {
            width: "abbreviated",
            context: "formatting"
          });
        case "BBBBB":
          return localize2.dayPeriod(dayPeriodEnumValue, {
            width: "narrow",
            context: "formatting"
          });
        case "BBBB":
        default:
          return localize2.dayPeriod(dayPeriodEnumValue, {
            width: "wide",
            context: "formatting"
          });
      }
    },
    h: function h2(date, token, localize2) {
      if (token === "ho") {
        var hours = date.getUTCHours() % 12;
        if (hours === 0)
          hours = 12;
        return localize2.ordinalNumber(hours, {
          unit: "hour"
        });
      }
      return lightFormatters_default.h(date, token);
    },
    H: function H2(date, token, localize2) {
      if (token === "Ho") {
        return localize2.ordinalNumber(date.getUTCHours(), {
          unit: "hour"
        });
      }
      return lightFormatters_default.H(date, token);
    },
    K: function K(date, token, localize2) {
      var hours = date.getUTCHours() % 12;
      if (token === "Ko") {
        return localize2.ordinalNumber(hours, {
          unit: "hour"
        });
      }
      return addLeadingZeros(hours, token.length);
    },
    k: function k(date, token, localize2) {
      var hours = date.getUTCHours();
      if (hours === 0)
        hours = 24;
      if (token === "ko") {
        return localize2.ordinalNumber(hours, {
          unit: "hour"
        });
      }
      return addLeadingZeros(hours, token.length);
    },
    m: function m2(date, token, localize2) {
      if (token === "mo") {
        return localize2.ordinalNumber(date.getUTCMinutes(), {
          unit: "minute"
        });
      }
      return lightFormatters_default.m(date, token);
    },
    s: function s2(date, token, localize2) {
      if (token === "so") {
        return localize2.ordinalNumber(date.getUTCSeconds(), {
          unit: "second"
        });
      }
      return lightFormatters_default.s(date, token);
    },
    S: function S2(date, token) {
      return lightFormatters_default.S(date, token);
    },
    X: function X(date, token, _localize, options) {
      var originalDate = options._originalDate || date;
      var timezoneOffset = originalDate.getTimezoneOffset();
      if (timezoneOffset === 0) {
        return "Z";
      }
      switch (token) {
        case "X":
          return formatTimezoneWithOptionalMinutes(timezoneOffset);
        case "XXXX":
        case "XX":
          return formatTimezone(timezoneOffset);
        case "XXXXX":
        case "XXX":
        default:
          return formatTimezone(timezoneOffset, ":");
      }
    },
    x: function x(date, token, _localize, options) {
      var originalDate = options._originalDate || date;
      var timezoneOffset = originalDate.getTimezoneOffset();
      switch (token) {
        case "x":
          return formatTimezoneWithOptionalMinutes(timezoneOffset);
        case "xxxx":
        case "xx":
          return formatTimezone(timezoneOffset);
        case "xxxxx":
        case "xxx":
        default:
          return formatTimezone(timezoneOffset, ":");
      }
    },
    O: function O(date, token, _localize, options) {
      var originalDate = options._originalDate || date;
      var timezoneOffset = originalDate.getTimezoneOffset();
      switch (token) {
        case "O":
        case "OO":
        case "OOO":
          return "GMT" + formatTimezoneShort(timezoneOffset, ":");
        case "OOOO":
        default:
          return "GMT" + formatTimezone(timezoneOffset, ":");
      }
    },
    z: function z(date, token, _localize, options) {
      var originalDate = options._originalDate || date;
      var timezoneOffset = originalDate.getTimezoneOffset();
      switch (token) {
        case "z":
        case "zz":
        case "zzz":
          return "GMT" + formatTimezoneShort(timezoneOffset, ":");
        case "zzzz":
        default:
          return "GMT" + formatTimezone(timezoneOffset, ":");
      }
    },
    t: function t(date, token, _localize, options) {
      var originalDate = options._originalDate || date;
      var timestamp = Math.floor(originalDate.getTime() / 1e3);
      return addLeadingZeros(timestamp, token.length);
    },
    T: function T(date, token, _localize, options) {
      var originalDate = options._originalDate || date;
      var timestamp = originalDate.getTime();
      return addLeadingZeros(timestamp, token.length);
    }
  };
  function formatTimezoneShort(offset, dirtyDelimiter) {
    var sign = offset > 0 ? "-" : "+";
    var absOffset = Math.abs(offset);
    var hours = Math.floor(absOffset / 60);
    var minutes = absOffset % 60;
    if (minutes === 0) {
      return sign + String(hours);
    }
    var delimiter = dirtyDelimiter || "";
    return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);
  }
  function formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {
    if (offset % 60 === 0) {
      var sign = offset > 0 ? "-" : "+";
      return sign + addLeadingZeros(Math.abs(offset) / 60, 2);
    }
    return formatTimezone(offset, dirtyDelimiter);
  }
  function formatTimezone(offset, dirtyDelimiter) {
    var delimiter = dirtyDelimiter || "";
    var sign = offset > 0 ? "-" : "+";
    var absOffset = Math.abs(offset);
    var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);
    var minutes = addLeadingZeros(absOffset % 60, 2);
    return sign + hours + delimiter + minutes;
  }
  var formatters_default = formatters2;

  // node_modules/date-fns/esm/_lib/format/longFormatters/index.js
  var dateLongFormatter = function dateLongFormatter2(pattern, formatLong2) {
    switch (pattern) {
      case "P":
        return formatLong2.date({
          width: "short"
        });
      case "PP":
        return formatLong2.date({
          width: "medium"
        });
      case "PPP":
        return formatLong2.date({
          width: "long"
        });
      case "PPPP":
      default:
        return formatLong2.date({
          width: "full"
        });
    }
  };
  var timeLongFormatter = function timeLongFormatter2(pattern, formatLong2) {
    switch (pattern) {
      case "p":
        return formatLong2.time({
          width: "short"
        });
      case "pp":
        return formatLong2.time({
          width: "medium"
        });
      case "ppp":
        return formatLong2.time({
          width: "long"
        });
      case "pppp":
      default:
        return formatLong2.time({
          width: "full"
        });
    }
  };
  var dateTimeLongFormatter = function dateTimeLongFormatter2(pattern, formatLong2) {
    var matchResult = pattern.match(/(P+)(p+)?/) || [];
    var datePattern = matchResult[1];
    var timePattern = matchResult[2];
    if (!timePattern) {
      return dateLongFormatter(pattern, formatLong2);
    }
    var dateTimeFormat;
    switch (datePattern) {
      case "P":
        dateTimeFormat = formatLong2.dateTime({
          width: "short"
        });
        break;
      case "PP":
        dateTimeFormat = formatLong2.dateTime({
          width: "medium"
        });
        break;
      case "PPP":
        dateTimeFormat = formatLong2.dateTime({
          width: "long"
        });
        break;
      case "PPPP":
      default:
        dateTimeFormat = formatLong2.dateTime({
          width: "full"
        });
        break;
    }
    return dateTimeFormat.replace("{{date}}", dateLongFormatter(datePattern, formatLong2)).replace("{{time}}", timeLongFormatter(timePattern, formatLong2));
  };
  var longFormatters = {
    p: timeLongFormatter,
    P: dateTimeLongFormatter
  };
  var longFormatters_default = longFormatters;

  // node_modules/date-fns/esm/_lib/protectedTokens/index.js
  var protectedDayOfYearTokens = ["D", "DD"];
  var protectedWeekYearTokens = ["YY", "YYYY"];
  function isProtectedDayOfYearToken(token) {
    return protectedDayOfYearTokens.indexOf(token) !== -1;
  }
  function isProtectedWeekYearToken(token) {
    return protectedWeekYearTokens.indexOf(token) !== -1;
  }
  function throwProtectedError(token, format2, input) {
    if (token === "YYYY") {
      throw new RangeError("Use `yyyy` instead of `YYYY` (in `".concat(format2, "`) for formatting years to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
    } else if (token === "YY") {
      throw new RangeError("Use `yy` instead of `YY` (in `".concat(format2, "`) for formatting years to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
    } else if (token === "D") {
      throw new RangeError("Use `d` instead of `D` (in `".concat(format2, "`) for formatting days of the month to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
    } else if (token === "DD") {
      throw new RangeError("Use `dd` instead of `DD` (in `".concat(format2, "`) for formatting days of the month to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
    }
  }

  // node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js
  var formatDistanceLocale = {
    lessThanXSeconds: {
      one: "less than a second",
      other: "less than {{count}} seconds"
    },
    xSeconds: {
      one: "1 second",
      other: "{{count}} seconds"
    },
    halfAMinute: "half a minute",
    lessThanXMinutes: {
      one: "less than a minute",
      other: "less than {{count}} minutes"
    },
    xMinutes: {
      one: "1 minute",
      other: "{{count}} minutes"
    },
    aboutXHours: {
      one: "about 1 hour",
      other: "about {{count}} hours"
    },
    xHours: {
      one: "1 hour",
      other: "{{count}} hours"
    },
    xDays: {
      one: "1 day",
      other: "{{count}} days"
    },
    aboutXWeeks: {
      one: "about 1 week",
      other: "about {{count}} weeks"
    },
    xWeeks: {
      one: "1 week",
      other: "{{count}} weeks"
    },
    aboutXMonths: {
      one: "about 1 month",
      other: "about {{count}} months"
    },
    xMonths: {
      one: "1 month",
      other: "{{count}} months"
    },
    aboutXYears: {
      one: "about 1 year",
      other: "about {{count}} years"
    },
    xYears: {
      one: "1 year",
      other: "{{count}} years"
    },
    overXYears: {
      one: "over 1 year",
      other: "over {{count}} years"
    },
    almostXYears: {
      one: "almost 1 year",
      other: "almost {{count}} years"
    }
  };
  var formatDistance = function formatDistance2(token, count, options) {
    var result;
    var tokenValue = formatDistanceLocale[token];
    if (typeof tokenValue === "string") {
      result = tokenValue;
    } else if (count === 1) {
      result = tokenValue.one;
    } else {
      result = tokenValue.other.replace("{{count}}", count.toString());
    }
    if (options !== null && options !== void 0 && options.addSuffix) {
      if (options.comparison && options.comparison > 0) {
        return "in " + result;
      } else {
        return result + " ago";
      }
    }
    return result;
  };
  var formatDistance_default = formatDistance;

  // node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js
  function buildFormatLongFn(args) {
    return function() {
      var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      var width = options.width ? String(options.width) : args.defaultWidth;
      var format2 = args.formats[width] || args.formats[args.defaultWidth];
      return format2;
    };
  }

  // node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js
  var dateFormats = {
    full: "EEEE, MMMM do, y",
    long: "MMMM do, y",
    medium: "MMM d, y",
    short: "MM/dd/yyyy"
  };
  var timeFormats = {
    full: "h:mm:ss a zzzz",
    long: "h:mm:ss a z",
    medium: "h:mm:ss a",
    short: "h:mm a"
  };
  var dateTimeFormats = {
    full: "{{date}} 'at' {{time}}",
    long: "{{date}} 'at' {{time}}",
    medium: "{{date}}, {{time}}",
    short: "{{date}}, {{time}}"
  };
  var formatLong = {
    date: buildFormatLongFn({
      formats: dateFormats,
      defaultWidth: "full"
    }),
    time: buildFormatLongFn({
      formats: timeFormats,
      defaultWidth: "full"
    }),
    dateTime: buildFormatLongFn({
      formats: dateTimeFormats,
      defaultWidth: "full"
    })
  };
  var formatLong_default = formatLong;

  // node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js
  var formatRelativeLocale = {
    lastWeek: "'last' eeee 'at' p",
    yesterday: "'yesterday at' p",
    today: "'today at' p",
    tomorrow: "'tomorrow at' p",
    nextWeek: "eeee 'at' p",
    other: "P"
  };
  var formatRelative = function formatRelative2(token, _date, _baseDate, _options) {
    return formatRelativeLocale[token];
  };
  var formatRelative_default = formatRelative;

  // node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js
  function buildLocalizeFn(args) {
    return function(dirtyIndex, options) {
      var context = options !== null && options !== void 0 && options.context ? String(options.context) : "standalone";
      var valuesArray;
      if (context === "formatting" && args.formattingValues) {
        var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
        var width = options !== null && options !== void 0 && options.width ? String(options.width) : defaultWidth;
        valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
      } else {
        var _defaultWidth = args.defaultWidth;
        var _width = options !== null && options !== void 0 && options.width ? String(options.width) : args.defaultWidth;
        valuesArray = args.values[_width] || args.values[_defaultWidth];
      }
      var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;
      return valuesArray[index];
    };
  }

  // node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js
  var eraValues = {
    narrow: ["B", "A"],
    abbreviated: ["BC", "AD"],
    wide: ["Before Christ", "Anno Domini"]
  };
  var quarterValues = {
    narrow: ["1", "2", "3", "4"],
    abbreviated: ["Q1", "Q2", "Q3", "Q4"],
    wide: ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"]
  };
  var monthValues = {
    narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
    abbreviated: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
    wide: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
  };
  var dayValues = {
    narrow: ["S", "M", "T", "W", "T", "F", "S"],
    short: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
    abbreviated: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
    wide: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
  };
  var dayPeriodValues = {
    narrow: {
      am: "a",
      pm: "p",
      midnight: "mi",
      noon: "n",
      morning: "morning",
      afternoon: "afternoon",
      evening: "evening",
      night: "night"
    },
    abbreviated: {
      am: "AM",
      pm: "PM",
      midnight: "midnight",
      noon: "noon",
      morning: "morning",
      afternoon: "afternoon",
      evening: "evening",
      night: "night"
    },
    wide: {
      am: "a.m.",
      pm: "p.m.",
      midnight: "midnight",
      noon: "noon",
      morning: "morning",
      afternoon: "afternoon",
      evening: "evening",
      night: "night"
    }
  };
  var formattingDayPeriodValues = {
    narrow: {
      am: "a",
      pm: "p",
      midnight: "mi",
      noon: "n",
      morning: "in the morning",
      afternoon: "in the afternoon",
      evening: "in the evening",
      night: "at night"
    },
    abbreviated: {
      am: "AM",
      pm: "PM",
      midnight: "midnight",
      noon: "noon",
      morning: "in the morning",
      afternoon: "in the afternoon",
      evening: "in the evening",
      night: "at night"
    },
    wide: {
      am: "a.m.",
      pm: "p.m.",
      midnight: "midnight",
      noon: "noon",
      morning: "in the morning",
      afternoon: "in the afternoon",
      evening: "in the evening",
      night: "at night"
    }
  };
  var ordinalNumber = function ordinalNumber2(dirtyNumber, _options) {
    var number = Number(dirtyNumber);
    var rem100 = number % 100;
    if (rem100 > 20 || rem100 < 10) {
      switch (rem100 % 10) {
        case 1:
          return number + "st";
        case 2:
          return number + "nd";
        case 3:
          return number + "rd";
      }
    }
    return number + "th";
  };
  var localize = {
    ordinalNumber,
    era: buildLocalizeFn({
      values: eraValues,
      defaultWidth: "wide"
    }),
    quarter: buildLocalizeFn({
      values: quarterValues,
      defaultWidth: "wide",
      argumentCallback: function argumentCallback(quarter) {
        return quarter - 1;
      }
    }),
    month: buildLocalizeFn({
      values: monthValues,
      defaultWidth: "wide"
    }),
    day: buildLocalizeFn({
      values: dayValues,
      defaultWidth: "wide"
    }),
    dayPeriod: buildLocalizeFn({
      values: dayPeriodValues,
      defaultWidth: "wide",
      formattingValues: formattingDayPeriodValues,
      defaultFormattingWidth: "wide"
    })
  };
  var localize_default = localize;

  // node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js
  function buildMatchFn(args) {
    return function(string) {
      var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      var width = options.width;
      var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];
      var matchResult = string.match(matchPattern);
      if (!matchResult) {
        return null;
      }
      var matchedString = matchResult[0];
      var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];
      var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function(pattern) {
        return pattern.test(matchedString);
      }) : findKey(parsePatterns, function(pattern) {
        return pattern.test(matchedString);
      });
      var value;
      value = args.valueCallback ? args.valueCallback(key) : key;
      value = options.valueCallback ? options.valueCallback(value) : value;
      var rest = string.slice(matchedString.length);
      return {
        value,
        rest
      };
    };
  }
  function findKey(object, predicate) {
    for (var key in object) {
      if (object.hasOwnProperty(key) && predicate(object[key])) {
        return key;
      }
    }
    return void 0;
  }
  function findIndex(array, predicate) {
    for (var key = 0; key < array.length; key++) {
      if (predicate(array[key])) {
        return key;
      }
    }
    return void 0;
  }

  // node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js
  function buildMatchPatternFn(args) {
    return function(string) {
      var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      var matchResult = string.match(args.matchPattern);
      if (!matchResult)
        return null;
      var matchedString = matchResult[0];
      var parseResult = string.match(args.parsePattern);
      if (!parseResult)
        return null;
      var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
      value = options.valueCallback ? options.valueCallback(value) : value;
      var rest = string.slice(matchedString.length);
      return {
        value,
        rest
      };
    };
  }

  // node_modules/date-fns/esm/locale/en-US/_lib/match/index.js
  var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
  var parseOrdinalNumberPattern = /\d+/i;
  var matchEraPatterns = {
    narrow: /^(b|a)/i,
    abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
    wide: /^(before christ|before common era|anno domini|common era)/i
  };
  var parseEraPatterns = {
    any: [/^b/i, /^(a|c)/i]
  };
  var matchQuarterPatterns = {
    narrow: /^[1234]/i,
    abbreviated: /^q[1234]/i,
    wide: /^[1234](th|st|nd|rd)? quarter/i
  };
  var parseQuarterPatterns = {
    any: [/1/i, /2/i, /3/i, /4/i]
  };
  var matchMonthPatterns = {
    narrow: /^[jfmasond]/i,
    abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
    wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
  };
  var parseMonthPatterns = {
    narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
    any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
  };
  var matchDayPatterns = {
    narrow: /^[smtwf]/i,
    short: /^(su|mo|tu|we|th|fr|sa)/i,
    abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
    wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
  };
  var parseDayPatterns = {
    narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
    any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
  };
  var matchDayPeriodPatterns = {
    narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
    any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
  };
  var parseDayPeriodPatterns = {
    any: {
      am: /^a/i,
      pm: /^p/i,
      midnight: /^mi/i,
      noon: /^no/i,
      morning: /morning/i,
      afternoon: /afternoon/i,
      evening: /evening/i,
      night: /night/i
    }
  };
  var match = {
    ordinalNumber: buildMatchPatternFn({
      matchPattern: matchOrdinalNumberPattern,
      parsePattern: parseOrdinalNumberPattern,
      valueCallback: function valueCallback(value) {
        return parseInt(value, 10);
      }
    }),
    era: buildMatchFn({
      matchPatterns: matchEraPatterns,
      defaultMatchWidth: "wide",
      parsePatterns: parseEraPatterns,
      defaultParseWidth: "any"
    }),
    quarter: buildMatchFn({
      matchPatterns: matchQuarterPatterns,
      defaultMatchWidth: "wide",
      parsePatterns: parseQuarterPatterns,
      defaultParseWidth: "any",
      valueCallback: function valueCallback2(index) {
        return index + 1;
      }
    }),
    month: buildMatchFn({
      matchPatterns: matchMonthPatterns,
      defaultMatchWidth: "wide",
      parsePatterns: parseMonthPatterns,
      defaultParseWidth: "any"
    }),
    day: buildMatchFn({
      matchPatterns: matchDayPatterns,
      defaultMatchWidth: "wide",
      parsePatterns: parseDayPatterns,
      defaultParseWidth: "any"
    }),
    dayPeriod: buildMatchFn({
      matchPatterns: matchDayPeriodPatterns,
      defaultMatchWidth: "any",
      parsePatterns: parseDayPeriodPatterns,
      defaultParseWidth: "any"
    })
  };
  var match_default = match;

  // node_modules/date-fns/esm/locale/en-US/index.js
  var locale = {
    code: "en-US",
    formatDistance: formatDistance_default,
    formatLong: formatLong_default,
    formatRelative: formatRelative_default,
    localize: localize_default,
    match: match_default,
    options: {
      weekStartsOn: 0,
      firstWeekContainsDate: 1
    }
  };
  var en_US_default = locale;

  // node_modules/date-fns/esm/_lib/defaultLocale/index.js
  var defaultLocale_default = en_US_default;

  // node_modules/date-fns/esm/format/index.js
  var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g;
  var longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
  var escapedStringRegExp = /^'([^]*?)'?$/;
  var doubleQuoteRegExp = /''/g;
  var unescapedLatinCharacterRegExp = /[a-zA-Z]/;
  function format(dirtyDate, dirtyFormatStr, options) {
    var _ref, _options$locale, _ref2, _ref3, _ref4, _options$firstWeekCon, _options$locale2, _options$locale2$opti, _defaultOptions$local, _defaultOptions$local2, _ref5, _ref6, _ref7, _options$weekStartsOn, _options$locale3, _options$locale3$opti, _defaultOptions$local3, _defaultOptions$local4;
    requiredArgs(2, arguments);
    var formatStr = String(dirtyFormatStr);
    var defaultOptions2 = getDefaultOptions();
    var locale2 = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions2.locale) !== null && _ref !== void 0 ? _ref : defaultLocale_default;
    var firstWeekContainsDate = toInteger((_ref2 = (_ref3 = (_ref4 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale2 = options.locale) === null || _options$locale2 === void 0 ? void 0 : (_options$locale2$opti = _options$locale2.options) === null || _options$locale2$opti === void 0 ? void 0 : _options$locale2$opti.firstWeekContainsDate) !== null && _ref4 !== void 0 ? _ref4 : defaultOptions2.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : (_defaultOptions$local = defaultOptions2.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : 1);
    if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
      throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
    }
    var weekStartsOn = toInteger((_ref5 = (_ref6 = (_ref7 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale3 = options.locale) === null || _options$locale3 === void 0 ? void 0 : (_options$locale3$opti = _options$locale3.options) === null || _options$locale3$opti === void 0 ? void 0 : _options$locale3$opti.weekStartsOn) !== null && _ref7 !== void 0 ? _ref7 : defaultOptions2.weekStartsOn) !== null && _ref6 !== void 0 ? _ref6 : (_defaultOptions$local3 = defaultOptions2.locale) === null || _defaultOptions$local3 === void 0 ? void 0 : (_defaultOptions$local4 = _defaultOptions$local3.options) === null || _defaultOptions$local4 === void 0 ? void 0 : _defaultOptions$local4.weekStartsOn) !== null && _ref5 !== void 0 ? _ref5 : 0);
    if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
      throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
    }
    if (!locale2.localize) {
      throw new RangeError("locale must contain localize property");
    }
    if (!locale2.formatLong) {
      throw new RangeError("locale must contain formatLong property");
    }
    var originalDate = toDate(dirtyDate);
    if (!isValid(originalDate)) {
      throw new RangeError("Invalid time value");
    }
    var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);
    var utcDate = subMilliseconds(originalDate, timezoneOffset);
    var formatterOptions = {
      firstWeekContainsDate,
      weekStartsOn,
      locale: locale2,
      _originalDate: originalDate
    };
    var result = formatStr.match(longFormattingTokensRegExp).map(function(substring) {
      var firstCharacter = substring[0];
      if (firstCharacter === "p" || firstCharacter === "P") {
        var longFormatter = longFormatters_default[firstCharacter];
        return longFormatter(substring, locale2.formatLong);
      }
      return substring;
    }).join("").match(formattingTokensRegExp).map(function(substring) {
      if (substring === "''") {
        return "'";
      }
      var firstCharacter = substring[0];
      if (firstCharacter === "'") {
        return cleanEscapedString(substring);
      }
      var formatter = formatters_default[firstCharacter];
      if (formatter) {
        if (!(options !== null && options !== void 0 && options.useAdditionalWeekYearTokens) && isProtectedWeekYearToken(substring)) {
          throwProtectedError(substring, dirtyFormatStr, String(dirtyDate));
        }
        if (!(options !== null && options !== void 0 && options.useAdditionalDayOfYearTokens) && isProtectedDayOfYearToken(substring)) {
          throwProtectedError(substring, dirtyFormatStr, String(dirtyDate));
        }
        return formatter(utcDate, substring, locale2.localize, formatterOptions);
      }
      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
        throw new RangeError("Format string contains an unescaped latin alphabet character `" + firstCharacter + "`");
      }
      return substring;
    }).join("");
    return result;
  }
  function cleanEscapedString(input) {
    var matched = input.match(escapedStringRegExp);
    if (!matched) {
      return input;
    }
    return matched[1].replace(doubleQuoteRegExp, "'");
  }

  // src/lang.ts
  var Langs = {
    en_US: {
      save: "Save",
      copyMarkdown: "Copy Markdown",
      copyHtml: "Copy HTML",
      resetConfig: "Reset config",
      resetConfirm: "Are you sure to reset the markdown-editor's config?"
    },
    ja_JP: {
      save: "\u4FDD\u5B58\u3059\u308B"
    },
    ko_KR: {
      save: "\uC800\uC7A5"
    },
    zh_CN: {
      save: "\u4FDD\u5B58",
      copyMarkdown: "\u590D\u5236 Markdown",
      copyHtml: "\u590D\u5236 HTML",
      resetConfig: "\u91CD\u7F6E\u914D\u7F6E",
      resetConfirm: "\u786E\u5B9A\u8981\u91CD\u7F6E markdown-editor \u7684\u914D\u7F6E\u4E48?"
    }
  };
  var lang = (() => {
    let l = navigator.language.replace("-", "_");
    if (!Langs[l]) {
      l = "en_US";
    }
    return l;
  })();
  function t2(msg) {
    return Langs[lang] && Langs[lang][msg] || Langs.en_US[msg];
  }

  // src/toolbar.ts
  var toolbar = [
    {
      hotkey: "\u2318s",
      name: "save",
      tipPosition: "s",
      tip: t2("save"),
      className: "save",
      icon: '<svg viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" width="32" height="32"><path d="M810.667 938.667H213.333a128 128 0 01-128-128V213.333a128 128 0 01128-128h469.334a42.667 42.667 0 0130.293 12.374L926.293 311.04a42.667 42.667 0 0112.374 30.293v469.334a128 128 0 01-128 128zm-597.334-768a42.667 42.667 0 00-42.666 42.666v597.334a42.667 42.667 0 0042.666 42.666h597.334a42.667 42.667 0 0042.666-42.666v-451.84l-188.16-188.16z"/><path d="M725.333 938.667A42.667 42.667 0 01682.667 896V597.333H341.333V896A42.667 42.667 0 01256 896V554.667A42.667 42.667 0 01298.667 512h426.666A42.667 42.667 0 01768 554.667V896a42.667 42.667 0 01-42.667 42.667zM640 384H298.667A42.667 42.667 0 01256 341.333V128a42.667 42.667 0 0185.333 0v170.667H640A42.667 42.667 0 01640 384z"/></svg>',
      click() {
        vscode.postMessage({
          command: "save",
          content: vditor.getValue()
        });
      }
    },
    "emoji",
    "headings",
    "bold",
    "italic",
    "strike",
    "link",
    "|",
    "list",
    "ordered-list",
    "check",
    "outdent",
    "indent",
    "|",
    "quote",
    "line",
    "code",
    "inline-code",
    "insert-before",
    "insert-after",
    "|",
    "upload",
    "table",
    "|",
    "undo",
    "redo",
    "|",
    {name: "edit-mode", tipPosition: "e"},
    {
      name: "more",
      tipPosition: "e",
      toolbar: [
        "both",
        "code-theme",
        "content-theme",
        "outline",
        "preview",
        {
          name: "copy-markdown",
          icon: t2("copyMarkdown"),
          async click() {
            try {
              await navigator.clipboard.writeText(vditor.getValue());
              vscode.postMessage({
                command: "info",
                content: "Copy Markdown successfully!"
              });
            } catch (error) {
              vscode.postMessage({
                command: "error",
                content: `Copy Markdown failed! ${error.message}`
              });
            }
          }
        },
        {
          name: "copy-html",
          icon: t2("copyHtml"),
          async click() {
            try {
              await navigator.clipboard.writeText(vditor.getHTML());
              vscode.postMessage({
                command: "info",
                content: "Copy HTML successfully!"
              });
            } catch (error) {
              vscode.postMessage({
                command: "error",
                content: `Copy HTML failed! ${error.message}`
              });
            }
          }
        },
        {
          name: "reset-config",
          icon: t2("resetConfig"),
          async click() {
            confirm(t2("resetConfirm"), async () => {
              try {
                await vscode.postMessage({
                  command: "reset-config"
                });
                await vscode.postMessage({
                  command: "ready"
                });
                vscode.postMessage({
                  command: "info",
                  content: "Reset config successfully!"
                });
              } catch (error) {
                vscode.postMessage({
                  command: "error",
                  content: "Reset config failed!"
                });
              }
            });
          }
        },
        "devtools",
        "info",
        "help"
      ]
    }
  ].map((it) => {
    if (typeof it === "string") {
      it = {name: it};
    }
    it.tipPosition = it.tipPosition || "s";
    return it;
  });

  // src/fix-table-ir.ts
  var import_keyboard = __toModule(require_keyboard());
  var import_jquery2 = __toModule(require_jquery());

  // node_modules/vditor/src/ts/util/compatibility.ts
  var isFirefox = () => {
    return navigator.userAgent.toLowerCase().indexOf("firefox") > -1;
  };
  var updateHotkeyTip = (hotkey) => {
    if (/Mac/.test(navigator.platform) || navigator.platform === "iPhone") {
      if (hotkey.indexOf("\u21E7") > -1 && isFirefox()) {
        hotkey = hotkey.replace(";", ":").replace("=", "+").replace("-", "_");
      }
    } else {
      if (hotkey.startsWith("\u2318")) {
        hotkey = hotkey.replace("\u2318", "\u2318+");
      } else if (hotkey.startsWith("\u2325") && hotkey.substr(1, 1) !== "\u2318") {
        hotkey = hotkey.replace("\u2325", "\u2325+");
      } else {
        hotkey = hotkey.replace("\u21E7\u2318", "\u2318+\u21E7+").replace("\u2325\u2318", "\u2325+\u2318+");
      }
      hotkey = hotkey.replace("\u2318", "Ctrl").replace("\u21E7", "Shift").replace("\u2325", "Alt");
      if (hotkey.indexOf("Shift") > -1) {
        hotkey = hotkey.replace(";", ":").replace("=", "+").replace("-", "_");
      }
    }
    return hotkey;
  };

  // src/fix-table-ir.ts
  var tablePanelId = "fix-table-ir-wrapper";
  var disableVscodeHotkeys = false;
  function fixTableIr() {
    const eventRoot = vditor.vditor.ir.element;
    function insertTablePanel() {
      let tablePanel = eventRoot.querySelector(`#${tablePanelId}`);
      if (!tablePanel) {
        tablePanel = document.createElement("div");
        tablePanel.id = tablePanelId;
        eventRoot.appendChild(tablePanel);
        tablePanel.innerHTML = `<div
    class="vditor-panel vditor-panel--none vditor-panel-ir"
    data-top="73"
    style="left: 35px; top: 73px;display:none"
  >
   <button
      type="button"
      aria-label="Left<${updateHotkeyTip("\u21E7\u2318L")}>"
      data-type="left"
      class="vditor-icon vditor-tooltipped vditor-tooltipped__n vditor-icon--current"
    >
      <svg><use xlink:href="#vditor-icon-align-left"></use></svg></button
    ><button
      type="button"
      aria-label="Center<${updateHotkeyTip("\u21E7\u2318C")}>"
      data-type="center"
      class="vditor-icon vditor-tooltipped vditor-tooltipped__n"
    >
      <svg><use xlink:href="#vditor-icon-align-center"></use></svg></button
    ><button
      type="button"
      aria-label="Right<${updateHotkeyTip("\u21E7\u2318R")}>"
      data-type="right"
      class="vditor-icon vditor-tooltipped vditor-tooltipped__n"
    >
      <svg><use xlink:href="#vditor-icon-align-right"></use></svg></button
    ><button
      type="button"
      aria-label="Insert 1 Above<${updateHotkeyTip("\u21E7\u2318F")}>"
      data-type="insertRowA"
      class="vditor-icon vditor-tooltipped vditor-tooltipped__n"
    >
      <svg><use xlink:href="#vditor-icon-insert-rowb"></use></svg></button
    ><button
      type="button"
      aria-label="Insert 1 Below<${updateHotkeyTip("\u2318=")}>"
      data-type="insertRowB"
      class="vditor-icon vditor-tooltipped vditor-tooltipped__n"
    >
      <svg><use xlink:href="#vditor-icon-insert-row"></use></svg></button
    ><button
      type="button"
      aria-label="Insert Left<${updateHotkeyTip("\u21E7\u2318G")}>"
      data-type="insertColumnL"
      class="vditor-icon vditor-tooltipped vditor-tooltipped__n"
    >
      <svg><use xlink:href="#vditor-icon-insert-columnb"></use></svg></button
    ><button
      type="button"
      aria-label="Insert Right<${updateHotkeyTip("\u21E7\u2318=")}>"
      data-type="insertColumnR"
      class="vditor-icon vditor-tooltipped vditor-tooltipped__n"
    >
      <svg><use xlink:href="#vditor-icon-insert-column"></use></svg></button
    ><button
      type="button"
      aria-label="Delete Row<${updateHotkeyTip("\u2318-")}>"
      data-type="deleteRow"
      class="vditor-icon vditor-tooltipped vditor-tooltipped__n"
    >
      <svg><use xlink:href="#vditor-icon-delete-row"></use></svg></button
    ><button
      type="button"
      aria-label="Delete Column<${updateHotkeyTip("\u21E7\u2318-")}>"
      data-type="deleteColumn"
      class="vditor-icon vditor-tooltipped vditor-tooltipped__n"
    >
      <svg><use xlink:href="#vditor-icon-delete-column"></use></svg></button
    >
  </div>
  `;
        (0, import_jquery2.default)(tablePanel).on("click", ".vditor-icon", (e2) => {
          let type = (0, import_jquery2.default)(e2.target).attr("data-type");
          const handleMap = {
            left: [
              "{ctrl}{shift}l{/shift}{/ctrl}",
              "{meta}{shift}l{/shift}{/meta}"
            ],
            center: [
              "{ctrl}{shift}c{/shift}{/ctrl}",
              "{meta}{shift}c{/shift}{/meta}"
            ],
            right: [
              "{ctrl}{shift}r{/shift}{/ctrl}",
              "{meta}{shift}r{/shift}{/meta}"
            ],
            insertRowA: [
              "{ctrl}{shift}f{/shift}{/ctrl}",
              "{meta}{shift}f{/shift}{/meta}"
            ],
            insertRowB: ["{ctrl}={/ctrl}", "{meta}={/meta}"],
            deleteRow: ["{ctrl}-{/ctrl}", "{meta}-{/meta}"],
            insertColumnL: [
              "{ctrl}{shift}g{/shift}{/ctrl}",
              "{meta}{shift}g{/shift}{/meta}"
            ],
            insertColumnR: [
              "{ctrl}{shift}+{/shift}{/ctrl}",
              "{meta}{shift}={/shift}{/meta}"
            ],
            deleteColumn: [
              "{ctrl}{shift}_{/shift}{/ctrl}",
              "{meta}{shift}-{/shift}{/meta}"
            ]
          };
          let k2 = handleMap[type][navigator.platform.toLowerCase().includes("mac") ? 1 : 0];
          disableVscodeHotkeys = true;
          Promise.resolve((0, import_keyboard.keyboard)(k2, {
            document: {
              body: eventRoot
            }
          })).finally(() => {
            disableVscodeHotkeys = false;
          });
          e2.stopPropagation();
        });
      }
      tablePanel = tablePanel.children[0];
      return tablePanel;
    }
    eventRoot.addEventListener("click", (e2) => {
      if (vditor.getCurrentMode() !== "ir")
        return;
      const tablePanel = insertTablePanel();
      let clickEl = window.getSelection().anchorNode.parentElement;
      if (["TD", "TH", "TR"].includes(clickEl.tagName)) {
        if (tablePanel.style.display !== "block") {
          tablePanel.style.display = "block";
        }
        tablePanel.style.top = clickEl.getBoundingClientRect().top - eventRoot.getBoundingClientRect().top + eventRoot.scrollTop - 25 + "px";
      } else {
        if (tablePanel.style.display !== "none") {
          tablePanel.style.display = "none";
        }
      }
    });
    let stopEvent = (e2) => {
      if (disableVscodeHotkeys) {
        e2.preventDefault();
        e2.stopPropagation();
      }
    };
    eventRoot.addEventListener("keydown", stopEvent);
    eventRoot.addEventListener("keyup", stopEvent);
  }

  // src/main.ts
  function initVditor(msg) {
    console.log("msg", msg);
    let inputTimer;
    let defaultOptions2 = {};
    if (msg.theme === "dark") {
      defaultOptions2 = (0, import_lodash.merge)(defaultOptions2, {
        theme: "dark",
        preview: {
          theme: {
            current: "dark"
          }
        },
        "_lutePath": "assets/lute.min.js"
      });
    }
    defaultOptions2 = (0, import_lodash.merge)(defaultOptions2, msg.options, {
      preview: {
        math: {
          inlineDigit: true
        }
      }
    });
    if (window.vditor) {
      vditor.destroy();
      window.vditor = null;
    }
    window.vditor = new import_vditor.default("app", {
      width: "100%",
      height: "100%",
      minHeight: "100%",
      lang,
      value: msg.content,
      mode: "ir",
      cache: {enable: false},
      toolbar,
      toolbarConfig: {pin: true},
      ...defaultOptions2,
      after() {
        fixDarkTheme();
        handleToolbarClick();
        fixTableIr();
        fixPanelHover();
      },
      input() {
        inputTimer && clearTimeout(inputTimer);
        inputTimer = setTimeout(() => {
          vscode.postMessage({command: "edit", content: vditor.getValue()});
        }, 100);
      },
      upload: {
        url: "/fuzzy",
        async handler(files) {
          let fileInfos = await Promise.all(files.map(async (f) => {
            const d3 = new Date();
            return {
              base64: await fileToBase64(f),
              name: `${format(new Date(), "yyyyMMdd_HHmmss")}_${f.name}`.replace(/[^\w-_.]+/, "_")
            };
          }));
          vscode.postMessage({
            command: "upload",
            files: fileInfos
          });
        }
      }
    });
  }
  window.addEventListener("message", (e2) => {
    const msg = e2.data;
    switch (msg.command) {
      case "update": {
        if (msg.type === "init") {
          if (msg.options && msg.options.useVscodeThemeColor) {
            document.body.setAttribute("data-use-vscode-theme-color", "1");
          } else {
            document.body.setAttribute("data-use-vscode-theme-color", "0");
          }
          try {
            initVditor(msg);
          } catch (error) {
            console.error(error);
            initVditor({content: msg.content});
            saveVditorOptions();
          }
          console.log("initVditor");
        } else {
          vditor.setValue(msg.content);
          console.log("setValue");
        }
        break;
      }
      case "uploaded": {
        msg.files.forEach((f) => {
          if (f.endsWith(".wav")) {
            vditor.insertValue(`

<audio controls="controls" src="${f}"></audio>

`);
          } else {
            const i2 = new Image();
            i2.src = f;
            i2.onload = () => {
              vditor.insertValue(`

![](${f})

`);
            };
            i2.onerror = () => {
              vditor.insertValue(`

[${f.split("/").slice(-1)[0]}](${f})

`);
            };
          }
        });
        break;
      }
      default:
        break;
    }
  });
  fixLinkClick();
  fixCut();
  vscode.postMessage({command: "ready"});
})();
/*!
 * jQuery JavaScript Library v3.6.1
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright OpenJS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2022-08-26T17:52Z
 */
/*!
 * jquery-confirm v3.3.4 (http://craftpip.github.io/jquery-confirm/)
 * Author: Boniface Pereira
 * Website: www.craftpip.com
 * Contact: hey@craftpip.com
 *
 * Copyright 2013-2019 jquery-confirm
 * Licensed under MIT (https://github.com/craftpip/jquery-confirm/blob/master/LICENSE)
 */
/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
/** @license React v17.0.2
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
//# sourceMappingURL=main.js.map
